/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/AVKit
 */

@interface AVView : UIView <AVContentIntersecting, AVInterruptible> {
    bool  _automaticallyUpdatesSubviewContentIntersections;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _contentIntersection;
    bool  _hasBackdropView;
    bool  _ignoresTouches;
    NSMutableArray * _subviewsNeedingIntersectionUpdate;
}

@property (nonatomic) bool automaticallyUpdatesSubviewContentIntersections;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } contentIntersection;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hasBackdropView;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoresTouches;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_commonInit;
- (bool)automaticallyUpdatesSubviewContentIntersections;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentIntersection;
- (bool)hasBackdropView;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (bool)ignoresTouches;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)interruptActiveInteractions;
- (void)layoutSubviews;
- (void)setAutomaticallyUpdatesSubviewContentIntersections:(bool)arg1;
- (void)setContentIntersection:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHasBackdropView:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setIgnoresTouches:(bool)arg1;

@end
