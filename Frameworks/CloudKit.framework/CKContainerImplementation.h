/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit
 */

@interface CKContainerImplementation : NSObject <CKXPCContainerScopedClient, NSDiscardableContent> {
    long long  _accountAccessAuthorization;
    NSOperationQueue * _backgroundThrottlingOperationQueue;
    CKContainerSetupInfo * _cachedSetupInfo;
    NSMutableArray * _codeServiceImplementations;
    <NSObject> * _connectionInterruptedObserver;
    CKContainerID * _containerID;
    <CKXPCContainerScopedDaemon> * _containerScopedDaemonProxyCreator;
    CKRecordID * _containerScopedUserID_locked;
    NSOperationQueue * _convenienceOperationQueue;
    NSLock * _daemonConnectionLock;
    NSOperationQueue * _discretionaryThrottlingOperationQueue;
    NSXPCConnection * _discretionaryXPCConnection;
    NSNumber * _fakeDeviceToDeviceEncryptionAvailability;
    bool  _hasCachedSetupInfo;
    bool  _hasValidContainerScopedDaemonProxyCreator;
    bool  _hasValidDiscretionaryXPCConnection;
    bool  _isPersonaOverrideSet;
    CKContainerOptions * _options;
    CKRecordID * _orgAdminUserID_locked;
    CKDatabaseImplementation * _organizationCloudDatabaseImplementation;
    NSString * _personaIdentifier;
    CKDatabaseImplementation * _privateCloudDatabaseImplementation;
    CKDatabaseImplementation * _publicCloudDatabaseImplementation;
    NSString * _pushEnvironment;
    CKEntitlements * _resolvedEntitlements;
    NSMutableArray * _sandboxExtensionHandles;
    CKDatabaseImplementation * _sharedCloudDatabaseImplementation;
    NSHashTable * _sharingUIObservers;
    NSString * _sourceApplicationBundleIdentifier_locked;
    NSString * _sourceApplicationSecondaryIdentifier_locked;
    int  _statusReportToken;
    NSOperationQueue * _throttlingOperationQueue;
    CKContainer * _unconfiguredWrappingContainer;
    NSObject<OS_dispatch_queue> * _underlyingDispatchQueue;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _uploadRequestManagerLock;
    CKUploadRequestManager * _uploadRequestManager_locked;
}

@property (nonatomic, readonly) NSOperationQueue *backgroundThrottlingOperationQueue;
@property (nonatomic, readonly) CKContainerSetupInfo *cachedSetupInfo;
@property (nonatomic, readonly) NSMutableArray *codeServiceImplementations;
@property (nonatomic, readonly) CKXPCConnection *connection;
@property (nonatomic, readonly, copy) CKContainerID *containerID;
@property (nonatomic, readonly, copy) NSString *containerIdentifier;
@property (copy) CKRecordID *containerScopedUserID;
@property (nonatomic, readonly) NSOperationQueue *discretionaryThrottlingOperationQueue;
@property (nonatomic, readonly) NSXPCConnection *discretionaryXPCConnection;
@property (copy) NSNumber *fakeDeviceToDeviceEncryptionAvailability;
@property (nonatomic) bool hasCachedSetupInfo;
@property (nonatomic) bool isPersonaOverrideSet;
@property (nonatomic, readonly, copy) CKContainerOptions *options;
@property (copy) CKRecordID *orgAdminUserID;
@property (nonatomic, readonly) CKDatabaseImplementation *organizationCloudDatabaseImplementation;
@property (copy) NSString *personaIdentifier;
@property (nonatomic, readonly) CKDatabaseImplementation *privateCloudDatabaseImplementation;
@property (nonatomic, readonly) CKDatabaseImplementation *publicCloudDatabaseImplementation;
@property (copy) NSString *pushEnvironment;
@property (nonatomic, readonly) CKEntitlements *resolvedEntitlements;
@property (nonatomic, readonly) CKDatabaseImplementation *sharedCloudDatabaseImplementation;
@property (nonatomic, readonly) int statusReportToken;
@property (nonatomic, readonly) NSOperationQueue *throttlingOperationQueue;
@property (nonatomic, readonly) CKContainer *unconfiguredWrappingContainer;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *underlyingDispatchQueue;

+ (void)initialize;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)CKStatusReportArray;
- (bool)__preflightAccountAccessAuthorization:(long long*)arg1;
- (void)_addPreparedConvenienceOperation:(id)arg1;
- (id)_discretionaryDaemonMachServiceConnection;
- (void)_refreshAccountAccessAuthorizationWithCompletionHandler:(id /* block */)arg1;
- (void)_scheduleConvenienceOperation:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3;
- (void)_submitEventMetric:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)acceptShareMetadata:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)accountInfoFetchQueue;
- (void)accountInfoWithCompletionHandler:(id /* block */)arg1;
- (void)accountStatusWithCompletionHandler:(id /* block */)arg1;
- (void)addOperation:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3;
- (void)addPreparedOperationToBackgroundThrottlingOperationQueue:(id)arg1;
- (void)addPreparedOperationToDiscretionaryThrottlingOperationQueue:(id)arg1;
- (void)addPreparedOperationToThrottlingOperationQueue:(id)arg1;
- (id)applicationBundleIdentifierForPush;
- (id)backgroundThrottlingOperationQueue;
- (bool)beginContentAccess;
- (id)cachedSetupInfo;
- (void)cancelUploadRequests;
- (void)clearContainerFromMetadataCache;
- (void)clearPILSCacheForLookupInfos:(id)arg1;
- (id)codeServiceImplementationWithName:(id)arg1;
- (id)codeServiceImplementationWithName:(id)arg1 databaseScope:(long long)arg2;
- (id)codeServiceImplementationWithName:(id)arg1 databaseScope:(long long)arg2 serviceInstanceURL:(id)arg3;
- (id)codeServiceImplementationWithName:(id)arg1 serviceInstanceURL:(id)arg2;
- (id)codeServiceImplementations;
- (id)connection;
- (void)consumeSandboxExtensions:(id)arg1 reply:(id /* block */)arg2;
- (id)containerID;
- (id)containerIdentifier;
- (id)containerScopedUserID;
- (void)dealloc;
- (void)decryptPersonalInfoOnShare:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)description;
- (id)deviceContext;
- (void)discardContentIfPossible;
- (void)discoverAllIdentitiesWithWrappingContainer:(id)arg1 convenienceConfiguration:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)discoverUserIdentityWithEmailAddress:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)discoverUserIdentityWithPhoneNumber:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)discoverUserIdentityWithUserRecordID:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)discretionaryThrottlingOperationQueue;
- (id)discretionaryXPCConnection;
- (void)dropDetachedContainersWithCompletionHandler:(id /* block */)arg1;
- (void)dumpDaemonStatusReport;
- (void)dumpDaemonStatusReportToFileHandle:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)endContentAccess;
- (id)fakeDeviceToDeviceEncryptionAvailability;
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(id /* block */)arg1;
- (void)fetchCurrentDeviceIDWithCompletionHandler:(id /* block */)arg1;
- (void)fetchFrameworkCachesDirectoryWithCompletionHandler:(id /* block */)arg1;
- (void)fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:(id /* block */)arg1;
- (void)fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:(id /* block */)arg1;
- (void)fetchGlobalPerUserBoundaryKeyWithCompletionHandler:(id /* block */)arg1;
- (void)fetchLongLivedOperationWithID:(id)arg1 wrappingContainer:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)fetchOrgAdminUserRecordIDWithCompletionHandler:(id /* block */)arg1;
- (void)fetchServerEnvironment:(id /* block */)arg1;
- (void)fetchShareMetadataWithURL:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)fetchShareParticipantWithEmailAddress:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)fetchShareParticipantWithLookupInfo:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)fetchShareParticipantWithPhoneNumber:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)fetchShareParticipantWithUserRecordID:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)fetchSignatureGeneratorForCurrentUserBoundaryKeyWithCompletionHandler:(id /* block */)arg1;
- (void)fetchUserRecordIDWithCompletionHandler:(id /* block */)arg1;
- (void)getNewWebSharingIdentityDataWithCompletionHandler:(id /* block */)arg1;
- (void)getOutstandingOperationCountWithCompletionHandler:(id /* block */)arg1;
- (void)getRegisteredItemCountWithCompletionHandler:(id /* block */)arg1;
- (void)handleAttributesChangedForZone:(id)arg1;
- (void)handleRecordChanged:(id)arg1 changeType:(long long)arg2 record:(id)arg3 error:(id)arg4;
- (void)handleSharingUIUpdatedShare:(id)arg1 recordID:(id)arg2 isDeleted:(bool)arg3 error:(id)arg4 reply:(id /* block */)arg5;
- (bool)hasCachedSetupInfo;
- (id)initWithContainerID:(id)arg1 options:(id)arg2 unconfiguredWrappingContainer:(id)arg3;
- (bool)isContentDiscarded;
- (bool)isPersonaOverrideSet;
- (long long)lastKnownDeviceCount;
- (void)manuallyTriggerUploadRequests;
- (id)networkTransferEndpointWithError:(id*)arg1;
- (id)options;
- (id)orgAdminUserID;
- (id)organizationCloudDatabaseImplementation;
- (id)personaIdentifier;
- (id)primaryIdentifier;
- (id)privateCloudDatabaseImplementation;
- (id)publicCloudDatabaseImplementation;
- (id)pushEnvironment;
- (void)pushEnvironmentWithCompletionHandler:(id /* block */)arg1;
- (id)recordChangeProvider;
- (void)registerForAssetRequests:(id /* block */)arg1 packageRequests:(id /* block */)arg2 machServiceName:(id)arg3;
- (void)registerForAssetUploadRequests:(id /* block */)arg1;
- (void)registerForAssetUploadRequests:(id /* block */)arg1 machServiceName:(id)arg2;
- (void)registerForPackageUploadRequests:(id /* block */)arg1;
- (void)registerForPackageUploadRequests:(id /* block */)arg1 machServiceName:(id)arg2;
- (void)reloadAccountWithCompletionHandler:(id /* block */)arg1;
- (void)representativeDataclassEnabledWithCompletionHandler:(id /* block */)arg1;
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)resetAllApplicationPermissionsWithCompletionHandler:(id /* block */)arg1;
- (id)resolvedEntitlements;
- (void)serverPreferredPushEnvironmentSynchronous:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(id /* block */)arg1;
- (id)serverPreferredPushEnvironmentWithError:(id*)arg1;
- (void)setApplicationPermission:(unsigned long long)arg1 enabled:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)setContainerScopedUserID:(id)arg1;
- (void)setFakeDeviceToDeviceEncryptionAvailability:(id)arg1;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
- (void)setFakeResponseOperationResult:(id)arg1 forNextRequestOfClassName:(id)arg2 forItemID:(id)arg3 withLifetime:(int)arg4;
- (void)setHasCachedSetupInfo:(bool)arg1;
- (void)setIsPersonaOverrideSet:(bool)arg1;
- (void)setOrgAdminUserID:(id)arg1;
- (void)setPersonaIdentifier:(id)arg1;
- (void)setPushEnvironment:(id)arg1;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (id)setupInfo;
- (id)sharedCloudDatabaseImplementation;
- (void)simulateMemoryPressure:(long long)arg1 completionHandler:(id /* block */)arg2;
- (id)sourceApplicationBundleIdentifier;
- (id)sourceApplicationSecondaryIdentifier;
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)statusGroupsForApplicationPermission:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (int)statusReportToken;
- (void)submitEventMetric:(id)arg1;
- (void)submitEventMetric:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)throttlingOperationQueue;
- (void)tossConfigWithCompletionHandler:(id /* block */)arg1;
- (id)unconfiguredWrappingContainer;
- (id)underlyingDispatchQueue;
- (void)unregisterFromUploadRequests;
- (void)unregisterFromUploadRequestsWithMachServiceName:(id)arg1;
- (id)untrustedEntitlements;
- (void)wipeAllCachesAndDie;
- (void)withUploadManager:(int)arg1 performBlock:(id /* block */)arg2;

@end
