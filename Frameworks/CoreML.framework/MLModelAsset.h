/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreML.framework/CoreML
 */

@interface MLModelAsset : NSObject {
    NSDictionary * _archiveData;
    MLModelAssetDescriptionVendor * _descriptionVendor;
    MLModelConfiguration * _lastConfiguration;
    MLModelAssetModelVendor * _modelVendor;
    MLModelAssetResourceFactory * _resourceFactory;
    MLModelAssetModelStructureVendor * _structureVendor;
}

@property (nonatomic, retain) NSDictionary *archiveData;
@property (nonatomic, readonly) <MLClassifier> *classifier;
@property (nonatomic, readonly, copy) NSURL *compiledModelURL;
@property (readonly) NSURL *compiledURL;
@property (nonatomic, readonly) MLModelAssetDescriptionVendor *descriptionVendor;
@property (nonatomic, copy) MLModelConfiguration *lastConfiguration;
@property (nonatomic, readonly) MLModel *model;
@property (nonatomic, readonly) MLModelAssetModelVendor *modelVendor;
@property (nonatomic, readonly) <MLRegressor> *regressor;
@property (nonatomic, readonly) MLModelAssetResourceFactory *resourceFactory;
@property (nonatomic, readonly) MLModelAssetModelStructureVendor *structureVendor;

+ (id)_modelAssetWithSpecificationData:(id)arg1 blobMapping:(id)arg2 error:(id*)arg3;
+ (id)fetchNetworkURLFromCompiledModelAtURL:(id)arg1 error:(id*)arg2;
+ (bool)isANESupported;
+ (id)modelAssetDataByLoadingBlobFileReferencesInModelSpecificationAtURL:(id)arg1 blobMapping:(id*)arg2 error:(id*)arg3;
+ (id)modelAssetDataByResolvingBlobFileReferencesIntoInMemoryValuesInModelSpecificationAtURL:(id)arg1 error:(id*)arg2;
+ (id)modelAssetWithSpecification:(void*)arg1 compilerOptions:(id)arg2 error:(id*)arg3;
+ (id)modelAssetWithSpecification:(void*)arg1 error:(id*)arg2;
+ (id)modelAssetWithSpecificationData:(id)arg1 blobMapping:(id)arg2 error:(id*)arg3;
+ (id)modelAssetWithSpecificationData:(id)arg1 error:(id*)arg2;
+ (id)modelAssetWithSpecificationURL:(id)arg1 compilerOptions:(id)arg2 error:(id*)arg3;
+ (id)modelAssetWithSpecificationURL:(id)arg1 error:(id*)arg2;
+ (id)modelAssetWithURL:(id)arg1 configuration:(id)arg2 error:(id*)arg3;
+ (id)modelAssetWithURL:(id)arg1 error:(id*)arg2;
+ (bool)needsANECompilationForModelAtURL:(id)arg1 result:(bool*)arg2 error:(id*)arg3;
+ (bool)purgeANEBinaryForModelAtURL:(id)arg1 error:(id*)arg2;
+ (bool)purgeANEIRForModelAtURL:(id)arg1 error:(id*)arg2;

- (void).cxx_destruct;
- (id)archiveData;
- (id)classifier;
- (id)classifierWithError:(id*)arg1;
- (id)compiledModelURL;
- (id)compiledURL;
- (id)description;
- (id)descriptionVendor;
- (void)functionNamesWithCompletionHandler:(id /* block */)arg1;
- (id)initWithArchiveData:(id)arg1;
- (id)initWithResourceFactory:(id)arg1 configuration:(id)arg2;
- (id)initWithURL:(id)arg1 configuration:(id)arg2 error:(id*)arg3;
- (id)initWithURL:(id)arg1 error:(id*)arg2;
- (id)lastConfiguration;
- (bool)load:(id*)arg1;
- (id)model;
- (void)modelDescriptionOfFunctionNamed:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)modelDescriptionWithCompletionHandler:(id /* block */)arg1;
- (void)modelStructureWithCompletionHandler:(id /* block */)arg1;
- (id)modelVendor;
- (id)modelWithConfiguration:(id)arg1 error:(id*)arg2;
- (id)modelWithError:(id*)arg1;
- (id)regressor;
- (id)regressorWithError:(id*)arg1;
- (id)resourceFactory;
- (void)setArchiveData:(id)arg1;
- (void)setLastConfiguration:(id)arg1;
- (long long)storageType;
- (id)structureVendor;

@end
