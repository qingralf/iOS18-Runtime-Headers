/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@interface CMCardioFitnessInputsSessionMetrics : NSObject <NSCopying, NSSecureCoding, SRSampleExporting> {
    long long  fAlgorithmVersion;
    bool  fBetaBlockerUse;
    unsigned int  fHardwareType;
    double  fMeanMaxMets;
    double  fPrior;
    unsigned long long  fRecordId;
    NSUUID * fSessionId;
    NSDate * fStartDate;
}

@property (nonatomic, readonly) long long algorithmVersion;
@property (nonatomic, readonly) bool betaBlockerUse;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) unsigned int hardwareType;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double meanMaxMets;
@property (nonatomic, readonly) double prior;
@property (nonatomic, readonly) unsigned long long recordId;
@property (nonatomic, readonly, retain) NSUUID *sessionId;
@property (nonatomic, readonly) NSDate *startDate;
@property (readonly) Class superclass;

+ (struct VO2MaxSessionAttributes { unsigned long long x1; double x2; unsigned char x3[16]; double x4; double x5; unsigned int x6; bool x7; int x8; id x9; id x10; })inputFromPreparedStatement:(struct sqlite3_stmt { }*)arg1;
+ (bool)supportsSecureCoding;

- (long long)algorithmVersion;
- (bool)betaBlockerUse;
- (id)binarySampleRepresentation;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)hardwareType;
- (id)initWithBinarySampleRepresentation:(id)arg1 metadata:(id)arg2 timestamp:(double)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithRecordId:(unsigned long long)arg1 startDate:(id)arg2 sessionId:(id)arg3 meanMaxMets:(double)arg4 prior:(double)arg5 hardwareType:(unsigned int)arg6 betaBlockerUse:(bool)arg7 algorithmVersion:(long long)arg8;
- (id)initWithSample:(struct VO2MaxSessionAttributes { unsigned long long x1; double x2; unsigned char x3[16]; double x4; double x5; unsigned int x6; bool x7; int x8; id x9; id x10; })arg1;
- (bool)isEqual:(id)arg1;
- (double)meanMaxMets;
- (double)prior;
- (unsigned long long)recordId;
- (id)sessionId;
- (id)sr_dictionaryRepresentation;
- (id)startDate;

@end
