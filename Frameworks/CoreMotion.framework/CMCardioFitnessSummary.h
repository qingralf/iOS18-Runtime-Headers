/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@interface CMCardioFitnessSummary : NSObject <NSCopying, NSSecureCoding, SRSampleExporting> {
    double  _meanMaxMets;
    double  fDurationInSeconds;
    double  fHRMax;
    double  fHRMin;
    double  fMeanCadence;
    double  fMeanGrade;
    double  fMeanHr;
    double  fMeanHrCadenceAgreement;
    double  fMeanHrConfidence;
    double  fMeanSpeed;
    double  fMeanVo2;
    unsigned long long  fPointCount;
    unsigned long long  fRecordId;
    NSUUID * fSessionId;
    long long  fSessionType;
    NSDate * fStartDate;
    long long  fVo2MaxModelSource;
    long long  fWorkoutType;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double durationInSeconds;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double hrMax;
@property (nonatomic, readonly) double hrMin;
@property (nonatomic, readonly) double meanCadence;
@property (nonatomic, readonly) double meanGrade;
@property (nonatomic, readonly) double meanHr;
@property (nonatomic, readonly) double meanHrCadenceAgreement;
@property (nonatomic, readonly) double meanHrConfidence;
@property (nonatomic, readonly) double meanMaxMets;
@property (nonatomic, readonly) double meanSpeed;
@property (nonatomic, readonly) double meanVo2;
@property (nonatomic, readonly) unsigned long long pointCount;
@property (nonatomic, readonly) unsigned long long recordId;
@property (nonatomic, readonly, retain) NSUUID *sessionId;
@property (nonatomic, readonly) long long sessionType;
@property (nonatomic, readonly) NSDate *startDate;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long vo2MaxModelSource;
@property (nonatomic, readonly) long long workoutType;

+ (struct VO2MaxSummary { unsigned long long x1; double x2; long long x3; unsigned char x4[16]; double x5; unsigned long long x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; double x17; double x18; double x19; double x20; double x21; int x22; int x23; })inputFromPreparedStatement:(struct sqlite3_stmt { }*)arg1;
+ (bool)supportsSecureCoding;

- (id)binarySampleRepresentation;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (double)durationInSeconds;
- (void)encodeWithCoder:(id)arg1;
- (double)hrMax;
- (double)hrMin;
- (id)initWithBinarySampleRepresentation:(id)arg1 metadata:(id)arg2 timestamp:(double)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithRecordId:(unsigned long long)arg1 startDate:(id)arg2 workoutType:(long long)arg3 sessionId:(id)arg4 durationInSeconds:(double)arg5 pointCount:(unsigned long long)arg6 hrMax:(double)arg7 hrMin:(double)arg8 meanHr:(double)arg9 meanVo2:(double)arg10 meanSpeed:(double)arg11 meanGrade:(double)arg12 meanHrConfidence:(double)arg13 meanHrCadenceAgreement:(double)arg14 meanCadence:(double)arg15 vo2MaxModelSource:(long long)arg16 sessionType:(long long)arg17;
- (id)initWithSample:(struct VO2MaxSummary { unsigned long long x1; double x2; long long x3; unsigned char x4[16]; double x5; unsigned long long x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; double x17; double x18; double x19; double x20; double x21; int x22; int x23; })arg1;
- (bool)isEqual:(id)arg1;
- (double)meanCadence;
- (double)meanGrade;
- (double)meanHr;
- (double)meanHrCadenceAgreement;
- (double)meanHrConfidence;
- (double)meanMaxMets;
- (double)meanSpeed;
- (double)meanVo2;
- (unsigned long long)pointCount;
- (unsigned long long)recordId;
- (id)sessionId;
- (long long)sessionType;
- (id)sr_dictionaryRepresentation;
- (id)startDate;
- (long long)vo2MaxModelSource;
- (long long)workoutType;

@end
