/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@interface CMHeadphoneActivityManagerInternal : NSObject {
    float  _accessoryAccelInterval;
    struct unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>> { 
        struct __compressed_pair<CLMotionNotifier::Dispatcher *, std::default_delete<CLMotionNotifier::Dispatcher>> { 
            struct Dispatcher {} *__value_; 
        } __ptr_; 
    }  _accessoryAccelerometerDispatcher;
    struct unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>> { 
        struct __compressed_pair<CLMotionNotifier::Dispatcher *, std::default_delete<CLMotionNotifier::Dispatcher>> { 
            struct Dispatcher {} *__value_; 
        } __ptr_; 
    }  _accessoryDeviceMotionConfigDispatcher;
    struct unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>> { 
        struct __compressed_pair<CLMotionNotifier::Dispatcher *, std::default_delete<CLMotionNotifier::Dispatcher>> { 
            struct Dispatcher {} *__value_; 
        } __ptr_; 
    }  _accessoryDeviceMotionDispatcher;
    float  _accessoryDeviceMotionInterval;
    struct unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>> { 
        struct __compressed_pair<CLMotionNotifier::Dispatcher *, std::default_delete<CLMotionNotifier::Dispatcher>> { 
            struct Dispatcher {} *__value_; 
        } __ptr_; 
    }  _accessoryGyroDispatcher;
    float  _accessoryGyroInterval;
    bool  _activityActive;
    NSOperationQueue * _activityCallbackQueue;
    RMConnectionClient * _activityConnectionClient;
    id /* block */  _activityHandler;
    bool  _activityStreaming;
    bool  _deviceConnected;
    struct unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>> { 
        struct __compressed_pair<CLMotionNotifier::Dispatcher *, std::default_delete<CLMotionNotifier::Dispatcher>> { 
            struct Dispatcher {} *__value_; 
        } __ptr_; 
    }  _deviceMotionDispatcher;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _enableMSL;
    bool  _isGyroBiasValid;
    struct unique_ptr<CLSettings, std::default_delete<CLSettings>> { 
        struct __compressed_pair<CLSettings *, std::default_delete<CLSettings>> { 
            struct CLSettings {} *__value_; 
        } __ptr_; 
    }  _motionSettings;
    float  _sourceDeviceMotionInterval;
    double  _startTime;
    bool  _statusActive;
    NSOperationQueue * _statusCallbackQueue;
    RMConnectionClient * _statusConnectionClient;
    id /* block */  _statusHandler;
    bool  _statusStreaming;
    struct unique_ptr<CMSpatialLogger, std::default_delete<CMSpatialLogger>> { 
        struct __compressed_pair<CMSpatialLogger *, std::default_delete<CMSpatialLogger>> { 
            struct CMSpatialLogger {} *__value_; 
        } __ptr_; 
    }  fLogger;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)connectActivity;
- (void)connectStatus;
- (void)dealloc;
- (void)disconnectActivity;
- (void)disconnectStatus;
- (id)init;
- (bool)mslLoggingEnabledPrivate;
- (void)onAudioAccessoryDeviceMotion:(const void*)arg1;
- (void)startMslLoggingPrivateWithFilenamePrefix:(id)arg1 filePath:(id)arg2;
- (void)stopMslLoggingPrivate;
- (void)updatePreferences;

@end
