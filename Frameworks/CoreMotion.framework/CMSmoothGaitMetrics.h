/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@interface CMSmoothGaitMetrics : NSObject <NSCopying, NSSecureCoding, SRSampleExporting> {
    double  fAsymmetryProbability;
    double  fCycleTime;
    double  fDistance;
    double  fDoubleSupportPercentage;
    unsigned int  fNumGaitMetrics;
    unsigned long long  fRecordId;
    NSDate * fStartDate;
    double  fStepLength;
    double  fWalkingSpeed;
}

@property (nonatomic, readonly) double asymmetryProbability;
@property (nonatomic, readonly) double cycleTime;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double distance;
@property (nonatomic, readonly) double doubleSupportPercentage;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned int numGaitMetrics;
@property (nonatomic, readonly) unsigned long long recordId;
@property (nonatomic, readonly) NSDate *startDate;
@property (nonatomic, readonly) double stepLength;
@property (readonly) Class superclass;
@property (nonatomic, readonly) double walkingSpeed;

+ (struct SmoothedGaitMetrics { int x1; double x2; float x3; float x4; float x5; float x6; float x7; float x8; unsigned int x9; })inputFromPreparedStatement:(struct sqlite3_stmt { }*)arg1;
+ (bool)supportsSecureCoding;

- (double)asymmetryProbability;
- (id)binarySampleRepresentation;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)cycleTime;
- (void)dealloc;
- (id)description;
- (double)distance;
- (double)doubleSupportPercentage;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithBinarySampleRepresentation:(id)arg1 metadata:(id)arg2 timestamp:(double)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithRecordId:(unsigned long long)arg1 startDate:(id)arg2 walkingSpeed:(double)arg3 stepLength:(double)arg4 cycleTime:(double)arg5 distance:(double)arg6 doubleSupportPercentage:(double)arg7 asymmetryProbability:(double)arg8 numGaitMetrics:(unsigned int)arg9;
- (id)initWithSample:(struct SmoothedGaitMetrics { int x1; double x2; float x3; float x4; float x5; float x6; float x7; float x8; unsigned int x9; })arg1;
- (bool)isEqual:(id)arg1;
- (unsigned int)numGaitMetrics;
- (unsigned long long)recordId;
- (id)sr_dictionaryRepresentation;
- (id)startDate;
- (double)stepLength;
- (double)walkingSpeed;

@end
