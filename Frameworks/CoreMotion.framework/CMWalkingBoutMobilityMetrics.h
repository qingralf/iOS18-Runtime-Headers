/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@interface CMWalkingBoutMobilityMetrics : NSObject <NSCopying, NSSecureCoding, SRSampleExporting> {
    double  fAsymmetryPercentage;
    unsigned int  fAsymmetryPercentageRejectionStatus;
    long long  fBoundaryType;
    double  fCycleTimeEntropy;
    double  fCycleTimeMean;
    double  fCycleTimePoincareSD1;
    double  fCycleTimePoincareSD2;
    long long  fDeviceSide;
    double  fDoubleSupportPercentage;
    unsigned int  fDoubleSupportPercentageRejectionStatus;
    NSDate * fEndDate;
    double  fInvalidGradePercentage;
    bool  fIsHeightSet;
    bool  fIsWeightSet;
    int  fNumGaitMetrics;
    unsigned long long  fRecordId;
    unsigned int  fSegmentsRejectedByIsCadenceConcordant;
    unsigned int  fSegmentsRejectedByIsFeasibleWalkingSpeed;
    unsigned int  fSegmentsRejectedByIsNotRunning;
    unsigned int  fSegmentsRejectedByIsPendular;
    unsigned int  fSegmentsRejectedByIsSufficientVerticalTwist;
    unsigned int  fSegmentsRejectedByIsSwingStanceCycle;
    NSDate * fStartDate;
    int  fStepCount;
    double  fStepIndexOfHarmonicityAP;
    double  fStepIndexOfHarmonicityML;
    double  fStepIndexOfHarmonicityVT;
    double  fStepLength;
    double  fStepLengthEntropy;
    double  fStepLengthPoincareSD1;
    double  fStepLengthPoincareSD2;
    unsigned int  fStepLengthRejectionStatus;
    double  fSwingIndexOfHarmonicityAP;
    double  fSwingIndexOfHarmonicityML;
    double  fSwingIndexOfHarmonicityVT;
    long long  fTerminationReason;
    double  fUserHeight;
    double  fUserWeight;
    double  fWalkingSpeed;
    unsigned int  fWalkingSpeedRejectionStatus;
    int  fWorkoutType;
}

@property (nonatomic, readonly) double asymmetryPercentage;
@property (nonatomic, readonly) unsigned int asymmetryPercentageRejectionStatus;
@property (nonatomic, readonly) long long boundaryType;
@property (nonatomic, readonly) double cycleTimeEntropy;
@property (nonatomic, readonly) double cycleTimeMean;
@property (nonatomic, readonly) double cycleTimePoincareSD1;
@property (nonatomic, readonly) double cycleTimePoincareSD2;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long deviceSide;
@property (nonatomic, readonly) double doubleSupportPercentage;
@property (nonatomic, readonly) unsigned int doubleSupportPercentageRejectionStatus;
@property (nonatomic, readonly) NSDate *endDate;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double invalidGradePercentage;
@property (nonatomic, readonly) bool isHeightSet;
@property (nonatomic, readonly) bool isWeightSet;
@property (nonatomic, readonly) int numGaitMetrics;
@property (nonatomic, readonly) unsigned long long recordId;
@property (nonatomic, readonly) unsigned int segmentsRejectedByIsCadenceConcordant;
@property (nonatomic, readonly) unsigned int segmentsRejectedByIsFeasibleWalkingSpeed;
@property (nonatomic, readonly) unsigned int segmentsRejectedByIsNotRunning;
@property (nonatomic, readonly) unsigned int segmentsRejectedByIsPendular;
@property (nonatomic, readonly) unsigned int segmentsRejectedByIsSufficientVerticalTwist;
@property (nonatomic, readonly) unsigned int segmentsRejectedByIsSwingStanceCycle;
@property (nonatomic, readonly) NSDate *startDate;
@property (nonatomic, readonly) int stepCount;
@property (nonatomic, readonly) double stepIndexOfHarmonicityAP;
@property (nonatomic, readonly) double stepIndexOfHarmonicityML;
@property (nonatomic, readonly) double stepIndexOfHarmonicityVT;
@property (nonatomic, readonly) double stepLength;
@property (nonatomic, readonly) double stepLengthEntropy;
@property (nonatomic, readonly) double stepLengthPoincareSD1;
@property (nonatomic, readonly) double stepLengthPoincareSD2;
@property (nonatomic, readonly) unsigned int stepLengthRejectionStatus;
@property (readonly) Class superclass;
@property (nonatomic, readonly) double swingIndexOfHarmonicityAP;
@property (nonatomic, readonly) double swingIndexOfHarmonicityML;
@property (nonatomic, readonly) double swingIndexOfHarmonicityVT;
@property (nonatomic, readonly) long long terminationReason;
@property (nonatomic, readonly) double userHeight;
@property (nonatomic, readonly) double userWeight;
@property (nonatomic, readonly) double walkingSpeed;
@property (nonatomic, readonly) unsigned int walkingSpeedRejectionStatus;
@property (nonatomic, readonly) int workoutType;

+ (struct BoutMetrics { int x1; double x2; double x3; unsigned int x4; int x5; unsigned int x6; unsigned int x7; double x8; unsigned char x9; int x10; double x11; double x12; double x13; double x14; double x15; double x16; double x17; double x18; double x19; double x20; double x21; float x22; float x23; float x24; float x25; float x26; float x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; float x38; bool x39; float x40; bool x41; })inputFromPreparedStatement:(struct sqlite3_stmt { }*)arg1;
+ (bool)supportsSecureCoding;

- (double)asymmetryPercentage;
- (unsigned int)asymmetryPercentageRejectionStatus;
- (id)binarySampleRepresentation;
- (long long)boundaryType;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)cycleTimeEntropy;
- (double)cycleTimeMean;
- (double)cycleTimePoincareSD1;
- (double)cycleTimePoincareSD2;
- (void)dealloc;
- (id)description;
- (long long)deviceSide;
- (double)doubleSupportPercentage;
- (unsigned int)doubleSupportPercentageRejectionStatus;
- (void)encodeWithCoder:(id)arg1;
- (id)endDate;
- (id)initWithBinarySampleRepresentation:(id)arg1 metadata:(id)arg2 timestamp:(double)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithRecordId:(unsigned long long)arg1 startTime:(id)arg2 endTime:(id)arg3 stepCount:(int)arg4 workoutType:(int)arg5 numGaitMetrics:(int)arg6 deviceSide:(long long)arg7 walkingSpeed:(double)arg8 doubleSupportPercentage:(double)arg9 stepLength:(double)arg10 asymmetryPercentage:(double)arg11 userHeight:(double)arg12 userWeight:(double)arg13 isHeightSet:(bool)arg14 isWeightSet:(bool)arg15 boundaryType:(long long)arg16 cycleTimeMean:(double)arg17 terminationReason:(long long)arg18 invalidGradePercentage:(double)arg19 segmentsRejectedByIsSwingStanceCycle:(unsigned int)arg20 segmentsRejectedByIsNotRunning:(unsigned int)arg21 segmentsRejectedByIsFeasibleWalkingSpeed:(unsigned int)arg22 segmentsRejectedByIsPendular:(unsigned int)arg23 segmentsRejectedByIsSufficientVerticalTwist:(unsigned int)arg24 segmentsRejectedByIsCadenceConcordant:(unsigned int)arg25 walkingSpeedRejectionStatus:(unsigned int)arg26 doubleSupportPercentageRejectionStatus:(unsigned int)arg27 stepLengthRejectionStatus:(unsigned int)arg28 asymmetryPercentageRejectionStatus:(unsigned int)arg29 stepLengthEntropy:(double)arg30 stepLengthPoincareSD1:(double)arg31 stepLengthPoincareSD2:(double)arg32 cycleTimeEntropy:(double)arg33 cycleTimePoincareSD1:(double)arg34 cycleTimePoincareSD2:(double)arg35 stepIndexOfHarmonicityAP:(double)arg36 stepIndexOfHarmonicityML:(double)arg37 stepIndexOfHarmonicityVT:(double)arg38 swingIndexOfHarmonicityAP:(double)arg39 swingIndexOfHarmonicityML:(double)arg40 swingIndexOfHarmonicityVT:(double)arg41;
- (id)initWithSample:(struct BoutMetrics { int x1; double x2; double x3; unsigned int x4; int x5; unsigned int x6; unsigned int x7; double x8; unsigned char x9; int x10; double x11; double x12; double x13; double x14; double x15; double x16; double x17; double x18; double x19; double x20; double x21; float x22; float x23; float x24; float x25; float x26; float x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; float x38; bool x39; float x40; bool x41; })arg1;
- (double)invalidGradePercentage;
- (bool)isEqual:(id)arg1;
- (bool)isHeightSet;
- (bool)isWeightSet;
- (int)numGaitMetrics;
- (unsigned long long)recordId;
- (unsigned int)segmentsRejectedByIsCadenceConcordant;
- (unsigned int)segmentsRejectedByIsFeasibleWalkingSpeed;
- (unsigned int)segmentsRejectedByIsNotRunning;
- (unsigned int)segmentsRejectedByIsPendular;
- (unsigned int)segmentsRejectedByIsSufficientVerticalTwist;
- (unsigned int)segmentsRejectedByIsSwingStanceCycle;
- (id)sr_dictionaryRepresentation;
- (id)startDate;
- (int)stepCount;
- (double)stepIndexOfHarmonicityAP;
- (double)stepIndexOfHarmonicityML;
- (double)stepIndexOfHarmonicityVT;
- (double)stepLength;
- (double)stepLengthEntropy;
- (double)stepLengthPoincareSD1;
- (double)stepLengthPoincareSD2;
- (unsigned int)stepLengthRejectionStatus;
- (double)swingIndexOfHarmonicityAP;
- (double)swingIndexOfHarmonicityML;
- (double)swingIndexOfHarmonicityVT;
- (long long)terminationReason;
- (double)userHeight;
- (double)userWeight;
- (double)walkingSpeed;
- (unsigned int)walkingSpeedRejectionStatus;
- (int)workoutType;

@end
