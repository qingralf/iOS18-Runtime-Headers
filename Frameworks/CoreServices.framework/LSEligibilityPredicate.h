/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreServices.framework/CoreServices
 */

@interface LSEligibilityPredicate : NSObject {
    struct DelayedInitable<LaunchServices::Predicate> { 
        struct optional<LaunchServices::Predicate> { 
            union { 
                BOOL __null_state_; 
                struct Predicate { 
                    struct map<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>, std::less<os_eligibility_domain_t>, std::allocator<std::pair<const os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>>> { 
                        struct __tree<std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>, std::__map_value_compare<os_eligibility_domain_t, std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>, std::less<os_eligibility_domain_t>>, std::allocator<std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>>> { 
                            void *__begin_node_; 
                            struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>, void *>>> { 
                                struct __tree_end_node<std::__tree_node_base<void *> *> { 
                                    void *__left_; 
                                } __value_; 
                            } __pair1_; 
                            struct __compressed_pair<unsigned long, std::__map_value_compare<os_eligibility_domain_t, std::__value_type<os_eligibility_domain_t, std::vector<os_eligibility_answer_t>>, std::less<os_eligibility_domain_t>>> { 
                                unsigned long long __value_; 
                            } __pair3_; 
                        } __tree_; 
                    } _match_map; 
                } __val_; 
            } ; 
            bool __engaged_; 
        } _storage; 
    }  _predicate;
}

+ (bool)getInstallationPredicate:(id*)arg1 uninstallationPredicate:(id*)arg2 forBundle:(unsigned int)arg3 bundleData:(const struct LSBundleData { struct LSBundleBaseData { unsigned int x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; int x_1_1_7; struct LSVersionNumber { unsigned char x_8_2_1[32]; } x_1_1_8; struct LSVersionNumber { unsigned char x_9_2_1[32]; } x_1_1_9; unsigned int x_1_1_10; unsigned int x_1_1_11; unsigned int x_1_1_12; unsigned int x_1_1_13; unsigned int x_1_1_14; unsigned int x_1_1_15; unsigned int x_1_1_16; unsigned int x_1_1_17; unsigned int x_1_1_18; unsigned int x_1_1_19; unsigned int x_1_1_20; unsigned int x_1_1_21; unsigned int x_1_1_22; unsigned int x_1_1_23; unsigned char x_1_1_24; unsigned char x_1_1_25; unsigned int x_1_1_26; unsigned short x_1_1_27; unsigned int x_1_1_28; struct LSBundleBaseFlags { unsigned int x_29_2_1 : 1; unsigned int x_29_2_2 : 1; unsigned int x_29_2_3 : 1; unsigned int x_29_2_4 : 1; unsigned int x_29_2_5 : 1; unsigned int x_29_2_6 : 1; unsigned int x_29_2_7 : 1; } x_1_1_29; } x1; unsigned int x2; unsigned long long x3; unsigned int x4; }*)arg4 database:(id)arg5 error:(id*)arg6;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (id)evaluateWithDomainEligibilityResolver:(id)arg1 error:(id*)arg2;
- (id)initWithDictionary:(id)arg1 error:(id*)arg2;

@end
