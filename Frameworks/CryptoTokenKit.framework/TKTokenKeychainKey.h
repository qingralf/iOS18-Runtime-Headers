/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CryptoTokenKit.framework/CryptoTokenKit
 */

@interface TKTokenKeychainKey : TKTokenKeychainItem {
    NSData * _applicationTag;
    bool  _canDecrypt;
    bool  _canPerformKeyExchange;
    bool  _canSign;
    long long  _keySizeInBits;
    NSString * _keyType;
    NSData * _publicKeyData;
    NSData * _publicKeyHash;
    bool  _suitableForLogin;
}

@property (copy) NSData *applicationTag;
@property bool canDecrypt;
@property bool canPerformKeyExchange;
@property bool canSign;
@property long long keySizeInBits;
@property (copy) NSString *keyType;
@property (readonly) unsigned long long keyUsage;
@property (copy) NSData *publicKeyData;
@property (copy) NSData *publicKeyHash;
@property (getter=isSuitableForLogin) bool suitableForLogin;

+ (bool)canDecrypt:(unsigned char)arg1;
+ (bool)canPerformKeyExchange:(unsigned char)arg1;
+ (bool)canSign:(unsigned char)arg1;

- (void).cxx_destruct;
- (id)applicationTag;
- (bool)canDecrypt;
- (bool)canPerformKeyExchange;
- (bool)canSign;
- (id)encodedObjectID;
- (id)initWithCertificate:(struct __SecCertificate { }*)arg1 objectID:(id)arg2;
- (id)initWithItemInfo:(id)arg1;
- (id)initWithPublicKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg1 label:(id)arg2 objectID:(id)arg3 canSign:(bool)arg4 canDecrypt:(bool)arg5 canPerformKeyExchange:(bool)arg6;
- (bool)isSuitableForLogin;
- (long long)keySizeInBits;
- (id)keyType;
- (unsigned long long)keyUsage;
- (id)keychainAttributes;
- (id)publicKeyData;
- (id)publicKeyHash;
- (bool)satisfiesKeyUsage:(unsigned long long)arg1;
- (void)setApplicationTag:(id)arg1;
- (void)setCanDecrypt:(bool)arg1;
- (void)setCanPerformKeyExchange:(bool)arg1;
- (void)setCanSign:(bool)arg1;
- (void)setKeySizeInBits:(long long)arg1;
- (void)setKeyType:(id)arg1;
- (void)setPublicKeyData:(id)arg1;
- (void)setPublicKeyHash:(id)arg1;
- (void)setSuitableForLogin:(bool)arg1;
- (bool)setupWithPublicKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg1 label:(id)arg2;

@end
