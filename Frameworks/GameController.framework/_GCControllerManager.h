/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/GameController.framework/GameController
 */

@interface _GCControllerManager : NSObject <_GCHIDEventSource, _GCIPCObjectMaterializationContext, _GCIPCObjectRegistry, _GCIPCServiceRegistry, _GCImplicitIPCObject> {
    GCController * __controller_genericBTRemote;
    NSMutableDictionary * _controllersByRegistryID;
    NSMutableDictionary * _controllersByUDID;
    NSObject<OS_dispatch_queue> * _controllersQueue;
    GCController * _currentController;
    GCExtendedGamepad * _currentExtendedGamepad;
    long long  _currentMediaRemoteInputMode;
    GCMicroGamepad * _currentMicroGamepad;
    GCController * _firstMicroGamepad;
    id  _hidEventObservation;
    _GCHIDEventSubject * _hidEventSource;
    struct __IOHIDEventSystemClient { } * _hidSystemClient;
    NSObject<OS_dispatch_queue> * _hidSystemClientQueue;
    NSMapTable * _ipcObjectRegistry;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _ipcRegistryLock;
    GCKeyboardAndMouseManager * _keyboardAndMouseManager;
    bool  _shouldKeepRunning;
    bool  _shouldMonitorBackgroundEvents;
}

@property (readonly) <_GCIPCObjectRegistry> *IPCObjectRegistry;
@property (readonly) <_GCIPCServiceRegistry> *IPCServiceRegistry;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *controllersQueue;
@property (retain) GCController *currentController;
@property (retain) GCExtendedGamepad *currentExtendedGamepad;
@property (retain) GCMicroGamepad *currentMicroGamepad;
@property (readonly) GCMouse *currentMouse;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic) GCController *firstMicroGamepad;
@property (readonly) unsigned long long hash;
@property (readonly) <NSObject><NSCopying><NSSecureCoding> *identifier;
@property (nonatomic, readonly) bool isAppInBackground;
@property (nonatomic) bool shouldMonitorBackgroundEvents;
@property (readonly) Class superclass;

+ (void)initialize;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)CBApplicationDidBecomeActive;
- (void)CBApplicationWillResignActive;
- (id)HIDDeviceMatchingAttributes;
- (id)IPCObjectRegistry;
- (id)IPCObjectWithIdentifier:(id)arg1;
- (id)IPCServiceRegistry;
- (void)_legacy_addControllerWithServiceInfo:(id)arg1;
- (id)_legacy_controllers;
- (void)_legacy_dealloc;
- (void)_legacy_init;
- (id)_legacy_makeHIDEventSource:(struct __IOHIDEventSystemClient { }*)arg1;
- (void)_legacy_publishController:(id)arg1;
- (void)_legacy_removeControllerWithServiceInfo:(id)arg1;
- (void)_legacy_startHIDDeviceMonitor;
- (void)_legacy_startHIDEventMonitor;
- (void)_legacy_stopHIDDeviceMonitor;
- (void)_legacy_stopHIDEventMonitor;
- (void)_legacy_unpublishController:(id)arg1;
- (void)_legacy_updateControllerWithEvent:(struct __IOHIDEvent { }*)arg1;
- (void)_queue_removeController:(id)arg1 registryID:(id)arg2;
- (void)addController:(id)arg1;
- (id)coalescedKeyboard;
- (bool)combineSiriRemoteHIDDevicesWithNewController:(id)arg1 existingController:(id)arg2;
- (int)connectedATVRemoteCount;
- (id)controllers;
- (id)controllersQueue;
- (id)currentController;
- (id)currentExtendedGamepad;
- (id)currentMicroGamepad;
- (id)currentMouse;
- (void)dealloc;
- (id)firstMicroGamepad;
- (id)identifier;
- (id)init;
- (bool)isAppInBackground;
- (bool)isExistingController:(id)arg1;
- (id)makeHIDEventSource:(struct __IOHIDEventSystemClient { }*)arg1;
- (id)mice;
- (id)observeHIDEvents:(id /* block */)arg1;
- (id)observeHIDEvents:(id /* block */)arg1 forService:(id)arg2;
- (void)onHIDServiceAdded:(id)arg1;
- (void)onHIDServiceRemoved:(id)arg1;
- (void)onScreenshotTriggeredWithController:(id)arg1;
- (void)onVideoRecordingToggledWithController:(id)arg1;
- (void)onVideoRecordingToggledWithController:(id)arg1 mode:(long long)arg2;
- (void)open;
- (void)registerIPCObject:(id)arg1;
- (void)removeCoalescedControllerComponent:(id)arg1;
- (void)removeController:(id)arg1;
- (void)removeController:(id)arg1 registryID:(id)arg2;
- (id)serviceClientForIPCService:(id)arg1;
- (void)setCurrentController:(id)arg1;
- (void)setCurrentExtendedGamepad:(id)arg1;
- (void)setCurrentMicroGamepad:(id)arg1;
- (void)setFirstMicroGamepad:(id)arg1;
- (void)setShouldMonitorBackgroundEvents:(bool)arg1;
- (void)setupHIDMonitor:(bool)arg1;
- (bool)shouldMonitorBackgroundEvents;
- (void)startVideoRecordingBuffering;
- (void)stopVideoRecordingBuffering;
- (void)storeController:(id)arg1;
- (void)teardownHIDMonitor:(bool)arg1;
- (void)updateCurrentControllerAndProfileForUnpublishedController:(id)arg1;

@end
