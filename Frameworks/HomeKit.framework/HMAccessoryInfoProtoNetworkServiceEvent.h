/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/HomeKit.framework/HomeKit
 */

@interface HMAccessoryInfoProtoNetworkServiceEvent : PBCodable <NSCopying> {
    NSString * _confirmedIfaceName;
    struct { 
        unsigned int isPrimary : 1; 
    }  _has;
    NSString * _ifaceName;
    NSMutableArray * _ipv4Addresses;
    NSMutableArray * _ipv6Addresses;
    bool  _isPrimary;
    NSString * _macAddress;
    NSString * _networkSignatureV4;
    NSString * _networkSignatureV6;
    NSString * _routerIPv4;
    NSString * _routerIPv6;
}

@property (nonatomic, retain) NSString *confirmedIfaceName;
@property (nonatomic, readonly) bool hasConfirmedIfaceName;
@property (nonatomic, readonly) bool hasIfaceName;
@property (nonatomic) bool hasIsPrimary;
@property (nonatomic, readonly) bool hasMacAddress;
@property (nonatomic, readonly) bool hasNetworkSignatureV4;
@property (nonatomic, readonly) bool hasNetworkSignatureV6;
@property (nonatomic, readonly) bool hasRouterIPv4;
@property (nonatomic, readonly) bool hasRouterIPv6;
@property (nonatomic, retain) NSString *ifaceName;
@property (nonatomic, retain) NSMutableArray *ipv4Addresses;
@property (nonatomic, retain) NSMutableArray *ipv6Addresses;
@property (nonatomic) bool isPrimary;
@property (nonatomic, retain) NSString *macAddress;
@property (nonatomic, retain) NSString *networkSignatureV4;
@property (nonatomic, retain) NSString *networkSignatureV6;
@property (nonatomic, retain) NSString *routerIPv4;
@property (nonatomic, retain) NSString *routerIPv6;

+ (Class)ipv4AddressesType;
+ (Class)ipv6AddressesType;

- (void).cxx_destruct;
- (void)addIpv4Addresses:(id)arg1;
- (void)addIpv6Addresses:(id)arg1;
- (void)clearIpv4Addresses;
- (void)clearIpv6Addresses;
- (id)confirmedIfaceName;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasConfirmedIfaceName;
- (bool)hasIfaceName;
- (bool)hasIsPrimary;
- (bool)hasMacAddress;
- (bool)hasNetworkSignatureV4;
- (bool)hasNetworkSignatureV6;
- (bool)hasRouterIPv4;
- (bool)hasRouterIPv6;
- (unsigned long long)hash;
- (id)ifaceName;
- (id)ipv4Addresses;
- (id)ipv4AddressesAtIndex:(unsigned long long)arg1;
- (unsigned long long)ipv4AddressesCount;
- (id)ipv6Addresses;
- (id)ipv6AddressesAtIndex:(unsigned long long)arg1;
- (unsigned long long)ipv6AddressesCount;
- (bool)isEqual:(id)arg1;
- (bool)isPrimary;
- (id)macAddress;
- (void)mergeFrom:(id)arg1;
- (id)networkSignatureV4;
- (id)networkSignatureV6;
- (bool)readFrom:(id)arg1;
- (id)routerIPv4;
- (id)routerIPv6;
- (void)setConfirmedIfaceName:(id)arg1;
- (void)setHasIsPrimary:(bool)arg1;
- (void)setIfaceName:(id)arg1;
- (void)setIpv4Addresses:(id)arg1;
- (void)setIpv6Addresses:(id)arg1;
- (void)setIsPrimary:(bool)arg1;
- (void)setMacAddress:(id)arg1;
- (void)setNetworkSignatureV4:(id)arg1;
- (void)setNetworkSignatureV6:(id)arg1;
- (void)setRouterIPv4:(id)arg1;
- (void)setRouterIPv6:(id)arg1;
- (void)writeTo:(id)arg1;

@end
