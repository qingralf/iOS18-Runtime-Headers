/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation
 */

@interface LPImage : NSObject <LPAsynchronousResource, LPCodable, NSSecureCoding> {
    NSString * _MIMEType;
    id /* block */  __alternateHTMLImageGenerator;
    NSObject<OS_dispatch_group> * __asynchronousLoadGroup;
    NSData * __cachedAtomicData;
    LPImage * _darkInterfaceAlternativeImage;
    UIImage * _decodedPlatformImage;
    bool  _fallbackIcon;
    NSURL * _fileURL;
    bool  _hasComputedHasTransparency;
    bool  _hasComputedIsAnimated;
    bool  _hasComputedPixelSize;
    bool  _hasTransparency;
    LPImage * _imageLoadedFromItemProvider;
    bool  _isAnimated;
    bool  _isNonFallbackSymbolImage;
    NSItemProvider * _itemProvider;
    NSObject<OS_dispatch_group> * _itemProviderLoadGroup;
    UIImage * _originalPlatformImage;
    struct CGSize { 
        double width; 
        double height; 
    }  _pixelSize;
    UIImage * _platformImage;
    bool  _precomposedAppIcon;
    LPImageProperties * _properties;
    NSArray * _remoteURLsForEmailCompatibleOutput;
    NSString * _symbolName;
    bool  _useLossyCompressionForEncodedData;
}

@property (nonatomic, readonly, copy) NSString *MIMEType;
@property (nonatomic, copy) id /* block */ _alternateHTMLImageGenerator;
@property (getter=_isAnimated, nonatomic, readonly) bool _animated;
@property (setter=_setAsynchronousLoadGroup:, retain) NSObject<OS_dispatch_group> *_asynchronousLoadGroup;
@property (retain) NSData *_cachedAtomicData;
@property (nonatomic, readonly) bool _canEncodeWithoutComputation;
@property (setter=_setDarkInterfaceAlternativeImage:, nonatomic, retain) LPImage *_darkInterfaceAlternativeImage;
@property (nonatomic, readonly) unsigned long long _encodedSize;
@property (getter=_isFallbackIcon, nonatomic) bool _fallbackIcon;
@property (nonatomic, readonly) bool _hasTransparency;
@property (nonatomic, readonly) bool _isImperceptible;
@property (nonatomic, readonly) bool _isLowResolutionAsImage;
@property (nonatomic) bool _isNonFallbackSymbolImage;
@property (nonatomic, readonly, retain) NSItemProvider *_itemProvider;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } _pixelSize;
@property (getter=_isPrecomposedAppIcon, nonatomic) bool _precomposedAppIcon;
@property (nonatomic, retain) NSArray *_remoteURLsForEmailCompatibleOutput;
@property (nonatomic, readonly, copy) NSString *_srcsetForRemoteURLs;
@property (nonatomic, readonly, copy) NSString *_symbolName;
@property (nonatomic) bool _useLossyCompressionForEncodedData;
@property (nonatomic, copy) NSData *data;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSURL *fileURL;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIImage *platformImage;
@property (nonatomic, readonly, copy) LPImageProperties *properties;
@property (readonly) Class superclass;

+ (id)_PDFImageNamed:(id)arg1 template:(bool)arg2;
+ (id)_PNGImageNamed:(id)arg1;
+ (id)_PNGImageNamed:(id)arg1 template:(bool)arg2 properties:(id)arg3;
+ (id)_loadImageSubsampledToScreenSizeFromData:(id)arg1;
+ (id)_systemImageNamed:(id)arg1;
+ (id)_systemImageNamed:(id)arg1 withSymbolConfiguration:(id)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)MIMEType;
- (id /* block */)_alternateHTMLImageGenerator;
- (id)_asTemplate;
- (id)_asynchronousLoadGroup;
- (id)_cachedAtomicData;
- (bool)_canEncodeWithoutComputation;
- (void)_computeDominantColorForProperties;
- (void)_createDataFromPlatformImage;
- (id)_darkInterfaceAlternativeImage;
- (unsigned long long)_encodedSize;
- (id)_existingPlatformImage;
- (bool)_hasTransparency;
- (id)_initWithCGImage:(struct CGImage { }*)arg1;
- (id)_initWithCGImage:(struct CGImage { }*)arg1 properties:(id)arg2;
- (id)_initWithImage:(id)arg1;
- (id)_initWithImage:(id)arg1 properties:(id)arg2;
- (id)_initWithPlatformImageGenerator:(id /* block */)arg1 properties:(id)arg2;
- (bool)_isAnimated;
- (bool)_isFallbackIcon;
- (bool)_isImperceptible;
- (bool)_isLowResolutionAsIconWithScaleFactor:(double)arg1;
- (bool)_isLowResolutionAsImage;
- (bool)_isNonFallbackSymbolImage;
- (bool)_isPrecomposedAppIcon;
- (bool)_isSubstitute;
- (id)_itemProvider;
- (void)_mapDataFromFileURL;
- (struct CGSize { double x1; double x2; })_pixelSize;
- (id)_remoteURLsForEmailCompatibleOutput;
- (void)_setAsynchronousLoadGroup:(id)arg1;
- (void)_setDarkInterfaceAlternativeImage:(id)arg1;
- (id)_srcsetForRemoteURLs;
- (id)_symbolName;
- (void)_synchronouslyDecodePlatformImageWithMaximumSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)_useLossyCompressionForEncodedData;
- (void)_waitForAsynchronouslyLoadedImageIfNeeded;
- (id)data;
- (void)encodeWithCoder:(id)arg1;
- (id)fileURL;
- (id)filledVariant;
- (bool)hasPlaceholderValueForAsynchronousLoad;
- (unsigned long long)hash;
- (id)init;
- (id)initByReferencingFileURL:(id)arg1 MIMEType:(id)arg2;
- (id)initByReferencingFileURL:(id)arg1 MIMEType:(id)arg2 properties:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1 MIMEType:(id)arg2;
- (id)initWithData:(id)arg1 MIMEType:(id)arg2 properties:(id)arg3;
- (id)initWithItemProvider:(id)arg1 properties:(id)arg2 placeholderImage:(id)arg3;
- (id)initWithPlatformImage:(id)arg1;
- (id)initWithPlatformImage:(id)arg1 properties:(id)arg2;
- (bool)isEqual:(id)arg1;
- (void)loadAsynchronouslyWithCompletionHandler:(id /* block */)arg1;
- (bool)needsAsynchronousLoad;
- (id)platformImage;
- (id)properties;
- (void)setData:(id)arg1;
- (void)setFileURL:(id)arg1;
- (void)setPlatformImage:(id)arg1;
- (void)set_alternateHTMLImageGenerator:(id /* block */)arg1;
- (void)set_cachedAtomicData:(id)arg1;
- (void)set_fallbackIcon:(bool)arg1;
- (void)set_isNonFallbackSymbolImage:(bool)arg1;
- (void)set_precomposedAppIcon:(bool)arg1;
- (void)set_remoteURLsForEmailCompatibleOutput:(id)arg1;
- (void)set_useLossyCompressionForEncodedData:(bool)arg1;

@end
