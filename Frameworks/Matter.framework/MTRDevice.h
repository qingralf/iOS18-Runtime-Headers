/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Matter.framework/Matter
 */

@interface MTRDevice : NSObject <HomeKitDaemon.HMDMTRDevice> {
    MTRAsyncWorkQueue * _asyncWorkQueue;
    NSMutableSet * _delegates;
    MTRDeviceController * _deviceController;
    NSDate * _estimatedStartTime;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSNumber * _nodeID;
    NSObject<OS_dispatch_queue> * _queue;
    unsigned long long  _state;
}

@property (nonatomic, readonly) MTRAsyncWorkQueue *asyncWorkQueue;
@property (readonly) bool deviceCachePrimed;
@property (nonatomic, readonly) MTRDeviceController *deviceController;
@property (nonatomic, readonly) NSDate *estimatedStartTime;
@property (nonatomic, readonly, copy) NSNumber *estimatedSubscriptionLatency;
@property (nonatomic, retain) HMHome *hdm_containingHome;
@property (nonatomic, readonly) NSNumber *hdm_nodeID;
@property (nonatomic, readonly, copy) NSNumber *nodeID;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) unsigned long long state;

// Image: /System/Library/Frameworks/Matter.framework/Matter

+ (id)deviceWithNodeID:(id)arg1 controller:(id)arg2;
+ (id)deviceWithNodeID:(unsigned long long)arg1 deviceController:(id)arg2;

- (void).cxx_destruct;
- (void)_addDelegate:(id)arg1 queue:(id)arg2 interestedPathsForAttributes:(id)arg3 interestedPathsForEvents:(id)arg4;
- (bool)_callDelegatesWithBlock:(id /* block */)arg1;
- (void)_delegateAdded;
- (bool)_delegateExists;
- (bool)_deviceHasActiveSubscription;
- (void)_deviceMayBeReachable;
- (void)_invokeCommandWithEndpointID:(id)arg1 clusterID:(id)arg2 commandID:(id)arg3 commandFields:(id)arg4 expectedValues:(id)arg5 expectedValueInterval:(id)arg6 timedInvokeTimeout:(id)arg7 serverSideProcessingTimeout:(id)arg8 queue:(id)arg9 completion:(id /* block */)arg10;
- (void)_invokeKnownCommandWithEndpointID:(id)arg1 clusterID:(id)arg2 commandID:(id)arg3 commandPayload:(id)arg4 expectedValues:(id)arg5 expectedValueInterval:(id)arg6 timedInvokeTimeout:(id)arg7 serverSideProcessingTimeout:(id)arg8 responseClass:(Class)arg9 queue:(id)arg10 completion:(id /* block */)arg11;
- (bool)_iterateDelegatesWithBlock:(id /* block */)arg1;
- (bool)_lockAndCallDelegatesWithBlock:(id /* block */)arg1;
- (void)addDelegate:(id)arg1 queue:(id)arg2;
- (void)addDelegate:(id)arg1 queue:(id)arg2 interestedPathsForAttributes:(id)arg3 interestedPathsForEvents:(id)arg4;
- (id)asyncWorkQueue;
- (void)controllerResumed;
- (void)controllerSuspended;
- (void)dealloc;
- (bool)deviceCachePrimed;
- (id)deviceController;
- (void)downloadLogOfType:(long long)arg1 timeout:(double)arg2 queue:(id)arg3 completion:(id /* block */)arg4;
- (id)estimatedStartTime;
- (id)estimatedSubscriptionLatency;
- (id)getAllAttributesReport;
- (id)initForSubclassesWithNodeID:(id)arg1 controller:(id)arg2;
- (id)initWithNodeID:(id)arg1 controller:(id)arg2;
- (void)invalidate;
- (void)invokeCommandWithEndpointID:(id)arg1 clusterID:(id)arg2 commandID:(id)arg3 commandFields:(id)arg4 expectedValues:(id)arg5 expectedValueInterval:(id)arg6 queue:(id)arg7 completion:(id /* block */)arg8;
- (void)invokeCommandWithEndpointID:(id)arg1 clusterID:(id)arg2 commandID:(id)arg3 commandFields:(id)arg4 expectedValues:(id)arg5 expectedValueInterval:(id)arg6 timedInvokeTimeout:(id)arg7 clientQueue:(id)arg8 completion:(id /* block */)arg9;
- (void)invokeCommandWithEndpointID:(id)arg1 clusterID:(id)arg2 commandID:(id)arg3 commandFields:(id)arg4 expectedValues:(id)arg5 expectedValueInterval:(id)arg6 timedInvokeTimeout:(id)arg7 queue:(id)arg8 completion:(id /* block */)arg9;
- (id)nodeID;
- (void)openCommissioningWindowWithDiscriminator:(id)arg1 duration:(id)arg2 queue:(id)arg3 completion:(id /* block */)arg4;
- (void)openCommissioningWindowWithSetupPasscode:(id)arg1 discriminator:(id)arg2 duration:(id)arg3 queue:(id)arg4 completion:(id /* block */)arg5;
- (id)queue;
- (id)readAttributePaths:(id)arg1;
- (id)readAttributeWithEndpointID:(id)arg1 clusterID:(id)arg2 attributeID:(id)arg3 params:(id)arg4;
- (void)removeDelegate:(id)arg1;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (void)setQueue:(id)arg1;
- (unsigned long long)state;
- (void)writeAttributeWithEndpointID:(id)arg1 clusterID:(id)arg2 attributeID:(id)arg3 value:(id)arg4 expectedValueInterval:(id)arg5 timedWriteTimeout:(id)arg6;

// Image: /System/Library/PrivateFrameworks/HomeDataModel.framework/HomeDataModel

- (id)hdm_containingHome;
- (id)hdm_nodeID;
- (id)initForTestingWithClusterID:(id)arg1;
- (void)setHdm_containingHome:(id)arg1;

@end
