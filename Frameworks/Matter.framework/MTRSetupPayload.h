/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Matter.framework/Matter
 */

@interface MTRSetupPayload : NSObject <NSCopying, NSSecureCoding> {
    struct SetupPayload { 
        unsigned char version; 
        unsigned short vendorID; 
        unsigned short productID; 
        unsigned char commissioningFlow; 
        struct Optional<chip::BitFlags<chip::RendezvousInformationFlag, unsigned char>> { 
            bool mHasValue; 
            union Value { 
                struct BitFlags<chip::RendezvousInformationFlag, unsigned char> { 
                    unsigned char mValue; 
                } mData; 
            } mValue; 
        } rendezvousInformation; 
        struct SetupDiscriminator { 
            unsigned short mDiscriminator; 
            bool mIsShortDiscriminator; 
        } discriminator; 
        unsigned int setUpPINCode; 
        struct map<unsigned char, chip::OptionalQRCodeInfo, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfo>>> { 
            struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>>> { 
                void *__begin_node_; 
                struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, void *>>> { 
                    struct __tree_end_node<std::__tree_node_base<void *> *> { 
                        void *__left_; 
                    } __value_; 
                } __pair1_; 
                struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>> { 
                    unsigned long long __value_; 
                } __pair3_; 
            } __tree_; 
        } optionalVendorData; 
        struct map<unsigned char, chip::OptionalQRCodeInfoExtension, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfoExtension>>> { 
            struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>>> { 
                void *__begin_node_; 
                struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, void *>>> { 
                    struct __tree_end_node<std::__tree_node_base<void *> *> { 
                        void *__left_; 
                    } __value_; 
                } __pair1_; 
                struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>> { 
                    unsigned long long __value_; 
                } __pair3_; 
            } __tree_; 
        } optionalExtensionData; 
    }  _payload;
    NSNumber * _shadowDiscriminator;
}

@property (nonatomic) unsigned long long commissioningFlow;
@property (nonatomic) unsigned long long discoveryCapabilities;
@property (nonatomic, copy) NSNumber *discriminator;
@property (nonatomic) bool hasShortDiscriminator;
@property (nonatomic, copy) NSNumber *productID;
@property (nonatomic, copy) NSNumber *rendezvousInformation;
@property (nonatomic, copy) NSString *serialNumber;
@property (nonatomic, copy) NSNumber *setUpPINCode;
@property (nonatomic, copy) NSNumber *setupPasscode;
@property (nonatomic, readonly, copy) NSArray *vendorElements;
@property (nonatomic, copy) NSNumber *vendorID;
@property (nonatomic, copy) NSNumber *version;

// Image: /System/Library/Frameworks/Matter.framework/Matter

+ (unsigned long long)generateRandomPIN;
+ (id)generateRandomSetupPasscode;
+ (void)initialize;
+ (id)new;
+ (id)setupPayloadWithOnboardingPayload:(id)arg1 error:(id*)arg2;
+ (bool)supportsSecureCoding;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addOrReplaceVendorElement:(id)arg1;
- (unsigned long long)commissioningFlow;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (unsigned long long)discoveryCapabilities;
- (id)discriminator;
- (void)encodeWithCoder:(id)arg1;
- (id)getAllOptionalVendorData:(id*)arg1;
- (bool)hasShortDiscriminator;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithPayload:(id)arg1;
- (id)initWithSetupPasscode:(id)arg1 discriminator:(id)arg2;
- (bool)isEqual:(id)arg1;
- (id)manualEntryCode;
- (id)productID;
- (id)qrCodeString;
- (id)qrCodeString:(id*)arg1;
- (void)removeVendorElementWithTag:(id)arg1;
- (id)rendezvousInformation;
- (id)serialNumber;
- (void)setCommissioningFlow:(unsigned long long)arg1;
- (void)setDiscoveryCapabilities:(unsigned long long)arg1;
- (void)setDiscriminator:(id)arg1;
- (void)setHasShortDiscriminator:(bool)arg1;
- (void)setProductID:(id)arg1;
- (void)setRendezvousInformation:(id)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setSetUpPINCode:(id)arg1;
- (void)setSetupPasscode:(id)arg1;
- (id)setUpPINCode;
- (void)setVendorID:(id)arg1;
- (void)setVersion:(id)arg1;
- (id)setupPasscode;
- (id)vendorElementWithTag:(id)arg1;
- (id)vendorElements;
- (id)vendorID;
- (id)version;

// Image: /System/Library/PrivateFrameworks/HomeKitMatter.framework/HomeKitMatter

- (bool)isEqualAsOnboarding:(id)arg1;

@end
