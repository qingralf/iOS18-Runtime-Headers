/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MetalPerformanceShadersGraph.framework/MetalPerformanceShadersGraph
 */

@interface MPSGraphCompilationDescriptor : MPSGraphObject <NSCopying> {
    unsigned long long  _allowedComputeDevices;
    unsigned long long  _aneCompilerSpatialSplitting;
    NSDictionary * _callables;
    id /* block */  _compilationCompletionHandler;
    unsigned long long  _compilerOptions;
    MPSGraphExecutableConstantData * _constantData;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _enableANEFWToFWSignal;
    bool  _enableANELateLatch;
    bool  _enableMLIRDiagnostics;
    bool  _enableParallelEncode;
    bool  _enableShapeEquivalence;
    NSString * _entryFunctionName;
    unsigned long long  _maximumNumberOfParallelEncodingRegions;
    unsigned long long  _minimumNumberOfOpsInParallelRegion;
    unsigned long long  _optimizationLevel;
    unsigned long long  _optimizationProfile;
    unsigned long long  _preferredDevice;
    bool  _printANEPlacementAnalysis;
    bool  _waitForCompilationCompletion;
}

@property (nonatomic) unsigned long long allowedComputeDevices;
@property unsigned long long aneCompilerSpatialSplitting;
@property (retain) NSDictionary *callables;
@property (copy) id /* block */ compilationCompletionHandler;
@property unsigned long long compilerOptions;
@property (retain) MPSGraphExecutableConstantData *constantData;
@property (retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property bool enableANEFWToFWSignal;
@property bool enableANELateLatch;
@property (nonatomic) bool enableMLIRDiagnostics;
@property (nonatomic) bool enableParallelEncode;
@property (nonatomic) bool enableShapeEquivalence;
@property (retain) NSString *entryFunctionName;
@property unsigned long long maximumNumberOfParallelEncodingRegions;
@property unsigned long long minimumNumberOfOpsInParallelRegion;
@property (nonatomic) unsigned long long optimizationLevel;
@property (nonatomic) unsigned long long optimizationProfile;
@property (nonatomic) unsigned long long preferredDevice;
@property bool printANEPlacementAnalysis;
@property (nonatomic) bool waitForCompilationCompletion;

+ (id)descriptorWithDictionary:(id)arg1;

- (void).cxx_destruct;
- (unsigned long long)allowedComputeDevices;
- (unsigned long long)aneCompilerSpatialSplitting;
- (id)callables;
- (id /* block */)compilationCompletionHandler;
- (unsigned long long)compilerOptions;
- (id)constantData;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)disableGPUQuantOps;
- (void)disableTypeInference;
- (id)dispatchQueue;
- (bool)enableANEFWToFWSignal;
- (bool)enableANELateLatch;
- (void)enableDevicePlacement;
- (void)enableFileBackedConstants;
- (void)enableGPUQuantOps;
- (bool)enableMLIRDiagnostics;
- (bool)enableParallelEncode;
- (bool)enableShapeEquivalence;
- (id)entryFunctionName;
- (struct vector<mlir::NamedAttribute, std::allocator<mlir::NamedAttribute>> { struct NamedAttribute {} *x1; struct NamedAttribute {} *x2; struct __compressed_pair<mlir::NamedAttribute *, std::allocator<mlir::NamedAttribute>> { struct NamedAttribute {} *x_3_1_1; } x3; })getNamedAttrArray:(void*)arg1 device:(id)arg2;
- (unsigned long long)hash;
- (id)init;
- (bool)isEqual:(id)arg1;
- (bool)isEqualForModuleTo:(id)arg1;
- (bool)isEqualTo:(id)arg1;
- (unsigned long long)maximumNumberOfParallelEncodingRegions;
- (unsigned long long)minimumNumberOfOpsInParallelRegion;
- (unsigned long long)optimizationLevel;
- (unsigned long long)optimizationProfile;
- (unsigned long long)preferredDevice;
- (bool)printANEPlacementAnalysis;
- (void)setAllowedComputeDevices:(unsigned long long)arg1;
- (void)setAneCompilerSpatialSplitting:(unsigned long long)arg1;
- (void)setCallables:(id)arg1;
- (void)setCompilationCompletionHandler:(id /* block */)arg1;
- (void)setCompilerOptions:(unsigned long long)arg1;
- (void)setConstantData:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setEnableANEFWToFWSignal:(bool)arg1;
- (void)setEnableANELateLatch:(bool)arg1;
- (void)setEnableMLIRDiagnostics:(bool)arg1;
- (void)setEnableParallelEncode:(bool)arg1;
- (void)setEnableShapeEquivalence:(bool)arg1;
- (void)setEntryFunctionName:(id)arg1;
- (void)setMaximumNumberOfParallelEncodingRegions:(unsigned long long)arg1;
- (void)setMinimumNumberOfOpsInParallelRegion:(unsigned long long)arg1;
- (void)setOptimizationLevel:(unsigned long long)arg1;
- (void)setOptimizationProfile:(unsigned long long)arg1;
- (void)setPreferredDevice:(unsigned long long)arg1;
- (void)setPrintANEPlacementAnalysis:(bool)arg1;
- (void)setWaitForCompilationCompletion:(bool)arg1;
- (id)toDictionary;
- (bool)waitForCompilationCompletion;

@end
