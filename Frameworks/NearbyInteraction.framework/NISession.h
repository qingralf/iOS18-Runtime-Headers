/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/NearbyInteraction.framework/NearbyInteraction
 */

@interface NISession : NSObject <ARInternalSessionObserver, UWBSessionDelegateProxyProtocol> {
    NSDictionary * _activationResponse;
    NIAcwgEventNotifier * _acwgEventNotifier;
    NICarKeyEventNotifier * _carKeyEventNotifier;
    NIServerConnection * _connection;
    unsigned long long  _connectionOptions;
    NIConfiguration * _currentConfiguration;
    <NISessionDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    NIDevicePresenceNotifier * _devicePresenceNotifier;
    NIDiscoveryToken * _discoveryToken;
    NSObject<OS_dispatch_semaphore> * _discoveryTokenSemaphore;
    double  _duration;
    NIExportedObjectForwarder * _exportedObjectForwarder;
    NIFindingNotifier * _findingNotifier;
    <NIInternalSessionDelegate> * _internalDelegate;
    NSUUID * _internalID;
    int  _internalState;
    struct vector<UWBSessionInterruptionBookkeeping, std::allocator<UWBSessionInterruptionBookkeeping>> { 
        struct UWBSessionInterruptionBookkeeping {} *__begin_; 
        struct UWBSessionInterruptionBookkeeping {} *__end_; 
        struct __compressed_pair<UWBSessionInterruptionBookkeeping *, std::allocator<UWBSessionInterruptionBookkeeping>> { 
            struct UWBSessionInterruptionBookkeeping {} *__value_; 
        } __end_cap_; 
    }  _interruptions;
    NSError * _invalidationError;
    struct atomic<bool> { 
        struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { 
            _Atomic bool __a_value; 
        } __a_; 
    }  _isObserverSession;
    NSDate * _lastObjectUpdateLogTime;
    NSObject<OS_os_log> * _log;
    long long  _motionState;
    struct NearbyObjectUpdateLogging { 
        int totalUpdates; 
        int totalObjects; 
        int objectsWithDistance; 
        int objectsWithHorizontalAngle; 
        float firstDistance; 
        float lastDistance; 
        float minDistance; 
        float maxDistance; 
        float firstHorizontalAngleRad; 
        float lastHorizontalAngleRad; 
    }  _objectUpdateLogging;
    NSObject<OS_dispatch_queue> * _queue;
    struct atomic<bool> { 
        struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { 
            _Atomic bool __a_value; 
        } __a_; 
    }  _readyForCallbacks;
    double  _startTime;
    NISystemEventNotifier * _systemEventNotifier;
    bool  _updatedNearbyObjects;
    NISessionVisionContext * _visionContext;
}

@property (retain) NSDictionary *activationResponse;
@property (readonly) NIAcwgEventNotifier *acwgEventNotifier;
@property (readonly) NICarKeyEventNotifier *carKeyEventNotifier;
@property (nonatomic, readonly, copy) NIConfiguration *configuration;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <NISessionDelegate> *delegate;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly, copy) NSString *description;
@property (readonly) NIDevicePresenceNotifier *devicePresenceNotifier;
@property (nonatomic, readonly, copy) NIDiscoveryToken *discoveryToken;
@property (getter=isExtendedDistanceMeasurementAllowed, readonly) bool extendedDistanceMeasurementAllowed;
@property (readonly) NIFindingNotifier *findingNotifier;
@property (readonly) unsigned long long hash;
@property <NIInternalSessionDelegate> *internalDelegate;
@property int internalState;
@property (retain) NSError *invalidationError;
@property (readonly) long long motionState;
@property (getter=isPreciseRangingAllowed, readonly) bool preciseRangingAllowed;
@property (getter=isRangingLimitExceeded, readonly) bool rangingLimitExceeded;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NISystemEventNotifier *systemEventNotifier;

+ (id)_localDeviceLogger;
+ (void)_queryAndCacheCapabilities;
+ (bool)_supportedPlatform:(id)arg1;
+ (id)activelyInteractingDiscoveryTokens;
+ (id)cachedPlatformCapabilities;
+ (id)deviceCapabilities;
+ (id)generateBluetoothDeviceTokenWithPublicAddress:(id)arg1 IRK:(id)arg2;
+ (id)generateFindingDiscoveryToken;
+ (id)generateFindingDiscoveryTokenWithIdentityResolvingKey:(id)arg1;
+ (id)generateFindingDiscoveryTokenWithSharedSecret:(id)arg1;
+ (void)getAsyncActivelyInteractingDiscoveryTokens:(id /* block */)arg1;
+ (void)getAsyncInteractableDiscoveryTokens:(id /* block */)arg1;
+ (id)interactableDiscoveryTokens;
+ (id)internalDeviceCapabilities;
+ (bool)isSupported;
+ (id)localDevicePrintableState;
+ (id)observerSession;
+ (void)setAsyncLocalDeviceInteractableDiscoveryTokens:(id)arg1 completion:(id /* block */)arg2;
+ (void)setCachedPlatformCapabilities:(id)arg1;
+ (id)setLocalDeviceCanInteract:(bool)arg1 withDiscoveryTokens:(id)arg2;
+ (id)setLocalDeviceDebugParameters:(id)arg1;
+ (id)setLocalDeviceInteractableDiscoveryTokens:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_addObject:(id)arg1;
- (void)_addRegionPredicate:(id)arg1;
- (void)_configureAndRunInternalARSession;
- (id)_getSessionFailureError;
- (void)_handleARSession:(id)arg1 willRunWithConfiguration:(id)arg2;
- (void)_handleARSessionDidChangeState:(unsigned long long)arg1;
- (void)_handleARSessionDidFailWithError:(id)arg1;
- (void)_handleARSessionDidUpdateFrame:(id)arg1;
- (void)_handleARSessionInterruptionEnded;
- (void)_handleARSessionWasInterrupted;
- (void)_handleActivationError:(id)arg1;
- (void)_handleActivationSuccess:(id)arg1;
- (void)_handlePauseSessionError:(id)arg1;
- (void)_handlePauseSessionSuccess;
- (void)_handleRunSessionError:(id)arg1;
- (void)_handleRunSessionSuccess;
- (id)_initAndConnectToServerWithOptions:(unsigned long long)arg1;
- (void)_interruptSessionWithInternalReason:(long long)arg1 cachedInterruption:(bool)arg2;
- (void)_invalidateInternal;
- (void)_invalidateInternalARSessionIfNeeded;
- (void)_invalidateSessionAndNotifyError:(id)arg1;
- (bool)_isInternalClient;
- (bool)_isValidARSession:(id)arg1 andConfiguration:(id)arg2;
- (void)_logDurationAndSubmit:(bool)arg1;
- (void)_logTime;
- (void)_notifyDidInvalidateWithError:(id)arg1;
- (void)_osLogNearbyObjectUpdate:(id)arg1;
- (void)_pauseInternalARSessionIfNeeded;
- (void)_performBlockOnDelegateQueue:(id /* block */)arg1 ifRespondsToSelector:(SEL)arg2;
- (void)_performBlockOnDelegateQueue:(id /* block */)arg1 ifRespondsToSelector:(SEL)arg2 evenIfNotRunning:(bool)arg3;
- (void)_processUpdatedLockState:(unsigned short)arg1;
- (void)_provideTruthTag:(id)arg1;
- (void)_reinterruptSessionWithCachedInterruption;
- (id)_remoteObject;
- (void)_removeObject:(id)arg1;
- (void)_removeRegionPredicate:(id)arg1;
- (void)_serverConnectionInterrupted;
- (void)_serverConnectionInvalidated;
- (void)_setARSessionInternal:(id)arg1;
- (id)_setDebugURSK:(id)arg1 transactionIdentifier:(unsigned int)arg2;
- (id)_setURSKTTL:(unsigned long long)arg1;
- (void)_submitErrorMetric:(id)arg1;
- (id)_synchronousRemoteObject;
- (id)_verifyError:(id)arg1;
- (id)activationResponse;
- (id)acwgEventNotifier;
- (id)carKeyEventNotifier;
- (id)configuration;
- (void)dealloc;
- (id)delegate;
- (id)delegateQueue;
- (id)deleteURSKs;
- (id)description;
- (id)devicePresenceNotifier;
- (void)didDiscoverNearbyObject:(id)arg1;
- (void)didGenerateShareableConfigurationData:(id)arg1 forObject:(id)arg2;
- (void)didPrefetchAcwgUrsk:(unsigned int)arg1 error:(id)arg2;
- (void)didProcessAcwgM1MsgWithResponse:(id)arg1 error:(id)arg2;
- (void)didProcessAcwgM3MsgWithResponse:(id)arg1 error:(id)arg2;
- (void)didProcessAcwgRangingSessionResumeRequestMsgWithResponse:(id)arg1 error:(id)arg2;
- (void)didReceiveRangingAuthRecommendation:(bool)arg1 forObject:(id)arg2;
- (void)didRemoveNearbyObjects:(id)arg1 withReason:(unsigned long long)arg2;
- (void)didStartAcwgRanging:(long long)arg1;
- (void)didSuspendAcwgRanging:(long long)arg1;
- (void)didUpdateAlgorithmState:(id)arg1 forObject:(id)arg2;
- (void)didUpdateHealthStatus:(long long)arg1;
- (void)didUpdateHomeDeviceUWBRangingAvailability:(bool)arg1;
- (void)didUpdateLocalDiscoveryToken:(id)arg1;
- (void)didUpdateMotionState:(long long)arg1;
- (void)didUpdateNearbyObjects:(id)arg1;
- (id)discoveryToken;
- (id)findingNotifier;
- (id)getInternalConnectionQueue;
- (id)getInternalIdentifier;
- (id)getInternalLogObject;
- (unsigned long long)hash;
- (id)init;
- (id)internalDelegate;
- (int)internalState;
- (void)invalidate;
- (id)invalidationError;
- (bool)isEqual:(id)arg1;
- (bool)isExtendedDistanceMeasurementAllowed;
- (bool)isPreciseRangingAllowed;
- (bool)isRangingLimitExceeded;
- (double)lightEstimateFromARLightEstimate:(id)arg1;
- (long long)motionState;
- (long long)niVisionInputTrackingStateFromARTRackingState:(long long)arg1;
- (void)object:(id)arg1 didUpdateRegion:(id)arg2 previousRegion:(id)arg3;
- (void)pause;
- (void)prefetchAcwgUrsk:(unsigned int)arg1;
- (void)processAcwgM1Msg:(id)arg1 withSessionTriggerReason:(long long)arg2;
- (void)processAcwgM3Msg:(id)arg1;
- (void)processAcwgRangingSessionResumeRequestMsg:(unsigned int)arg1 withResumeTriggerReason:(long long)arg2;
- (void)processBluetoothEventWithType:(long long)arg1 btcClockTicks:(unsigned long long)arg2;
- (void)processBluetoothEventWithType:(long long)arg1 btcClockTicks:(unsigned long long)arg2 eventCounter:(unsigned long long)arg3;
- (void)processBluetoothHostTimeSyncWithType:(long long)arg1 btcClockTicks:(unsigned long long)arg2 eventCounter:(unsigned long long)arg3;
- (void)processDCKMessage:(id)arg1 responseCallback:(id /* block */)arg2;
- (void)processVisionInput:(id)arg1;
- (void)relayDCKMessage:(id)arg1;
- (void)requestAcwgRangingSessionSuspend:(unsigned int)arg1 withSuspendTriggerReason:(long long)arg2;
- (void)runWithConfiguration:(id)arg1;
- (void)session:(id)arg1 didChangeState:(unsigned long long)arg2;
- (void)session:(id)arg1 didFailWithError:(id)arg2;
- (void)session:(id)arg1 didUpdateExternalAnchors:(id)arg2;
- (void)session:(id)arg1 didUpdateFrame:(id)arg2;
- (void)session:(id)arg1 willRunWithConfiguration:(id)arg2;
- (void)sessionInterruptionEnded:(id)arg1;
- (void)sessionShouldAttemptRelocalization:(id)arg1 completion:(id /* block */)arg2;
- (void)sessionWasInterrupted:(id)arg1;
- (void)setARSession:(id)arg1;
- (void)setActivationResponse:(id)arg1;
- (void)setConfigurationForTesting:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)setInternalDelegate:(id)arg1;
- (void)setInternalState:(int)arg1;
- (void)setInvalidationError:(id)arg1;
- (void)suspendAcwgRanging:(unsigned int)arg1 withSuspendTriggerReason:(long long)arg2;
- (void)systemDidUpdateResourceUsageLimitExceeded:(bool)arg1 forSessionConfigurationTypeWithName:(id)arg2;
- (void)systemDidUpdateState:(id)arg1;
- (id)systemEventNotifier;
- (void)updateResponderDeviceIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)uwbSessionDidFailWithError:(id)arg1;
- (void)uwbSessionDidInvalidateWithError:(id)arg1;
- (void)uwbSessionInterruptedWithReason:(long long)arg1 timestamp:(double)arg2;
- (void)uwbSessionInterruptionReasonEnded:(long long)arg1 timestamp:(double)arg2;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })worldTransformForObject:(id)arg1;

@end
