/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
 */

@interface NEFilterSocketFlow : NEFilterFlow <NSCopying, NSSecureCoding> {
    NSUUID * _euuid;
    long long  _generateIdentifierOnce;
    NSObject<OS_nw_endpoint> * _localFlowEndpoint;
    NSObject<OS_nw_endpoint> * _remoteFlowEndpoint;
    NSString * _remoteHostname;
    NSUUID * _ruuid;
    int  _socketFamily;
    unsigned long long  _socketID;
    int  _socketProtocol;
    int  _socketType;
    NSUUID * _socketUUID;
    NSUUID * _uuid;
}

@property (nonatomic, copy) NSUUID *euuid;
@property (readonly) NWEndpoint *localEndpoint;
@property (copy) NSObject<OS_nw_endpoint> *localFlowEndpoint;
@property (readonly) NWEndpoint *remoteEndpoint;
@property (copy) NSObject<OS_nw_endpoint> *remoteFlowEndpoint;
@property (copy) NSString *remoteHostname;
@property (nonatomic, copy) NSUUID *ruuid;
@property int socketFamily;
@property int socketProtocol;
@property int socketType;
@property (nonatomic, copy) NSUUID *uuid;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)createDataCompleteReply:(id)arg1 controlSocket:(int)arg2 direction:(long long)arg3 verdict:(id)arg4 context:(id)arg5;
- (bool)createDataReply:(id)arg1 controlSocket:(int)arg2 direction:(long long)arg3 verdict:(id)arg4 context:(id)arg5;
- (bool)createNewFlowReply:(id)arg1 controlSocket:(int)arg2 verdict:(id)arg3 context:(id)arg4;
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)euuid;
- (id)identifier;
- (id)identifierString;
- (id)initWithCoder:(id)arg1;
- (id)localEndpoint;
- (id)localFlowEndpoint;
- (id)remoteEndpoint;
- (id)remoteFlowEndpoint;
- (id)remoteHostname;
- (id)ruuid;
- (void)setEuuid:(id)arg1;
- (void)setLocalFlowEndpoint:(id)arg1;
- (void)setRemoteFlowEndpoint:(id)arg1;
- (void)setRemoteHostname:(id)arg1;
- (void)setRuuid:(id)arg1;
- (void)setSocketFamily:(int)arg1;
- (void)setSocketProtocol:(int)arg1;
- (void)setSocketType:(int)arg1;
- (void)setUuid:(id)arg1;
- (int)socketFamily;
- (int)socketProtocol;
- (int)socketType;
- (id)uuid;

@end
