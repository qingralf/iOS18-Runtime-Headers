/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PencilKit.framework/PencilKit
 */

@interface PKAveragePointGenerator : NSObject {
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _altitude;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _aspectRatio;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _azimuth;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _directionAngle;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _edgeWidth;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _force;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _length;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _locationX;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _locationY;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _opacity;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _radius;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _radius2;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _rollAngle;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _timestamp;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _velocity;
    struct PKRunningStat { 
        bool isAngle; 
        long long numValues; 
        long long numValuesOverLimit; 
        double oldM; 
        double newM; 
        double oldS; 
        double newS; 
        double minValue; 
        double maxValue; 
        double limit; 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _zPosition;
}

- (id).cxx_construct;
- (id)init;

@end
