/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PencilKit.framework/PencilKit
 */

@interface PKMathRecognitionViewController : NSObject <PKCalculateScrubberControllerDelegate, PKHoverControllerDelegate, PKMathContextMenuControllerDelegate, PKMathRecognitionControllerDelegate, PKOverlayDrawingControllerDelegate, UIEditMenuInteractionDelegate, UIPopoverPresentationControllerDelegate> {
    PKToolPicker * _activeToolPickerForPresentedViewController;
    NSUUID * _addGraphItemUUID;
    UIEditMenuInteraction * _alternativedEditMenuInteraction;
    double  _canvasWidth;
    PKMathContextMenuController * _contextMenuController;
    PKMathRecognitionController * _controller;
    NSMutableDictionary * _currentMathItemsLookup;
    PKMathRecognitionToken * _currentMenuToken;
    NSMutableDictionary * _currentResultsAttributionLookup;
    NSMutableDictionary * _currentResultsDrawings;
    NSMutableDictionary * _currentResultsLookup;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _currentViewBounds;
    <PKMathRecognitionViewControllerDelegate> * _delegate;
    struct { 
        unsigned int delegateSupportsUpdateFrameForContainer : 1; 
        unsigned int delegateSupportsExpressionIdentifiersForExistingGraphNearLocation : 1; 
        unsigned int delegateSupportsExpressionIdentifiersForCompatibleGraphNearLocation : 1; 
        unsigned int delegateSupportsAddGraphForExpression : 1; 
        unsigned int delegateSupportsLatestEndOfStrokeTimestamp : 1; 
        unsigned int delegateSupportsCoordinateSpaceForDrawing : 1; 
        unsigned int delegateSupportsSetHiddenStrokes : 1; 
        unsigned int delegateSupportsReplaceStrokesWithStrokes : 1; 
        unsigned int delegateSupportsUpdatedResult : 1; 
        unsigned int delegateSupportsCreateScrubberController : 1; 
        unsigned int delegateSupportsCreateTypesetViewController : 1; 
        unsigned int delegateSupportsCreateTypesetImage : 1; 
        unsigned int delegateSupportsCreateTypesetImageFromUUID : 1; 
        unsigned int delegateSupportsSetShouldSolve : 1; 
        unsigned int delegateSupportsSetShouldSolveUndoable : 1; 
        unsigned int delegateSupportsAnySetShouldSolve : 1; 
        unsigned int delegateSupportsSelectStrokes : 1; 
        unsigned int delegateSupportsTimestampForLatestUserInteraction : 1; 
        unsigned int delegateSupportsWillPresentPopoverUI : 1; 
        unsigned int delegateSupportsDidDismissPopoverUI : 1; 
        unsigned int delegateSupportsResultForLocale : 1; 
    }  _delegateFlags;
    bool  _disableAlternatives;
    bool  _disableErrors;
    NSMutableSet * _expressionsWeCreatedGraphsFor;
    NSMutableSet * _expressionsWithActiveAnimations;
    PKHoverController * _hoverController;
    PKLiveMathVariable * _liveVariable;
    UIView * _mathFloatingLabelView;
    bool  _menuIsVisible;
    PKOverlayDrawingController * _overlayDrawingController;
    UIView * _parentView;
    NSUUID * _popoverHintItemUUID;
    <PKCalculateScrubberController> * _scrubberController;
    bool  _shouldAutohideScrubber;
    bool  _shouldCacheDrawingForResults;
    NSUUID * _solveItemUUID;
    NSString * _solveResult;
    long long  _solvingStyle;
    UIViewController * _typesetViewController;
    NSUUID * _uuidForLatestLiveVariableExpression;
    UIViewController * _viewControllerForPresentingUI;
}

@property (nonatomic) double canvasWidth;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool shouldCacheDrawingForResults;
@property (nonatomic) long long solvingStyle;
@property (readonly) Class superclass;
@property (nonatomic) UIViewController *viewControllerForPresentingUI;

- (void).cxx_destruct;
- (void)_updateDrawingOverlayCache;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (id)adjustedSelectedStrokes:(id)arg1 selectionPath:(id)arg2;
- (double)canvasWidth;
- (void)contextMenuController:(id)arg1 addGraphForItemUUID:(id)arg2 addToExisting:(bool)arg3 graphableVariable:(id)arg4;
- (void)contextMenuController:(id)arg1 dismissErrorForItem:(id)arg2 token:(id)arg3;
- (id)contextMenuController:(id)arg1 imageForItemUUID:(id)arg2;
- (void)contextMenuController:(id)arg1 removeResultForItemUUID:(id)arg2;
- (id)contextMenuController:(id)arg1 resultAttributionForItemUUID:(id)arg2;
- (id)contextMenuController:(id)arg1 resultDrawingForItemUUID:(id)arg2;
- (id)contextMenuController:(id)arg1 resultForItemUUID:(id)arg2;
- (void)contextMenuController:(id)arg1 solveItemUUID:(id)arg2;
- (void)contextMenuControllerDidFinish:(id)arg1;
- (id)contextMenuControllerDrawing:(id)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })contextMenuControllerDrawingTransform:(id)arg1;
- (void)dealloc;
- (void)didBeginDrawing;
- (void)didEraseStrokes:(id)arg1;
- (void)dismissPopovers;
- (id)editMenuInteraction:(id)arg1 menuForConfiguration:(id)arg2 suggestedActions:(id)arg3;
- (void)editMenuInteraction:(id)arg1 willDismissMenuForConfiguration:(id)arg2 animator:(id)arg3;
- (void)editMenuInteraction:(id)arg1 willPresentMenuForConfiguration:(id)arg2 animator:(id)arg3;
- (void)eraserMovedToLocation:(struct CGPoint { double x1; double x2; })arg1;
- (bool)handleSingleTapAtDrawingLocation:(struct CGPoint { double x1; double x2; })arg1;
- (bool)handleSingleTapAtDrawingLocation:(struct CGPoint { double x1; double x2; })arg1 fromTapStroke:(bool)arg2;
- (void)hideMathFloatingLabelView;
- (void)hideScrubber;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1;
- (void)hoverController:(id)arg1 holdGestureMeanInputPoint:(struct { union { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; bool x9; long long x10; double x11; bool x12; double x13; long long x14; long long x15; })arg2 latestInputPoint:(struct { union { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; bool x9; long long x10; double x11; bool x12; double x13; long long x14; long long x15; })arg3;
- (id)initWithController:(id)arg1 view:(id)arg2 delegate:(id)arg3;
- (void)layoutSubviews;
- (void)mathRecognitionController:(id)arg1 didEraseStrokesInExpressions:(id)arg2;
- (void)mathRecognitionController:(id)arg1 didUpdateExpressions:(id)arg2 newItems:(id)arg3 removedItems:(id)arg4 mathItems:(id)arg5;
- (void)mathRecognitionController:(id)arg1 solveStateChangedForExpressions:(id)arg2 mathItems:(id)arg3;
- (double)mathRecognitionControllerTimestampForLatestUserInteraction:(id)arg1;
- (void)mathResult:(id)arg1 itemUUID:(id)arg2;
- (void)mathResultAttributionImage:(id)arg1 darkModeImage:(id)arg2 string:(id)arg3 date:(id)arg4 itemUUID:(id)arg5;
- (void)openPopoverForAddingGraph;
- (void)openPopoverForHint;
- (void)overlayController:(id)arg1 imageViewForStrokes:(id)arg2 completion:(id /* block */)arg3;
- (void)overlayController:(id)arg1 willUpdateView:(id)arg2 animationDuration:(double)arg3;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })overlayControllerDrawingTransform:(id)arg1;
- (id)overlayViews;
- (void)presentationControllerDidDismiss:(id)arg1;
- (void)redrawSubviews;
- (void)regenerateResultsIfNecessary;
- (void)registerRecentlyCreatedLocalStroke:(id)arg1;
- (void)removedFromView;
- (id)resultViewForItemUUID:(id)arg1;
- (void)scrubberController:(id)arg1 valueDidChange:(id)arg2;
- (void)scrubberControllerDidDismiss:(id)arg1;
- (void)setCanvasWidth:(double)arg1;
- (void)setShouldCacheDrawingForResults:(bool)arg1;
- (void)setSolvingStyle:(long long)arg1;
- (void)setTokens:(id)arg1 forItem:(id)arg2;
- (void)setTokens:(id)arg1 forItemUUID:(id)arg2 graphable:(bool)arg3;
- (void)setTokens:(id)arg1 forItemUUID:(id)arg2 graphable:(bool)arg3 graphableVariables:(id)arg4;
- (void)setViewControllerForPresentingUI:(id)arg1;
- (bool)shouldCacheDrawingForResults;
- (long long)solvingStyle;
- (id)viewControllerForPresentingUI;

@end
