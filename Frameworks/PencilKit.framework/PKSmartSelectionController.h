/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PencilKit.framework/PencilKit
 */

@interface PKSmartSelectionController : NSObject <PKSelectionInteractionDelegate, PKStrokeSpatialCacheDelegate> {
    <PKAttachment> * _currentAttachment;
    long long  _currentTapCount;
    <PKSmartSelectionControllerDelegate> * _delegate;
    UIGestureRecognizer * _gestureRecognizer;
    struct CGPoint { 
        double x; 
        double y; 
    }  _lastTapLocation;
    double  _lastTapTimestamp;
    PKRecognitionController * _recognitionController;
    PKSelectionController * _selectionController;
    PKRecognitionSessionManager * _sessionManager;
    PKTiledView * _tiledView;
    NSMutableDictionary * _uuidToStrokeSpatialCacheDict;
}

@property (nonatomic, readonly) <PKAttachment> *currentAttachment;
@property (nonatomic, readonly) PKDrawing *currentDrawing;
@property (nonatomic, readonly, copy) NSArray *currentSelectedStrokes;
@property (nonatomic, readonly) long long currentSelectionType;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PKRecognitionController *recognitionController;
@property (nonatomic, readonly) UIView *selectionView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)canCopyAsText;
- (bool)canTranslate;
- (void)clearSelectionIfNecessaryWithCompletion:(id /* block */)arg1;
- (long long)contentTypeForIntersectedStrokes:(id)arg1;
- (void)copyAsText:(id)arg1;
- (id)currentAttachment;
- (id)currentDrawing;
- (id)currentSelectedStrokes;
- (long long)currentSelectionType;
- (void)dealloc;
- (void)didFinishCalculatingVisibleOnscreenStrokes:(id)arg1 drawing:(id)arg2;
- (void)fetchIntersectedStrokesAtPoint:(struct CGPoint { double x1; double x2; })arg1 selectionType:(long long)arg2 inputType:(long long)arg3 visibleOnscreenStrokes:(id)arg4 completion:(id /* block */)arg5;
- (void)fetchIntersectedStrokesBetweenTopPoint:(struct CGPoint { double x1; double x2; })arg1 bottomPoint:(struct CGPoint { double x1; double x2; })arg2 liveScrollOffset:(struct CGPoint { double x1; double x2; })arg3 completion:(id /* block */)arg4;
- (id)firstStrokesInSelectedStrokes:(id)arg1 isRTL:(bool)arg2;
- (void)handleDoubleTapInputAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)handleDoubleTapInputAtPoint:(struct CGPoint { double x1; double x2; })arg1 inSelectionView:(id)arg2;
- (void)handleTapInputAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)initWithDelegate:(id)arg1 canvasView:(id)arg2 drawing:(id)arg3 gestureRecognizer:(id)arg4;
- (void)installSelectionViewForCurrentSelection;
- (id)interaction;
- (void)invalidateCacheForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inDrawing:(id)arg2;
- (id)lastStrokesInSelectedStrokes:(id)arg1 isRTL:(bool)arg2;
- (id)recognitionController;
- (void)selectStrokes:(id)arg1 forSelectionType:(long long)arg2 inDrawing:(id)arg3;
- (void)selectStrokesWithoutDidSelectStrokesUpdate:(id)arg1 inDrawing:(id)arg2;
- (void)selectionInteraction:(id)arg1 didSelectStrokes:(id)arg2 selectionType:(long long)arg3 inAttachment:(id)arg4;
- (bool)selectionInteraction:(id)arg1 handleTapOnCanvasAtLocation:(struct CGPoint { double x1; double x2; })arg2 inAttachment:(id)arg3;
- (long long)selectionTypeForTapCount:(long long)arg1;
- (id)selectionView;
- (void)setExternalAttachment:(id)arg1;
- (void)straighten:(id)arg1 completion:(id /* block */)arg2;
- (id)strokeSpatialCacheForAttachment:(id)arg1;
- (void)translate:(id)arg1;
- (void)updateGestureHistoryWithLocation:(struct CGPoint { double x1; double x2; })arg1 gesture:(id)arg2;

@end
