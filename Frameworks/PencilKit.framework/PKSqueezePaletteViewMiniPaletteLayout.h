/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PencilKit.framework/PencilKit
 */

@interface PKSqueezePaletteViewMiniPaletteLayout : NSObject <PKSqueezePaletteDrawingToolDelegate, PKSqueezePaletteViewExpandedToolsLayoutDelegate, PKSqueezePaletteViewLayout, PKSqueezePaletteViewUndoRedoLayoutDelegate, UIGestureRecognizerDelegate> {
    double  _afterToolSpace;
    double  _beforeToolSpace;
    struct CGSize { 
        double width; 
        double height; 
    }  _buttonSize;
    PKSqueezePaletteClipIndicatorView * _clipIndicatorView;
    bool  _clipIndicatorViewVisible;
    NSArray * _drawingTools;
    double  _endPanGestureAngleOnArc;
    unsigned long long  _eraserToolIndex;
    double  _initialMoreButtonAngle;
    double  _initialMulticolorButtonAngle;
    double  _initialRedoButtonAngle;
    double  _initialToolsContentClippingIndicatorAngle;
    double  _initialUndoButtonAngle;
    double  _interButtonSpace;
    double  _interToolSpace;
    UIButton * _moreButton;
    double  _moreButtonAngle;
    NSLayoutConstraint * _moreButtonCenterXConstraint;
    NSLayoutConstraint * _moreButtonCenterYConstraint;
    PKSqueezePaletteMulticolorSwatchButton * _multicolorButton;
    double  _multicolorButtonAngle;
    NSLayoutConstraint * _multicolorButtonCenterXConstraint;
    NSLayoutConstraint * _multicolorButtonCenterYConstraint;
    PKSqueezePaletteView * _paletteView;
    UIPanGestureRecognizer * _panGestureRecognizer;
    UIButton * _redoButton;
    unsigned long long  _selectedToolIndex;
    double  _startAngle;
    double  _startPanGestureAngleOnArc;
    struct CGPoint { 
        double x; 
        double y; 
    }  _startPanGestureLocation;
    PKSqueezePaletteViewSwitchToEraserAction * _switchToEraserAction;
    PKFloatArray * _toolAngles;
    PKFloatArray * _toolAnglesBeforePanning;
    NSArray * _toolCenterXConstraints;
    NSArray * _toolCenterYConstraints;
    double  _toolWidth;
    double  _toolsContentClippingIndicatorAngle;
    CAShapeLayer * _toolsContentClippingShapeMask;
    PKViewWithHitTestHandler * _toolsContentView;
    UIButton * _undoButton;
    PKSqueezePaletteViewUndoRedoLayout * _undoRedoLayout;
    unsigned long long  _visibleToolsCount;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) PKSqueezePaletteView *paletteView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_didTapDrawingTool:(id)arg1;
- (void)_didTapMoreButton:(id)arg1;
- (void)_didTapMulticolorButton:(id)arg1;
- (void)_handlePanGesture:(id)arg1;
- (void)colorUserInterfaceStyleDidChange;
- (bool)expandedToolsLayout:(id)arg1 canSelectTool:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)expandedToolsLayout:(id)arg1 didChangeDrawingTools:(id)arg2;
- (void)expandedToolsLayout:(id)arg1 didChangeSelectedToolIndex:(unsigned long long)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)handlePencilInteractionDidTap:(long long)arg1;
- (id)paletteView;
- (void)setPaletteView:(id)arg1;
- (void)setupUI;
- (double)toolAngle:(id)arg1;
- (double)undoRedoLayoutStartAngle:(id)arg1;
- (void)updateUI;
- (void)willTransitionToLayout:(id)arg1;

@end
