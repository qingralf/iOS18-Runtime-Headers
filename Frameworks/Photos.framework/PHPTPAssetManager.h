/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHPTPAssetManager : NSObject <PFCameraViewfinderSessionWatcherDelegate, PHPhotoLibraryAvailabilityObserver, PHPhotoLibraryChangeObserver> {
    NSObject<OS_dispatch_group> * _analyticsAsyncDataGroup;
    PHPTPAnalyticsData * _analyticsData;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _analyticsDataLock;
    PFCameraViewfinderSessionWatcher * _cameraWatcher;
    bool  _canDeleteAssets;
    unsigned long long  _countOfAssets;
    <PHPTPDelegate> * _delegate;
    NSFileManager * _fileManager;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _finalizationRequestLock;
    NSMutableArray * _finalizationRequestLock_deferredAssets;
    NSMutableArray * _finalizationRequestLock_inflightAssetsRequiringFinalization;
    PLLazyObject * _finalizationRequestLock_requestInflight;
    PHPTPFormatConversionManager * _formatConversionManager;
    long long  _libraryAvailabilityStatus;
    PHPhotoLibrary * _photoLibrary;
    bool  _provideDiagnosticFile;
    bool  _sortAscending;
    PHFetchResult * _vendedAssetsFetchResult;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _vendedAssetsLock;
}

@property (nonatomic, readonly) bool canDeleteAssets;
@property (nonatomic, readonly) unsigned long long countOfAssets;
@property (nonatomic, readonly) long long cplStorageState;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <PHPTPDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long libraryAvailabilityStatus;
@property (nonatomic, retain) PFMediaCapabilities *peerMediaCapabilities;
@property (nonatomic, readonly) PHPhotoLibrary *photoLibrary;
@property (readonly) Class superclass;

+ (bool)_isPrimaryAssetResourceType:(long long)arg1;
+ (bool)_shouldIncludeDiagnosticFile;

- (void).cxx_destruct;
- (void)_addAssetsNeedingFinalization:(id)arg1;
- (id)_assetTypeTranscodeLabelForType:(long long)arg1;
- (id)_createDiagnosticPTPAssetFromAsset:(id)arg1 primaryPTPAsset:(id)arg2;
- (id)_createPTPAssetsFromAsset:(id)arg1 photosResources:(id)arg2 withConversionSupport:(id)arg3 includeMetadata:(bool)arg4 includeAdjustmentOverflowDataBlob:(bool)arg5;
- (id)_createPTPAssetsFromAsset:(id)arg1 photosResources:(id)arg2 withConversionSupport:(id)arg3 includeMetadata:(bool)arg4 includeAdjustmentOverflowDataBlob:(bool)arg5 debugAnalytics:(id)arg6;
- (id)_diagnosticFilePathForLibrary:(id)arg1 mainFilename:(id)arg2 createIfNeeded:(bool)arg3;
- (void)_ensureDeferredRenderingIsComplete;
- (bool)_ensureLivePhotoComponentsAgreeOnConversionRequirementForPTPAssets:(id)arg1 withConversionSupport:(id)arg2;
- (id)_enumerateAssetsWithLocalIdentifiers:(id)arg1 usingBlock:(id /* block */)arg2;
- (void)_expungeAsset:(id)arg1 withReason:(id)arg2;
- (id)_fetchAssetsForIdentifiers:(id)arg1 includeTrash:(bool)arg2;
- (void)_handleMakeResourceReplyForAssetUUID:(id)arg1 assetObjectID:(id)arg2 moc:(id)arg3 success:(bool)arg4 error:(id)arg5;
- (void)_handlePhotoLibraryAvailableNotification;
- (long long)_imageVersionForAsset:(id)arg1 resourceType:(long long)arg2;
- (bool)_isPenultimateAssetResource:(id)arg1;
- (bool)_isPhotoAssetResourceType:(long long)arg1;
- (bool)_isThumbnailSupportedForResourceType:(long long)arg1;
- (void)_logGreenTeaStatusForPTPAssetHandle:(id)arg1 photosAsset:(id)arg2;
- (id)_photosAssetForPTPAssetHandle:(id)arg1;
- (id)_primaryResourceForAsset:(id)arg1;
- (id)_primaryResourceForAsset:(id)arg1 fromResources:(id)arg2;
- (id)_ptpAssetReaderForFormatConvertedPTPAsset:(id)arg1 ofPhotosAsset:(id)arg2 resourcePath:(id)arg3 originalResourcePath:(id)arg4;
- (id)_ptpAssetWithType:(long long)arg1 fromPTPAssets:(id)arg2 requiresConversion:(bool)arg3;
- (id)_ptpThumbnailForOriginalVideoAsset:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 compressionQuality:(float)arg3;
- (void)_registerForFirstUnlockNotification;
- (void)_requestFinalizationOfNextAsset;
- (id)_resourceOfType:(long long)arg1 fromResources:(id)arg2;
- (id)_sendFinalizationRequestForAsset:(id)arg1 moc:(id)arg2;
- (bool)_shouldSkipResource:(id)arg1 forAsset:(id)arg2 conversionSupport:(id)arg3 debugAnalytics:(id)arg4;
- (void)_startAnalyticsCollection;
- (void)_stopAnalyticsCollectionAndReport;
- (void)_updateConversionResultForPTPAssets:(id)arg1 conversionSupport:(id)arg2;
- (void)cameraWatcherDidChangeState:(id)arg1;
- (bool)canDeleteAssets;
- (unsigned long long)countOfAssets;
- (long long)cplStorageState;
- (void)dealloc;
- (id)delegate;
- (id)init;
- (id)initForUnitTestSupportWithPhotoLibrary:(id)arg1;
- (id)initWithLibrary:(id)arg1;
- (long long)libraryAvailabilityStatus;
- (bool)libraryIsAvailable;
- (id)peerMediaCapabilities;
- (bool)penultimateIsPublic;
- (id)photoLibrary;
- (void)photoLibraryDidBecomeUnavailable:(id)arg1;
- (void)photoLibraryDidChange:(id)arg1;
- (id)popAnalyticsData;
- (id)ptpAssetReaderForAssetHandle:(id)arg1;
- (bool)ptpCanDeleteFiles;
- (bool)ptpDeletePhotoForAssetHandle:(id)arg1;
- (void)ptpEnumerateAllAssetsUsingBlock:(id /* block */)arg1;
- (void)ptpEnumerateAssetsWithLocalIdentifiers:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)ptpImagePropertiesForAssetHandle:(id)arg1;
- (id)ptpThumbnailForAssetHandle:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 compressionQuality:(float)arg3;
- (void)setDelegate:(id)arg1;
- (void)setHostCharacteristics:(id)arg1;
- (void)setLibraryAvailabilityStatus:(long long)arg1;
- (void)setPeerMediaCapabilities:(id)arg1;
- (void)setPenultimateIsPublic:(bool)arg1;

@end
