/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHPhotoLibrary : NSObject <CPLStatusDelegate, PFStateCaptureProvider, PHBatchFetchingArrayDataSource, PHPerformChangesRequest, PLCPLSettingsObserverDelegate, PNPhotoLibraryProtocol> {
    NSHashTable * _availabilityObservers;
    PHPhotoLibraryCloudStatus * _cachedCloudStatus;
    PHChangeHandlingDebugger * _changeHandlingDebugger;
    NSMutableDictionary * _changeNotificationInfo;
    bool  _clearsOIDCacheAfterFetchResultDealloc;
    PLCPLSettingsObserver * _cplSettingsObserver;
    PHFetchOptions * _customLibrarySpecificFetchOptions;
    _TtC6Photos27PHDatabaseStatisticsTracker * _databaseStatisticsTracker;
    PAImageConversionServiceClient * _imageConversionServiceClient;
    _Atomic bool  _isCompletedPostOpenInitialization;
    NSObject<OS_dispatch_queue> * _isolationQueue;
    PLLazyObject * _lazyAlbumRootFolderObjectID;
    PLLazyObject * _lazyAppPrivateData;
    PLLazyObject * _lazyBackgroundQueueObjectFetchingPhotoLibrary;
    PLLazyObject * _lazyBackgroundQueuePhotoLibrary;
    PLLazyObject * _lazyCPLStatus;
    PLLazyObject * _lazyCacheMetricsCollectorClient;
    PLLazyObject * _lazyChangeHandlingPhotoLibrary;
    PLLazyObject * _lazyGraphObjectFetchingPhotoLibrary;
    PLLazyObject * _lazyIsReadyForAnalysis;
    PLLazyObject * _lazyIsReadyForAnalysisCPLInitialDownloadCompleted;
    PLLazyObject * _lazyIsReadyForAnalysisQuickCheck;
    PLLazyObject * _lazyMainQueueConcurrencyPhotoLibrary;
    PLLazyObject * _lazyMainQueuePhotoLibrary;
    PLLazyObject * _lazyMainScopeIdentifier;
    PLLazyObject * _lazyPhotoLibrary;
    PLLazyObject * _lazyPhotoLibraryIdentifier;
    PLLazyObject * _lazyProjectAlbumRootFolderObjectID;
    PLLazyObject * _lazySearchIndex;
    PLLazyObject * _lazyUserInitiatedQueuePhotoLibrary;
    PLFileSystemVolume * _libraryFileSystemVolume;
    PHPhotoLibraryObserverRegistrar * _observerRegistrar;
    NSError * _openError;
    bool  _opened;
    bool  _openedAppFolders;
    PHPerformChangesRequest * _performChangesRequest;
    PLPhotoLibraryBundle * _photoLibraryBundle;
    NSURL * _photoLibraryURL;
    NSProgress * _postOpenProgress;
    PFStateCaptureHandler * _stateCaptureHandler;
    PLPhotoLibrary * _transactionPhotoLibrary;
    NSObject<OS_dispatch_queue> * _transactionQueue;
    unsigned short  _type;
    NSError * _unavailabilityReason;
    bool  _unknownMergeEvent;
    PAVideoConversionServiceClient * _videoConversionServiceClient;
    long long  _wellKnownPhotoLibraryIdentifier;
}

@property (nonatomic, readonly) NSManagedObjectID *albumRootFolderObjectID;
@property (nonatomic, readonly) PHPhotoLibraryAppPrivateData *appPrivateData;
@property (nonatomic, readonly) PLAssetsdClient *assetsdClient;
@property (nonatomic, retain) NSHashTable *availabilityObservers;
@property (readonly) PLPhotoLibrary *backgroundQueueObjectFetchingPhotoLibrary;
@property (readonly) PLPhotoLibrary *backgroundQueuePhotoLibrary;
@property (nonatomic, readonly) PLCacheMetricsCollectorClient *cacheMetricsCollector;
@property (readonly) PLPhotoLibrary *changeHandlingPhotoLibrary;
@property (nonatomic, retain) NSMutableDictionary *changeNotificationInfo;
@property (nonatomic) bool clearsOIDCacheAfterFetchResultDealloc;
@property (getter=isCloudPhotoLibraryEnabled, nonatomic, readonly) bool cloudPhotoLibraryEnabled;
@property (nonatomic, readonly) PHPhotoLibraryCloudStatus *cloudStatus;
@property (readonly) unsigned long long countOfFetchResultsRegisteredForChangeNotifications;
@property (nonatomic, readonly) CPLStatus *cplStatus;
@property (nonatomic, readonly) PHPersistentChangeToken *currentChangeToken;
@property (readonly) long long currentDatabaseStatistics;
@property (nonatomic, readonly) PHPersistentChangeToken *currentToken;
@property (nonatomic, readonly, copy) NSString *databaseUUID;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSArray *gatheredSqlStatements;
@property (readonly) PLPhotoLibrary *graphObjectFetchingPhotoLibrary;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PAImageConversionServiceClient *imageConversionServiceClient;
@property (nonatomic, readonly) bool isCPLSyncablePhotoLibrary;
@property (nonatomic, readonly) bool isCloudPhotoLibrary;
@property (nonatomic, readonly) bool isReadOnlyCloudPhotoLibrary;
@property (nonatomic, readonly) bool isReadyForAnalysis;
@property (nonatomic, readonly) bool isReadyForAnalysisCPLInitialDownloadCompleted;
@property (nonatomic, readonly) bool isReadyForAnalysis_FOR_UI_USE_ONLY;
@property (nonatomic, readonly) bool isSharedAlbumsEnabled;
@property (nonatomic, readonly) bool isSystemPhotoLibrary;
@property (nonatomic, readonly) bool isWalrusEnabled;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *isolationQueue;
@property (getter=isKeepOriginalsEnabled, nonatomic) bool keepOriginalsEnabled;
@property (nonatomic, readonly) PLPhotoLibrary *mainQueueConcurrencyPhotoLibrary;
@property (readonly) PLPhotoLibrary *mainQueuePhotoLibrary;
@property (nonatomic, readonly) NSString *mainScopeIdentifier;
@property (nonatomic, retain) PHPerformChangesRequest *performChangesRequest;
@property (nonatomic, readonly) PLPhotoAnalysisServiceClient *photoAnalysisClient;
@property (readonly) PLPhotoLibrary *photoLibrary;
@property (readonly) PLPhotoLibraryBundle *photoLibraryBundle;
@property (nonatomic, readonly, copy) PHPhotoLibraryIdentifier *photoLibraryIdentifier;
@property (nonatomic, readonly) NSURL *photoLibraryURL;
@property (nonatomic, readonly) NSProgress *postOpenProgress;
@property bool postsPersistentHistoryChangedNotifications;
@property (nonatomic, readonly) NSManagedObjectID *projectAlbumRootFolderObjectID;
@property (nonatomic, readonly) PXAssetsRecoveryCountsManager *px_assetsRecoveryCountsManager;
@property (getter=px_areChangesPaused, nonatomic, readonly) bool px_changesPaused;
@property (readonly) PXPhotoLibraryLocalDefaults *px_localDefaults;
@property (nonatomic, readonly) unsigned long long px_peoplePetsHomeVisibility;
@property (nonatomic, readonly) PXSharedLibrarySharingSuggestionsCountsManager *px_sharedLibrarySharingSuggestionsCountsManager;
@property (nonatomic, readonly, copy) PHFetchOptions *px_standardLibrarySpecificFetchOptions;
@property (nonatomic, readonly) PXPhotoKitVirtualCollections *px_virtualCollections;
@property (readonly) Class superclass;
@property (readonly) PLPhotoLibrary *transactionPhotoLibrary;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *transactionQueue;
@property (nonatomic, readonly) unsigned short type;
@property (retain) NSError *unavailabilityReason;
@property (nonatomic) bool unknownMergeEvent;
@property (readonly) PLPhotoLibrary *userInitiatedQueuePhotoLibrary;
@property (nonatomic, readonly) NSString *uuid;
@property (readonly) PLPhotoKitVariationCache *variationCache;
@property (nonatomic, retain) PAVideoConversionServiceClient *videoConversionServiceClient;
@property (nonatomic, readonly) long long wellKnownPhotoLibraryIdentifier;

// Image: /System/Library/Frameworks/Photos.framework/Photos

+ (Class)PHObjectClassForEntityName:(id)arg1;
+ (Class)PHObjectClassForIdentifierCode:(id)arg1;
+ (Class)PHObjectClassForOID:(id)arg1;
+ (Class)PHObjectClassForObjectType:(long long)arg1;
+ (id)PHObjectClasses;
+ (id)PHObjectClassesByEntityName;
+ (id)_countOfAnalysisVersionsForKey:(id)arg1 inLibrary:(id)arg2;
+ (unsigned long long)_countOfAssetsWithPredicate:(id)arg1 entityName:(id)arg2 inLibrary:(id)arg3;
+ (id)_effectiveRootEntity:(id)arg1;
+ (void)_forceUserInterfaceReload;
+ (bool)_isInternalObserver:(id)arg1;
+ (long long)_photosAccessAllowedForAccessLevel:(long long)arg1;
+ (void)_requestAuthorizationForAccessLevel:(long long)arg1 supportsLimited:(bool)arg2 handler:(id /* block */)arg3;
+ (id)_sharedPhotoLibrary;
+ (bool)additionalCheckForProcessingNeededForAsset:(id)arg1 taskID:(unsigned long long)arg2 priority:(unsigned long long)arg3;
+ (void)assertRunningInExtension;
+ (void)assertTransaction;
+ (long long)authorizationStatus;
+ (long long)authorizationStatusForAccessLevel:(long long)arg1;
+ (bool)checkAuthorizationStatusForAPIAccessLevel:(long long)arg1;
+ (bool)checkAuthorizationStatusForAPIAccessLevel:(long long)arg1 suppressPrompt:(bool)arg2;
+ (Class)classForFetchType:(id)arg1;
+ (long long)collectionListTypeForIdentifierCode:(id)arg1;
+ (void)enableMultiLibraryMode;
+ (id)fetchTypeForLocalIdentifierCode:(id)arg1;
+ (bool)hasSharedPhotoLibrary;
+ (id)imagePickerPhotoLibrary;
+ (void)initialize;
+ (bool)isMultiLibraryModeEnabled;
+ (bool)isPhotosApplicationInstalled;
+ (bool)isSystemPhotoLibraryURL:(id)arg1;
+ (id)mediaProcessingDeviceIndependentFacesSortDescriptors;
+ (id)mediaProcessingFacesSortDescriptorsForGeneratingPersonModel;
+ (double)nextOverrideTimeIntervalForSystemBudgets:(unsigned long long)arg1;
+ (id)openPhotoLibraryWithWellKnownIdentifier:(long long)arg1 error:(id*)arg2;
+ (id)photoLibraryForCurrentTransaction;
+ (id)plLibraryOptionsFromPHOptions:(id)arg1 createOptions:(unsigned long long*)arg2;
+ (void)removeAllUniquedOIDs;
+ (void)requestAuthorization:(id /* block */)arg1;
+ (void)requestAuthorizationForAccessLevel:(long long)arg1 handler:(id /* block */)arg2;
+ (bool)setImagePickerPhotoLibrary:(id)arg1 error:(id*)arg2;
+ (void)setNeedsToRepairKeyCuratedAssetForMemories:(id)arg1;
+ (void)setSharedPhotoLibrary:(id)arg1;
+ (bool)setSystemPhotoLibraryURL:(id)arg1 error:(id*)arg2;
+ (id)sharedContactStore;
+ (id)sharedLazyPhotoLibraryForCMM;
+ (id)sharedMomentSharePhotoLibrary;
+ (id)sharedPhotoLibrary;
+ (bool)shouldDisplayMergeCandidates:(id)arg1 forPerson:(id)arg2;
+ (id)stringFromPHPhotoLibraryType:(unsigned short)arg1;
+ (const char *)systemPhotoLibraryAvailableNotificationName;
+ (id)systemPhotoLibraryURL;
+ (const char *)systemPhotoLibraryURLChangeNotificationName;
+ (id)uniqueObjectIDCache;
+ (id)uniquedOID:(id)arg1;
+ (id)uniquedOIDs:(id)arg1;
+ (id)uniquedOIDsFromObjects:(id)arg1;
+ (void)unsafeShutdownLibraryWithPhotoLibraryURL:(id)arg1;
+ (id)wellKnownPhotoLibraryURLForIdentifier:(long long)arg1;

- (void).cxx_destruct;
- (void)_addObservers:(id)arg1 authorizationStatus:(long long)arg2;
- (double)_analysisProgressForHighlight:(id)arg1 fetchCountBlock:(id /* block */)arg2;
- (id)_assetFetchOptionsForMediaProcessing;
- (id)_assetOIDsForHighlight:(id)arg1 withContext:(id)arg2;
- (id)_baseFetchOptionsForMediaProcessing;
- (void)_beginTransaction;
- (id)_cachedCloudStatus;
- (void)_callLegacyCompletionTarget:(id)arg1 completionSelector:(SEL)arg2 contextInfo:(void*)arg3 withSuccess:(bool)arg4 error:(id)arg5;
- (void)_cancelTransactionOnExecutionContext:(id)arg1 withInstrumentation:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)_cloudInternalClient;
- (void)_commitTransactionOnExecutionContext:(id)arg1 withInstrumentation:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_denyTransactionOnExecutionContext:(id)arg1 withInstrumentation:(id)arg2 authorizationStatus:(long long)arg3 accessLevel:(long long)arg4 completionHandler:(id /* block */)arg5;
- (id)_deriveMainScopeIdentifierFromCPLSettings;
- (void)_endTransaction;
- (id)_errorForAuthorizationStatus:(long long)arg1 accessLevel:(long long)arg2;
- (id)_facesFetchOptionsForMediaProcessing;
- (id)_fetchPersistentChangesSinceToken:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)_graphBasedPHObjectsForOIDs:(id)arg1 propertyHint:(unsigned long long)arg2 includeTrash:(bool)arg3;
- (void)_handleLibraryBecameUnavailable:(id)arg1 reason:(id)arg2;
- (void)_handleServiceConnectionClosed:(id)arg1;
- (long long)_initialRetryCountForChangesRequest:(id)arg1;
- (id)_initializeAppPrivateData;
- (id)_initializeCPLStatus;
- (id)_initializeIsReadyForAnalysis;
- (id)_initializeIsReadyForAnalysisCPLInitialDownloadCompleted;
- (id)_initializeIsReadyForAnalysisQuickCheck;
- (id)_initializePhotoLibraryIdentifier;
- (id)_initializeSearchIndex;
- (void)_invalidateEverythingWithReason:(id)arg1;
- (bool)_isApplicationOwnedFolderWithApplicationDataFolderIdentifier:(long long)arg1;
- (bool)_isOptimizedMediaProcessingTaskID:(unsigned long long)arg1;
- (bool)_isValidTaskID:(unsigned long long)arg1;
- (id)_lazyPhotoLibrary;
- (void)_notifyAvailabilityObserversWithReason:(id)arg1;
- (void)_notifyPersistentChangeObservers;
- (void)_onQueueNotifyAvailabilityObserversWithReason:(id)arg1;
- (bool)_openApplicationOwnedFoldersIfNecessary;
- (id)_popChangesRequest;
- (bool)_postOpenInitializationWithError:(id*)arg1;
- (bool)_preflightRequest:(id)arg1 withError:(id*)arg2;
- (void)_processPendingChanges;
- (id)_propertySetsForTaskID:(unsigned long long)arg1;
- (void)_publishChangeToObserversIfAuthorized:(id /* block */)arg1;
- (void)_publishCloudStatusChange;
- (double)_ratioOfAssetsAtOrAboveVersion:(short)arg1 forKey:(id)arg2;
- (void)_removeObserver:(id)arg1;
- (void)_resetCachedValues;
- (void)_sendChangesRequest:(id)arg1 onExecutionContext:(id)arg2 withInstrumentation:(id)arg3 remainingRetryCount:(long long)arg4 reply:(id /* block */)arg5;
- (void)_sendChangesRequest:(id)arg1 onExecutionContext:(id)arg2 withInstrumentation:(id)arg3 reply:(id /* block */)arg4;
- (void)_setCachedCloudStatus:(id)arg1;
- (void)_setFetchLimit:(id)arg1 forTaskID:(unsigned long long)arg2;
- (void)_setSortDescriptors:(id)arg1 forTaskID:(unsigned long long)arg2;
- (bool)_setUnavailabilityReason:(id)arg1;
- (bool)_shouldIncludeAllBurstAssetsForTaskID:(unsigned long long)arg1;
- (bool)_shouldIncludeGuestAssetsForTaskID:(unsigned long long)arg1;
- (bool)_shouldIncludeHiddenAssetsForTaskID:(unsigned long long)arg1;
- (bool)_shouldIncludeOnlyAssetsAllowedForAnalysisForTaskID:(unsigned long long)arg1;
- (bool)_shouldIncludeTrashedAssetsForTaskID:(unsigned long long)arg1;
- (void)_startObservingServiceConnectionInvalidated;
- (void)_startWatchingFileSystemVolumeForLibraryAvailability;
- (void)_startWatchingForLibraryAvailability;
- (void)_stopObservingServiceConnectionInvalidated;
- (void)_stopWatchingFileSystemVolumeForLibraryAvailability;
- (void)_stopWatchingForLibraryAvailability;
- (void)_updateFetchOptionsForMediaProcessingCounts:(id)arg1;
- (id)_updateGraphAvailabilityInFeatureAvailability:(id)arg1 forFeature:(unsigned long long)arg2 error:(id*)arg3;
- (id)_urlForApplicationDataFolderIdentifier:(long long)arg1 pathManager:(id)arg2 error:(id*)arg3;
- (void)accountDidChange:(id)arg1;
- (id)albumRootFolderObjectID;
- (id)allSocialGroupsForMemberLocalIdentifier:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)allowedEntities;
- (id)analyzeAssets:(id)arg1 forFeature:(unsigned long long)arg2 withCompletion:(id /* block */)arg3;
- (id)analyzeLibraryForFeature:(unsigned long long)arg1 withCompletion:(id /* block */)arg2;
- (id)appPrivateData;
- (void)appPrivateDataWriteFailedWithError:(id)arg1;
- (void)assertTransaction;
- (id)assetIdentifiersForPersonIdentifiers:(id)arg1 error:(id*)arg2;
- (bool)assetsArePendingForDuplicateMergeProcessingWithLocalIdentifiers:(id)arg1;
- (id)assetsdClient;
- (id)availabilityObservers;
- (id)backgroundQueueObjectFetchingPhotoLibrary;
- (id)backgroundQueuePhotoLibrary;
- (id)bfa_fetchObjectsForOIDs:(id)arg1 propertyHint:(unsigned long long)arg2 overrideResultsWithClass:(Class)arg3;
- (id)bfa_fetchUUIDsForRestrictedOIDs:(id)arg1;
- (id)bfa_fetchedObjectsForOIDs:(id)arg1 propertySetClass:(Class)arg2;
- (id)bfa_photoLibrary;
- (bool)bfa_supportsPrivacyRestrictionsForOIDs:(id)arg1;
- (id)bfa_tombstoneObjectForOID:(id)arg1 uuid:(id)arg2 propertyHint:(unsigned long long)arg3 overrideResultsWithClass:(Class)arg4;
- (id)cacheMetricsCollector;
- (void)cancelOperationsWithIdentifiers:(id)arg1 reply:(id /* block */)arg2;
- (bool)cancelReservedCloudIdentifiersWithObjectType:(long long)arg1 error:(id*)arg2;
- (id)changeHandlingPhotoLibrary;
- (id)changeNotificationInfo;
- (id)changeRequestForUUID:(id)arg1;
- (bool)clearsOIDCacheAfterFetchResultDealloc;
- (void)close;
- (void)closeWithReason:(id)arg1;
- (id)cloudIdentifierMappingsForLocalIdentifiers:(id)arg1;
- (id)cloudIdentifiersForLocalIdentifiers:(id)arg1;
- (bool)cloudQuotaResourceBytesUsed:(id*)arg1 error:(id*)arg2;
- (bool)cloudQuotaResourceBytesUsed:(id*)arg1 minVideoSize:(unsigned long long)arg2 error:(id*)arg3;
- (void)cloudQuotaResourceBytesUsedForMinVideoSize:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (id)cloudStatus;
- (unsigned long long)countOfAllAssetsForMediaProcessingTaskID:(unsigned long long)arg1 priority:(unsigned long long)arg2 sceneConfidenceThreshold:(float)arg3 error:(id*)arg4;
- (unsigned long long)countOfClusteringEligibleFaces;
- (unsigned long long)countOfDirtyFaceGroups;
- (unsigned long long)countOfFaceCropsToBeGenerated;
- (unsigned long long)countOfFetchResultsRegisteredForChangeNotifications;
- (unsigned long long)countOfProcessedAssetsForMediaProcessingTaskID:(unsigned long long)arg1 priority:(unsigned long long)arg2 algorithmVersion:(id)arg3 sceneConfidenceThreshold:(float)arg4 error:(id*)arg5;
- (void)countOfReferencedMediaWithCompletionHandler:(id /* block */)arg1;
- (unsigned long long)countOfUnclusteredFaces;
- (unsigned long long)countOfUnprocessedAssetsForMediaProcessingTaskID:(unsigned long long)arg1 priority:(unsigned long long)arg2 algorithmVersion:(id)arg3 sceneConfidenceThreshold:(float)arg4 error:(id*)arg5;
- (unsigned long long)countOfUnprocessedFaceCrops;
- (void)cplSettingsDidChange:(id)arg1;
- (id)cplStatus;
- (bool)createPhotoLibraryUsingOptions:(id)arg1 error:(id*)arg2;
- (id)curationDebugInformationForAssetCollectionWithLocalIdentifier:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)curationDebugInformationForAssetLocalIdentifier:(id)arg1 error:(id*)arg2;
- (id)currentChangeToken;
- (long long)currentDatabaseStatistics;
- (id)currentToken;
- (id)databaseUUID;
- (void)dealloc;
- (id)debugDescription;
- (void)disableGatheringSqlStatements;
- (void)enableGatheringSqlStatements;
- (id)exportGraphForPurpose:(id)arg1 error:(id*)arg2;
- (id)faceAnalysisProcessingCounts;
- (id)faceAnalysisProgressCounts;
- (double)faceAnalysisProgressForHighlight:(id)arg1;
- (id)faceClusterSequenceNumbersOfFacesWithClusterSequenceNumbers:(id)arg1 error:(id*)arg2;
- (id)faceClusterSequenceNumbersOfKeyFacesInAlgorithmicFaceGroupsForPerson:(id)arg1 verifiedClusterSequenceNumbers:(id)arg2;
- (id)featureAvailabilityForFeature:(unsigned long long)arg1 readOptions:(id)arg2 error:(id*)arg3;
- (id)fetchAssetsForMediaProcessingTaskID:(unsigned long long)arg1 priority:(unsigned long long)arg2 algorithmVersion:(id)arg3 sceneConfidenceThreshold:(float)arg4 error:(id*)arg5;
- (long long)fetchCountOfAssetsWithAllowedForAnalysis;
- (long long)fetchCountOfAssetsWithFacesProcessedToAnyVersion;
- (long long)fetchCountOfAssetsWithFacesProcessedToLatestVersion;
- (long long)fetchCountOfAssetsWithMediaAnalysisImageProcessed;
- (long long)fetchCountOfAssetsWithMediaAnalysisVideoProcessed;
- (long long)fetchCountOfAssetsWithScenesProcessed;
- (long long)fetchCountOfVideosWithAllowedForAnalysis;
- (id)fetchDictionariesByPHClassForOIDs:(id)arg1 propertyHint:(unsigned long long)arg2 includeTrash:(bool)arg3 overrideWithPHClass:(Class)arg4;
- (id)fetchFacesForMediaProcessingWithPersonLocalIdentifiers:(id)arg1 inMoment:(id)arg2;
- (id)fetchOptionsForMediaProcessingTaskID:(unsigned long long)arg1 priority:(unsigned long long)arg2 algorithmVersion:(id)arg3 sceneConfidenceThreshold:(float)arg4 processed:(bool)arg5 error:(id*)arg6;
- (id)fetchOptionsForMediaProcessingTaskID:(unsigned long long)arg1 priority:(unsigned long long)arg2 algorithmVersion:(id)arg3 sceneConfidenceThreshold:(float)arg4 processed:(bool)arg5 exactVersionMatch:(bool)arg6 error:(id*)arg7;
- (id)fetchPHObjectsForOIDs:(id)arg1;
- (id)fetchPHObjectsForOIDs:(id)arg1 propertyHint:(unsigned long long)arg2 includeTrash:(bool)arg3 overrideResultsWithClass:(Class)arg4;
- (id)fetchPHObjectsForUUIDs:(id)arg1 entityName:(id)arg2;
- (id)fetchPersistentChangesSinceToken:(id)arg1 error:(id*)arg2;
- (id)fetchPersistentChangesWithRequest:(id)arg1 error:(id*)arg2;
- (id)fetchPersonAvailabilityOfDetectionTypes:(id)arg1 error:(id*)arg2;
- (id)fetchPersonAvailabilityWithError:(id*)arg1;
- (id)fetchProcessedAssetsBelowAnalysisStage:(short)arg1 forTaskIDs:(id)arg2 algorithmVersion:(id)arg3 error:(id*)arg4;
- (id)fetchProcessedAssetsForMediaProcessingTaskID:(unsigned long long)arg1 priority:(unsigned long long)arg2 algorithmVersion:(id)arg3 sceneConfidenceThreshold:(float)arg4 error:(id*)arg5;
- (id)fetchPropertiesByOID:(id)arg1 propertyNamesByEntityName:(id)arg2;
- (id)fetchUnprocessedAssetsForMediaProcessingTaskID:(unsigned long long)arg1 priority:(unsigned long long)arg2 algorithmVersion:(id)arg3 sceneConfidenceThreshold:(float)arg4 error:(id*)arg5;
- (id)fetchUpdatedObject:(id)arg1;
- (id)fetchedObjectsForOIDs:(id)arg1 propertySetClass:(Class)arg2;
- (id)gatheredSqlStatements;
- (void)getCPLConfigrationValueForClient:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (id)graphObjectFetchingPhotoLibrary;
- (id)graphStatisticsDescription:(id*)arg1;
- (id)graphStatusDescription:(id*)arg1;
- (void)handleMergeNotification:(id)arg1;
- (bool)hasSyncProgressReturningImportOperations:(int*)arg1;
- (id)highlightDebugInformationForHighlightWithLocalIdentifier:(id)arg1 error:(id*)arg2;
- (id)imageConversionServiceClient;
- (id)init;
- (id)initMomentShareLibrary;
- (id)initSharedLibrary;
- (id)initWithPLPhotoLibrary:(id)arg1;
- (id)initWithPLPhotoLibrary:(id)arg1 type:(unsigned short)arg2;
- (id)initWithPhotoLibraryBundle:(id)arg1 type:(unsigned short)arg2;
- (id)initWithPhotoLibraryURL:(id)arg1;
- (id)initWithPhotoLibraryURL:(id)arg1 type:(unsigned short)arg2;
- (bool)internal_processIdenticalDuplicatesWithError:(id*)arg1;
- (bool)invalidatePersistentGraphCachesAndReturnError:(id*)arg1;
- (bool)invalidateTransientGraphCachesAndReturnError:(id*)arg1;
- (bool)isCPLSyncablePhotoLibrary;
- (bool)isCloudPhotoLibrary;
- (bool)isCloudPhotoLibraryEnabled;
- (bool)isFaceProcessingFinished;
- (bool)isInitialDuplicateDetectorProcessingCompleted;
- (bool)isKeepOriginalsEnabled;
- (bool)isPHPhotoLibraryForCMM;
- (bool)isReadOnlyCloudPhotoLibrary;
- (bool)isReadyForAnalysis;
- (bool)isReadyForAnalysisCPLInitialDownloadCompleted;
- (bool)isReadyForAnalysis_FOR_UI_USE_ONLY;
- (bool)isSharedAlbumsEnabled;
- (bool)isSystemPhotoLibrary;
- (bool)isWalrusEnabled;
- (id)isolationQueue;
- (id)keyAssetUUIDOfSocialGroupWithPersonUUIDs:(id)arg1 candidateAssetUUIDs:(id)arg2 error:(id*)arg3;
- (void)legacySaveImageDataToCameraRoll:(id)arg1 completionTarget:(id)arg2 completionSelector:(SEL)arg3 contextInfo:(void*)arg4;
- (void)legacySaveImageToCameraRoll:(id)arg1 completionTarget:(id)arg2 completionSelector:(SEL)arg3 contextInfo:(void*)arg4;
- (void)legacySaveScreenshotToCameraRoll:(id)arg1 completionTarget:(id)arg2 completionSelector:(SEL)arg3 contextInfo:(void*)arg4;
- (void)legacySaveVideoToCameraRoll:(id)arg1 completionTarget:(id)arg2 completionSelector:(SEL)arg3 contextInfo:(void*)arg4;
- (id)libraryID;
- (id)librarySpecificFetchOptions;
- (id)limitedLibraryPredicateForApplication:(id)arg1 fetchType:(id)arg2;
- (id)localIdentifierMappingsForCloudIdentifiers:(id)arg1;
- (id)localIdentifiersForCloudIdentifiers:(id)arg1;
- (id)mainQueueConcurrencyPhotoLibrary;
- (id)mainQueueManagedObjectContext;
- (id)mainQueuePhotoLibrary;
- (id)mainScopeIdentifier;
- (id)managedObjectContext;
- (id)managedObjectContextForCurrentQueueQoS;
- (id)memoryDebugInformationForMemoryWithLocalIdentifier:(id)arg1 error:(id*)arg2;
- (void)mergeDuplicateAssetsWithLocalIdentifierGroupingContainer:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)migrationDate;
- (id)newClusteringEligibleFacesFetchOptions;
- (id)newFaceCropsToBeGeneratedFetchOptions;
- (id)newUnclusteredFacesFetchOptions;
- (id)objectFetchingContextForCurrentQueueQoS;
- (id)objectFetchingManagedObjectContextForObject:(id)arg1 propertySet:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (bool)openAndWaitWithUpgrade:(bool)arg1 error:(id*)arg2;
- (bool)openAndWaitWithUpgrade:(bool)arg1 options:(id)arg2 error:(id*)arg3;
- (void)overrideSystemBudgetsForSyncSession:(bool)arg1 pauseReason:(id)arg2 systemBudgets:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (id)pathManager;
- (void)performCancellableChanges:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (bool)performCancellableChangesAndWait:(id /* block */)arg1 error:(id*)arg2;
- (void)performChanges:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (bool)performChangesAndWait:(id /* block */)arg1 error:(id*)arg2;
- (id)performChangesRequest;
- (void)personPromotionProcessingStatusForUserInterface:(id /* block */)arg1;
- (bool)petVIPModelExists;
- (id)photoAnalysisClient;
- (bool)photoAnalysisClientAllowed;
- (id)photoLibrary;
- (id)photoLibraryBundle;
- (id)photoLibraryForCurrentQueueQoS;
- (id)photoLibraryIdentifier;
- (id)photoLibraryURL;
- (id)pl_photoLibraryForCMM;
- (id)postOpenProgress;
- (bool)postsPersistentHistoryChangedNotifications;
- (bool)processDuplicateAssetsWithLocalIdentifiers:(id)arg1 error:(id*)arg2;
- (bool)processUniversalSearchJITForAssetLocalIdentifier:(id)arg1 processingTypes:(unsigned long long)arg2 error:(id*)arg3;
- (id)processUniversalSearchJITForCoreSpotlightUniqueIdentifier:(id)arg1 bundleID:(id)arg2 processingTypes:(unsigned long long)arg3 error:(id*)arg4;
- (id)projectAlbumRootFolderObjectID;
- (id)queryForType:(id)arg1 withIdentifiers:(id)arg2 local:(bool)arg3;
- (double)ratioOfAssetsAtOrAboveFaceAnalysisVersion:(short)arg1;
- (double)ratioOfAssetsAtOrAboveSceneAnalysisVersion:(short)arg1;
- (double)ratioOfAssetsWithFacesProcessed;
- (double)ratioOfAssetsWithMediaAnalysisImageProcessed;
- (double)ratioOfAssetsWithMediaAnalysisVideoProcessed;
- (double)ratioOfAssetsWithScenesProcessed;
- (void)recordDeleteRequest:(id)arg1;
- (void)recordInsertRequest:(id)arg1;
- (void)recordOtherChangeRequest:(id)arg1;
- (void)recordUpdateRequest:(id)arg1;
- (void)registerAvailabilityObserver:(id)arg1;
- (void)registerChangeObserver:(id)arg1;
- (void)registerFetchResult:(id)arg1;
- (id)relatedDebugInformationBetweenAssetForLocalIdentifier:(id)arg1 andRelatedAssetCollectionForLocalIdentifier:(id)arg2 options:(id)arg3 relatedType:(unsigned long long)arg4 error:(id*)arg5;
- (id)relatedDebugInformationBetweenReferenceAssetCollectionForLocalIdentifier:(id)arg1 andRelatedAssetCollectionForLocalIdentifier:(id)arg2 options:(id)arg3 relatedType:(unsigned long long)arg4 error:(id*)arg5;
- (void)removeAllGatheredSqlStatements;
- (bool)requestAssetRevGeocodingForAssetLocalIdentifiers:(id)arg1 withError:(id*)arg2;
- (bool)requestAssetRevGeocodingWithError:(id*)arg1;
- (void)requestDeleteEmbeddings:(id)arg1 assetUUID:(id)arg2 withCompletion:(id /* block */)arg3;
- (bool)requestEnrichmentWithOptions:(id)arg1 error:(id*)arg2;
- (void)requestExternalAssetRelevanceProcessingWithReply:(id /* block */)arg1;
- (void)requestGenerateQuestionsWithOptions:(id)arg1 reply:(id /* block */)arg2;
- (id)requestGraphInferencesSummaryWithDateInterval:(id)arg1 error:(id*)arg2;
- (id)requestGraphInferencesSummaryWithMomentLocalIdentifiers:(id)arg1 error:(id*)arg2;
- (void)requestGraphModelResultWithOptions:(id)arg1 progress:(id)arg2 completion:(id /* block */)arg3;
- (id)requestGraphMomentLocalIdentifiersWithDateInterval:(id)arg1 error:(id*)arg2;
- (void)requestGraphReadyNotificationWithCoalescingIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)requestGraphRebuildProgressWithCompletion:(id /* block */)arg1;
- (bool)requestHighlightCollectionEnrichmentWithOptions:(id)arg1 error:(id*)arg2;
- (bool)requestHighlightEnrichmentWithOptions:(id)arg1 error:(id*)arg2;
- (void)requestHighlightEstimatesWithCompletion:(id /* block */)arg1;
- (void)requestInsertEmbeddings:(id)arg1 modelType:(unsigned long long)arg2 assetUUID:(id)arg3 withCompletion:(id /* block */)arg4;
- (id)requestPersonalTraitsForAssetsWithUUIDs:(id)arg1 error:(id*)arg2;
- (id)requestPersonalTraitsForHighlightsWithUUIDs:(id)arg1 error:(id*)arg2;
- (int)requestProcessingTypes:(unsigned long long)arg1 forAssetsWithLocalIdentifiers:(id)arg2 progressHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (bool)requestSandboxExtensionsIfNeededWithError:(id*)arg1;
- (void)requestSearchIndexGraphUpdates:(id)arg1 supportingData:(id)arg2 withCompletion:(id /* block */)arg3;
- (bool)requestStartSharedLibrarySuggestionResultWithError:(id*)arg1;
- (void)requestSyndicationProcessingWithOptions:(id)arg1 reply:(id /* block */)arg2;
- (id)requestTextFeaturesForMomentLocalIdentifiers:(id)arg1 error:(id*)arg2;
- (void)requestTotalProgressCountsForWorkerType:(short)arg1 states:(id)arg2 completion:(id /* block */)arg3;
- (id)reserveCloudIdentifiersWithObjectType:(long long)arg1 count:(unsigned long long)arg2 error:(id*)arg3;
- (id)reservedCloudIdentifiersWithObjectType:(long long)arg1 error:(id*)arg2;
- (void)resetFaceAnalysisWithResetLevel:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)resetLimitedLibraryAccessForApplication:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)resetStateForMediaProcessingTaskID:(unsigned long long)arg1 assetIdentifiers:(id)arg2 resetOptions:(unsigned long long)arg3 error:(id*)arg4;
- (void)runPFLWithAttachments:(id)arg1 recipeUserInfo:(id)arg2 resultBlock:(id /* block */)arg3;
- (void)runShadowEvaluationWithRecipe:(id)arg1 models:(id)arg2 trialDeploymentID:(id)arg3 trialExperimentID:(id)arg4 trialTreatmentID:(id)arg5 resultBlock:(id /* block */)arg6;
- (double)sceneAnalysisProgressForHighlight:(id)arg1;
- (id)sceneTaxonomyDetectorNodeSceneIDsFromSceneID:(unsigned long long)arg1 sceneTaxonomy:(id)arg2;
- (id)searchDebugInformationForAssetLocalIdentifier:(id)arg1 error:(id*)arg2;
- (id)searchIndex;
- (void)setAvailabilityObservers:(id)arg1;
- (void)setChangeNotificationInfo:(id)arg1;
- (void)setChangeRequest:(id)arg1 forUUID:(id)arg2;
- (void)setClearsOIDCacheAfterFetchResultDealloc:(bool)arg1;
- (void)setCloudPhotoLibraryPauseState:(bool)arg1 reason:(short)arg2;
- (void)setCustomLibrarySpecificFetchOptions:(id)arg1;
- (void)setImageConversionServiceClient:(id)arg1;
- (void)setIsolationQueue:(id)arg1;
- (void)setKeepOriginalsEnabled:(bool)arg1;
- (void)setPerformChangesRequest:(id)arg1;
- (void)setPostsPersistentHistoryChangedNotifications:(bool)arg1;
- (void)setTransactionQueue:(id)arg1;
- (void)setUnavailabilityReason:(id)arg1;
- (void)setUnknownMergeEvent:(bool)arg1;
- (void)setVideoConversionServiceClient:(id)arg1;
- (void)setWidgetTimelineGeneratedForDisplaySize:(struct CGSize { double x1; double x2; })arg1;
- (id)sharingMessageSuggestionDebugInformationForAssetCollectionLocalIdentifier:(id)arg1 error:(id*)arg2;
- (id)sharingSuggestionDebugInformationForAssetCollectionLocalIdentifier:(id)arg1 error:(id*)arg2;
- (id)sharingSuggestionWithRandomPick:(bool)arg1 fallbackToRecentMoments:(bool)arg2 needsNotification:(bool)arg3;
- (bool)shouldMobileSlideShowLaunchWithError:(id*)arg1;
- (void)simulateMemoriesNotificationWithOptions:(id)arg1 reply:(id /* block */)arg2;
- (id)socialGroupsOverlappingMemberLocalIdentifiers:(id)arg1 error:(id*)arg2;
- (id)sortedArrayOfPersonIdentifiers:(id)arg1 error:(id*)arg2;
- (id)stateCaptureDictionary;
- (void)statusDidChange:(id)arg1;
- (id)suggestedMePersonIdentifierWithError:(id*)arg1;
- (id)suggestionsForPersonLocalIdentifier:(id)arg1 clusterSequenceNumbers:(id)arg2 excludePersonLocalIdentifiers:(id)arg3 minimumSuggestionFaceCount:(unsigned long long)arg4;
- (id)summaryCurationForHighlightForLocalIdentifier:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)transactionPhotoLibrary;
- (id)transactionQueue;
- (unsigned short)type;
- (id)unavailabilityReason;
- (bool)unknownMergeEvent;
- (void)unregisterAvailabilityObserver:(id)arg1;
- (void)unregisterChangeObserver:(id)arg1;
- (void)unregisterFetchResult:(id)arg1;
- (id)upgradePhotoLibraryUsingOptions:(id)arg1 completion:(id /* block */)arg2;
- (id)urlForApplicationDataFolderIdentifier:(long long)arg1;
- (id)urlForApplicationDataFolderIdentifier:(long long)arg1 error:(id*)arg2;
- (id)userInitiatedQueuePhotoLibrary;
- (id)uuid;
- (id)variationCache;
- (id)videoConversionServiceClient;
- (long long)wellKnownPhotoLibraryIdentifier;

// Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI

- (void)presentLimitedLibraryPickerFromViewController:(id)arg1;
- (void)presentLimitedLibraryPickerFromViewController:(id)arg1 completionHandler:(id /* block */)arg2;

// Image: /System/Library/PrivateFrameworks/MediaAnalysis.framework/MediaAnalysis

+ (id)_defaultAssetPropertySets;
+ (id)_defaultFacePropertySets;
+ (id)_phFaceSortDescriptors;
+ (id)_phPeopleSortDescriptors;
+ (bool)mad_clusterVideoFaces;
+ (bool)mad_isProcessingNeededOnAsset:(id)arg1 forTaskID:(unsigned long long)arg2;
+ (unsigned long long)mad_maxIgnoredAssetsToMarkAsProcessed;
+ (id)vcp_defaultMediaAnalysisDatabaseFilepath;
+ (id)vcp_defaultPhotoLibrary;
+ (id)vcp_defaultURL;

- (id)_analysisPreferencesURL;
- (id)_defaultAssetFetchOptions;
- (id)_defaultFetchOptions;
- (void)_mad_markAsProcessedByTask:(unsigned long long)arg1 forAsset:(id)arg2;
- (double)_progressFromWorkerStatesDictionary:(id)arg1;
- (void)_updateAnalysisPreferencesWithEntries:(id)arg1 keysToRemove:(id)arg2;
- (id)mad_allFacesFetchOptions;
- (id)mad_allPersonsFetchOptions;
- (id)mad_allPersonsFetchOptionsWithDetectionTypes:(id)arg1 andVerifiedTypes:(id)arg2;
- (bool)mad_calculateProgressPercentage:(unsigned long long*)arg1 totalAssetCount:(unsigned long long*)arg2 progressPercentageWithFailure:(unsigned long long*)arg3 taskID:(unsigned long long)arg4 phTaskID:(unsigned long long)arg5 priority:(unsigned long long)arg6 failedAssetCount:(unsigned long long)arg7 error:(id*)arg8;
- (id)mad_cloudIdentifierForLocalIdentifier:(id)arg1 error:(id*)arg2;
- (id)mad_clusteredAndUnidentifiedFacesFetchOptions;
- (id)mad_clusteredFacesFetchOptions;
- (unsigned long long)mad_countOfUnclusteredFaces;
- (int)mad_faceProcessingInternalVersion;
- (id)mad_localIdentifierForCloudIdentifier:(id)arg1 error:(id*)arg2;
- (void)mad_markAsProcessedByTask:(unsigned long long)arg1 forAssets:(id)arg2;
- (long long)mad_pauseFCPeopleFurtherProcessing;
- (bool)mad_performChangesAndWait:(id /* block */)arg1 cancelBlock:(id /* block */)arg2 extendTimeoutBlock:(id /* block */)arg3 error:(id*)arg4;
- (id)mad_unclusteredFacesFetchOptions;
- (bool)mad_useVUGallery;
- (float)pn_faceProcessingProgress;
- (id)pn_fetchAssetsForFaceGroup:(id)arg1;
- (id)pn_fetchAssetsForFaceLocalIdentifiers:(id)arg1;
- (id)pn_fetchAssetsForPerson:(id)arg1;
- (id)pn_fetchAssetsInMoment:(id)arg1;
- (id)pn_fetchAssetsWithLocalIdentifiers:(id)arg1;
- (id)pn_fetchCandidatePersonsForPerson:(id)arg1;
- (id)pn_fetchFaceGroups;
- (id)pn_fetchFaceGroupsForPerson:(id)arg1;
- (id)pn_fetchFacesForFaceGroup:(id)arg1;
- (id)pn_fetchFacesForPerson:(id)arg1;
- (id)pn_fetchFacesForPerson:(id)arg1 inMoment:(id)arg2;
- (id)pn_fetchFacesForPersonLocalIdentifiers:(id)arg1 inMoment:(id)arg2;
- (id)pn_fetchFacesGroupedByAssetLocalIdentifierForAssets:(id)arg1;
- (id)pn_fetchFacesWithLocalIdentifiers:(id)arg1;
- (id)pn_fetchInvalidAssetIdentifiersForCommonComparison;
- (id)pn_fetchInvalidCandidatePersonsForPerson:(id)arg1;
- (id)pn_fetchMoments;
- (id)pn_fetchMomentsForAssetsWithLocalIdentifiers:(id)arg1;
- (id)pn_fetchMomentsForPerson:(id)arg1;
- (id)pn_fetchMomentsWithLocalIdentifiers:(id)arg1;
- (id)pn_fetchPersonsGroupedByAssetLocalIdentifierForAssets:(id)arg1;
- (id)pn_fetchPersonsInMoment:(id)arg1;
- (id)pn_fetchPersonsWithLocalIdentifiers:(id)arg1;
- (id)pn_fetchPersonsWithType:(unsigned long long)arg1;
- (id)pn_lastAssetDate;
- (unsigned long long)pn_numberOfFacesWithFaceprints;
- (bool)pn_performChangesAndWait:(id /* block */)arg1 error:(id*)arg2;
- (id)pn_persistentStorageDirectoryURL;
- (bool)vcp_allowInMemoryDownload;
- (id)vcp_analysisPreferences;
- (bool)vcp_anyAssetsForTaskID:(unsigned long long)arg1;
- (unsigned long long)vcp_assetCountForTaskID:(unsigned long long)arg1;
- (unsigned long long)vcp_assetCountForTaskID:(unsigned long long)arg1 withPriority:(unsigned long long)arg2;
- (unsigned long long)vcp_assetCountWithInternalPredicate:(id)arg1 forTaskID:(unsigned long long)arg2;
- (unsigned long long)vcp_assetCountWithMediaType:(long long)arg1 forTaskID:(unsigned long long)arg2;
- (id)vcp_description;
- (bool)vcp_eligibleForStreaming:(bool)arg1;
- (id)vcp_faceAnalysisStateFilepath;
- (bool)vcp_isCPLDownloadComplete;
- (bool)vcp_isCPLEnabled;
- (bool)vcp_isCPLSyncComplete;
- (bool)vcp_isSyndicationLibrary;
- (unsigned long long)vcp_libraryScale;
- (id)vcp_libraryScaleShortDescription;
- (id)vcp_mediaAnalysisDatabaseFilepath;
- (id)vcp_mediaAnalysisDirectory;
- (unsigned long long)vcp_processedAssetCountForTaskID:(unsigned long long)arg1;
- (unsigned long long)vcp_processedAssetCountForTaskID:(unsigned long long)arg1 withPriority:(unsigned long long)arg2;
- (unsigned long long)vcp_requiredFaceLibraryProcessingSubTasks;
- (bool)vcp_requiresDownloadForTask:(unsigned long long)arg1;
- (bool)vcp_requiresProcessingForTask:(unsigned long long)arg1;
- (void)vcp_setAnalysisPreferencesValue:(id)arg1 forKey:(id)arg2;
- (bool)vcp_supportsInMemoryDownload;
- (id)vcp_vipModelFilepathForVIPType:(unsigned long long)arg1;
- (id)vcp_vipModelLastGenerationDateForVIPType:(unsigned long long)arg1;
- (id)vcp_visionCacheStorageDirectoryURL;

// Image: /System/Library/PrivateFrameworks/PhotosGraph.framework/PhotosGraph

- (id)pg_urlForGraphApplicationData;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

+ (id)px_appPhotoLibrary;
+ (id)px_appPhotoLibraryForTesting;
+ (id)px_deprecated_appPhotoLibrary;
+ (id)px_momentShareWithLocalIdentifier:(id)arg1;
+ (void)px_setAppPhotoLibraryForTesting:(id)arg1;
+ (id)px_systemPhotoLibrary;
+ (id)px_transientIdentifierForWellKnownAssetCollectionName:(id)arg1;

- (bool)px_areChangesPaused;
- (id)px_assetCollectionForSmartAlbumWithSubtype:(long long)arg1;
- (id)px_assetCollectionWithLocalIdentifier:(id)arg1;
- (id)px_assetCollectionWithTransientIdentifier:(id)arg1;
- (id)px_assetsRecoveryCountsManager;
- (id)px_beginPausingChangesWithTimeout:(double)arg1 identifier:(id)arg2;
- (id)px_changeDistributor;
- (id)px_collectionListWithLocalIdentifier:(id)arg1;
- (id)px_collectionListWithTransientIdentifier:(id)arg1;
- (void)px_endPausingChanges:(id)arg1;
- (id)px_fetchAssetForSuggestionWithLocalIdentifier:(id)arg1;
- (bool)px_fetchHasNoVisibleAssets;
- (bool)px_fetchHasSignificantRegularAlbumCount;
- (bool)px_fetchHasSignificantSharedAlbumActivities;
- (id)px_fetchObjectWithLocalIdentifier:(id)arg1;
- (id)px_fetchObjectsWithLocalIdentifiers:(id)arg1 wantsDefaultPredicates:(bool)arg2;
- (id)px_localDefaults;
- (id)px_memoryWithLocalIdentifier:(id)arg1;
- (unsigned long long)px_peoplePetsHomeVisibility;
- (void)px_registerChangeObserver:(id)arg1;
- (id)px_rootAlbumCollectionList;
- (id)px_sharedLibrarySharingSuggestionsCountsManager;
- (id)px_standardLibrarySpecificFetchOptions;
- (void)px_unregisterChangeObserver:(id)arg1;
- (id)px_utilityCollectionWithType:(unsigned short)arg1;
- (id)px_virtualCollections;

@end
