/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHSearchQueryAnnotation : NSObject <NSSecureCoding> {
    PHSearchQueryQUToken * _QUToken;
    PHSearchSuggestion * _suggestion;
}

@property (nonatomic, readonly) PHSearchQueryQUToken *QUToken;
@property (nonatomic, readonly) unsigned long long ambiguityType;
@property (nonatomic, retain) PHSearchSuggestion *suggestion;

+ (id)_addTripMeaningAnnotationForSpotlightAttributedQueryString:(id)arg1;
+ (id)_annotationFromQueryString:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
+ (id)_updateSpotlightAttributedQueryString:(id)arg1 disambiguation:(id)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
+ (id)_updateSpotlightAttributedQueryString:(id)arg1 suggestion:(id)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
+ (id)_updateSpotlightAttributedQueryString:(id)arg1 withAnnotation:(id)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
+ (id)annotatedQueryStringFromLLMQUAttributedString:(id)arg1 photoLibrary:(id)arg2;
+ (id)annotatedQueryStringFromSpotlightAttributedQueryString:(id)arg1 forSearchQuery:(id)arg2 photosEntityStore:(id)arg3 photoLibrary:(id)arg4;
+ (bool)hasCSAttributedEntityTypePhotosMemoriesTripKeyInAttributedQueryString:(id)arg1;
+ (bool)isAllTimeWithAttributedQueryString:(id)arg1;
+ (bool)isTripWithAttributedQueryString:(id)arg1;
+ (id)searchQueryAnnotationsFromAttributedQueryString:(id)arg1;
+ (id)selectedSuggestionsFromQueryString:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
+ (id)sortOrderWithAttributedQueryString:(id)arg1;
+ (id)spotlightAttributedQueryStringFromAnnotatedQueryString:(id)arg1;
+ (bool)supportsSecureCoding;
+ (id)updateQueryString:(id)arg1 withSelectedSuggestion:(id)arg2 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 additionalAttributes:(id)arg4;

- (void).cxx_destruct;
- (id)QUToken;
- (unsigned long long)ambiguityType;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithQueryToken:(id)arg1;
- (id)initWithSuggestion:(id)arg1 queryToken:(id)arg2;
- (bool)isEqual:(id)arg1;
- (id)jsonDictionary;
- (void)setSuggestion:(id)arg1;
- (id)suggestion;

@end
