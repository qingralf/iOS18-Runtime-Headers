/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHSocialGroupChangeRequest : PHChangeRequest <PHUpdateChangeRequest> {
    long long  _automaticOrder;
    NSString * _customTitle;
    bool  _didRejectSocialGroup;
    bool  _didSetAutomaticOrder;
    bool  _didSetCustomTitle;
    bool  _didSetManualOrder;
    bool  _didUnrejectSocialGroup;
    NSSet * _initialMemberPersonIDs;
    NSManagedObjectID * _keyAssetID;
    long long  _manualOrder;
    bool  _userAction;
}

@property (nonatomic, readonly) long long accessScopeOptionsRequirement;
@property (nonatomic, readonly) NSString *changeTypeForSummary;
@property (nonatomic, readonly) <PLChangesForServiceHandling> *changesForServiceHandler;
@property (nonatomic, readonly) NSString *clientBundleID;
@property (getter=isClientEntitled, nonatomic, readonly) bool clientEntitled;
@property (nonatomic, readonly) NSString *clientName;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *managedEntityName;
@property (getter=isMutated, readonly) bool mutated;
@property (nonatomic, readonly) NSManagedObjectID *objectID;
@property (readonly) Class superclass;

+ (id)_creationRequestForSocialGroupCopyWithUUID:(id)arg1;
+ (id)_findNonUserVerifiedGroupUUIDWithMembers:(id)arg1 context:(id)arg2 changesError:(id*)arg3;
+ (id)changeRequestForSocialGroup:(id)arg1 userAction:(bool)arg2;
+ (id)creationRequestForSocialGroupWithMembers:(id)arg1 userAction:(bool)arg2;
+ (void)deleteSocialGroups:(id)arg1;

- (void).cxx_destruct;
- (bool)_applyAutomaticOrderToContainer:(id)arg1 error:(id*)arg2;
- (bool)_applyInitialMembersToContainer:(id)arg1 error:(id*)arg2;
- (bool)_applyKeyAssetToContainer:(id)arg1 managedObject:(id)arg2 error:(id*)arg3;
- (bool)_applyManualOrderToContainer:(id)arg1 error:(id*)arg2;
- (bool)_applyVerifiedTypeToContainer:(id)arg1 error:(id*)arg2;
- (id)_personIDsFromXPCDict:(id)arg1 key:(const char *)arg2 request:(id)arg3;
- (void)_setMembers:(id)arg1;
- (bool)allowMutationToManagedObject:(id)arg1 propertyKey:(id)arg2 error:(id*)arg3;
- (bool)applyMutationsToManagedObject:(id)arg1 photoLibrary:(id)arg2 error:(id*)arg3;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)arg1 error:(id*)arg2;
- (void)encodeToXPCDict:(id)arg1;
- (id)initForNewObject;
- (id)initWithUUID:(id)arg1;
- (id)initWithUUID:(id)arg1 objectID:(id)arg2;
- (id)initWithXPCDict:(id)arg1 request:(id)arg2 clientAuthorization:(id)arg3;
- (id)initialMemberPersonIDs;
- (bool)isUserAction;
- (id)managedEntityName;
- (id)placeholderForCreatedSocialGroup;
- (void)rejectSocialGroup;
- (void)resetCustomTitle;
- (void)setCustomTitle:(id)arg1;
- (void)setKeyAsset:(id)arg1;
- (void)setOrder:(long long)arg1;
- (void)unrejectSocialGroup;

@end
