/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface _PHPickerResultMetadata : NSObject <NSCopying, NSSecureCoding> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _acceptableCropRect;
    bool  _allowsItemProviderOpenInPlace;
    NSDictionary * _filePromiseURLs;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _normalizedFaceAreaRect;
    unsigned long long  _pixelHeight;
    unsigned long long  _pixelWidth;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _preferredCropRect;
    NSDictionary * _sandboxExtensionTokens;
    NSString * _suggestedName;
    NSOrderedSet * _typeIdentifiers;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } acceptableCropRect;
@property (nonatomic) bool allowsItemProviderOpenInPlace;
@property (nonatomic, copy) NSDictionary *filePromiseURLs;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } normalizedFaceAreaRect;
@property (nonatomic) unsigned long long pixelHeight;
@property (nonatomic) unsigned long long pixelWidth;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } preferredCropRect;
@property (nonatomic, copy) NSDictionary *sandboxExtensionTokens;
@property (nonatomic, copy) NSString *suggestedName;
@property (nonatomic, copy) NSOrderedSet *typeIdentifiers;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })acceptableCropRect;
- (bool)allowsItemProviderOpenInPlace;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)filePromiseURLs;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedFaceAreaRect;
- (unsigned long long)pixelHeight;
- (unsigned long long)pixelWidth;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })preferredCropRect;
- (id)sandboxExtensionTokens;
- (void)setAcceptableCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setAllowsItemProviderOpenInPlace:(bool)arg1;
- (void)setFilePromiseURLs:(id)arg1;
- (void)setNormalizedFaceAreaRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPixelHeight:(unsigned long long)arg1;
- (void)setPixelWidth:(unsigned long long)arg1;
- (void)setPreferredCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setSandboxExtensionTokens:(id)arg1;
- (void)setSuggestedName:(id)arg1;
- (void)setTypeIdentifiers:(id)arg1;
- (id)suggestedName;
- (id)typeIdentifiers;

@end
