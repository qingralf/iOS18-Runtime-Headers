/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing
 */

@interface QLThumbnailReply : NSObject <NSSecureCoding> {
    NSArray * _bitmapImages;
    struct CGColorSpace { } * _colorSpace;
    struct CGSize { 
        double width; 
        double height; 
    }  _contextSize;
    id /* block */  _drawInContextBlock;
    id /* block */  _drawingBlock;
    NSArray * _images;
    IOSurface * _ioSurface;
    id /* block */  _ioSurfaceAsyncBlock;
    id /* block */  _ioSurfaceBlock;
    QLThumbnailItem * _item;
    QLThumbnailMetadata * _metadata;
    id /* block */  _rendererBlock;
    unsigned long long  _type;
}

@property (nonatomic, copy) NSArray *bitmapImages;
@property (nonatomic) struct CGColorSpace { }*colorSpace;
@property (nonatomic) struct CGSize { double x1; double x2; } contextSize;
@property (nonatomic, copy) id /* block */ drawInContextBlock;
@property (nonatomic, copy) id /* block */ drawingBlock;
@property (nonatomic, copy) NSString *extensionBadge;
@property int iconFlavor;
@property (nonatomic, copy) NSArray *images;
@property int inlinePreviewMode;
@property (nonatomic, retain) IOSurface *ioSurface;
@property (nonatomic, copy) id /* block */ ioSurfaceAsyncBlock;
@property (nonatomic, copy) id /* block */ ioSurfaceBlock;
@property bool isLowQuality;
@property (nonatomic, retain) QLThumbnailItem *item;
@property (nonatomic, retain) QLThumbnailMetadata *metadata;
@property (nonatomic, copy) id /* block */ rendererBlock;
@property (nonatomic) unsigned long long type;

+ (id)replyWithContextSize:(struct CGSize { double x1; double x2; })arg1 currentContextDrawingBlock:(id /* block */)arg2;
+ (id)replyWithContextSize:(struct CGSize { double x1; double x2; })arg1 drawingBlock:(id /* block */)arg2;
+ (id)replyWithContextSize:(struct CGSize { double x1; double x2; })arg1 ioSurfaceAsyncBlock:(id /* block */)arg2;
+ (id)replyWithContextSize:(struct CGSize { double x1; double x2; })arg1 ioSurfaceBlock:(id /* block */)arg2;
+ (id)replyWithData:(id)arg1 contentType:(id)arg2;
+ (id)replyWithFileURL:(id)arg1 contentType:(id)arg2;
+ (id)replyWithImageFileURL:(id)arg1;
+ (id)replyWithImageRenderer:(id /* block */)arg1;
+ (id)replyWithImages:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)bitmapImages;
- (struct CGColorSpace { }*)colorSpace;
- (struct CGSize { double x1; double x2; })contextSize;
- (id)debugDescription;
- (id /* block */)drawInContextBlock;
- (id /* block */)drawingBlock;
- (void)encodeWithCoder:(id)arg1;
- (id)extensionBadge;
- (int)iconFlavor;
- (id)images;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (int)inlinePreviewMode;
- (id)ioSurface;
- (id /* block */)ioSurfaceAsyncBlock;
- (id /* block */)ioSurfaceBlock;
- (bool)isLowQuality;
- (id)item;
- (id)metadata;
- (id /* block */)rendererBlock;
- (void)setBitmapImages:(id)arg1;
- (void)setColorSpace:(struct CGColorSpace { }*)arg1;
- (void)setContextSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setDrawInContextBlock:(id /* block */)arg1;
- (void)setDrawingBlock:(id /* block */)arg1;
- (void)setExtensionBadge:(id)arg1;
- (void)setIconFlavor:(int)arg1;
- (void)setImages:(id)arg1;
- (void)setInlinePreviewMode:(int)arg1;
- (void)setIoSurface:(id)arg1;
- (void)setIoSurfaceAsyncBlock:(id /* block */)arg1;
- (void)setIoSurfaceBlock:(id /* block */)arg1;
- (void)setIsLowQuality:(bool)arg1;
- (void)setItem:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setRendererBlock:(id /* block */)arg1;
- (void)setType:(unsigned long long)arg1;
- (unsigned long long)type;

@end
