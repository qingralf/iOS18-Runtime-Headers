/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SwiftUI.framework/SwiftUI
 */

@interface _TtGC7SwiftUI14_UIHostingViewVOS_20_IntelligenceSupport22AnimatingSummarySymbol_ : UIView <SwiftUI.XcodeViewDebugDataProvider> {
    void $__lazy_storage_$_foreignSubviews;
    void $__lazy_storage_$_presentationModeLocation;
    void $__lazy_storage_$_scenePresentationModeLocation;
    void $__lazy_storage_$_sheetBridge;
    void _base;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _rootView;
    void allowFrameChanges;
    void allowUIKitAnimations;
    void appliesContainerBackgroundFallbackColor;
    void avkitCaptureButtonBridge;
    void colorScheme;
    void containerBackgroundFallbackColor;
    void contextMenuBridge;
    void currentAccessibilityFocusStore;
    void currentEvent;
    void delegate;
    void deprecatedActionSheetBridge;
    void deprecatedAlertBridge;
    void disabledBackgroundColor;
    void dragBridge;
    void editMenuBridge;
    void eventBridge;
    void explicitSafeAreaInsets;
    void feedbackCache;
    void focusBridge;
    void focusedValues;
    void inspectorBridge;
    void invalidatesIntrinsicContentSizeOnIdealSizeChange;
    void isInsertingRenderedSubview;
    void keyboardAnimation;
    void keyboardFrame;
    void keyboardScreen;
    void keyboardSeed;
    void largeContentViewerInteractionBridge;
    void pencilEventsBridge;
    void pointerBridge;
    void rootViewDelegate;
    void safeAreaRegions;
    void sceneBridge;
    void scenePresentationBridge;
    void scrollTest;
    void shareConfigurationBridge;
    void sharingActivityPickerBridge;
    void shouldUpdateAccessibilityFocus;
    void statusBarBridge;
    void tooltipBridge;
    void transparentBackgroundReasons;
    void viewController;
}

@property (nonatomic, readonly) bool _accessibilityIsSwiftUIHostingCellView;
@property (nonatomic, readonly) unsigned long long _axesForDerivingIntrinsicContentSizeFromLayoutSize;
@property (nonatomic, readonly) NSArray *_childGestureRecognizerContainers;
@property (nonatomic, readonly) Class _intelligenceBaseClass;
@property (nonatomic, readonly) bool _layoutHeightDependsOnWidth;
@property (nonatomic, copy) NSArray *accessibilityElements;
@property (nonatomic, copy) NSArray *automationElements;
@property (nonatomic, retain) UIColor *backgroundColor;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (nonatomic, readonly) bool canBecomeFirstResponder;
@property (nonatomic) bool clipsToBounds;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property (nonatomic, readonly) UIResponder *nextResponder;
@property (nonatomic, readonly) NSArray *preferredFocusEnvironments;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } safeAreaInsets;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } transform;
@property (nonatomic) struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; } transform3D;

+ (bool)_supportsInvalidatingFocusCache;
+ (Class)layerClass;

- (void).cxx_destruct;
- (bool)_accessibilityAutomationHitTestReverseOrder;
- (bool)_accessibilityIsSwiftUIHostingCellView;
- (bool)_accessibilityIsSwiftUIHostingView;
- (unsigned long long)_axesForDerivingIntrinsicContentSizeFromLayoutSize;
- (struct { double x1; double x2; })_baselineOffsetsAtSize:(struct CGSize { double x1; double x2; })arg1;
- (id)_childGestureRecognizerContainers;
- (void)_didChangeToFirstResponder:(id)arg1;
- (void)_geometryChanged:(void*)arg1 forAncestor:(id)arg2;
- (id)_hitTestWithContext:(id)arg1;
- (Class)_intelligenceBaseClass;
- (void)_intelligenceCollectContentIn:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 collector:(id)arg2;
- (void)_intelligenceCollectRemoteContentIn:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 remoteContextWrapper:(id)arg2;
- (bool)_layoutHeightDependsOnWidth;
- (struct CGSize { double x1; double x2; })_layoutSizeThatFits:(struct CGSize { double x1; double x2; })arg1 fixedAxes:(unsigned long long)arg2;
- (bool)_swiftuiReturnsSubviewsInFocusItemsInRect;
- (void)accessibilityBooleanDidChange:(id)arg1;
- (long long)accessibilityElementCount;
- (id)accessibilityElements;
- (void)accessibilityFocusedElementDidChange:(id)arg1;
- (void)accessibilityReinstantiateIfNeeded;
- (bool)accessibilityShouldEnumerateContainerElementsArrayDirectly;
- (id)automationElements;
- (id)backgroundColor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (bool)canBecomeFirstResponder;
- (void)clarityUISettingDidChange:(id)arg1;
- (bool)clipsToBounds;
- (void)dealloc;
- (void)didAddSubview:(id)arg1;
- (void)didMoveToWindow;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)focusItemsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)keyboardFrameWillChangeWithNotification:(id)arg1;
- (void)keyboardWillHideWithNotification:(id)arg1;
- (void)keyboardWillShowWithNotification:(id)arg1;
- (void)layoutSubviews;
- (id)makeViewDebugData;
- (id)nextResponder;
- (id)preferredFocusEnvironments;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaInsets;
- (void)safeAreaInsetsDidChange;
- (void)setAccessibilityElements:(id)arg1;
- (void)setAutomationElements:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setClipsToBounds:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setTransform3D:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)setTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)swiftui_insertRenderedSubview:(id)arg1 atIndex:(long long)arg2;
- (void)tintColorDidChange;
- (void)traitCollectionDidChange:(id)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })transform3D;
- (void)willRemoveSubview:(id)arg1;

@end
