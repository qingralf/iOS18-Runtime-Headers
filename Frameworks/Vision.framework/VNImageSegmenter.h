/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Vision.framework/Vision
 */

@interface VNImageSegmenter : VNE5RTBasedDetector {
    VNFgBgE5MLInstanceSegmenter * _fgbgInstanceSegmenter;
    unsigned long long  _minimumMaskPixelCount;
}

+ (id)E5RTProgramLibraryForConfigurationOptions:(id)arg1 error:(id*)arg2;
+ (id)_observationFeatureNameToSegmenterCategoryMappingsForOriginatingRequestSpecifier:(id)arg1 error:(id*)arg2;
+ (id)configurationOptionKeysForDetectorKey;
+ (id)createE5RTFunctionDescriptorForConfigurationOptions:(id)arg1 error:(id*)arg2;
+ (long long)maximumTargetPoints;
+ (id)modelDropRevisionForConfigurationOptions:(id)arg1 error:(id*)arg2;
+ (bool)modelFullyANEResident;
+ (id)modelURLForConfigurationOptions:(id)arg1 error:(id*)arg2;
+ (id)supportedComputeStageDevicesForOptions:(id)arg1 error:(id*)arg2;
+ (id)supportedFeaturesForOptions:(id)arg1 error:(id*)arg2;
+ (bool)supportsExecution;

- (void).cxx_destruct;
- (bool)_addInstanceMaskBuffersForCategory:(id)arg1 instanceFeatures:(id)arg2 toInstanceMaskArray:(id)arg3 connectedComponentResult:(const void*)arg4 featureInstanceMaskMap:(id)arg5 categoryInstanceMaskMap:(id)arg6 options:(id)arg7 error:(id*)arg8;
- (struct __CVBuffer { }*)_createPixelBufferOfFormat:(unsigned int)arg1 fromImageBuffer:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; })arg2 ofType:(int)arg3 options:(id)arg4 error:(id*)arg5;
- (struct __CVBuffer { }*)_createPixelBufferOfFormat:(unsigned int)arg1 fromSegmenter:(id)arg2 instanceFeatures:(id)arg3 category:(int)arg4 options:(id)arg5 error:(id*)arg6;
- (struct __CVBuffer { }*)_createPixelBufferOfFormat:(unsigned int)arg1 fromSegmenter:(id)arg2 instanceFeatures:(id)arg3 options:(id)arg4 error:(id*)arg5;
- (bool)_instanceMask:(struct __CVBuffer { }*)arg1 containsTargetPoints:(id)arg2;
- (id)_observationsFromSegmenter:(id)arg1 instanceFeatures:(id)arg2 originatingRequestSpecifier:(id)arg3 options:(id)arg4 maskPixelFormatType:(unsigned int)arg5 error:(id*)arg6;
- (struct vector<float, std::allocator<float>> { float *x1; float *x2; struct __compressed_pair<float *, std::allocator<float>> { float *x_3_1_1; } x3; })_oneDimensionalArrayFromInputVNPointArray:(id)arg1;
- (bool)_validatePoints:(id)arg1 error:(id*)arg2;
- (bool)completeInitializationForSession:(id)arg1 error:(id*)arg2;
- (struct __CVBuffer { }*)createAllInstancesMaskFromForegroundCC:(const void*)arg1 backgroundCC:(const void*)arg2 options:(id)arg3 error:(id*)arg4;
- (bool)createRegionOfInterestCrop:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(id)arg2 qosClass:(unsigned int)arg3 warningRecorder:(id)arg4 pixelBuffer:(struct __CVBuffer {}**)arg5 error:(id*)arg6 progressHandler:(id /* block */)arg7;
- (id)newE5RTExecutionInputsForFunctionDescriptor:(id)arg1 croppedPixelBuffer:(struct __CVBuffer { }*)arg2 options:(id)arg3 error:(id*)arg4;
- (id)observationsFromE5RTExecutionOutputs:(id)arg1 forFunctionDescriptor:(id)arg2 originatingRequestSpecifier:(id)arg3 options:(id)arg4 error:(id*)arg5;

@end
