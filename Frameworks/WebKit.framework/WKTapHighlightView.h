/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface WKTapHighlightView : UIView {
    struct RetainPtr<UIColor> { 
        void *m_ptr; 
    }  _color;
    struct Radii { 
        struct FloatSize { 
            float m_width; 
            float m_height; 
        } m_topLeft; 
        struct FloatSize { 
            float m_width; 
            float m_height; 
        } m_topRight; 
        struct FloatSize { 
            float m_width; 
            float m_height; 
        } m_bottomLeft; 
        struct FloatSize { 
            float m_width; 
            float m_height; 
        } m_bottomRight; 
    }  _cornerRadii;
    struct Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { 
        struct FloatRect {} *m_buffer; 
        unsigned int m_capacity; 
        unsigned int m_size; 
    }  _innerFrames;
    struct Vector<WebCore::FloatQuad, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { 
        struct FloatQuad {} *m_buffer; 
        unsigned int m_capacity; 
        unsigned int m_size; 
    }  _innerQuads;
    float  _minimumCornerRadius;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)cleanUp;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setColor:(id)arg1;
- (void)setCornerRadii:(struct Radii { struct FloatSize { float x_1_1_1; float x_1_1_2; } x1; struct FloatSize { float x_2_1_1; float x_2_1_2; } x2; struct FloatSize { float x_3_1_1; float x_3_1_2; } x3; struct FloatSize { float x_4_1_1; float x_4_1_2; } x4; }*)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFrames:(void*)arg1;
- (void)setMinimumCornerRadius:(float)arg1;
- (void)setQuads:(void*)arg1 boundaryRect:(const struct FloatRect { struct FloatPoint { float x_1_1_1; float x_1_1_2; } x1; struct FloatSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2;

@end
