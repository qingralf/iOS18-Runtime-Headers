/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface WKWebExtensionController : NSObject <WKObject> {
    <WKWebExtensionControllerDelegate> * _delegate;
    struct ObjectStorage<WebKit::WebExtensionController> { 
        struct type { 
            unsigned char __lx[200]; 
        } data; 
    }  _webExtensionController;
}

@property (readonly) struct Object { int (**x1)(); void *x2; }*_apiObject;
@property (getter=_inTestingMode, setter=_setTestingMode:, nonatomic) bool _testingMode;
@property (nonatomic, readonly) void*_webExtensionController;
@property (nonatomic, readonly, copy) WKWebExtensionControllerConfiguration *configuration;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <WKWebExtensionControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSSet *extensionContexts;
@property (nonatomic, readonly, copy) NSSet *extensions;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)allExtensionDataTypes;
+ (void)initialize;

- (void).cxx_destruct;
- (struct Object { int (**x1)(); void *x2; }*)_apiObject;
- (bool)_inTestingMode;
- (void)_objc_initiateDealloc;
- (void)_setTestingMode:(bool)arg1;
- (void*)_webExtensionController;
- (id)configuration;
- (void)dealloc;
- (id)delegate;
- (void)didActivateTab:(id)arg1 previousActiveTab:(id)arg2;
- (void)didChangeTabProperties:(unsigned long long)arg1 forTab:(id)arg2;
- (void)didCloseTab:(id)arg1 windowIsClosing:(bool)arg2;
- (void)didCloseWindow:(id)arg1;
- (void)didDeselectTabs:(id)arg1;
- (void)didFocusWindow:(id)arg1;
- (void)didMoveTab:(id)arg1 fromIndex:(unsigned long long)arg2 inWindow:(id)arg3;
- (void)didOpenTab:(id)arg1;
- (void)didOpenWindow:(id)arg1;
- (void)didReplaceTab:(id)arg1 withTab:(id)arg2;
- (void)didSelectTabs:(id)arg1;
- (id)extensionContextForExtension:(id)arg1;
- (id)extensionContextForURL:(id)arg1;
- (id)extensionContexts;
- (id)extensions;
- (void)fetchDataRecordOfTypes:(id)arg1 forExtensionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)fetchDataRecordsOfTypes:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)init;
- (id)initWithConfiguration:(id)arg1;
- (bool)loadExtensionContext:(id)arg1 error:(id*)arg2;
- (void)removeDataOfTypes:(id)arg1 fromDataRecords:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setDelegate:(id)arg1;
- (bool)unloadExtensionContext:(id)arg1 error:(id*)arg2;

@end
