/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCAudioCaptionsCoordinator : VCObject <VCAudioCaptionsDelegate, VCCaptionsSource> {
    VCAudioCaptions * _audioCaptions;
    VCAudioCaptionsBufferInfoCollection * _bufferInfos;
    <VCCaptionsSourceDelegate> * _captionsDelegate;
    long long  _currentlyCaptionedStreamToken;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    bool  _forceCaptionsVoiceDetection;
    VCCaptionsGibberishDetector * _gibberishDetector;
    unsigned int  _ignoreCaptionsForThreads;
    bool  _invalidated;
    double  _lowPriorityThresholdSeconds;
    bool  _oneToOneEnabled;
    struct opaqueRTCReporting { } * _reportingAgent;
    struct __CFAllocator { } * _secondarySampleBufferInfoAllocator;
    struct __CFAllocator { } * _secondarySamplesAllocator;
    struct opaqueCMSimpleQueue { } * _secondarySamplesQueue;
    NSObject<OS_dispatch_semaphore> * _startStopSemaphore;
    long long  _state;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _stateLock;
    struct tagVCAudioCaptionsCoordinatorVoiceDetectorInfo { 
        struct opaqueVCVoiceDetector {} *voiceDetector; 
        bool isVoiceDetectorRunning; 
        struct tagVCAudioFrameFormat { 
            struct AudioStreamBasicDescription { 
                double mSampleRate; 
                unsigned int mFormatID; 
                unsigned int mFormatFlags; 
                unsigned int mBytesPerPacket; 
                unsigned int mFramesPerPacket; 
                unsigned int mBytesPerFrame; 
                unsigned int mChannelsPerFrame; 
                unsigned int mBitsPerChannel; 
                unsigned int mReserved; 
            } format; 
            unsigned int samplesPerFrame; 
        } lastUsedAudioFormat; 
    }  _voiceDetectorInfoPrimary;
    struct tagVCAudioCaptionsCoordinatorVoiceDetectorInfo { 
        struct opaqueVCVoiceDetector {} *voiceDetector; 
        bool isVoiceDetectorRunning; 
        struct tagVCAudioFrameFormat { 
            struct AudioStreamBasicDescription { 
                double mSampleRate; 
                unsigned int mFormatID; 
                unsigned int mFormatFlags; 
                unsigned int mBytesPerPacket; 
                unsigned int mFramesPerPacket; 
                unsigned int mBytesPerFrame; 
                unsigned int mChannelsPerFrame; 
                unsigned int mBitsPerChannel; 
                unsigned int mReserved; 
            } format; 
            unsigned int samplesPerFrame; 
        } lastUsedAudioFormat; 
    }  _voiceDetectorInfoSecondary;
}

@property (nonatomic, readonly) bool captionsEnabled;
@property (nonatomic, readonly) bool captionsSupported;
@property (nonatomic) long long currentlyCaptionedStreamToken;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long state;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x1; } stateLock;
@property (readonly) Class superclass;

- (id)captionsDelegate;
- (bool)captionsEnabled;
- (bool)captionsSupported;
- (void)cleanUpSecondaryBufferQueue;
- (long long)currentlyCaptionedStreamToken;
- (void)dealloc;
- (void)didDisableCaptions:(bool)arg1 error:(id)arg2;
- (void)didEnableCaptions:(bool)arg1 error:(id)arg2;
- (void)didStartCaptioningWithReason:(int)arg1 streamToken:(long long)arg2;
- (void)didStopCaptioningWithReason:(int)arg1 streamToken:(long long)arg2;
- (void)didUpdateCaptions:(id)arg1;
- (void)enableCaptions:(bool)arg1;
- (id)initWithOneToOneEnabled:(bool)arg1 isLocal:(bool)arg2 taskIdentifier:(id)arg3 reportingAgent:(struct opaqueRTCReporting { }*)arg4;
- (void)invalidate;
- (bool)lockedCaptionsEnabled;
- (void)lockedEnableCaptions:(bool)arg1;
- (void)prewarmCaptions;
- (void)registerCaptionsEventDelegate:(id)arg1;
- (bool)registerStreamWithConfig:(const struct tagVCAudioCaptionsStreamConfig { long long x1; struct AudioStreamBasicDescription { double x_2_1_1; unsigned int x_2_1_2; unsigned int x_2_1_3; unsigned int x_2_1_4; unsigned int x_2_1_5; unsigned int x_2_1_6; unsigned int x_2_1_7; unsigned int x_2_1_8; unsigned int x_2_1_9; } x2; bool x3; }*)arg1;
- (void)setCaptionsLocale:(id)arg1;
- (void)setCaptionsUsage:(id)arg1;
- (void)setCurrentlyCaptionedStreamToken:(long long)arg1;
- (void)setOneToOneModeEnabled:(bool)arg1;
- (void)setState:(long long)arg1;
- (void)setStateLock:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (bool)setUpSecondaryBufferQueue;
- (long long)state;
- (struct os_unfair_lock_s { unsigned int x1; })stateLock;

@end
