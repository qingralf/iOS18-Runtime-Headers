/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCVideoStream : VCMediaStream <VCMediaStreamRateAdaptationDelegate, VCMediaStreamSyncDestination, VCRedundancyControllerDelegate, VCVideoCaptureClient, VCVideoReceiverDelegate, VCVideoSink> {
    unsigned int  _baseQualityIndex;
    struct opaqueCMBufferQueue { } * _bufferQueue;
    NSObject<OS_dispatch_semaphore> * _bufferQueueSemaphore;
    unsigned int  _cachedConnectionMTU;
    VideoAttributes * _cachedRemoteScreenAttributes;
    struct __CVBuffer { } * _cachedRemoteVideoFrame;
    VCVideoCaptureConverter * _captureConverter;
    int  _captureSource;
    long long  _captureSourceID;
    struct __CFDictionary { } * _colorInfo;
    unsigned int  _constantTransportOverhead;
    unsigned short  _currentStreamID;
    unsigned int  _customHeight;
    unsigned int  _customWidth;
    bool  _didReceiveFirstFrame;
    double  _externalOutputVideoLatency;
    double  _fecRatio;
    bool  _haveReportedPerfTimers;
    double  _initTime;
    unsigned int  _initialTargetBitrate;
    bool  _isCompoundStreamIDsIncreased;
    bool  _isEndToEndBasedBandwidthProbingEnabled;
    bool  _isRemoteMediaStalled;
    bool  _isServerBasedBandwidthProbingEnabled;
    bool  _isTemporalScalingEnabled;
    _Atomic bool  _isVideoCaptureRegistered;
    NSObject<OS_dispatch_queue> * _lastDecodedFrameQueue;
    double  _lastDecodedVideoFrameTime;
    int  _lastDisplayedFromImageQueueCount;
    int  _lastDroppedFromImageQueueCount;
    unsigned char  _lastMediaPriority;
    double  _lastMediaStallReportTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastSentFrameHostTimeBeforeStop;
    unsigned int  _lastSentFrameRTPTimestampBeforeStop;
    double  _lastStatisticsCollectorVideoStallTotalUpdateTime;
    unsigned int  _mediaQueueSizeInMillisecond;
    double  _mediaStallReportRepeatInterval;
    double  _mediaStallTimeout;
    VCRedundancyControllerVideo * _redundancyController;
    VCImageQueue * _remoteQueue;
    unsigned int  _reportingDefaultRealtimePeriod;
    int  _reportingModuleID;
    unsigned int  _rtpTimestampRate;
    unsigned int  _screenDisplayID;
    bool  _sendContinuousStallMessages;
    NSNumber * _sendingStreamID;
    bool  _shouldCacheRemoteVideoFrame;
    bool  _shouldEnableFaceZoom;
    AVCStatisticsCollector * _statisticsCollector;
    int  _streamInputCaptureSource;
    NSNumber * _targetStreamID;
    unsigned short  _temporalScalingBaseLayerStreamID;
    unsigned int  _tilesPerFrame;
    long long  _type;
    unsigned int  _uplinkOperatingBitrate;
    VCVideoReceiverBase * _videoReceiver;
    VCVideoRule * _videoRule;
    id  _videoStreamDelegate;
    struct tagVCVideoStreamDelegateRealtimeInstanceVTable { 
        int (*remoteScreenAttributesDidChange)(); 
    }  _videoStreamDelegateFunctions;
    VCVideoTransmitterBase * _videoTransmitter;
    struct OpaqueFigCFWeakReference { } * _weakStream;
}

@property (nonatomic, readonly) double activeVideoStallDuration;
@property (nonatomic) unsigned int customHeight;
@property (nonatomic) unsigned int customWidth;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didReceiveFirstFrame;
@property (nonatomic) double fecRatio;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCompoundStreamIDsIncreased;
@property (nonatomic) bool isEndToEndBasedBandwidthProbingEnabled;
@property (nonatomic) bool isServerBasedBandwidthProbingEnabled;
@property (nonatomic, readonly) bool isTemporalScalingEnabled;
@property (nonatomic, readonly) unsigned int lastDisplayedFrameRTPTimestamp;
@property double lastSentAudioHostTime;
@property unsigned int lastSentAudioSampleTime;
@property (readonly) unsigned int networkMTU;
@property (nonatomic) unsigned int screenDisplayID;
@property (nonatomic, readonly) NSNumber *sendingStreamID;
@property (nonatomic) bool shouldEnableFaceZoom;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int targetBitrateChangeCounter;
@property (nonatomic) unsigned int targetEncoderBitrate;
@property (nonatomic, retain) NSNumber *targetStreamID;
@property (readonly) VCVideoReceiverBase *videoReceiver;
@property (getter=getVideoReceiverFeedbackDelegate, nonatomic) <VCVideoReceiverFeedbackDelegate> *videoReceiverFeedbackDelegate;
@property (readonly) double videoRxFrameRate;
@property (readonly) VCVideoTransmitterBase *videoTransmitter;

+ (id)capabilities;
+ (bool)isFeatureListStringExpectedForStreamType:(long long)arg1;
+ (bool)isLowLatencyStreamType:(long long)arg1;
+ (id)newFeatureListStringsWithConfiguration:(id)arg1;
+ (bool)shouldEnableRateControlForStreamType:(long long)arg1;
+ (bool)shouldRegisterReportingForStreamType:(long long)arg1;
+ (bool)shouldUseRandomRTPTimestampWithType:(long long)arg1;
+ (id)supportedVideoPayloads;
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting { }*)arg3;

- (double)activeVideoStallDuration;
- (void)addReceiverStreamConfigsToReceiverConfig:(struct tagVCVideoReceiverConfig { unsigned int x1; struct tagVCVideoReceiverStreamConfig { struct tagVCVideoReceiverStreamIDInfo { unsigned short x_1_2_1; unsigned short x_1_2_2; unsigned short x_1_2_3; unsigned int x_1_2_4; unsigned short x_1_2_5[9]; unsigned short x_1_2_6[9]; } x_2_1_1; struct tagHANDLE {} *x_2_1_2; struct __CFDictionary {} *x_2_1_3; bool x_2_1_4; unsigned short x_2_1_5; unsigned char x_2_1_6; bool x_2_1_7; bool x_2_1_8; struct tagVCCryptor {} *x_2_1_9; void *x_2_1_10; void *x_2_1_11; int x_2_1_12; bool x_2_1_13; bool x_2_1_14; bool x_2_1_15; int x_2_1_16; bool x_2_1_17; bool x_2_1_18; } x2[9]; int x3; int x4; long long x5; int x6; int x7; bool x8; int x9; unsigned int x10; int x11; int x12; int x13; int x14; int x15; int x16; bool x17; bool x18; bool x19; double x20; void *x21; int (*x22)(); int (*x23)(); int (*x24)(); int (*x25)(); int (*x26)(); int (*x27)(); int (*x28)(); unsigned long long x29; bool x30; unsigned short x31; bool x32; struct tagWRMMetricsInfo {} *x33; unsigned int x34; bool x35; bool x36; bool x37; bool x38; }*)arg1 streamConfig:(id)arg2;
- (void)avConferencePreviewError:(id)arg1;
- (void)avConferenceScreenCaptureError:(id)arg1;
- (void)cameraAvailabilityDidChange:(bool)arg1;
- (void)cleanupBeforeReconfigure:(id)arg1;
- (void)cleaunpReceiverConfig:(struct tagVCVideoReceiverConfig { unsigned int x1; struct tagVCVideoReceiverStreamConfig { struct tagVCVideoReceiverStreamIDInfo { unsigned short x_1_2_1; unsigned short x_1_2_2; unsigned short x_1_2_3; unsigned int x_1_2_4; unsigned short x_1_2_5[9]; unsigned short x_1_2_6[9]; } x_2_1_1; struct tagHANDLE {} *x_2_1_2; struct __CFDictionary {} *x_2_1_3; bool x_2_1_4; unsigned short x_2_1_5; unsigned char x_2_1_6; bool x_2_1_7; bool x_2_1_8; struct tagVCCryptor {} *x_2_1_9; void *x_2_1_10; void *x_2_1_11; int x_2_1_12; bool x_2_1_13; bool x_2_1_14; bool x_2_1_15; int x_2_1_16; bool x_2_1_17; bool x_2_1_18; } x2[9]; int x3; int x4; long long x5; int x6; int x7; bool x8; int x9; unsigned int x10; int x11; int x12; int x13; int x14; int x15; int x16; bool x17; bool x18; bool x19; double x20; void *x21; int (*x22)(); int (*x23)(); int (*x24)(); int (*x25)(); int (*x26)(); int (*x27)(); int (*x28)(); unsigned long long x29; bool x30; unsigned short x31; bool x32; struct tagWRMMetricsInfo {} *x33; unsigned int x34; bool x35; bool x36; bool x37; bool x38; }*)arg1;
- (id)clientCaptureRule;
- (void)collectImageQueuePerformanceMetrics:(struct __CFDictionary { }*)arg1;
- (void)collectRxChannelMetrics:(struct { unsigned int x1; unsigned int x2[5]; unsigned int x3; double x4; struct CGSize { double x_5_1_1; double x_5_1_2; } x5; double x6; unsigned int x7; double x8; unsigned int x9; unsigned int x10; }*)arg1;
- (void)collectRxChannelMetrics:(struct { unsigned int x1; unsigned int x2[5]; unsigned int x3; double x4; struct CGSize { double x_5_1_1; double x_5_1_2; } x5; double x6; unsigned int x7; double x8; unsigned int x9; unsigned int x10; }*)arg1 interval:(float)arg2;
- (void)collectTxChannelMetrics:(struct { unsigned int x1; unsigned int x2[5]; unsigned int x3; double x4; struct CGSize { double x_5_1_1; double x_5_1_2; } x5; double x6; unsigned int x7; double x8; unsigned int x9; unsigned int x10; }*)arg1;
- (void)configureMediaStallSettingsWithConfig:(id)arg1;
- (bool)configureStreamInputCaptureSourceWithStreamInputID:(long long)arg1 frameRate:(unsigned int)arg2;
- (id /* block */)copyOnVideoFrameBlock;
- (unsigned int)customHeight;
- (unsigned int)customWidth;
- (void)dealloc;
- (void)deregisterCurrentStreamInputCaptureSource;
- (void)deregisterForVideoCapture;
- (void)destroyVideoModules;
- (void)destroyVideoReceiver;
- (void)destroyVideoTransmitter;
- (bool)didReceiveFirstFrame;
- (unsigned int)dumpIDFromCallID;
- (bool)enableRateControlFeebackInConfig:(id)arg1;
- (void)enableRedundancyController:(id)arg1;
- (double)fecRatio;
- (void)gatherRealtimeStats:(struct __CFDictionary { }*)arg1;
- (void)generateKeyFrameWithFIRType:(int)arg1;
- (struct __CFDictionary { }*)getClientSpecificUserInfo;
- (unsigned int)getMaxTemporalBitrateForStreamIDs:(id)arg1;
- (id)getReceiveStatsCollectorWithStreamConfig:(id)arg1;
- (struct __CFString { }*)getReportingClientName;
- (struct __CFString { }*)getReportingServiceName;
- (id)getTransmitMediaControllerWithStreamConfig:(id)arg1;
- (id)getTransmitStatsCollectorWithStreamConfig:(id)arg1;
- (id)getVideoReceiverFeedbackDelegate;
- (void)handleActiveConnectionChange:(id)arg1;
- (void)handleNWConnectionNotification:(struct tagVCNWConnectionNotification { unsigned char x1; unsigned char x2; unsigned char x3; union { int x_4_1_1; int x_4_1_2; } x4; union { struct ifnet_interface_advisory { union { struct { unsigned char x_1_4_1; unsigned char x_1_4_2; unsigned short x_1_4_3; int x_1_4_4; unsigned long long x_1_4_5; unsigned long long x_1_4_6; unsigned long long x_1_4_7; unsigned long long x_1_4_8; unsigned int x_1_4_9; unsigned int x_1_4_10; unsigned int x_1_4_11; unsigned char x_1_4_12; unsigned char x_1_4_13; unsigned short x_1_4_14; unsigned short x_1_4_15; unsigned char x_1_4_16; unsigned char x_1_4_17; unsigned char x_1_4_18; unsigned char x_1_4_19; } x_1_3_1; struct { struct ifnet_interface_advisory_header { unsigned char x_1_5_1; unsigned char x_1_5_2; unsigned char x_1_5_3; union { unsigned char x_4_6_1; unsigned char x_4_6_2; } x_1_5_4; } x_2_4_1; struct ifnet_interface_advisory_capacity { int x_2_5_1; unsigned long long x_2_5_2; unsigned long long x_2_5_3; unsigned long long x_2_5_4; unsigned long long x_2_5_5; unsigned int x_2_5_6; unsigned int x_2_5_7; unsigned int x_2_5_8; } x_2_4_2; union { struct ifnet_interface_advisory_wifi_context { unsigned char x_1_6_1; unsigned char x_1_6_2; unsigned short x_1_6_3; unsigned short x_1_6_4; unsigned char x_1_6_5; unsigned char x_1_6_6; unsigned char x_1_6_7; unsigned char x_1_6_8; unsigned char x_1_6_9; unsigned short x_1_6_10; unsigned int x_1_6_11[6]; } x_3_5_1; struct ifnet_interface_advisory_cell_context { unsigned char x_2_6_1; short x_2_6_2; short x_2_6_3; BOOL x_2_6_4; unsigned char x_2_6_5; unsigned char x_2_6_6; unsigned char x_2_6_7; unsigned char x_2_6_8; unsigned short x_2_6_9; unsigned short x_2_6_10; unsigned char x_2_6_11; unsigned char x_2_6_12; } x_3_5_2; } x_2_4_3; } x_1_3_2; } x_1_2_1; } x_5_1_1; } x5; }*)arg1;
- (void)handleNWConnectionPacketEvent:(struct packet_id { unsigned char x1; unsigned char x2; unsigned short x3; unsigned int x4; unsigned int x5; unsigned int x6; }*)arg1 eventType:(int)arg2;
- (void)handleThermalPressureNotification:(id)arg1;
- (void)handleVTPSendFailedWithData:(void*)arg1;
- (id)init;
- (void)initVideoTransmitter;
- (id)initWithTransportSessionID:(unsigned int)arg1 idsParticipantID:(unsigned long long)arg2 ssrc:(unsigned int)arg3 streamToken:(long long)arg4;
- (bool)isClientSpecificUserInfoSupported:(int)arg1;
- (bool)isCompoundStreamIDsIncreased;
- (bool)isEndToEndBasedBandwidthProbingEnabled;
- (bool)isLowLatencyStreamType;
- (bool)isScreenConfig:(id)arg1;
- (bool)isServerBasedBandwidthProbingEnabled;
- (bool)isTemporalScalingEnabled;
- (bool)isTransportIPv6;
- (unsigned int)lastDisplayedFrameRTPTimestamp;
- (double)lastReceivedRTCPPacketTime;
- (double)lastReceivedRTPPacketTime;
- (double)lastSentAudioHostTime;
- (unsigned int)lastSentAudioSampleTime;
- (unsigned int)maxFramerateFromStreamConfigs:(id)arg1;
- (unsigned int)networkMTU;
- (id)newScreenCaptureConfigForVideoConfig:(id)arg1;
- (id)newVideoTransmitterConfigWithVideoStreamConfig:(id)arg1;
- (void)onCallIDChanged;
- (bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id*)arg2;
- (void)onPauseWithCompletionHandler:(id /* block */)arg1;
- (void)onRTCPTimeout;
- (void)onRTPTimeout;
- (void)onResumeWithCompletionHandler:(id /* block */)arg1;
- (void)onSendRTCPPacket;
- (void)onStartWithCompletionHandler:(id /* block */)arg1;
- (void)onStopWithCompletionHandler:(id /* block */)arg1;
- (bool)onVideoFrame:(struct opaqueCMSampleBuffer { }*)arg1 frameTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 attribute:(struct { bool x1; bool x2; int x3; bool x4; bool x5; int x6; unsigned char x7; })arg3;
- (int)operatingModeForVideoStreamType:(long long)arg1;
- (void)overrideConfigWithDefaults:(id)arg1;
- (int)pickScreenDisplayMode;
- (void)rateAdaptation:(id)arg1 targetBitrateDidChange:(unsigned int)arg2 rateChangeCounter:(unsigned int)arg3;
- (void)reactionDidStart:(id)arg1;
- (struct tagVCNACKGeneratorStoreBagsConfig { unsigned char x1; float x2; float x3; bool x4; float x5[4]; float x6[4]; float x7; float x8; float x9; float x10; })readServerPacketRetransmissionsForVideoStoreBagConfig:(id)arg1;
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;
- (void)redundancyController:(id)arg1 redundancyVectorDidChange:(struct { unsigned short x1; struct { unsigned char x_2_1_1; unsigned char x_2_1_2; } x2[32]; })arg2;
- (bool)registerForCameraCaptureWithConfig:(id)arg1;
- (bool)registerForVideoCapture;
- (int)remoteCameraReportingClientType;
- (void)reportFailedToRegisterVideoFramesFromSource:(int)arg1 width:(int)arg2 height:(int)arg3 frameRate:(int)arg4;
- (void)reportStreamPerfTimings;
- (int)reportVideoStreamType;
- (void)requestLastDecodedFrame;
- (void)resetRemoteMediaStalled;
- (double)rtcpHeartbeatLeeway;
- (unsigned int)screenDisplayID;
- (int)screenSharingReportingClientType;
- (void)sendLastRemoteVideoFrame:(struct __CVBuffer { }*)arg1;
- (id)sendingStreamID;
- (void)setCustomHeight:(unsigned int)arg1;
- (void)setCustomWidth:(unsigned int)arg1;
- (void)setDeferredAssemblyEnabled:(bool)arg1;
- (void)setDidReceiveFirstFrame:(bool)arg1;
- (bool)setEncodingMode:(int)arg1;
- (void)setFECRedundancyVector:(const struct { unsigned short x1; struct { unsigned char x_2_1_1; unsigned char x_2_1_2; } x2[32]; }*)arg1;
- (void)setFecRatio:(double)arg1;
- (void)setIsEndToEndBasedBandwidthProbingEnabled:(bool)arg1;
- (void)setIsServerBasedBandwidthProbingEnabled:(bool)arg1;
- (void)setJitterBufferMode:(int)arg1;
- (void)setLastSentAudioHostTime:(double)arg1;
- (void)setLastSentAudioSampleTime:(unsigned int)arg1;
- (void)setLooseAVSyncEnabled:(bool)arg1;
- (void)setMediaSuggestion:(struct VCRateControlMediaSuggestion { bool x1; bool x2; bool x3; bool x4; bool x5; bool x6; bool x7; bool x8; }*)arg1;
- (void)setPeerSubscribedStreamIDs:(id)arg1;
- (bool)setRTPPayloads:(int*)arg1 numPayloads:(int)arg2 withError:(id*)arg3;
- (void)setScreenDisplayID:(unsigned int)arg1;
- (void)setShouldEnableFaceZoom:(bool)arg1;
- (void)setShouldEnableMLEnhance:(bool)arg1 streamID:(unsigned short)arg2;
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;
- (void)setTargetBitrateChangeCounter:(unsigned int)arg1;
- (void)setTargetEncoderBitrate:(unsigned int)arg1;
- (void)setTargetStreamID:(id)arg1;
- (void)setTransmitterStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;
- (void)setUplinkRetransmissionEnabled:(bool)arg1;
- (void)setVideoExpected:(bool)arg1;
- (void)setVideoReceiverFeedbackDelegate:(id)arg1;
- (void)setVideoStreamDelegate:(id)arg1 delegateFunctions:(const struct tagVCVideoStreamDelegateRealtimeInstanceVTable { int (*x1)(); }*)arg2;
- (void)setupColorInfo:(id)arg1;
- (void)setupCompoundStreamIDsWithStreamIDs:(id)arg1;
- (void)setupInternalRedundancyControllerWithStreamConfig:(id)arg1;
- (void)setupMultiwayVideoReceiverConfig:(struct tagVCVideoReceiverConfig { unsigned int x1; struct tagVCVideoReceiverStreamConfig { struct tagVCVideoReceiverStreamIDInfo { unsigned short x_1_2_1; unsigned short x_1_2_2; unsigned short x_1_2_3; unsigned int x_1_2_4; unsigned short x_1_2_5[9]; unsigned short x_1_2_6[9]; } x_2_1_1; struct tagHANDLE {} *x_2_1_2; struct __CFDictionary {} *x_2_1_3; bool x_2_1_4; unsigned short x_2_1_5; unsigned char x_2_1_6; bool x_2_1_7; bool x_2_1_8; struct tagVCCryptor {} *x_2_1_9; void *x_2_1_10; void *x_2_1_11; int x_2_1_12; bool x_2_1_13; bool x_2_1_14; bool x_2_1_15; int x_2_1_16; bool x_2_1_17; bool x_2_1_18; } x2[9]; int x3; int x4; long long x5; int x6; int x7; bool x8; int x9; unsigned int x10; int x11; int x12; int x13; int x14; int x15; int x16; bool x17; bool x18; bool x19; double x20; void *x21; int (*x22)(); int (*x23)(); int (*x24)(); int (*x25)(); int (*x26)(); int (*x27)(); int (*x28)(); unsigned long long x29; bool x30; unsigned short x31; bool x32; struct tagWRMMetricsInfo {} *x33; unsigned int x34; bool x35; bool x36; bool x37; bool x38; }*)arg1 forTransportStream:(id)arg2;
- (void)setupMultiwayVideoReceiverStreamSwitchInfo:(struct tagVCVideoReceiverStreamConfig { struct tagVCVideoReceiverStreamIDInfo { unsigned short x_1_1_1; unsigned short x_1_1_2; unsigned short x_1_1_3; unsigned int x_1_1_4; unsigned short x_1_1_5[9]; unsigned short x_1_1_6[9]; } x1; struct tagHANDLE {} *x2; struct __CFDictionary {} *x3; bool x4; unsigned short x5; unsigned char x6; bool x7; bool x8; struct tagVCCryptor {} *x9; void *x10; void *x11; int x12; bool x13; bool x14; bool x15; int x16; bool x17; bool x18; }*)arg1 forTransportStream:(id)arg2;
- (void)setupMultiwayVideoReceiverTemporalScalingConfig:(struct tagVCVideoReceiverStreamConfig { struct tagVCVideoReceiverStreamIDInfo { unsigned short x_1_1_1; unsigned short x_1_1_2; unsigned short x_1_1_3; unsigned int x_1_1_4; unsigned short x_1_1_5[9]; unsigned short x_1_1_6[9]; } x1; struct tagHANDLE {} *x2; struct __CFDictionary {} *x3; bool x4; unsigned short x5; unsigned char x6; bool x7; bool x8; struct tagVCCryptor {} *x9; void *x10; void *x11; int x12; bool x13; bool x14; bool x15; int x16; bool x17; bool x18; }*)arg1 forTransportStream:(id)arg2;
- (void)setupReportingAgent;
- (void)setupThermalNotifications;
- (void)setupVideoReceiver:(id)arg1 withTransmitterHandle:(struct tagHANDLE { int x1; }*)arg2;
- (void)setupVideoStream;
- (void)setupVideoTransmitterConfigColorInfo:(id)arg1;
- (bool)shouldEnableFaceZoom;
- (bool)shouldReportNetworkInterfaceType;
- (void)sourceFrameRateDidChange:(unsigned int)arg1;
- (void)startRateAdaptationWithStreamConfig:(id)arg1;
- (bool)startSynchronization:(id)arg1;
- (void)stopRateAdaptation;
- (void)stopSynchronization;
- (id)supportedPayloads;
- (unsigned int)targetBitrateChangeCounter;
- (unsigned int)targetEncoderBitrate;
- (id)targetStreamID;
- (void)thermalLevelDidChange:(int)arg1;
- (void)updateShouldCacheRemoteVideoFrame;
- (void)updateSourcePlayoutTime:(const struct tagVCMediaTime { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; double x2; }*)arg1;
- (void)updateVideoConfig:(id)arg1;
- (void)updateVideoReceiver:(id)arg1;
- (void)updateWindowState:(int)arg1 isLocal:(bool)arg2 windowRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (bool)useUEPForVideoConfig:(int)arg1;
- (bool)validateStreamConfiguration:(id)arg1 error:(id*)arg2;
- (bool)validateVideoStreamConfigurations:(id)arg1;
- (void)vcVideoReceiver:(id)arg1 didSwitchFromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;
- (void)vcVideoReceiver:(id)arg1 downlinkQualityDidChange:(id)arg2;
- (unsigned int)vcVideoReceiver:(id)arg1 receivedTMMBR:(unsigned int)arg2;
- (void)vcVideoReceiver:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2 firType:(int)arg3;
- (void)vcVideoReceiverRequestKeyFrame:(id)arg1 rtcpPSFBType:(unsigned int)arg2;
- (id)videoReceiver;
- (struct tagVCVideoReceiverConfig { unsigned int x1; struct tagVCVideoReceiverStreamConfig { struct tagVCVideoReceiverStreamIDInfo { unsigned short x_1_2_1; unsigned short x_1_2_2; unsigned short x_1_2_3; unsigned int x_1_2_4; unsigned short x_1_2_5[9]; unsigned short x_1_2_6[9]; } x_2_1_1; struct tagHANDLE {} *x_2_1_2; struct __CFDictionary {} *x_2_1_3; bool x_2_1_4; unsigned short x_2_1_5; unsigned char x_2_1_6; bool x_2_1_7; bool x_2_1_8; struct tagVCCryptor {} *x_2_1_9; void *x_2_1_10; void *x_2_1_11; int x_2_1_12; bool x_2_1_13; bool x_2_1_14; bool x_2_1_15; int x_2_1_16; bool x_2_1_17; bool x_2_1_18; } x2[9]; int x3; int x4; long long x5; int x6; int x7; bool x8; int x9; unsigned int x10; int x11; int x12; int x13; int x14; int x15; int x16; bool x17; bool x18; bool x19; double x20; void *x21; int (*x22)(); int (*x23)(); int (*x24)(); int (*x25)(); int (*x26)(); int (*x27)(); int (*x28)(); unsigned long long x29; bool x30; unsigned short x31; bool x32; struct tagWRMMetricsInfo {} *x33; unsigned int x34; bool x35; bool x36; bool x37; bool x38; })videoReceiverConfigWithVideoStreamConfig:(id)arg1;
- (struct tagVCVideoReceiverDelegateRealtimeInstanceVTable { int (*x1)(); int (*x2)(); })videoReceiverDelegateFunctions;
- (double)videoRxFrameRate;
- (struct tagVCVideoStreamReceiverConfig { struct tagHANDLE {} *x1; id x2; struct tagVCVideoReceiverDelegateRealtimeInstanceVTable { int (*x_3_1_1)(); int (*x_3_1_2)(); } x3; struct opaqueRTCReporting {} *x4; unsigned int x5; int x6; id x7; bool x8; void *x9; int (*x10)(); id x11; })videoStreamReceiverConfigWithDumpID:(unsigned int)arg1 reportingAgent:(struct opaqueRTCReporting { }*)arg2;
- (id)videoTransmitter;

@end
