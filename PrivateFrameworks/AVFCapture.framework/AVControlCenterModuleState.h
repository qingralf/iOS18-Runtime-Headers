/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVFCapture.framework/AVFCapture
 */

@interface AVControlCenterModuleState : NSObject {
    long long  _activeMicrophoneMode;
    NSString * _activeMicrophoneModeKey;
    bool  _auVoiceIOBypassVoiceProcessing;
    NSString * _auVoiceIOBypassVoiceProcessingKey;
    bool  _autoMicModeEnabled;
    NSString * _autoMicModeEnabledKey;
    float  _backgroundBlurAperture;
    NSString * _backgroundBlurApertureKey;
    long long  _backgroundBlurControlMode;
    NSString * _backgroundBlurControlModeKey;
    bool  _backgroundBlurEnabled;
    NSString * _backgroundBlurEnabledKey;
    bool  _backgroundBlurSupported;
    NSString * _backgroundBlurUnavailableReasonsKey;
    bool  _backgroundReplacementEnabled;
    NSString * _backgroundReplacementEnabledKey;
    struct __CVBuffer { } * _backgroundReplacementPixelBuffer;
    int  _backgroundReplacementPixelBufferFillHeight;
    int  _backgroundReplacementPixelBufferFillWidth;
    bool  _backgroundReplacementSupported;
    NSURL * _backgroundReplacementURL;
    NSString * _backgroundReplacementURLBookmarkKey;
    NSString * _backgroundReplacementUnavailableReasonsKey;
    NSString * _bundleID;
    long long  _centerStageControlMode;
    NSString * _centerStageControlModeKey;
    bool  _centerStageEnabled;
    NSString * _centerStageEnabledKey;
    NSString * _centerStageFieldOfViewRestrictedToWideKey;
    bool  _centerStageSupported;
    NSString * _centerStageUnavailableReasonsKey;
    double  _currentOriginalZoomFactor;
    double  _currentPanningAngleX;
    double  _currentPanningAngleY;
    bool  _deviceBasedModuleState;
    bool  _deviceSupportsManualFraming;
    NSString * _dockedTrackingActiveKey;
    NSString * _eligibleEffectsKey;
    bool  _gesturesEnabled;
    NSString * _gesturesEnabledDefaultKey;
    NSString * _gesturesEnabledKey;
    NSArray * _hiddenMicrophoneModes;
    NSString * _hiddenMicrophoneModesKey;
    bool  _holdingStateLock;
    bool  _isOptedInForBackgroundBlur;
    bool  _isOptedInForBackgroundReplacement;
    bool  _isOptedInForReactionEffects;
    bool  _isOptedInForStudioLight;
    long long  _manualFramingDeviceType;
    NSString * _manualFramingDeviceTypeKey;
    NSString * _manualFramingVideoZoomFactorKey;
    long long  _microphoneMode;
    NSString * _microphoneModeKey;
    bool  _observingDockedTrackingProprietaryDefaultKey;
    bool  _observingManualFramingProprietaryDefaultKeys;
    NSString * _oneShotFramingCompletedKey;
    NSString * _panWithTranslationKey;
    NSString * _panningAnglesKey;
    NSString * _performOneShotFramingKey;
    NSMutableDictionary * _previousReactionStateByDeviceIdentifier;
    bool  _reactionEffectsSupported;
    NSString * _reactionTriggeredKey;
    bool  _reactionsEnabled;
    NSString * _reactionsEnabledKey;
    NSString * _reactionsInProgressKey;
    NSString * _reactionsUnavailableReasonsKey;
    NSString * _resetFramingCompletedKey;
    NSString * _resetFramingKey;
    NSString * _startPanningAtPointKey;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _stateLock;
    long long  _studioLightingControlMode;
    NSString * _studioLightingControlModeKey;
    bool  _studioLightingEnabled;
    NSString * _studioLightingEnabledKey;
    float  _studioLightingIntensity;
    NSString * _studioLightingIntensityKey;
    bool  _studioLightingSupported;
    NSString * _studioLightingUnavailableReasonsKey;
    NSArray * _supportedMicrophoneModes;
    NSString * _supportedMicrophoneModesKey;
    NSDictionary * _zoomFactorConstantsByManualFramingDeviceType;
}

@property (getter=isActive, readonly) bool active;
@property (getter=isAutoMicrophoneModeSupported, readonly) bool autoMicrophoneModeSupported;
@property bool backgroundBlurSupported;
@property bool backgroundReplacementSupported;
@property (nonatomic, retain) NSURL *backgroundReplacementURL;
@property bool centerStageFieldOfViewRestrictedToWide;
@property bool centerStageSupported;
@property (getter=isDeviceBasedModuleState, readonly) bool deviceBasedModuleState;
@property (getter=isDeviceBasedModuleStateUpdateToDate, readonly) bool deviceBasedModuleStateUpdateToDate;
@property (nonatomic, readonly) bool hasBackgroundReplacementBeenToggled;
@property long long manualFramingDeviceType;
@property (readonly) bool manualFramingIsAtDefault;
@property (readonly) bool micModesSupported;
@property bool reactionEffectsSupported;
@property bool studioLightingSupported;
@property (readonly) NSDictionary *zoomFactorConstantsByManualFramingDeviceType;

+ (id)moduleStateForBundleID:(id)arg1;

- (void)_checkManualFramingDefaultStateWithNewOriginalZoomFactor:(double)arg1;
- (double)_defaultOriginalVideoZoomFactor;
- (void)_handleBackPropagatedVideoZoomFactorUpdate:(id)arg1;
- (void)_handlePanningAnglesUpdate:(id)arg1;
- (void)_proprietaryDefaultChanged:(id)arg1 keyPath:(id)arg2 context:(void*)arg3;
- (void)_updateEligibleEffects:(id)arg1;
- (long long)activeMicrophoneMode;
- (bool)backgroundBlurSupported;
- (struct __CVBuffer { }*)backgroundReplacementPixelBufferFillingWidth:(int)arg1 height:(int)arg2;
- (bool)backgroundReplacementSupported;
- (id)backgroundReplacementURL;
- (bool)centerStageFieldOfViewRestrictedToWide;
- (bool)centerStageSupported;
- (void)cleanUpOrphanedSupportedMicModes;
- (long long)controlModeForVideoEffect:(id)arg1;
- (void)dealloc;
- (void)enableBlackenFrames:(bool)arg1 forDeviceUID:(id)arg2;
- (float)getEffectIntensityDefaultForVideoEffect:(id)arg1;
- (float)getEffectIntensityForVideoEffect:(id)arg1;
- (struct AudioValueRange { double x1; double x2; })getEffectIntensityRangeForVideoEffect:(id)arg1;
- (bool)hasBackgroundReplacementBeenToggled;
- (id)hiddenMicrophoneModes;
- (id)initForBundleID:(id)arg1;
- (void)installProprietaryDefaultsHandlers;
- (void)invalidateDeviceBasedModuleStatesIfNeeded;
- (bool)isActive;
- (bool)isAutoMicrophoneModeEnabled;
- (bool)isAutoMicrophoneModeSupported;
- (bool)isDeviceBasedModuleState;
- (bool)isDeviceBasedModuleStateUpdateToDate;
- (bool)isEnabledForVideoEffect:(id)arg1;
- (long long)manualFramingDeviceType;
- (bool)manualFramingEnabledForDevice:(id)arg1;
- (bool)manualFramingIsAtDefault;
- (double)manualFramingOriginalVideoZoomFactor;
- (bool)micModesSupported;
- (long long)microphoneMode;
- (void)panWithTranslation:(struct CGPoint { double x1; double x2; })arg1;
- (void)performOneShotFraming;
- (void)performReactionEffect:(id)arg1 forCaptureDeviceWithID:(id)arg2;
- (bool)reactionEffectsSupported;
- (void)resetFraming;
- (bool)setAutoMicrophoneModeEnabled:(bool)arg1;
- (void)setBackgroundBlurSupported:(bool)arg1;
- (void)setBackgroundReplacementSupported:(bool)arg1;
- (void)setBackgroundReplacementURL:(id)arg1;
- (void)setCenterStageFieldOfViewRestrictedToWide:(bool)arg1;
- (void)setCenterStageSupported:(bool)arg1;
- (bool)setEffectIntensityForVideoEffect:(float)arg1 forVideoEffect:(id)arg2;
- (bool)setEnabled:(bool)arg1 forVideoEffect:(id)arg2;
- (void)setManualFramingDeviceType:(long long)arg1;
- (void)setManualFramingOriginalZoomFactor:(double)arg1 convertedZoomFactor:(double)arg2;
- (bool)setMicrophoneMode:(long long)arg1;
- (void)setReactionEffectsSupported:(bool)arg1;
- (void)setStudioLightingSupported:(bool)arg1;
- (void)setupDeviceBasedModuleStatesIfNeeded;
- (void)startPanningAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)studioLightingSupported;
- (id)supportedMicrophoneModes;
- (bool)supportsVideoEffect:(id)arg1;
- (unsigned long long)unavailableReasonsForVideoEffect:(id)arg1;
- (void)updateActiveReactions:(id)arg1 currentRenderPTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 requestedTriggers:(int)arg3 forCaptureDeviceWithID:(id)arg4;
- (void)updateCenterStageSupported:(bool)arg1 backgroundBlurSupported:(bool)arg2 studioLightingSupported:(bool)arg3 reactionEffectsSupported:(bool)arg4 backgroundReplacementSupported:(bool)arg5;
- (bool)voiceProcessingBypassed;
- (id)zoomFactorConstantsByManualFramingDeviceType;

@end
