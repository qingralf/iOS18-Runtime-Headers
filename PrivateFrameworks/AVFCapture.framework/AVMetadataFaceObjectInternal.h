/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVFCapture.framework/AVFCapture
 */

@interface AVMetadataFaceObjectInternal : NSObject {
    double  _confidence;
    double  _distance;
    long long  _faceID;
    bool  _hasConfidence;
    bool  _hasDistance;
    bool  _hasLeftEyeBounds;
    bool  _hasLeftEyeClosedConfidence;
    bool  _hasOrientation;
    bool  _hasPayingAttention;
    bool  _hasPayingAttentionConfidence;
    bool  _hasPitchAngle;
    bool  _hasRightEyeBounds;
    bool  _hasRightEyeClosedConfidence;
    bool  _hasRollAngle;
    bool  _hasSmileConfidence;
    bool  _hasYawAngle;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _leftEyeBounds;
    int  _leftEyeClosedConfidence;
    unsigned long long  _orientation;
    bool  _payingAttention;
    double  _payingAttentionConfidence;
    double  _pitchAngle;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _rightEyeBounds;
    int  _rightEyeClosedConfidence;
    double  _rollAngle;
    int  _smileConfidence;
    double  _yawAngle;
}

@property (nonatomic) double confidence;
@property (nonatomic) double distance;
@property (nonatomic) long long faceID;
@property (nonatomic) bool hasConfidence;
@property (nonatomic) bool hasDistance;
@property (nonatomic) bool hasLeftEyeBounds;
@property (nonatomic) bool hasLeftEyeClosedConfidence;
@property (nonatomic) bool hasOrientation;
@property (nonatomic) bool hasPayingAttention;
@property (nonatomic) bool hasPayingAttentionConfidence;
@property (nonatomic) bool hasPitchAngle;
@property (nonatomic) bool hasRightEyeBounds;
@property (nonatomic) bool hasRightEyeClosedConfidence;
@property (nonatomic) bool hasRollAngle;
@property (nonatomic) bool hasSmileConfidence;
@property (nonatomic) bool hasYawAngle;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } leftEyeBounds;
@property (nonatomic) int leftEyeClosedConfidence;
@property (nonatomic) unsigned long long orientation;
@property (nonatomic) bool payingAttention;
@property (nonatomic) double payingAttentionConfidence;
@property (nonatomic) double pitchAngle;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } rightEyeBounds;
@property (nonatomic) int rightEyeClosedConfidence;
@property (nonatomic) double rollAngle;
@property (nonatomic) int smileConfidence;
@property (nonatomic) double yawAngle;

- (double)confidence;
- (double)distance;
- (long long)faceID;
- (bool)hasConfidence;
- (bool)hasDistance;
- (bool)hasLeftEyeBounds;
- (bool)hasLeftEyeClosedConfidence;
- (bool)hasOrientation;
- (bool)hasPayingAttention;
- (bool)hasPayingAttentionConfidence;
- (bool)hasPitchAngle;
- (bool)hasRightEyeBounds;
- (bool)hasRightEyeClosedConfidence;
- (bool)hasRollAngle;
- (bool)hasSmileConfidence;
- (bool)hasYawAngle;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })leftEyeBounds;
- (int)leftEyeClosedConfidence;
- (unsigned long long)orientation;
- (bool)payingAttention;
- (double)payingAttentionConfidence;
- (double)pitchAngle;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rightEyeBounds;
- (int)rightEyeClosedConfidence;
- (double)rollAngle;
- (void)setConfidence:(double)arg1;
- (void)setDistance:(double)arg1;
- (void)setFaceID:(long long)arg1;
- (void)setHasConfidence:(bool)arg1;
- (void)setHasDistance:(bool)arg1;
- (void)setHasLeftEyeBounds:(bool)arg1;
- (void)setHasLeftEyeClosedConfidence:(bool)arg1;
- (void)setHasOrientation:(bool)arg1;
- (void)setHasPayingAttention:(bool)arg1;
- (void)setHasPayingAttentionConfidence:(bool)arg1;
- (void)setHasPitchAngle:(bool)arg1;
- (void)setHasRightEyeBounds:(bool)arg1;
- (void)setHasRightEyeClosedConfidence:(bool)arg1;
- (void)setHasRollAngle:(bool)arg1;
- (void)setHasSmileConfidence:(bool)arg1;
- (void)setHasYawAngle:(bool)arg1;
- (void)setLeftEyeBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setLeftEyeClosedConfidence:(int)arg1;
- (void)setOrientation:(unsigned long long)arg1;
- (void)setPayingAttention:(bool)arg1;
- (void)setPayingAttentionConfidence:(double)arg1;
- (void)setPitchAngle:(double)arg1;
- (void)setRightEyeBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRightEyeClosedConfidence:(int)arg1;
- (void)setRollAngle:(double)arg1;
- (void)setSmileConfidence:(int)arg1;
- (void)setYawAngle:(double)arg1;
- (int)smileConfidence;
- (double)yawAngle;

@end
