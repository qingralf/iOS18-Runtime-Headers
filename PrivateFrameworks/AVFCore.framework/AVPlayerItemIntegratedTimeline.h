/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVFCore.framework/AVFCore
 */

@interface AVPlayerItemIntegratedTimeline : NSObject {
    struct OpaqueFigItemIntegratedTimeline { } * _figTimeline;
    NSDate * _initialDate;
    struct __CFDictionary { } * _initialOptions;
    int  _initialSeekID;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _initialTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _initialToleranceAfter;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _initialToleranceBefore;
    int  _nextSeekIDToGenerate;
    NSMutableArray * _observers;
    int  _pendingSeekID;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _pendingSeekTime;
    id /* block */  _seekCompletionHandler;
    struct OpaqueFigSimpleMutex { } * _seekIDMutex;
    NSObject<OS_dispatch_queue> * _stateQueue;
    AVWeakReference * _weakReference;
    AVWeakReference * _weakReferenceToInterstitialPlayer;
    AVWeakReference * _weakReferenceToPrimaryItem;
}

@property (readonly) NSDate *currentDate;
@property (readonly) AVPlayerItemIntegratedTimelineSnapshot *currentSnapshot;
@property (readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } currentTime;

+ (void)initialize;

- (void)_addInterstitialPlayerListeners;
- (void)_addListener;
- (void)_attachCoordinator:(struct OpaqueFigPlayerInterstitialCoordinator { }*)arg1;
- (void)_attachInterstitialPlayer:(id)arg1;
- (void)_attachToItem:(id)arg1;
- (void)_cancelPendingSeekAndRegisterSeekID:(int)arg1 seekTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 withCompletionHandler:(id /* block */)arg3;
- (void)_cancelPendingSeeks;
- (void)_clearCachedSeek;
- (int)_createSeekID;
- (id)_currentItemForCurrentSegment;
- (id)_currentItemForSegmentType:(long long)arg1;
- (long long)_currentSegmentTypeOfCurrentSnapshot;
- (void)_ensureObserversAreScheduledForItem:(id)arg1;
- (void)_ensureObserversHandleSnapshotSegmentsChanged;
- (int)_getPendingSeekID;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })_getPendingSeekTime;
- (id)_initInternal;
- (id)_interstitialPlayer;
- (void)_issueCachedSeekIfNecessary;
- (id)_primaryItem;
- (void)_removeInterstitialPlayerListeners;
- (void)_removeListeners;
- (void)_resetPlaybackCoordinatorTimelineExpectations:(struct __CFDictionary { }*)arg1;
- (void)_seekToDate:(id)arg1 options:(struct __CFDictionary { }*)arg2 completionHandler:(id /* block */)arg3;
- (void)_seekToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 toleranceBefore:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toleranceAfter:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 options:(struct __CFDictionary { }*)arg4 completionHandler:(id /* block */)arg5;
- (void)_setInitialSeekState:(int)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 date:(id)arg3 toleranceBefore:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4 toleranceAfter:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg5 options:(struct __CFDictionary { }*)arg6;
- (void)_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:(int)arg1 finished:(bool)arg2;
- (id)addBoundaryTimeObserverForSegment:(id)arg1 offsetsIntoSegment:(id)arg2 queue:(id)arg3 usingBlock:(id /* block */)arg4;
- (id)addPeriodicTimeObserverForInterval:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 queue:(id)arg2 usingBlock:(id /* block */)arg3;
- (id)currentDate;
- (id)currentSnapshot;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentTime;
- (void)dealloc;
- (void)removeTimeObserver:(id)arg1;
- (void)seekToDate:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)seekToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 toleranceBefore:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toleranceAfter:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 completionHandler:(id /* block */)arg4;

@end
