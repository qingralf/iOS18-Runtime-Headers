/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVFCore.framework/AVFCore
 */

@interface AVPlayerItemIntegratedTimelineBoundaryObserver : NSObject <AVPlayerItemIntegratedTimelineObserver_Internal> {
    id /* block */  _block;
    AVOccasionalTimebaseObserver * _boundaryObserver;
    bool  _hasBeenScheduled;
    struct OpaqueFigSimpleMutex { } * _mutex;
    struct { 
        struct { 
            struct { 
                long long value; 
                int timescale; 
                unsigned int flags; 
                long long epoch; 
            } start; 
            struct { 
                long long value; 
                int timescale; 
                unsigned int flags; 
                long long epoch; 
            } duration; 
        } source; 
        struct { 
            struct { 
                long long value; 
                int timescale; 
                unsigned int flags; 
                long long epoch; 
            } start; 
            struct { 
                long long value; 
                int timescale; 
                unsigned int flags; 
                long long epoch; 
            } duration; 
        } target; 
    }  _observedTimeMapping;
    NSArray * _offsetTimes;
    NSObject<OS_dispatch_queue> * _queue;
    AVPlayerItemSegment * _segment;
    bool  _segmentWasRemoved;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (id)_currentInterstitialIDForSnapshot:(id)arg1;
- (bool)_ensureItemTimeOffsetLiesInSegment:(id)arg1 item:(id)arg2;
- (bool)_isItemCurrentTimeWithinZeroOffsetBoundaryThreshold:(id)arg1 offset:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)dealloc;
- (void)ensureBoundaryObserverSegmentStillExistsWithNewSnapshot:(id)arg1;
- (bool)hasObserverBeenScheduledYet;
- (id)initWithSegment:(id)arg1 offsetTimes:(id)arg2 queue:(id)arg3 block:(id /* block */)arg4;
- (void)rescheduleObserverWithSnapshot:(id)arg1 itemToSchedule:(id)arg2;
- (id)scheduledSegment;

@end
