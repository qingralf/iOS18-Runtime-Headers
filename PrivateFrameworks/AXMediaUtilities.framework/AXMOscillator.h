/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AXMediaUtilities.framework/AXMediaUtilities
 */

@interface AXMOscillator : NSObject <AXMAudioSampleProviding> {
    float  _cachedBaseFrequency;
    bool  _cachedEnvelopeIsBypassed;
    NSArray * _cachedFMOperators;
    float  _cachedFrequencyRatio;
    float  _cachedGain;
    bool  _cachedIsBypassed;
    float  _cachedSampleRate;
    long long  _cachedWaveform;
    float  _currentPhase;
    AXMOscillatorADSREnvelope * _envelope;
    AXMOscillator * _fmTarget;
    bool  _isUsingFM;
    float  _lowpassCutoff;
    AXMSynthOscillatorParameters * _parameters;
    AXMSynth * _parentSynth;
    float  _phaseIncrement;
    float  _rootFrequency;
    AXMOscillator * _rootOscillator;
    double * _sampleBuffer;
    double  _startTime;
}

@property (nonatomic, readonly) float baseFrequency;
@property (nonatomic) float currentPhase;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic) long long detuning;
@property (nonatomic, readonly) NSString *displayName;
@property (nonatomic, readonly) AXMOscillatorADSREnvelope *envelope;
@property (nonatomic, readonly) NSArray *fmOperatorIdentifiers;
@property (nonatomic, readonly) NSArray *fmOperators;
@property (nonatomic, readonly) float fmRootFrequencyRatio;
@property (nonatomic) AXMOscillator *fmTarget;
@property (nonatomic, readonly) NSString *fmTargetIdentifier;
@property (nonatomic) float frequencyRatio;
@property (nonatomic) float gain;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic) bool isBypassed;
@property (nonatomic, readonly) bool isUsingFM;
@property (nonatomic) float lowpassCutoff;
@property (nonatomic, retain) AXMSynthOscillatorParameters *parameters;
@property (nonatomic) AXMSynth *parentSynth;
@property (nonatomic, readonly) float phaseIncrement;
@property (nonatomic, readonly) float rootFrequency;
@property (nonatomic, readonly) AXMOscillator *rootOscillator;
@property (nonatomic) double*sampleBuffer;
@property (nonatomic, readonly) float sampleRate;
@property (nonatomic) double startTime;
@property (readonly) Class superclass;
@property (nonatomic) long long waveform;

- (void).cxx_destruct;
- (float)baseFrequency;
- (float)currentPhase;
- (void)dealloc;
- (id)description;
- (long long)detuning;
- (id)dictionaryRepresentation;
- (id)displayName;
- (id)envelope;
- (id)fmOperatorIdentifiers;
- (id)fmOperators;
- (float)fmRootFrequencyRatio;
- (id)fmTarget;
- (id)fmTargetIdentifier;
- (float)frequencyRatio;
- (float)gain;
- (double)getNextSample;
- (id)identifier;
- (id)initWithDictionary:(id)arg1;
- (id)initWithParameters:(id)arg1 parentSynth:(id)arg2;
- (bool)isBypassed;
- (bool)isUsingFM;
- (float)lowpassCutoff;
- (id)parameters;
- (id)parentSynth;
- (float)phaseIncrement;
- (float)rootFrequency;
- (id)rootOscillator;
- (void)routeTo:(id)arg1;
- (double*)sampleBuffer;
- (float)sampleRate;
- (void)setCurrentPhase:(float)arg1;
- (void)setDetuning:(long long)arg1;
- (void)setFmTarget:(id)arg1;
- (void)setFrequencyRatio:(float)arg1;
- (void)setGain:(float)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIsBypassed:(bool)arg1;
- (void)setLowpassCutoff:(float)arg1;
- (void)setParameters:(id)arg1;
- (void)setParentSynth:(id)arg1;
- (void)setSampleBuffer:(double*)arg1;
- (void)setStartTime:(double)arg1;
- (void)setWaveform:(long long)arg1;
- (void)start;
- (double)startTime;
- (void)stop;
- (void)updateCache;
- (long long)waveform;

@end
