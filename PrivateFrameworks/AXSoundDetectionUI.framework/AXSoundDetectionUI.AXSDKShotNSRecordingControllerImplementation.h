/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AXSoundDetectionUI.framework/AXSoundDetectionUI
 */

@interface AXSoundDetectionUI.AXSDKShotNSRecordingControllerImplementation : NSObject <AXSDDetectorManagerDelegate, AXSDDetectorQueueManagerDelegate, AXSDKShotRecordingManagerDelegate, AXSDListenEngineDelegate, AXSoundDetectionUI.AXSDKShotRecordingImplementation, HearingMLHelperServiceDelegate> {
    void _visualizationBucketCount;
    void detectorManager;
    void detectorQueueManager;
    void dispatchTimer;
    void isActivelyTraining;
    void listener;
    void listenerHandlers;
    void listenerQueue;
    void maxNumberOfTrainings;
    void maximumActiveTrainingDuration;
    void recordingManager;
    void sampleLength;
    void trainingDetector;
    void xpcHelperService;
}

@property (nonatomic, readonly) NSSet *currentDetectionTypes;
@property (nonatomic, retain) AXSDDetectorManager *detectorManager;
@property (nonatomic, readonly) bool isListening;
@property (nonatomic, readonly) bool isSecure;

- (void).cxx_destruct;
- (void)addWithListenType:(id)arg1;
- (void)assetsReadyAndDetectorsAdded;
- (id)currentDetectionTypes;
- (void)deregisterWithListener:(id)arg1;
- (id)detectorManager;
- (void)hearingMLHelperService:(id)arg1 eventOccurred:(long long)arg2;
- (id)init;
- (bool)isListening;
- (bool)isSecure;
- (bool)kickoffMLTrainingOfDetector:(id)arg1 error:(id*)arg2;
- (void)listenEngineDidStartWithInputFormat:(id)arg1;
- (void)listenEngineFailedToStartWithError:(id)arg1;
- (void)receivedBuffer:(id)arg1 atTime:(id)arg2;
- (void)receivedBuffer:(id)arg1 atTime:(id)arg2 isFile:(bool)arg3;
- (void)receivedCompletion:(id)arg1;
- (void)receivedError:(id)arg1 fromDetector:(id)arg2;
- (void)receivedObservation:(id)arg1 forDetector:(id)arg2;
- (void)registerWithListener:(id)arg1 forRecordingUpdates:(id /* block */)arg2;
- (void)removeAllListenTypes;
- (void)removeWithListenType:(id)arg1;
- (bool)retrainModelWithIdentifier:(id)arg1;
- (void)savedTrainingRecordingForDetector:(id)arg1;
- (void)setDetectorManager:(id)arg1;
- (void)startListening;
- (void)startListeningToTrainDetector:(id)arg1;
- (void)stopListening;

@end
