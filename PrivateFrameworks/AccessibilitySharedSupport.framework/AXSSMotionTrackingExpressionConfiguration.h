/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilitySharedSupport.framework/AccessibilitySharedSupport
 */

@interface AXSSMotionTrackingExpressionConfiguration : NSObject <NSCopying, NSSecureCoding> {
    NSMutableDictionary * __facialExpressionToSensitivity;
}

@property (nonatomic, retain) NSMutableDictionary *_facialExpressionToSensitivity;
@property (nonatomic, readonly, copy) NSDictionary *plistDictionary;

+ (unsigned long long)_activationForFacialExpression:(unsigned long long)arg1 usingExclaveExpressions:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; })arg2;
+ (id)_defaultSensitivitiesForAllFacialExpressions;
+ (bool)_expressionIsActive:(unsigned long long)arg1 usingExclaveOutput:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; })arg2 expressionConfiguration:(id)arg3;
+ (id)_facialExpressionToSensitivityToValueMapping;
+ (bool)_jawOpenStartingWithValue:(float)arg1 mouthClose:(float)arg2 expressionConfiguration:(id)arg3;
+ (float)_minConfidenceExpressionStarted:(unsigned long long)arg1 usingExpressionConfiguration:(id)arg2;
+ (id)_populateExpressionArraysForProcessedExpressions:(id)arg1 previousExpressions:(id)arg2 startExpressionsOutSet:(id*)arg3 endExpressionsOutSet:(id*)arg4;
+ (struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; })convertIncomingExpressionsToExclaveBlendshapesOutput:(id)arg1;
+ (id)defaultExpressionConfiguration;
+ (id)processExclaveDetectedExpressions:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; })arg1 previousExpressions:(id)arg2 expressionConfiguration:(id)arg3 startExpressionsOutSet:(id*)arg4 endExpressionsOutSet:(id*)arg5;
+ (id)processIncomingExpressions:(id)arg1 previousExpressions:(id)arg2 expressionConfiguration:(id)arg3 startExpressionsOutSet:(id*)arg4 endExpressionsOutSet:(id*)arg5;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_facialExpressionToSensitivity;
- (void)_safelySetSensitivity:(unsigned long long)arg1 forFacialExpression:(unsigned long long)arg2 inDictionary:(id)arg3;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithPlistDictionary:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToMotionTrackingExpressionConfiguration:(id)arg1;
- (id)plistDictionary;
- (unsigned long long)sensitivityForFacialExpression:(unsigned long long)arg1;
- (void)setSensitivity:(unsigned long long)arg1 forFacialExpression:(unsigned long long)arg2;
- (void)set_facialExpressionToSensitivity:(id)arg1;

@end
