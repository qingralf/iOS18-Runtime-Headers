/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AirPlaySenderKit.framework/AirPlaySenderKit
 */

@interface APSKStreamAudio : NSObject {
    struct AudioStreamBasicDescription { 
        double mSampleRate; 
        unsigned int mFormatID; 
        unsigned int mFormatFlags; 
        unsigned int mBytesPerPacket; 
        unsigned int mFramesPerPacket; 
        unsigned int mBytesPerFrame; 
        unsigned int mChannelsPerFrame; 
        unsigned int mBitsPerChannel; 
        unsigned int mReserved; 
    }  _asbd;
    <APSKAudioSender> * _audioSender;
    <APSKStreamAudioDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    bool  _failurePosted;
    NSDictionary * _options;
    NSObject<OS_dispatch_queue> * _queue;
    NSObject<OS_dispatch_queue> * _rtQueue;
    struct APSRingBufferPrivate { } * _rtRingBuffer;
    _Atomic unsigned int  _rtRingBufferEntries;
    struct APSRealTimeSignalPrivate { } * _rtSignal;
    bool  _useVideoLatency;
}

@property (nonatomic, readonly) bool active;
@property (nonatomic, readonly) id /* block */ enqueueAudioDataBlock;
@property (nonatomic) bool useVideoLatency;

- (void).cxx_destruct;
- (bool)active;
- (const struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; }*)asbd;
- (int)enqueueAudioData:(id)arg1;
- (id /* block */)enqueueAudioDataBlock;
- (int)enqueueAudioDataWithTimestamps:(id)arg1 forHostTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 forSampleTime:(unsigned long long)arg3 forDiscontinuity:(bool)arg4;
- (id)initWithAudioDescription:(const struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; }*)arg1 delegate:(id)arg2 delegateQueue:(id)arg3 options:(id)arg4;
- (void)setAudioSender:(id)arg1;
- (void)setUseVideoLatency:(bool)arg1;
- (bool)useVideoLatency;

@end
