/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppSSO.framework/AppSSO
 */

@interface SOExtension : NSObject <POExtensionRegistrationHostProtocol, SORemoteExtensionViewControllerDelegate> {
    NSObject * _associatedDomainLock;
    NSArray * _associatedDomains;
    NSExtension * _extension;
    NSMapTable * _extensionDelegates;
    NSObject * _extensionDelegatesLock;
    NSObject<OS_dispatch_queue> * _pssoQueue;
    NSObject<OS_dispatch_queue> * _queue;
    SORemoteExtensionViewController * _remoteViewController;
    int  _requestCount;
    NSObject * _requestCountLock;
    NSUUID * _sessionID;
    NSObject * _sessionIDLock;
}

@property (retain) NSObject *associatedDomainLock;
@property (nonatomic, retain) NSArray *associatedDomains;
@property (nonatomic, readonly) NSArray *authenticationMethods;
@property (nonatomic, readonly) NSString *containerAppBundleIdentifier;
@property (nonatomic, readonly) NSString *containerAppPath;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSExtension *extension;
@property (nonatomic, readonly) NSString *extensionBundleIdentifier;
@property (retain) NSObject *extensionDelegatesLock;
@property (nonatomic, readonly) long long extensionRequestsMode;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *localizedExtensionDisplayName;
@property (nonatomic, readonly) int requestCount;
@property (retain) NSObject *requestCountLock;
@property (retain) NSObject *sessionIDLock;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_beginAuthorizationWithRequestParameters:(id)arg1 completion:(id /* block */)arg2;
- (void)_beginAuthorizationWithServiceXPCEndpoint:(id)arg1 completion:(id /* block */)arg2;
- (void)_connectContextToSessionWithRequestIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (id)_contextForSession;
- (void)_finishAuthorization:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_finishedSettingUpSession:(id)arg1;
- (void)_setupExtension;
- (void)_setupNonUISessionIfNecessaryWithCompletion:(id /* block */)arg1;
- (void)_setupNonUISessionWithCompletion:(id /* block */)arg1;
- (void)_setupSessionHelperForIOSWithCompletion:(id /* block */)arg1;
- (void)_setupSessionIfNecessaryWithCompletion:(id /* block */)arg1;
- (void)_setupSessionWithCompletion:(id /* block */)arg1;
- (id)associatedDomainLock;
- (id)associatedDomains;
- (struct { unsigned int x1[8]; })auditTokenForSession;
- (id)authenticationMethods;
- (void)authorization:(id)arg1 didCompleteWithCredential:(id)arg2 error:(id)arg3;
- (void)beginAuthorizationWithRequestParameters:(id)arg1 completion:(id /* block */)arg2;
- (void)beginAuthorizationWithServiceXPCEndpoint:(id)arg1 completion:(id /* block */)arg2;
- (void)beginDeviceRegistrationUsingOptions:(long long)arg1 extensionData:(id)arg2 completion:(id /* block */)arg3;
- (void)beginUserRegistrationUsingUserName:(id)arg1 authenticationMethod:(int)arg2 options:(long long)arg3 extensionData:(id)arg4 completion:(id /* block */)arg5;
- (void)canPerformRegistrationCompletion:(id /* block */)arg1;
- (void)cancelAuthorization:(id)arg1 completion:(id /* block */)arg2;
- (void)checkAssociatedDomainsWithCache:(id)arg1;
- (void)checkAssociatedDomainsWithCompletion:(id /* block */)arg1;
- (id)containerAppBundleIdentifier;
- (id)containerAppPath;
- (void)decrementRequestCount;
- (id)description;
- (id)extension;
- (id)extensionBundleIdentifier;
- (id)extensionDelegatesLock;
- (long long)extensionRequestsMode;
- (id)findDelegateForIdentifier:(id)arg1;
- (void)finishAuthorization:(id)arg1 completion:(id /* block */)arg2;
- (bool)hasAssociatedDomainsApproved;
- (bool)hasURLApprovedAssociatedDomain:(id)arg1 cache:(id)arg2;
- (void)incrementRequestCount;
- (id)initWithExtension:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToExtension:(id)arg1;
- (void)keyWillRotateForKeyType:(long long)arg1 keyProxyEndpoint:(id)arg2 extensionData:(id)arg3 completion:(id /* block */)arg4;
- (id)localizedExtensionDisplayName;
- (void)presentAuthorizationViewControllerWithHints:(id)arg1 requestIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)protocolVersionCompletion:(id /* block */)arg1;
- (void)registrationDidCancelWithCompletion:(id /* block */)arg1;
- (void)registrationDidCompleteWithCompletion:(id /* block */)arg1;
- (void)removeDelegateForRequestIdentifier:(id)arg1;
- (void)removeExpiredEntriesFromCache:(id)arg1;
- (void)requestAuthorizationViewControllerWithCompletion:(id /* block */)arg1;
- (int)requestCount;
- (id)requestCountLock;
- (void)requestReauthenticationWithRequestIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)saveDelegate:(id)arg1 forRequestIdentifier:(id)arg2;
- (id)sessionIDLock;
- (void)setAssociatedDomainLock:(id)arg1;
- (void)setAssociatedDomains:(id)arg1;
- (void)setExtension:(id)arg1;
- (void)setExtensionDelegatesLock:(id)arg1;
- (void)setRequestCountLock:(id)arg1;
- (void)setSessionIDLock:(id)arg1;
- (void)setupNonUISessionWithCompletion:(id /* block */)arg1;
- (void)supportedDeviceEncryptionAlgorithmsCompletion:(id /* block */)arg1;
- (void)supportedDeviceSigningAlgorithmsCompletion:(id /* block */)arg1;
- (void)supportedGrantTypesCompletion:(id /* block */)arg1;
- (void)supportedUserSecureEnclaveKeySigningAlgorithmsCompletion:(id /* block */)arg1;
- (void)unload;
- (void)viewServiceDidTerminateWithError:(id)arg1;

@end
