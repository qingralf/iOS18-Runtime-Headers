/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon
 */

@interface ASDPurchase : NSObject <NSCopying, NSSecureCoding> {
    NSNumber * _accountIdentifier;
    NSDictionary * _additionalHeaders;
    NSString * _affiliateIdentifier;
    NSArray * _appCapabilities;
    NSString * _bagKey;
    NSString * _bundleID;
    NSArray * _buyParameters;
    NSString * _clientID;
    bool  _createsJobs;
    bool  _displaysOnLockScreen;
    NSString * _downloadVolume;
    long long  _extensionsToEnable;
    bool  _forceWatchInstall;
    NSArray * _gratisIdentifiers;
    bool  _iOSBinaryMacOSCompatible;
    bool  _installUniversalVariant;
    NSString * _installVolume;
    bool  _isBackgroundUpdate;
    bool  _isCompatibilityUpdate;
    bool  _isDSIDLess;
    bool  _isDefaultBrowser;
    bool  _isRedownload;
    bool  _isRefresh;
    bool  _isUpdate;
    NSNumber * _itemID;
    NSString * _itemName;
    NSDictionary * _metricsOverlay;
    NSNumber * _ownerDSID;
    NSXPCListenerEndpoint * _paymentViewServiceListener;
    NSString * _preflightURLString;
    NSString * _presentingSceneBundleIdentifier;
    NSString * _presentingSceneIdentifier;
    long long  _purchaseID;
    NSNumber * _purchaserDSID;
    NSString * _referrerName;
    NSString * _referrerURL;
    NSArray * _requiredCapabilities;
    bool  _sendGUID;
    bool  _shouldCancelForInstalledBundleItems;
    long long  _softwarePlatform;
    NSString * _vendorName;
}

@property (nonatomic, copy) NSNumber *accountIdentifier;
@property (nonatomic, copy) NSDictionary *additionalHeaders;
@property (nonatomic, copy) NSString *affiliateIdentifier;
@property (nonatomic, copy) NSArray *appCapabilities;
@property (nonatomic, copy) NSString *bagKey;
@property (nonatomic, copy) NSString *bundleID;
@property (nonatomic, copy) NSString *buyParameters;
@property (nonatomic, copy) NSString *clientID;
@property (nonatomic) bool createsJobs;
@property (nonatomic) bool displaysOnLockScreen;
@property (nonatomic, copy) NSString *downloadVolume;
@property long long extensionsToEnable;
@property (nonatomic) bool forceWatchInstall;
@property (nonatomic, copy) NSArray *gratisIdentifiers;
@property (getter=isIOSBinaryMacOSCompatible, nonatomic) bool iOSBinaryMacOSCompatible;
@property (nonatomic) bool installUniversalVariant;
@property (nonatomic, copy) NSString *installVolume;
@property (nonatomic) bool isBackgroundUpdate;
@property (nonatomic) bool isCompatibilityUpdate;
@property (nonatomic) bool isDSIDLess;
@property (nonatomic) bool isDefaultBrowser;
@property (nonatomic) bool isRedownload;
@property (nonatomic) bool isRefresh;
@property (nonatomic) bool isUpdate;
@property (nonatomic, copy) NSNumber *itemID;
@property (nonatomic, copy) NSString *itemName;
@property (nonatomic, copy) NSDictionary *metricsOverlay;
@property (nonatomic, copy) NSNumber *ownerDSID;
@property (nonatomic, retain) NSXPCListenerEndpoint *paymentViewServiceListener;
@property (copy) NSString *preflightURLString;
@property (nonatomic, copy) NSString *presentingSceneBundleIdentifier;
@property (nonatomic, copy) NSString *presentingSceneIdentifier;
@property long long purchaseID;
@property (nonatomic, copy) NSNumber *purchaserDSID;
@property (nonatomic, copy) NSString *referrerName;
@property (nonatomic, copy) NSString *referrerURL;
@property (nonatomic, copy) NSArray *requiredCapabilities;
@property (nonatomic) bool sendGUID;
@property (nonatomic) bool shouldCancelForInstalledBundleItems;
@property (nonatomic) long long softwarePlatform;
@property (nonatomic, copy) NSString *vendorName;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)accountIdentifier;
- (id)additionalHeaders;
- (id)affiliateIdentifier;
- (id)appCapabilities;
- (void)appendValue:(id)arg1 forBuyParameter:(id)arg2;
- (id)bagKey;
- (id)bundleID;
- (id)buyParameters;
- (id)clientID;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)createsJobs;
- (id)description;
- (bool)displaysOnLockScreen;
- (id)downloadVolume;
- (void)encodeWithCoder:(id)arg1;
- (long long)extensionsToEnable;
- (id)firstValueForBuyParameter:(id)arg1;
- (bool)forceWatchInstall;
- (id)gratisIdentifiers;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)installUniversalVariant;
- (id)installVolume;
- (bool)isBackgroundUpdate;
- (bool)isCompatibilityUpdate;
- (bool)isDSIDLess;
- (bool)isDefaultBrowser;
- (bool)isIOSBinaryMacOSCompatible;
- (bool)isRedownload;
- (bool)isRefresh;
- (bool)isUpdate;
- (id)itemID;
- (id)itemName;
- (id)metricsOverlay;
- (id)ownerDSID;
- (id)paymentViewServiceListener;
- (id)preflightURLString;
- (id)presentingSceneBundleIdentifier;
- (id)presentingSceneIdentifier;
- (long long)purchaseID;
- (id)purchaserDSID;
- (id)referrerName;
- (id)referrerURL;
- (id)requiredCapabilities;
- (bool)sendGUID;
- (void)setAccountIdentifier:(id)arg1;
- (void)setAdditionalHeaders:(id)arg1;
- (void)setAffiliateIdentifier:(id)arg1;
- (void)setAppCapabilities:(id)arg1;
- (void)setBagKey:(id)arg1;
- (void)setBundleID:(id)arg1;
- (void)setBuyParameters:(id)arg1;
- (void)setClientID:(id)arg1;
- (void)setCreatesJobs:(bool)arg1;
- (void)setDisplaysOnLockScreen:(bool)arg1;
- (void)setDownloadVolume:(id)arg1;
- (void)setExtensionsToEnable:(long long)arg1;
- (void)setForceWatchInstall:(bool)arg1;
- (void)setGratisIdentifiers:(id)arg1;
- (void)setIOSBinaryMacOSCompatible:(bool)arg1;
- (void)setInstallUniversalVariant:(bool)arg1;
- (void)setInstallVolume:(id)arg1;
- (void)setIsBackgroundUpdate:(bool)arg1;
- (void)setIsCompatibilityUpdate:(bool)arg1;
- (void)setIsDSIDLess:(bool)arg1;
- (void)setIsDefaultBrowser:(bool)arg1;
- (void)setIsRedownload:(bool)arg1;
- (void)setIsRefresh:(bool)arg1;
- (void)setIsUpdate:(bool)arg1;
- (void)setItemID:(id)arg1;
- (void)setItemName:(id)arg1;
- (void)setMetricsOverlay:(id)arg1;
- (void)setOwnerDSID:(id)arg1;
- (void)setPaymentViewServiceListener:(id)arg1;
- (void)setPreflightURLString:(id)arg1;
- (void)setPresentingSceneBundleIdentifier:(id)arg1;
- (void)setPresentingSceneIdentifier:(id)arg1;
- (void)setPurchaseID:(long long)arg1;
- (void)setPurchaserDSID:(id)arg1;
- (void)setReferrerName:(id)arg1;
- (void)setReferrerURL:(id)arg1;
- (void)setRequiredCapabilities:(id)arg1;
- (void)setSendGUID:(bool)arg1;
- (void)setShouldCancelForInstalledBundleItems:(bool)arg1;
- (void)setSoftwarePlatform:(long long)arg1;
- (void)setVendorName:(id)arg1;
- (bool)shouldCancelForInstalledBundleItems;
- (long long)softwarePlatform;
- (id)vendorName;

@end
