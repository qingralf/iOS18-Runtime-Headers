/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI
 */

@interface AAUIServiceSignInConfiguration : NSObject <AAUIServiceSignInConfigurationProtocol, AAUIServiceSignInConfigurationProtocol_Internal> {
    NSArray * _serviceTypes;
    long long  aidaOperationUIPermissions;
    bool  allowSkip;
    unsigned long long  ampServiceType;
    NSDictionary * authenticationResults;
    bool  canEditUsername;
    bool  hidesBackOrCancelButton;
    bool  isAttemptingBackupRestore;
    CDPLocalSecret * localSecret;
    UINavigationController * navigationController;
    bool  newSignInReauth;
    bool  offeriCloudAMSSplitSignIn;
    NSArray * privacyLinkIdentifiers;
    AIDAServiceContext * serviceContext;
    <AAUIServiceSignInControllerDelegate> * serviceDelegate;
    NSString * serviceType;
    NSArray * serviceTypes;
    bool  shouldDisableAccountCreation;
    bool  shouldForceOperation;
    bool  shouldShowSystemBackButton;
    bool  showsChildSignIn;
    bool  splitSignIn;
    NSString * username;
}

@property (nonatomic) long long aidaOperationUIPermissions;
@property (nonatomic) bool allowSkip;
@property (nonatomic) unsigned long long ampServiceType;
@property (nonatomic, retain) NSDictionary *authenticationResults;
@property (nonatomic) bool canEditUsername;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hidesBackOrCancelButton;
@property (nonatomic) bool isAttemptingBackupRestore;
@property (nonatomic, retain) CDPLocalSecret *localSecret;
@property (nonatomic, retain) UINavigationController *navigationController;
@property (nonatomic) bool newSignInReauth;
@property (nonatomic) bool offeriCloudAMSSplitSignIn;
@property (nonatomic, copy) NSArray *privacyLinkIdentifiers;
@property (nonatomic, retain) AIDAServiceContext *serviceContext;
@property (nonatomic) <AAUIServiceSignInControllerDelegate> *serviceDelegate;
@property (nonatomic, retain) NSString *serviceType;
@property (nonatomic, retain) NSArray *serviceTypes;
@property (nonatomic) bool shouldDisableAccountCreation;
@property (setter=setShouldForceOperation:, nonatomic) bool shouldForceOperation;
@property (nonatomic) bool shouldShowSystemBackButton;
@property (setter=setShowsChildSignIn:, nonatomic) bool showsChildSignIn;
@property (nonatomic) bool splitSignIn;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *username;

- (void).cxx_destruct;
- (long long)aidaOperationUIPermissions;
- (bool)allowSkip;
- (unsigned long long)ampServiceType;
- (id)authenticationResults;
- (bool)canEditUsername;
- (bool)hidesBackOrCancelButton;
- (id)init;
- (bool)isAttemptingBackupRestore;
- (id)localSecret;
- (id)navigationController;
- (bool)newSignInReauth;
- (bool)offeriCloudAMSSplitSignIn;
- (id)privacyLinkIdentifiers;
- (id)serviceContext;
- (id)serviceDelegate;
- (id)serviceType;
- (id)serviceTypes;
- (void)setAidaOperationUIPermissions:(long long)arg1;
- (void)setAllowSkip:(bool)arg1;
- (void)setAmpServiceType:(unsigned long long)arg1;
- (void)setAuthenticationResults:(id)arg1;
- (void)setCanEditUsername:(bool)arg1;
- (void)setHidesBackOrCancelButton:(bool)arg1;
- (void)setIsAttemptingBackupRestore:(bool)arg1;
- (void)setLocalSecret:(id)arg1;
- (void)setNavigationController:(id)arg1;
- (void)setNewSignInReauth:(bool)arg1;
- (void)setOfferiCloudAMSSplitSignIn:(bool)arg1;
- (void)setPrivacyLinkIdentifiers:(id)arg1;
- (void)setServiceContext:(id)arg1;
- (void)setServiceDelegate:(id)arg1;
- (void)setServiceType:(id)arg1;
- (void)setServiceTypes:(id)arg1;
- (void)setShouldDisableAccountCreation:(bool)arg1;
- (void)setShouldForceOperation:(bool)arg1;
- (void)setShouldShowSystemBackButton:(bool)arg1;
- (void)setShowsChildSignIn:(bool)arg1;
- (void)setSplitSignIn:(bool)arg1;
- (void)setUsername:(id)arg1;
- (bool)shouldDisableAccountCreation;
- (bool)shouldForceOperation;
- (bool)shouldShowSystemBackButton;
- (bool)showsChildSignIn;
- (bool)splitSignIn;
- (id)username;

@end
