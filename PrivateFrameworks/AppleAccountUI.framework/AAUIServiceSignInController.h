/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI
 */

@interface AAUIServiceSignInController : NSObject <AAUISignInViewControllerInternalDelegate> {
    AKAppleIDAuthenticationController * _authenticationController;
    CDPUIController * _cdpUIController;
    AAUISignInFlowControllerDelegate * _flowControllerDelegate;
    UMUserPersona * _originalPersona;
    UMUserPersonaContext * _originalPersonaContext;
    <AIDAServiceOwnerProtocol> * _serviceOwnersManager;
    AAUIServiceSignInConfiguration * _signInConfig;
    AAUISignInViewController * _signInViewController;
    UIViewController * _spinnerViewController;
    AAUIOnboardingSignInController * _splitAccountSignInController;
    AAUIOnboardingSplitSignInDelegate * _splitSignInDelegate;
    AKURLBag * akURLBag;
}

@property (nonatomic, retain) AKURLBag *akURLBag;
@property (nonatomic, retain) AKAppleIDAuthenticationController *authenticationController;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) AAUISignInFlowControllerDelegate *flowControllerDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <AIDAServiceOwnerProtocol> *serviceOwnersManager;
@property (nonatomic, retain) AAUIServiceSignInConfiguration *signInConfig;
@property (nonatomic, retain) AAUISignInViewController *signInViewController;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_alertControllerForReusingAccount:(id)arg1 serviceType:(id)arg2 inViewController:(id)arg3 completion:(id /* block */)arg4;
- (bool)_allowsAccountCreation;
- (void)_attemptReauthAndSignInToServices;
- (void)_attemptSignInForServices:(id)arg1 serviceContext:(id)arg2;
- (void)_authenticateExistingAccount:(id)arg1 serviceType:(id)arg2 inViewController:(id)arg3 completion:(id /* block */)arg4;
- (void)_commonInit;
- (void)_delegate_serviceSignInControllerDidCancel;
- (void)_delegate_signInControllerDidCompleteWithSuccess:(bool)arg1 error:(id)arg2;
- (bool)_isAuthenticatingPrimary:(id)arg1;
- (void)_mainQueue_continueSignInWithAuthenticationResults:(id)arg1 parentViewController:(id)arg2;
- (void)_mainQueue_presentAlertForError:(id)arg1 inViewController:(id)arg2 completion:(id /* block */)arg3;
- (void)_mainQueue_presentContinueUsingInViewController:(id)arg1 account:(id)arg2 serviceType:(id)arg3 completion:(id /* block */)arg4;
- (void)_mainQueue_presentSpinnerViewControllerInParentViewController:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_prepareToSignInForServices:(id)arg1 withAuthenticationResults:(id)arg2 parentViewController:(id)arg3;
- (id)_serviceContextForCloudAndInactiveStoreWithAuthResults:(id)arg1 parentViewController:(id)arg2;
- (id)_serviceContextWithResults:(id)arg1 parentViewController:(id)arg2;
- (id)_serviceOwnersManager;
- (void)_setInitialViewController:(id)arg1;
- (bool)_showsServiceIcons;
- (id)_spinnerMessageForService:(id)arg1;
- (id)_spinnerViewController;
- (id)akURLBag;
- (id)authenticationController;
- (void)continueSignInWithAuthenticationResults:(id)arg1 viewController:(id)arg2 completion:(id /* block */)arg3;
- (void)controllerFinishedWithAIDAResults:(id)arg1;
- (id)flowControllerDelegate;
- (id)initWithSignInConfiguration:(id)arg1;
- (void)loadViewControllerForPresentation;
- (void)prepareInViewController:(id)arg1 completion:(id /* block */)arg2;
- (id)serviceOwnersManager;
- (void)setAkURLBag:(id)arg1;
- (void)setAuthenticationController:(id)arg1;
- (void)setFlowControllerDelegate:(id)arg1;
- (void)setServiceOwnersManager:(id)arg1;
- (void)setSignInConfig:(id)arg1;
- (void)setSignInViewController:(id)arg1;
- (id)signInConfig;
- (id)signInViewController;
- (void)signInViewController:(id)arg1 didCompleteWithAuthenticationResults:(id)arg2;
- (void)signInViewControllerDidCancel:(id)arg1;
- (void)signInViewControllerDidSelectChildSignIn:(id)arg1;
- (void)signInViewControllerDidSelectOtherOptions:(id)arg1;
- (void)signInViewControllerDidSkip:(id)arg1;
- (void)startSplitAcountSignInFlow;
- (void)willAuthenticateWithContext:(id)arg1;

@end
