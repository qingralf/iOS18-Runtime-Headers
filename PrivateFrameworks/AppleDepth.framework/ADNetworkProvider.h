/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth
 */

@interface ADNetworkProvider : NSObject {
    ADConfidenceLevelRanges * _confidenceLevelRanges;
    NSMutableDictionary * _inputBufferMap;
    NSDictionary * _layoutNamesDict;
    NSDictionary * _networkMetadata;
    NSMutableDictionary * _outputBufferMap;
    NSMutableDictionary * _sizesForInput;
    NSMutableDictionary * _sizesForOutput;
    NSURL * _url;
}

@property (nonatomic, readonly, retain) ADConfidenceLevelRanges *confidenceLevelRanges;
@property (nonatomic, readonly) NSDictionary *layoutNamesDict;
@property (nonatomic, readonly) NSURL *url;

+ (id)getAlternativePathForNetwork:(id)arg1;
+ (bool)getAndVerifySizesFromConfig:(id)arg1 inDictionary:(id)arg2 forKey:(id)arg3 sizes:(id)arg4 layout:(unsigned long long*)arg5;
+ (id)getConfigFolderForNetwork:(id)arg1;
+ (id)getDefaultPathForNetwork:(id)arg1 allowPrecompiledModel:(bool)arg2;
+ (id)providerForNetwork:(id)arg1;
+ (id)providerForNetwork:(id)arg1 espressoEngine:(unsigned long long)arg2;
+ (id)providerForNetwork:(id)arg1 requestedLayouts:(id)arg2;
+ (id)providerForNetwork:(id)arg1 requestedLayouts:(id)arg2 espressoEngine:(unsigned long long)arg3;
+ (id)supportedSizesForSizesDict:(id)arg1 key:(id)arg2 expectedPixelFormat:(unsigned int)arg3;
+ (void)updateSizeForItem:(id)arg1 fromShape:(id)arg2 forLayout:(unsigned long long)arg3 target:(id)arg4;

- (void).cxx_destruct;
- (id)bufferNameForInputType:(id)arg1;
- (id)bufferNameForOutputType:(id)arg1;
- (id)bufferNameForType:(id)arg1 isInput:(bool)arg2;
- (id)confidenceLevelRanges;
- (id)descriptorForBuffer:(id)arg1 isInput:(bool)arg2 pixelFormat:(unsigned int)arg3;
- (id)descriptorForBufferOfType:(id)arg1 isInput:(bool)arg2 pixelFormat:(unsigned int)arg3;
- (id)generateLayoutNamesDictForFunction:(id)arg1;
- (id)initWithNetwork:(id)arg1 requestedLayouts:(id)arg2 espressoEngine:(unsigned long long)arg3;
- (id)layoutNamesDict;
- (id)layoutNamesDictForFunction:(id)arg1;
- (id)metadataForKey:(id)arg1;
- (bool)processConfig:(id)arg1 inDictionary:(id)arg2 forLayout:(unsigned long long)arg3;
- (id)supportedSizesForInput:(id)arg1 expectedPixelFormat:(unsigned int)arg2;
- (id)supportedSizesForOutput:(id)arg1 expectedPixelFormat:(unsigned int)arg2;
- (id)url;

@end
