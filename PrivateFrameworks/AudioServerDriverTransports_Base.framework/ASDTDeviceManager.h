/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AudioServerDriverTransports_Base.framework/AudioServerDriverTransports_Base
 */

@interface ASDTDeviceManager : ASDTDeviceList <ASDTIOServiceManagerDelegate, ASDTSystemPowerNotifierDelegate> {
    NSDictionary * _configuration;
    <ASDTDeviceManagerDelegate> * _delegate;
    NSMutableSet * _deviceFactories;
    NSMutableDictionary * _deviceInitStatus;
    NSMutableSet * _devicesRunning;
    ASDTCondition * _initializingCond;
    NSObject<OS_dispatch_queue> * _initializingQueue;
    NSMutableArray * _ioServiceDependencies;
    NSMutableDictionary * _matchedDeviceFactories;
    NSString * _name;
    unsigned int  _numDevicesToInitialize;
    ASDPlugin * _plugin;
    double  _runningLogPeriod;
    NSThread * _thread;
    ASDTCondition * _threadCond;
    bool  _threadStarted;
    bool  _threadWorkToDo;
    NSSet * _underlyingDeviceUIDs;
    bool  _verboseDeviceLogging;
}

@property (nonatomic, readonly) NSArray *allDeviceFactories;
@property (nonatomic, retain) NSDictionary *configuration;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <ASDTDeviceManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableSet *deviceFactories;
@property (nonatomic, retain) NSMutableDictionary *deviceInitStatus;
@property (nonatomic, retain) NSMutableSet *devicesRunning;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) ASDTCondition *initializingCond;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *initializingQueue;
@property (nonatomic, retain) NSMutableArray *ioServiceDependencies;
@property (nonatomic, retain) NSMutableDictionary *matchedDeviceFactories;
@property (nonatomic, retain) NSString *name;
@property (nonatomic) unsigned int numDevicesToInitialize;
@property (nonatomic) ASDPlugin *plugin;
@property (nonatomic) double runningLogPeriod;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSThread *thread;
@property (nonatomic, retain) ASDTCondition *threadCond;
@property (nonatomic) bool threadStarted;
@property (nonatomic) bool threadWorkToDo;
@property (nonatomic, retain) NSSet *underlyingDeviceUIDs;
@property (nonatomic) bool verboseDeviceLogging;

+ (id)deviceManagerWithConfig:(id)arg1 withDelegate:(id)arg2;

- (void).cxx_destruct;
- (bool)addAudioDeviceWithCheck:(id)arg1;
- (id)allDeviceFactories;
- (bool)allowSystemSleep;
- (void)buildAndInitializeDevice:(id)arg1;
- (id)configuration;
- (void)configureDevices;
- (id)delegate;
- (void)deviceConfigurationFailed:(id)arg1;
- (id)deviceFactories;
- (id)deviceInitStatus;
- (void)deviceInitializationFailed:(id)arg1;
- (void)deviceInitialized:(id)arg1 withStatus:(int)arg2;
- (id)devicesRunning;
- (id)factoryForDeviceUID:(id)arg1;
- (id)generateUnderlyingDeviceUIDsFromConfig:(id)arg1;
- (id)initWithConfig:(id)arg1 withDelegate:(id)arg2;
- (void)initializeDevice:(id)arg1;
- (id)initializingCond;
- (id)initializingQueue;
- (void)ioServiceAvailable:(id)arg1 withManager:(id)arg2;
- (id)ioServiceDependencies;
- (void)ioServiceWillTerminate:(id)arg1 withManager:(id)arg2;
- (void)lockedSignalThread;
- (void)logStatsForDevice:(id)arg1 withPowerState:(int)arg2;
- (id)matchedDeviceFactories;
- (id)messageForDroppedPacketsFromDevice:(id)arg1 withScope:(unsigned int)arg2;
- (id)messageForDroppedPacketsFromDevice:(id)arg1 withScope:(unsigned int)arg2 andElement:(unsigned int)arg3;
- (id)name;
- (unsigned int)numDevicesToInitialize;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)plugin;
- (void)powerStateChangedForDevice:(id)arg1 toState:(int)arg2;
- (void)publishDevice:(id)arg1;
- (void)publishDeviceLocked:(id)arg1;
- (void)removeAudioDevice:(id)arg1;
- (void)removeAudioDevices:(id)arg1;
- (void)resourcesAvailableForDevice:(id)arg1;
- (double)runningLogPeriod;
- (void)setConfiguration:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceFactories:(id)arg1;
- (void)setDeviceInitStatus:(id)arg1;
- (void)setDevicesRunning:(id)arg1;
- (void)setInitializingCond:(id)arg1;
- (void)setInitializingQueue:(id)arg1;
- (void)setIoServiceDependencies:(id)arg1;
- (void)setMatchedDeviceFactories:(id)arg1;
- (void)setName:(id)arg1;
- (void)setNumDevicesToInitialize:(unsigned int)arg1;
- (void)setPlugin:(id)arg1;
- (void)setRunningLogPeriod:(double)arg1;
- (void)setThread:(id)arg1;
- (void)setThreadCond:(id)arg1;
- (void)setThreadStarted:(bool)arg1;
- (void)setThreadWorkToDo:(bool)arg1;
- (void)setUnderlyingDeviceUIDs:(id)arg1;
- (void)setVerboseDeviceLogging:(bool)arg1;
- (void)systemHasPoweredOn;
- (void)systemWillSleep;
- (void)terminateDevice:(id)arg1;
- (id)thread;
- (id)threadCond;
- (void)threadLoop:(id)arg1;
- (bool)threadStarted;
- (bool)threadWorkToDo;
- (id)underlyingDeviceUIDs;
- (bool)verboseDeviceLogging;
- (void)waitForInitialization;
- (void)waitForInitializationWithTimeoutUs:(unsigned int)arg1;
- (void)waitForThreadStart;

@end
