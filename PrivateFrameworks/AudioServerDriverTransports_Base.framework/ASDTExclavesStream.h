/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AudioServerDriverTransports_Base.framework/AudioServerDriverTransports_Base
 */

@interface ASDTExclavesStream : ASDTStream <ASDTStatusProtocol> {
    struct unique_ptr<ASDT::Exclaves::AudioBuffer, std::default_delete<ASDT::Exclaves::AudioBuffer>> { 
        struct __compressed_pair<ASDT::Exclaves::AudioBuffer *, std::default_delete<ASDT::Exclaves::AudioBuffer>> { 
            struct AudioBuffer {} *__value_; 
        } __ptr_; 
    }  _audioBuffer;
    NSString * _exclavesBufferName;
    unsigned int  _exclavesBufferSize;
    ASDTExclavesSensorManager * _exclavesSensorManager;
    struct unique_ptr<ASDT::Exclaves::InboundBuffer, std::default_delete<ASDT::Exclaves::InboundBuffer>> { 
        struct __compressed_pair<ASDT::Exclaves::InboundBuffer *, std::default_delete<ASDT::Exclaves::InboundBuffer>> { 
            struct InboundBuffer {} *__value_; 
        } __ptr_; 
    }  _inboundBuffer;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSString *exclavesBufferName;
@property (nonatomic) unsigned int exclavesBufferSize;
@property (nonatomic, retain) ASDTExclavesSensorManager *exclavesSensorManager;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSDictionary *status;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool usesExclavesAudioBuffer;

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)allocExclavesAudioBuffer:(unsigned int)arg1;
- (void)clearBuffer;
- (void*)exclavesAudioBuffer;
- (id)exclavesBufferName;
- (unsigned int)exclavesBufferSize;
- (void*)exclavesInboundBuffer;
- (id /* block */)exclavesReadInput;
- (id)exclavesSensorManager;
- (id /* block */)exclavesWriteMix;
- (void)freeExclavesAudioBuffer;
- (id)initWithConfig:(id)arg1 withDevice:(id)arg2;
- (id)initWithDirection:(unsigned int)arg1 withDevice:(id)arg2;
- (unsigned int)ioBufferSize;
- (void)ioThreadStateChange:(id)arg1;
- (int)pmIdleStream:(int)arg1;
- (int)pmPrepareStream:(int)arg1;
- (id /* block */)readInputBlock;
- (void)setExclavesBufferName:(id)arg1;
- (void)setExclavesBufferSize:(unsigned int)arg1;
- (void)setExclavesSensorManager:(id)arg1;
- (id)status;
- (void)updateSensorForIOThreadStateChange:(id)arg1;
- (bool)usesExclavesAudioBuffer;
- (id /* block */)writeMixBlock;

@end
