/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AudioServerDriverTransports_IOA2.framework/AudioServerDriverTransports_IOA2
 */

@interface ASDTIOA2LegacyDevice : ASDTAudioDevice {
    struct condition_variable { 
        struct _opaque_pthread_cond_t { 
            long long __sig; 
            BOOL __opaque[40]; 
        } __cv_; 
    }  _configChangeCV;
    struct mutex { 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } __m_; 
    }  _configChangeMutex;
    unsigned long long  _currentSeed;
    NSMapTable * _customPropertySelectorMap;
    bool  _delayedStopIO;
    struct recursive_mutex { 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } __m_; 
    }  _deviceLock;
    struct IOAudio2EngineStatus { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; } * _engineStatus;
    struct condition_variable { 
        struct _opaque_pthread_cond_t { 
            long long __sig; 
            BOOL __opaque[40]; 
        } __cv_; 
    }  _ioRequestCV;
    int  _ioRequestCount;
    struct mutex { 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } __m_; 
    }  _ioRequestMutex;
    struct unique_ptr<CADeprecated::CADispatchQueue, std::default_delete<CADeprecated::CADispatchQueue>> { 
        struct __compressed_pair<CADeprecated::CADispatchQueue *, std::default_delete<CADeprecated::CADispatchQueue>> { 
            struct CADispatchQueue {} *__value_; 
        } __ptr_; 
    }  _machDispatchQueue;
    bool  _shouldStopIO;
    NSObject<OS_dispatch_queue> * _stopIOQueue;
    struct unique_ptr<ASDT::IOA2UCDevice, std::default_delete<ASDT::IOA2UCDevice>> { 
        struct __compressed_pair<ASDT::IOA2UCDevice *, std::default_delete<ASDT::IOA2UCDevice>> { 
            struct IOA2UCDevice {} *__value_; 
        } __ptr_; 
    }  _ucDevice;
    struct unique_ptr<ASDT::MachPort, std::default_delete<ASDT::MachPort>> { 
        struct __compressed_pair<ASDT::MachPort *, std::default_delete<ASDT::MachPort>> { 
            struct MachPort {} *__value_; 
        } __ptr_; 
    }  _ucDeviceNotificationPort;
    bool  _ucDeviceStarted;
    struct mutex { 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } __m_; 
    }  _ucIOLock;
}

@property (nonatomic) unsigned long long currentSeed;
@property (nonatomic, retain) NSMapTable *customPropertySelectorMap;
@property (nonatomic) bool delayedStopIO;
@property (nonatomic) bool shouldStopIO;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *stopIOQueue;
@property (nonatomic) bool ucDeviceStarted;

+ (id)matcherWithDelegate:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_addControls:(id)arg1;
- (void)_addInputStreams:(id)arg1;
- (void)_addOutputStreams:(id)arg1;
- (id)_availableFormatsForStream:(unsigned int)arg1;
- (void)_closeConnection;
- (id)_controlDictionaryForControl:(unsigned int)arg1;
- (struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })_currentFormatForStream:(unsigned int)arg1;
- (id)_getControlByUCID:(unsigned int)arg1;
- (id)_getStreamByUCID:(unsigned int)arg1;
- (struct array<std::vector<unsigned int>, 2UL> { struct vector<unsigned int, std::allocator<unsigned int>> { unsigned int *x_1_1_1; unsigned int *x_1_1_2; struct __compressed_pair<unsigned int *, std::allocator<unsigned int>> { unsigned int *x_3_2_1; } x_1_1_3; } x1[2]; })_getStreamListUCIDLists;
- (void)_mapIOBuffer:(char **)arg1 ofSize:(unsigned int*)arg2 forStream:(unsigned int)arg3;
- (void)_mapIOBuffers;
- (id)_markOrCreateControlsWithDictionaries:(id)arg1;
- (id)_markOrCreateStreamsWithIDs:(struct vector<unsigned int, std::allocator<unsigned int>> { unsigned int *x1; unsigned int *x2; struct __compressed_pair<unsigned int *, std::allocator<unsigned int>> { unsigned int *x_3_1_1; } x3; })arg1 direction:(unsigned int)arg2;
- (bool)_openConnection;
- (void)_performUnderlyingStopIO:(unsigned long long)arg1;
- (void)_pushStreamActiveStates;
- (void)_releaseIOBuffer:(char *)arg1 forStream:(unsigned int)arg2;
- (void)_releaseIOBuffers;
- (void)_removeControls:(id)arg1;
- (void)_removeInputStreams:(id)arg1;
- (void)_removeOutputStreams:(id)arg1;
- (void)_requestUnderlyingStopIO;
- (bool)_setControlValue:(unsigned int*)arg1 forControl:(unsigned int)arg2;
- (bool)_setControlValues:(const unsigned int*)arg1 withCount:(unsigned long long)arg2 resultValues:(unsigned int*)arg3 count:(unsigned long long*)arg4 forControl:(unsigned int)arg5;
- (void)_setCurrentFormat:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })arg1 forStream:(unsigned int)arg2;
- (void)_setStreamActive:(bool)arg1 streamUCID:(unsigned int)arg2;
- (unsigned int)_streamStartingChannel:(unsigned int)arg1;
- (id)_synchronizeStreamsOrReturnForRemoval:(id)arg1;
- (bool)_updateControls:(void*)arg1;
- (bool)_updateStreams;
- (void)blockIORequests;
- (void)clearInputBuffers;
- (void)clearOutputBuffers;
- (unsigned int)clockDomain;
- (id)createStreamForUserClientID:(unsigned int)arg1 direction:(unsigned int)arg2;
- (unsigned long long)currentSeed;
- (id)customDataPropertyWithKey:(id)arg1;
- (id)customPropertySelectorMap;
- (id)customPropertyWithKey:(id)arg1;
- (unsigned int)customUInt32WithKey:(id)arg1 defaultValue:(unsigned int)arg2;
- (void)dealloc;
- (bool)delayedStopIO;
- (id)deviceName;
- (void)doConfigChange:(struct IOAudio2Notification { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned long long x5; unsigned long long x6; }*)arg1;
- (int)doStartIO;
- (int)doStopIO;
- (void)forceStopIO;
- (id)getKeyForCustomPropertyWithSelector:(unsigned int)arg1;
- (id /* block */)getZeroTimestampBlock;
- (void)handleConfigChange:(struct IOAudio2Notification { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned long long x5; unsigned long long x6; }*)arg1;
- (void)handleControlChange:(struct IOAudio2Notification { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned long long x5; unsigned long long x6; }*)arg1;
- (void)handleIOA2PropertyChanged:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 forObject:(id)arg2;
- (void)handleMachPortMessage;
- (void)handlePropertyChanged:(struct IOAudio2Notification { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned long long x5; unsigned long long x6; }*)arg1;
- (void)handleTransportChanged:(struct IOAudio2Notification { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned long long x5; unsigned long long x6; }*)arg1;
- (id)initWithIOA2Device:(unsigned int)arg1 plugin:(id)arg2;
- (unsigned int)inputLatency;
- (unsigned int)inputSafetyOffset;
- (struct IOA2UCDevice { int (**x1)(); unsigned int x2; unsigned int x3; struct CACFDictionary { struct __CFDictionary {} *x_4_1_1; bool x_4_1_2; bool x_4_1_3; } x4; bool x5; bool x6; bool x7; bool x8; }*)ioa2Device;
- (id)manufacturerName;
- (id)modelUID;
- (unsigned int)outputLatency;
- (unsigned int)outputSafetyOffset;
- (int)performStartIO;
- (int)performStopIO;
- (void)releaseIORequests;
- (double)samplingRate;
- (id)samplingRates;
- (struct unique_lock<std::recursive_mutex> { struct recursive_mutex {} *x1; bool x2; })scopedLock;
- (void)setCurrentSeed:(unsigned long long)arg1;
- (void)setCustomPropertySelectorMap:(id)arg1;
- (void)setDelayedStopIO:(bool)arg1;
- (void)setMuteAllOutputs:(bool)arg1;
- (void)setOutputVolumesToNominal;
- (void)setSamplingRate:(double)arg1;
- (void)setShouldStopIO:(bool)arg1;
- (void)setStopIOQueue:(id)arg1;
- (void)setUcDeviceStarted:(bool)arg1;
- (void)setupCustomPropertySelectorMap;
- (bool)shouldStopIO;
- (bool)startIORequest;
- (id)stopIOQueue;
- (void)stopIORequest;
- (bool)subclassUpdateControls;
- (unsigned int)timestampPeriod;
- (unsigned int)transportType;
- (bool)ucDeviceStarted;
- (id /* block */)updateClientInputPositionBlock;
- (id /* block */)updateClientOutputPositionBlock;
- (void)writeZerosToMixMilliseconds:(unsigned int)arg1;

@end
