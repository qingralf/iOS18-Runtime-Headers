/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BacklightServicesHost.framework/BacklightServicesHost
 */

@interface BLSHBacklightDisplayStateMachineAbortContext : NSObject <BLSHWatchdogAbortContext> {
    unsigned long long  _abortReason;
    unsigned long long  _abortTimestamp;
    long long  _caDisplayState;
    long long  _cbDisplayMode;
    long long  _displayMode;
    bool  _hasEnsureFlipbookCurrent;
    long long  _lastSteadyStateDisplayMode;
    const void * _payload;
    unsigned int  _payloadSize;
    long long  _prewarmingDisplayMode;
    bool  _showingBlankingWindow;
    SWSystemSleepMonitorAggregateState * _sleepMonitorAggregateState;
}

@property (nonatomic, readonly) unsigned long long abortReason;
@property (nonatomic, readonly, copy) NSString *abortReasonString;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasEnsureFlipbookCurrent;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double panicDelay; /* unknown property attribute: ? */
@property (nonatomic, readonly) const void*payload;
@property (nonatomic, readonly) unsigned int payloadSize;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool wantsPanic; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool wantsWaitPastFireForCompletionAndTailspin; /* unknown property attribute: ? */

- (void).cxx_destruct;
- (void)_populatePayload;
- (unsigned long long)abortReason;
- (id)abortReasonString;
- (void)dealloc;
- (id)description;
- (bool)hasEnsureFlipbookCurrent;
- (id)initWithDisplayMode:(long long)arg1 prewarmingDisplayMode:(long long)arg2 lastSteadyStateDisplayMode:(long long)arg3 caDisplayState:(long long)arg4 cbDisplayMode:(long long)arg5 showingBlankingWindow:(bool)arg6 sleepMonitorAggregateState:(id)arg7 hasEnsureFlipbookCurrent:(bool)arg8;
- (const void*)payload;
- (unsigned int)payloadSize;
- (void)setSleepImminentAbortReason;
- (bool)wantsPanic;

@end
