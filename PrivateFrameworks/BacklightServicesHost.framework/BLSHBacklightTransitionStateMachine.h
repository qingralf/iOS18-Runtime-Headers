/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BacklightServicesHost.framework/BacklightServicesHost
 */

@interface BLSHBacklightTransitionStateMachine : NSObject <BLSFlipbookDiagnosticsProviding, BLSHAlwaysOnPresentationEngineDelegate, BLSHBacklightDisplayStateMachineDelegate, BLSHBacklightEnvironmentStateMachineDelegate, BLSHBacklightInactiveEnvironmentSessionUpdating, BLSHBacklightSceneHostEnvironmentObserver, BLSHBacklightStateMachineEventPerforming, BLSHDisableFlipbookProvider, BLSHGlobalCacheFlipbookOnDisplayWakeProvider, BLSHGlobalHighLuminanceAlwaysOnProvider, BLSHGlobalUnrestrictedFramerateProvider, BLSHHostEnvironmentAmendSceneSettingsDelegate, BLSHWatchdogDelegate> {
    BLSHAlwaysOnPresentationEngine * _alwaysOnPresentationEngine;
    unsigned long long  _backlightStateChangeTimestamp;
    BLSHBacklightAggregateState * _currentState;
    BLSHBacklightDisplayStateMachine * _displayStateMachine;
    BLSHBacklightEnvironmentStateMachine * _environmentStateMachine;
    bool  _flipbookSupported;
    <BLSHInactiveBudgetPolicing_Private> * _inactiveBudgetPolicy;
    long long  _lastSteadyStateFlipbookState;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSMutableArray * _lock_abortedEvents;
    NSMutableArray * _lock_activeEvents;
    bool  _lock_alwaysOnSuppressed;
    bool  _lock_animating;
    long long  _lock_backlightState;
    bool  _lock_cacheFlipbook;
    bool  _lock_didNotifyDisplayModeTransitionStartedButNotCompleted;
    BLSHEnsureFlipbookCurrentOperation * _lock_ensureFlipbookCurrentOperation;
    bool  _lock_flipbookDisabled;
    bool  _lock_flipbookIsStale;
    bool  _lock_forcedUnanimated;
    bool  _lock_globalCacheFlipbook;
    bool  _lock_globalHighLuminanceAlwaysOn;
    bool  _lock_globalUnrestrictedFramerate;
    long long  _lock_lastNotifiedCompletedDisplayMode;
    long long  _lock_lastNotifiedTargetDisplayMode;
    BLSHPendingEnvironmentUpdateOperation * _lock_pendingEnvironmentUpdate;
    BLSHPendingUpdateDisplayMode * _lock_pendingUpdateDisplayMode;
    BLSHPendingUpdatePresentation * _lock_pendingUpdatePresentation;
    BLSHPendingUpdateToSpecifier * _lock_pendingUpdateToSpecifier;
    <BLSHBacklightHostObserving> * _lock_performerDelegate;
    NSMutableArray * _lock_queuedEventsToPerform;
    bool  _lock_safeToUnblank;
    BLSHBacklightInactiveEnvironmentSession * _lock_session;
    BLSHPresentationDateSpecifier * _lock_stopEngineOnScreenSpecifier;
    BLSHBacklightMutableTargetState * _lock_targetState;
    <BLSHWatchdogInvalidatable> * _onMain_watchdogTimer;
    <BLSHOSInterfaceProviding> * _osInterfaceProvider;
    BLSBacklightChangeEvent * _pendingPrewarmedEvent;
    <BLSHBacklightPlatformProvider> * _platformProvider;
    unsigned long long  _stateHandler;
    BLSAssertion * _touchLockAssertion;
    <BLSHSystemActivityAsserting> * _transitionAPAwakeAssertion;
}

@property (getter=isAlwaysOnEnabled, nonatomic, readonly) bool alwaysOnEnabled;
@property (getter=isAlwaysOnSuppressed, nonatomic) bool alwaysOnSuppressed;
@property (nonatomic, readonly) long long backlightDisplayMode;
@property (nonatomic, readonly) long long backlightState;
@property (nonatomic, readonly) unsigned long long backlightStateChangeTimestamp;
@property (nonatomic, readonly, copy) NSString *backlightStateDescription;
@property (setter=setCATransitionsDelayForTesting:, nonatomic) double caTransitionsDelayForTesting; /* unknown property attribute: ? */
@property (setter=setCBTransitionsDelayForTesting:, nonatomic) double cbTransitionsDelayForTesting; /* unknown property attribute: ? */
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool deviceSupportsAlwaysOn;
@property (nonatomic, readonly) BLSHBacklightDisplayStateMachine *displayStateMachine;
@property (getter=isFlipbookDisabled, nonatomic) bool flipbookDisabled;
@property (nonatomic, readonly) long long flipbookState;
@property (nonatomic) bool globalCacheFlipbookOnDisplayWake;
@property (getter=isGlobalHighLuminanceAlwaysOn, nonatomic) bool globalHighLuminanceAlwaysOn;
@property (getter=isGlobalUnrestrictedFramerate, nonatomic) bool globalUnrestrictedFramerate;
@property (readonly) unsigned long long hash;
@property (nonatomic) <BLSHBacklightHostObserving> *performerDelegate;
@property (nonatomic, readonly) <BLSHBacklightPlatformProvider> *platformProvider;
@property (nonatomic) bool safeToUnblank;
@property (nonatomic, readonly) BLSHBacklightInactiveEnvironmentSession *session;
@property (readonly) Class superclass;
@property (getter=isTransitioning, nonatomic, readonly) bool transitioning;

- (void).cxx_destruct;
- (id)abortContextForTimer:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)allFlipbookFrames;
- (long long)backlightDisplayMode;
- (long long)backlightState;
- (unsigned long long)backlightStateChangeTimestamp;
- (id)backlightStateDescription;
- (void)dealloc;
- (id)debugDescription;
- (id)description;
- (bool)deviceSupportsAlwaysOn;
- (void)displayState:(id)arg1 didUpdateToBrightnessCurve:(long long)arg2;
- (void)displayState:(id)arg1 didUpdateToMode:(long long)arg2;
- (id)displayStateMachine;
- (void)environmentStateMachine:(id)arg1 didBeginUpdateToState:(long long)arg2;
- (void)environmentStateMachine:(id)arg1 didCompleteUpdateToState:(long long)arg2;
- (void)environmentStateMachine:(id)arg1 didUpdateToPresentation:(id)arg2;
- (void)environmentStateMachine:(id)arg1 didUpdateToSpecifier:(id)arg2;
- (long long)flipbookState;
- (id)frameOnGlassNow;
- (id)frameOnGlassWhenFlipbookLastCancelled;
- (id)frameWithUUID:(id)arg1;
- (bool)globalCacheFlipbookOnDisplayWake;
- (bool)hasEnsureFlipbookCurrent;
- (bool)hostEnvironment:(id)arg1 didAmendSceneSettings:(id)arg2;
- (void)hostEnvironment:(id)arg1 hostDidSetAlwaysOnEnabledForEnvironment:(bool)arg2;
- (void)hostEnvironment:(id)arg1 hostDidSetCacheFlipbookOnDisplayWake:(bool)arg2;
- (void)hostEnvironment:(id)arg1 hostDidSetLiveUpdating:(bool)arg2;
- (void)hostEnvironment:(id)arg1 hostDidSetUnrestrictedFramerateUpdates:(bool)arg2;
- (id)identifier;
- (void)inactiveEnvironmentSession:(id)arg1 updateToPresentation:(id)arg2;
- (id)initWithPlatformProvider:(id)arg1 osInterfaceProvider:(id)arg2 inactiveBudgetPolicy:(id)arg3;
- (bool)isAlwaysOnEnabled;
- (bool)isAlwaysOnSuppressed;
- (bool)isFlipbookDisabled;
- (bool)isGlobalHighLuminanceAlwaysOn;
- (bool)isGlobalUnrestrictedFramerate;
- (bool)isTransitioning;
- (id)osInterfaceProvider;
- (void)performEvent:(id)arg1;
- (id)performerDelegate;
- (id)platformProvider;
- (void)presentationEngine:(id)arg1 didInvalidateContentForEnvironment:(id)arg2 reason:(id)arg3;
- (void)presentationEngine:(id)arg1 didUpdateToCurrentWithSpecifier:(id)arg2;
- (void)prewarmEvent:(id)arg1;
- (void)registerHandlersForService:(id)arg1;
- (void)removeObserver:(id)arg1;
- (bool)safeToUnblank;
- (id)session;
- (void)setAlwaysOnSuppressed:(bool)arg1;
- (void)setFlipbookDisabled:(bool)arg1;
- (void)setGlobalCacheFlipbookOnDisplayWake:(bool)arg1;
- (void)setGlobalHighLuminanceAlwaysOn:(bool)arg1;
- (void)setGlobalUnrestrictedFramerate:(bool)arg1;
- (void)setPerformerDelegate:(id)arg1;
- (void)setSafeToUnblank:(bool)arg1;

@end
