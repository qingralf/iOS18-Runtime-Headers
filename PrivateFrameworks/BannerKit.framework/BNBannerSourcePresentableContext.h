/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit
 */

@interface BNBannerSourcePresentableContext : NSObject <BNPresentableContextClientToHostInterface, BNPresentableIdentifying, BNPresentableUniquelyIdentifying, BSInvalidatable, BSServiceConnectionListenerDelegate> {
    BSServiceConnection<BSServiceConnectionHost> * _connection;
    BSServiceConnectionListener * _connectionListener;
    long long  _contentBehavior;
    <BNBannerSourcePresentableContextDelegate> * _delegate;
    bool  _draggingDismissalEnabled;
    bool  _draggingInteractionEnabled;
    NSObject<OS_dispatch_queue> * _queue;
    NSString * _requestIdentifier;
    NSString * _requesterIdentifier;
    bool  _touchOutsideDismissalEnabled;
    NSUUID * _uniquePresentableIdentifier;
}

@property (nonatomic, readonly) long long contentBehavior;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <BNBannerSourcePresentableContextDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isDraggingDismissalEnabled, nonatomic, readonly) bool draggingDismissalEnabled;
@property (getter=isDraggingInteractionEnabled, nonatomic, readonly) bool draggingInteractionEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *requestIdentifier;
@property (nonatomic, readonly, copy) NSString *requesterIdentifier;
@property (readonly) Class superclass;
@property (getter=isTouchOutsideDismissalEnabled, nonatomic, readonly) bool touchOutsideDismissalEnabled;
@property (nonatomic, readonly, copy) NSUUID *uniqueIdentifier; /* unknown property attribute: ? */
@property (nonatomic, readonly, copy) NSUUID *uniquePresentableIdentifier; /* unknown property attribute: ? */

- (void).cxx_destruct;
- (void)__setDraggingDismissalEnabled:(id)arg1 error:(out id*)arg2;
- (void)__setDraggingInteractionEnabled:(id)arg1 error:(out id*)arg2;
- (void)__setTouchOutsideDismissalEnabled:(id)arg1 error:(out id*)arg2;
- (long long)contentBehavior;
- (void)dealloc;
- (id)delegate;
- (void)handlePresentableWillNotAppearWithReason:(id)arg1;
- (void)handleTemplateContentEvent:(long long)arg1;
- (id)initWithPresentableIdentification:(id)arg1 contentBehavior:(long long)arg2 serviceDomain:(id)arg3;
- (void)invalidate;
- (bool)isDraggingDismissalEnabled;
- (bool)isDraggingInteractionEnabled;
- (bool)isTouchOutsideDismissalEnabled;
- (void)listener:(id)arg1 didReceiveConnection:(id)arg2 withContext:(id)arg3;
- (id)requestIdentifier;
- (id)requesterIdentifier;
- (void)setDelegate:(id)arg1;
- (id)uniquePresentableIdentifier;
- (void)updatePresentableAppearState:(int)arg1 reason:(id)arg2;
- (void)updateUserInteractionWillBegin:(bool)arg1;

@end
