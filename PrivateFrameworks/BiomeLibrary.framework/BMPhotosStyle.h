/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BiomeLibrary.framework/BiomeLibrary
 */

@interface BMPhotosStyle : BMEventBase <BMStoreData> {
    double  _brightnessValue;
    unsigned int  _camera;
    unsigned int  _dataVersion;
    unsigned int  _faceCount;
    double  _faceSizeRatio;
    bool  _hasBrightnessValue;
    bool  _hasCamera;
    bool  _hasFaceCount;
    bool  _hasFaceSizeRatio;
    bool  _hasIsFood;
    bool  _hasIsIndoor;
    bool  _hasIsOutdoor;
    bool  _hasIsSunsetSunrise;
    bool  _hasPetCount;
    bool  _hasStillImageCaptureType;
    bool  _hasStillImageProcessingFlags;
    bool  _hasVersion;
    NSString * _identifier;
    bool  _isFood;
    bool  _isIndoor;
    bool  _isOutdoor;
    bool  _isSunsetSunrise;
    unsigned int  _petCount;
    NSArray * _salientScenes;
    NSString * _sceneForAsset;
    NSArray * _sliderValues;
    unsigned int  _stillImageCaptureType;
    unsigned int  _stillImageProcessingFlags;
    NSString * _styleChoice;
    int  _styleSelectionType;
    NSString * _subjectForAsset;
    int  _userLibraryAgeInDays;
    int  _userLibrarySize;
    unsigned int  _version;
}

@property (nonatomic, readonly) double brightnessValue;
@property (nonatomic, readonly) unsigned int camera;
@property (nonatomic, readonly) unsigned int dataVersion;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) unsigned int faceCount;
@property (nonatomic, readonly) double faceSizeRatio;
@property (nonatomic) bool hasBrightnessValue;
@property (nonatomic) bool hasCamera;
@property (nonatomic) bool hasFaceCount;
@property (nonatomic) bool hasFaceSizeRatio;
@property (nonatomic) bool hasIsFood;
@property (nonatomic) bool hasIsIndoor;
@property (nonatomic) bool hasIsOutdoor;
@property (nonatomic) bool hasIsSunsetSunrise;
@property (nonatomic) bool hasPetCount;
@property (nonatomic) bool hasStillImageCaptureType;
@property (nonatomic) bool hasStillImageProcessingFlags;
@property (nonatomic) bool hasVersion;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, readonly) bool isFood;
@property (nonatomic, readonly) bool isIndoor;
@property (nonatomic, readonly) bool isOutdoor;
@property (nonatomic, readonly) bool isSunsetSunrise;
@property (nonatomic, readonly) unsigned int petCount;
@property (nonatomic, readonly) NSArray *salientScenes;
@property (nonatomic, readonly) NSString *sceneForAsset;
@property (nonatomic, readonly) NSArray *sliderValues;
@property (nonatomic, readonly) unsigned int stillImageCaptureType;
@property (nonatomic, readonly) unsigned int stillImageProcessingFlags;
@property (nonatomic, readonly) NSString *styleChoice;
@property (nonatomic, readonly) int styleSelectionType;
@property (nonatomic, readonly) NSString *subjectForAsset;
@property (readonly) Class superclass;
@property (nonatomic, readonly) int userLibraryAgeInDays;
@property (nonatomic, readonly) int userLibrarySize;
@property (nonatomic, readonly) unsigned int version;

+ (id)columns;
+ (id)eventWithData:(id)arg1 dataVersion:(unsigned int)arg2;
+ (unsigned int)latestDataVersion;
+ (id)protoFields;
+ (id)validKeyPaths;

- (void).cxx_destruct;
- (id)_sliderValuesJSONArray;
- (double)brightnessValue;
- (unsigned int)camera;
- (unsigned int)dataVersion;
- (id)description;
- (unsigned int)faceCount;
- (double)faceSizeRatio;
- (bool)hasBrightnessValue;
- (bool)hasCamera;
- (bool)hasFaceCount;
- (bool)hasFaceSizeRatio;
- (bool)hasIsFood;
- (bool)hasIsIndoor;
- (bool)hasIsOutdoor;
- (bool)hasIsSunsetSunrise;
- (bool)hasPetCount;
- (bool)hasStillImageCaptureType;
- (bool)hasStillImageProcessingFlags;
- (bool)hasVersion;
- (id)identifier;
- (id)initByReadFrom:(id)arg1;
- (id)initWithIdentifier:(id)arg1 styleChoice:(id)arg2 styleSelectionType:(int)arg3 sliderValues:(id)arg4 userLibrarySize:(int)arg5 userLibraryAgeInDays:(int)arg6 brightnessValue:(id)arg7 stillImageProcessingFlags:(id)arg8 camera:(id)arg9 stillImageCaptureType:(id)arg10 faceCount:(id)arg11 petCount:(id)arg12 faceSizeRatio:(id)arg13 isSunsetSunrise:(id)arg14 isOutdoor:(id)arg15 isFood:(id)arg16 isIndoor:(id)arg17 salientScenes:(id)arg18;
- (id)initWithIdentifier:(id)arg1 styleChoice:(id)arg2 styleSelectionType:(int)arg3 sliderValues:(id)arg4 userLibrarySize:(int)arg5 userLibraryAgeInDays:(int)arg6 brightnessValue:(id)arg7 stillImageProcessingFlags:(id)arg8 camera:(id)arg9 stillImageCaptureType:(id)arg10 faceCount:(id)arg11 petCount:(id)arg12 faceSizeRatio:(id)arg13 isSunsetSunrise:(id)arg14 isOutdoor:(id)arg15 isFood:(id)arg16 isIndoor:(id)arg17 salientScenes:(id)arg18 version:(id)arg19 sceneForAsset:(id)arg20 subjectForAsset:(id)arg21;
- (id)initWithIdentifier:(id)arg1 styleChoice:(id)arg2 styleSelectionType:(int)arg3 sliderValues:(id)arg4 userLibrarySize:(int)arg5 userLibraryAgeInDays:(int)arg6 brightnessValue:(id)arg7 stillImageProcessingFlags:(id)arg8 camera:(id)arg9 stillImageCaptureType:(id)arg10 faceCount:(id)arg11 petCount:(id)arg12 version:(id)arg13 sceneForAsset:(id)arg14 subjectForAsset:(id)arg15;
- (id)initWithJSONDictionary:(id)arg1 error:(id*)arg2;
- (bool)isEqual:(id)arg1;
- (bool)isFood;
- (bool)isIndoor;
- (bool)isOutdoor;
- (bool)isSunsetSunrise;
- (id)jsonDictionary;
- (unsigned int)petCount;
- (id)salientScenes;
- (id)sceneForAsset;
- (id)serialize;
- (void)setHasBrightnessValue:(bool)arg1;
- (void)setHasCamera:(bool)arg1;
- (void)setHasFaceCount:(bool)arg1;
- (void)setHasFaceSizeRatio:(bool)arg1;
- (void)setHasIsFood:(bool)arg1;
- (void)setHasIsIndoor:(bool)arg1;
- (void)setHasIsOutdoor:(bool)arg1;
- (void)setHasIsSunsetSunrise:(bool)arg1;
- (void)setHasPetCount:(bool)arg1;
- (void)setHasStillImageCaptureType:(bool)arg1;
- (void)setHasStillImageProcessingFlags:(bool)arg1;
- (void)setHasVersion:(bool)arg1;
- (id)sliderValues;
- (unsigned int)stillImageCaptureType;
- (unsigned int)stillImageProcessingFlags;
- (id)styleChoice;
- (int)styleSelectionType;
- (id)subjectForAsset;
- (int)userLibraryAgeInDays;
- (int)userLibrarySize;
- (unsigned int)version;
- (void)writeTo:(id)arg1;

@end
