/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BusinessChatService.framework/BusinessChatService
 */

@interface BCSBusinessQueryController : NSObject <BCSBusinessBatchProvider, BCSBusinessConfigProvider, BCSBusinessItemProvider, BCSBusinessLookupProvider, BCSBusinessShardProvider, BCSLinkQueryChopperDelegate, BCSXPCDaemonProtocol> {
    BCSBlastDoorHelper * _blastDoorHelper;
    bool  _blastDoorWarmedUp;
    <BCSConfigResolving> * _businessCallerConfigResolver;
    <BCSItemResolving> * _businessCallerItemResolver;
    <BCSFetchTrigger> * _businessCallerMegashardFetchTrigger;
    <BCSShardResolving> * _businessCallerShardResolver;
    <BCSConfigResolving> * _businessEmailConfigResolver;
    <BCSItemResolving><BCSItemBatchResolving> * _businessEmailItemResolver;
    <BCSFetchTrigger> * _businessEmailMegashardFetchTrigger;
    <BCSShardResolving> * _businessEmailShardResolver;
    <BCSFetchTrigger> * _businessLinkMegashardFetchTrigger;
    <BCSCacheClearing> * _cacheClearer;
    <BCSConfigResolving> * _chatSuggestConfigResolver;
    <BCSChatSuggestControllerProtocol> * _chatSuggestController;
    <BCSItemResolving> * _chatSuggestItemResolver;
    <BCSFetchTrigger> * _chatSuggestMegashardFetchTrigger;
    <BCSShardResolving> * _chatSuggestShardResolver;
    <BCSConfigCaching> * _configCache;
    <BCSConfigCacheSkipping> * _configCacheSkip;
    <BCSEntitlementVerifying> * _entitlementVerifier;
    <BCSHousekeeping> * _housekeeper;
    <BCSIconControllerProtocol> * _iconController;
    <BCSIdentityServiceProtocol> * _identityService;
    <BCSConfigResolving> * _linkConfigResolver;
    <BCSItemResolving> * _linkItemResolver;
    <BCSShardResolving> * _linkShardResolver;
    <BCSMetricFactoryProtocol> * _metricFactory;
    <BCSURLPatternControllerProtocol> * _patternController;
    <BCSQueryChopperProtocol> * _queryChopper;
    NSObject<OS_dispatch_queue> * _serialDispatchQueue;
    <BCSShardCacheQueryable> * _shardCache;
    <BCSShardCacheSkipping> * _shardCacheSkip;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_deleteInMemoryCache;
- (void)cachedBusinessMetadataForEmail:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)clearCachesForLinkItemsAssociatedWithBundleID:(id)arg1 completion:(id /* block */)arg2;
- (void)clearCachesForType:(long long)arg1 completion:(id /* block */)arg2;
- (void)clearExpiredCachesForType:(long long)arg1 completion:(id /* block */)arg2;
- (void)fetchAreBusinessesRegisteredWithQuery:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchBusinessCallerMetadataForPhoneNumber:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchBusinessCallerMetadataForPhoneNumber:(id)arg1 forClientBundleID:(id)arg2 metadataCallback:(id /* block */)arg3 logoURLCallback:(id /* block */)arg4 completion:(id /* block */)arg5;
- (void)fetchBusinessItemWithDetailsForPhoneNumber:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchBusinessItemWithPhoneNumber:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchBusinessLogoForBusinessIdentifier:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchBusinessMetadataForEmail:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchBusinessMetadataForEmailIdentifier:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchBusinessMetadataForEmails:(id)arg1 forClientBundleID:(id)arg2 requestId:(id)arg3 completion:(id /* block */)arg4;
- (void)fetchConfigForQuery:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchIsBusinessPhoneNumber:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchIsBusinessRegisteredWithQuery:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchItemWithQuery:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchItemsWithQuery:(id)arg1 perItemCompletion:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)fetchLinkItemModelWithHash:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchLinkItemModelWithURL:(id)arg1 chopURL:(bool)arg2 forClientBundleID:(id)arg3 completion:(id /* block */)arg4;
- (void)fetchShardWithQuery:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchShardsWithQuery:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchSquareIconDataForBusinessItem:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (id)initWithChatSuggestMegashardFetchTrigger:(id)arg1 businessLinkMegashardFetchTrigger:(id)arg2 businessCallerMegashardFetchTrigger:(id)arg3 businessEmailMegashardFetchTrigger:(id)arg4 entitlementVerifier:(id)arg5 identityService:(id)arg6 chatSuggestController:(id)arg7 iconController:(id)arg8 cacheClearer:(id)arg9 shardCache:(id)arg10 configCache:(id)arg11 configCacheSkip:(id)arg12 shardCacheSkip:(id)arg13 chatSuggestConfigResolver:(id)arg14 linkConfigResolver:(id)arg15 businessCallerConfigResolver:(id)arg16 businessEmailConfigResolver:(id)arg17 chatSuggestShardResolver:(id)arg18 linkShardResolver:(id)arg19 businessCallerShardResolver:(id)arg20 businessEmailShardResolver:(id)arg21 chatSuggestItemResolver:(id)arg22 linkItemResolver:(id)arg23 businessCallerItemResolver:(id)arg24 businessEmailItemResolver:(id)arg25 queryChopper:(id)arg26 patternController:(id)arg27 metricFactory:(id)arg28 blastDoorHelper:(id)arg29 housekeeper:(id)arg30;
- (id)initWithChatSuggestMegashardFetcher:(id)arg1 businessLinkMegashardFetcher:(id)arg2 businessCallerMegashardFetcher:(id)arg3 businessEmailMegashardFetcher:(id)arg4 shardCache:(id)arg5 cacheManager:(id)arg6 chatSuggestRemoteFetcher:(id)arg7 businessLinkRemoteFetcher:(id)arg8 businessCallerRemoteFetcher:(id)arg9 businessEmailRemoteFetcher:(id)arg10 userDefaults:(id)arg11 metricFactory:(id)arg12;
- (void)isBusinessCallerRegisteredForPhoneNumber:(id)arg1 forClientBundleID:(id)arg2 completion:(id /* block */)arg3;
- (void)isBusinessRegisteredForURL:(id)arg1 chopURL:(bool)arg2 forClientBundleID:(id)arg3 completion:(id /* block */)arg4;
- (void)prefetchMegashardsWithCompletion:(id /* block */)arg1;
- (void)warmCacheIfNecessaryForPhoneNumbers:(id)arg1 forClientBundleID:(id)arg2;

@end
