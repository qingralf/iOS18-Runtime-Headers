/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMCapture.framework/CMCapture
 */

@interface BWPhotoEncoderController : BWStillImageProcessorController <BWInferenceFormatProvider, BWPhotoEncoderControllerInputUpdatesDelegate> {
    NSDictionary * _adaptiveQualityValueForHEIF;
    bool  _addUnstyledImageToHEIF;
    bool  _allowHEIFPrewarming;
    bool  _clientExpectsCameraMountedInLandscapeOrientation;
    FigCapturePixelConverter * _clientThumbnailPixelConverter;
    BWCMPhotoEncoderManager * _cmPhotoEncoderManager;
    BWPhotoEncoderControllerConfiguration * _configuration;
    unsigned long long  _dngBitDepth;
    BWDNGEncoderManager * _dngEncoderManager;
    NSObject<OS_dispatch_group> * _encodingGroup;
    NSObject<OS_dispatch_queue> * _encodingQueue;
    bool  _heifForceEmbedThumb;
    float  _heifQualityOverride;
    int  _heifTileHeight;
    int  _heifTileWidth;
    bool  _heifUseTiling;
    BWInferenceEngine * _inferenceEngine;
    NSObject<OS_dispatch_group> * _inferenceGroup;
    struct opaqueCMFormatDescription { } * _inferenceInputFormatDescription;
    BWInferenceVideoFormat * _inferenceInputVideoFormat;
    NSMutableDictionary * _inputsByCaptureIdentifier;
    NSObject<OS_dispatch_queue> * _inputsByCaptureIdentifierQueue;
    FigCapturePixelConverter * _jpegPixelConverter;
    unsigned long long  _maxThreads;
    _Atomic bool  _opportunisticInferenceCompleted;
    bool  _preferMainImageDownscalingFactorByAttachedMediaKeyFromSampleBuffer;
    bool  _preparedInferenceEngine;
    NSObject<OS_dispatch_group> * _previewGenerationGroup;
    NSObject<OS_dispatch_queue> * _previewGenerationQueue;
    FigCapturePixelConverter * _previewPixelConverter;
    NSObject<OS_dispatch_queue> * _prewarmQueue;
    <BWPhotoEncoderControllerDelegate> * _primaryOwnerDelegate;
    NSDictionary * _resolvedVideoFormatsByAttachedMediaKey;
    struct __CVBuffer { } * _smartStyleDecompressedStyledPixelBuffer;
    struct __CVBuffer { } * _smartStyleDeltaMapPixelBuffer;
    <CMISmartStyleProcessor> * _smartStyleProcessor;
    FigCapturePixelConverter * _thumbnailPixelConverter;
}

@property (nonatomic) bool clientExpectsCameraMountedInLandscapeOrientation;
@property (nonatomic, readonly) NSString *currentInputsCaptureRequestIdentifier;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool preferMainImageDownscalingFactorByAttachedMediaKeyFromSampleBuffer;
@property <BWPhotoEncoderControllerDelegate> *primaryOwnerDelegate;
@property (retain) NSDictionary *resolvedVideoFormatsByAttachedMediaKey;
@property (readonly) Class superclass;

+ (bool)usesCustomProcessingFlow;

- (void).cxx_destruct;
- (bool)_addAlternateImageForEncodingScheme:(int)arg1 flexGTCColorSpace:(struct CGColorSpace { }*)arg2 isP3primaries:(bool)arg3 tonemapItemMetadata:(id)arg4 parentImageHandle:(long long)arg5 gainMapHandle:(long long)arg6;
- (int)_addCompressedThumbnailForEncodingScheme:(int)arg1 thumbnailSurface:(struct __IOSurface { }*)arg2 thumbnailSurfaceSize:(unsigned long long)arg3;
- (bool)_addConstantColorConfidenceMapForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2;
- (bool)_addDepthForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 primaryOutputAspectRatio:(double)arg3 parentImageHandle:(long long)arg4;
- (bool)_addGainMapForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 outputDimensions:(struct { int x1; int x2; })arg3 primaryOutputAspectRatio:(double)arg4 parentImageHandle:(long long)arg5;
- (bool)_addGainMapMetadataForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 parentImageHandle:(long long)arg3;
- (int)_addMetadataAttachmentsForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 requestedSettings:(id)arg3 captureType:(int)arg4 parentImageHandle:(long long)arg5;
- (void)_addOrPrewarmAuxImagesIfNeededForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 metadata:(id)arg3 stillImageSettings:(id)arg4 processingFlags:(unsigned int)arg5 parentImageHandle:(long long)arg6;
- (int)_addOrPrewarmForAttachedMediaKey:(id)arg1 encodingScheme:(int)arg2 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg3 metadata:(id)arg4 stillImageSettings:(id)arg5 parentImageHandle:(long long)arg6;
- (bool)_addPortraitEffectsMatteForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 primaryOutputAspectRatio:(double)arg3 parentImageHandle:(long long)arg4;
- (void)_addQualityOptionsToDictionary:(id)arg1 codecType:(unsigned int)arg2 pixelBuffer:(struct __CVBuffer { }*)arg3 imageDimensions:(struct { int x1; int x2; })arg4 metadata:(id)arg5 requestedStillImageCaptureSettings:(id)arg6 resolvedStillImageCaptureSettings:(id)arg7 enableHEIFTiling:(bool)arg8 enableHEIFOrientation:(bool)arg9 auxImageType:(int)arg10;
- (bool)_addSemanticMattesForEncodingScheme:(int)arg1 attachedMediaKey:(id)arg2 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg3 primaryOutputAspectRatio:(double)arg4 settingsID:(long long)arg5 orientation:(int)arg6 parentImageHandle:(long long)arg7;
- (bool)_addSmartStyleDeltaMapForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 stillImageSettings:(id)arg3 primaryOutputAspectRatio:(double)arg4;
- (bool)_addSmartStyleLinearThumbnailForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 primaryOutputAspectRatio:(double)arg3;
- (int)_addSmartStyleMetadataForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 requestedStillImageCaptureSettings:(id)arg3;
- (int)_addThumbnailForEncodingScheme:(int)arg1 thumbnailPixelBuffer:(struct __CVBuffer { }*)arg2 metadata:(id)arg3 requestedStillImageCaptureSettings:(id)arg4 resolvedStillImageCaptureSettings:(id)arg5 processingFlags:(unsigned int)arg6 cropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg7 codecType:(unsigned int)arg8 maxPixelSize:(unsigned long long)arg9 parentImageHandle:(long long)arg10;
- (int)_addUnstyledImageForEncodingScheme:(int)arg1 sbuf:(struct opaqueCMSampleBuffer { }*)arg2 imageDimensions:(struct { int x1; int x2; })arg3 processingFlags:(unsigned int)arg4 metadata:(id)arg5 requestedStillImageCaptureSettings:(id)arg6 resolvedStillImageCaptureSettings:(id)arg7 cropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg8 usePixelsOutsideCrop:(bool)arg9;
- (int)_addValue:(id)arg1 toAuxiliaryImageProperties:(struct CGImageMetadata { }*)arg2 namespace:(struct __CFString { }*)arg3 prefix:(struct __CFString { }*)arg4 key:(struct __CFString { }*)arg5;
- (double)_aspectRatioAdjustmentFactorForSettings:(id)arg1;
- (struct __IOSurface { }*)_closeContainerAndCopySurfaceForEncodingScheme:(int)arg1;
- (void)_closeContainerForEncodingScheme:(int)arg1;
- (int)_computeAndAddSmartStyleDeltaMapToClosedSurfaceContainer:(struct __IOSurface { }*)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 encodingScheme:(int)arg3 stillImageSettings:(id)arg4 processingFlags:(unsigned int)arg5;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_cropRectForRequestedSettings:(id)arg1 inputDimensions:(struct { int x1; int x2; })arg2 metadata:(id)arg3 processingFlags:(unsigned int)arg4;
- (int)_decompressSmartStylePhotoSurface:(struct __IOSurface { }*)arg1;
- (bool)_depthEncodingNeededForSettings:(id)arg1 deferredPhotoProxy:(bool)arg2;
- (id)_depthEncodingOptionsFromDepthMetadata:(id)arg1 pixelFormat:(unsigned int)arg2;
- (int)_encodeDNGForEncodingScheme:(int)arg1 rawSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 dngDictionary:(id)arg3 requestedSettings:(id)arg4 captureType:(int)arg5 cropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg6 dngContainsDepthData:(bool)arg7 dngContainsSemanticSegmentationMattes:(bool)arg8 processingFlags:(unsigned int)arg9;
- (int)_encodePhotoForEncodingScheme:(int)arg1 pixelBuffer:(struct __CVBuffer { }*)arg2 imageDimensions:(struct { int x1; int x2; })arg3 processingFlags:(unsigned int)arg4 metadata:(id)arg5 thumbnailOptions:(id)arg6 requestedStillImageCaptureSettings:(id)arg7 resolvedStillImageCaptureSettings:(id)arg8 cropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg9 usePixelsOutsideCrop:(bool)arg10 usedContainerOptionsOut:(id*)arg11 usedEncodingOptionsOut:(id*)arg12 mainImageHandleInOut:(long long*)arg13;
- (id)_encoderManagerForEncodingScheme:(int)arg1;
- (int)_ensureSetupForPostponedResources;
- (bool)_finalImageExpectingSmartStyleReversibilityDataForDeferredPhotoProxy:(bool)arg1 settings:(id)arg2 adjustedPhoto:(bool)arg3;
- (void)_flushCurrentRequest;
- (void)_flushInputsByCaptureIdentifier;
- (int)_generatePhotoSurfaceFromEncodedImageBuffer:(struct opaqueCMSampleBuffer { }*)arg1 photoSurfaceOut:(struct __IOSurface {}**)arg2 photoSurfaceSizeOut:(unsigned long long*)arg3;
- (int)_generatePreviewForSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 requestedStillImageCaptureSettings:(id)arg2 cropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 previewPixelBuffer:(struct __CVBuffer {}**)arg4;
- (void)_getAssetsSizeForEncodingScheme:(int)arg1 containerSizeOut:(unsigned long long*)arg2 thumbnailSizeOut:(unsigned long long*)arg3 auxiliaryImagesSizeOut:(unsigned long long*)arg4;
- (int)_getColorSpacePropertiesForSourcePixelFormat:(unsigned int)arg1 sourceWidth:(int)arg2 sourceHeight:(int)arg3 destinationPixelFormat:(unsigned int)arg4;
- (void)_handlePrewarmForConstantColorConfidenceMapForEncodingScheme:(int)arg1 requestedStillImageCaptureSettings:(id)arg2 confidenceMapDimensions:(struct { int x1; int x2; })arg3;
- (void)_handlePrewarmForDepthForEncodingScheme:(int)arg1 requestedStillImageCaptureSettings:(id)arg2 prewarmingMetadata:(id)arg3;
- (void)_handlePrewarmForGainMapForEncodingScheme:(int)arg1 requestedStillImageCaptureSettings:(id)arg2 prewarmingMetadata:(id)arg3;
- (void)_handlePrewarmForMainImageForEncodingScheme:(int)arg1 prewarmingMetadata:(id)arg2 stillImageSettings:(id)arg3;
- (void)_handlePrewarmForPortraitEffectsMatteForEncodingScheme:(int)arg1 requestedStillImageCaptureSettings:(id)arg2;
- (int)_loadCreateAndSetupSmartStyleRenderingProcessor;
- (struct opaqueCMSampleBuffer { }*)_newAuxImageEncodingTriggerSbufForSettings:(id)arg1 metadata:(id)arg2;
- (struct CGImageMetadata { }*)_newAuxiliaryImagePropertiesFromPortraitEffectsMatteMetadata:(id)arg1;
- (struct CGImageMetadata { }*)_newAuxiliaryImagePropertiesFromSemanticMatteSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (struct CGImageMetadata { }*)_newGainMapAuxiliaryImagePropertiesForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 denormalizedCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 requiresPhotosAdjustment:(bool)arg4 encodingOptionsOut:(id*)arg5 flexGTCColorSpaceOut:(struct CGColorSpace {}**)arg6 tonemapItemMetadataOut:(id*)arg7 isP3PrimariesOut:(bool*)arg8;
- (id)_newMetadataAttachmentsForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 requestedSettings:(id)arg3 captureType:(int)arg4;
- (id)_newRawMetadataAttachmentsForEncodingScheme:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 dngDictionary:(id)arg3 requestedSettings:(id)arg4 captureType:(int)arg5 dngContainsDepthData:(bool)arg6 dngContainsSemanticSegmentationMattes:(bool)arg7;
- (int)_optionsForEncodingScheme:(int)arg1 pixelBuffer:(struct __CVBuffer { }*)arg2 imageDimensions:(struct { int x1; int x2; })arg3 processingFlags:(unsigned int)arg4 metadata:(id)arg5 thumbnailOptions:(id)arg6 requestedStillImageCaptureSettings:(id)arg7 resolvedStillImageCaptureSettings:(id)arg8 cropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg9 usePixelsOutsideCrop:(bool)arg10 containerOptionsOut:(id*)arg11 encodingOptionsOut:(id*)arg12;
- (void)_performInferenceWithBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (bool)_personMaskEncodingNeededForSettings:(id)arg1 encodingScheme:(int)arg2 deferredPhotoProxy:(bool)arg3 adjustedPhoto:(bool)arg4;
- (bool)_postponeSelectResourceAllocations;
- (void)_prewarmAndReserveMainImageHandleForEncodingScheme:(int)arg1 prewarmingMetadata:(id)arg2 stillImageSettings:(id)arg3;
- (double)_primaryOutputAspectRatioForSettings:(id)arg1;
- (int)_processSbuf;
- (void)_propagateSampleBufferGainMapMetadata:(struct opaqueCMSampleBuffer { }*)arg1 toSampleBufferMetadata:(struct opaqueCMSampleBuffer { }*)arg2;
- (void)_releaseResources;
- (void)_removeCurrentRequestFromInputsByCaptureIdentifier;
- (id)_semanticSegmentationMatteMediaKeysEncodingNeededForSettings:(id)arg1 encodingScheme:(int)arg2 deferredPhotoProxy:(bool)arg3 adjustedPhoto:(bool)arg4;
- (bool)_smartStyleReversibilityDataNeededForSettings:(id)arg1 adjustedPhoto:(bool)arg2 deferredPhotoProxy:(bool)arg3;
- (void)_tagStereoPairGroupForEncodingScheme:(int)arg1 stereoPhotoImageHandles:(struct { long long x1; long long x2; long long x3; })arg2 groupMetadata:(id)arg3;
- (id)_thumbnailOptionsForImageWithMetadata:(id)arg1 requestedStillImageCaptureSettings:(id)arg2 resolvedStillImageCaptureSettings:(id)arg3 processingFlags:(unsigned int)arg4 cropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 codecType:(unsigned int)arg6 maxPixelSize:(unsigned long long)arg7;
- (int)_updateSmartStyleDeltaMapForSampleBufferIfNeeded:(struct opaqueCMSampleBuffer { }*)arg1 decompressedStyledPixelBuffer:(struct __CVBuffer { }*)arg2 stillImageSettings:(id)arg3 encodingScheme:(int)arg4 processingFlags:(unsigned int)arg5;
- (void)_updateStillImageProcessingFlagsWithDepthMetadataForSbuf:(struct opaqueCMSampleBuffer { }*)arg1 stillImageSettings:(id)arg2;
- (void)_waitForPiecemealEncodingGroupToComplete;
- (void)_waitForPiecemealEncodingQueueToComplete;
- (void)_waitForPreviewGenerationGroupToComplete;
- (void)_waitForPreviewGenerationQueueToComplete;
- (void)_waitForPrewarmingQueueToComplete;
- (bool)_waitUntilTimeoutForInferenceGroupToCompleteAndReturnSuccess;
- (void)cancelProcessing;
- (bool)clientExpectsCameraMountedInLandscapeOrientation;
- (id)currentInputsCaptureRequestIdentifier;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1;
- (id)inputForStillImageSettings:(id)arg1 portType:(id)arg2 portraitAdjustedImage:(bool)arg3 optionalSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg4 forEarlyEncoding:(bool)arg5;
- (id)inputFormatForAttachedMediaKey:(id)arg1;
- (id)inputInferenceVideoFormatForAttachedMediaKey:(id)arg1;
- (void)inputReceivedNewAuxMedia:(id)arg1 auxSbuf:(struct opaqueCMSampleBuffer { }*)arg2 attachedMediaKey:(id)arg3 primaryImageMetadata:(id)arg4 processingFlags:(unsigned int)arg5;
- (void)inputReceivedNewInputData:(id)arg1;
- (id)inputVideoFormatForAttachedMediaKey:(id)arg1;
- (bool)intermediateResourceTrackingAllowedForAttachedMediaKey:(id)arg1;
- (float)mainImageDownscalingFactorForAttachedMediaKey:(id)arg1 attachedMediaMetadata:(id)arg2;
- (id)outputFormatForAttachedMediaKey:(id)arg1;
- (id)outputVideoFormatForAttachedMediaKey:(id)arg1;
- (bool)preferMainImageDownscalingFactorByAttachedMediaKeyFromSampleBuffer;
- (int)prepare;
- (int)prepareForCurrentConfigurationToBecomeLive;
- (id)primaryOwnerDelegate;
- (int)process;
- (id)requestForInput:(id)arg1 delegate:(id)arg2 errOut:(int*)arg3;
- (void)reset;
- (id)resolvedVideoFormatsByAttachedMediaKey;
- (void)setClientExpectsCameraMountedInLandscapeOrientation:(bool)arg1;
- (void)setPreferMainImageDownscalingFactorByAttachedMediaKeyFromSampleBuffer:(bool)arg1;
- (void)setPrimaryOwnerDelegate:(id)arg1;
- (void)setResolvedVideoFormatsByAttachedMediaKey:(id)arg1;
- (unsigned long long)type;
- (void)waitForAllAsynchronousProcessingToComplete;

@end
