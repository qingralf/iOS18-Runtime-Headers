/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMCapture.framework/CMCapture
 */

@interface BWPhotonicEngineNode : BWNode <BWAdaptiveBracketingController, BWColorConstancyProcessorControllerDelegate, BWDeepFusionProcessorControllerDelegate, BWDeferredCaptureControllerDelegate, BWDeferredProcessorControllerDelegate, BWInferenceEngineControllerDelegate, BWJasperColorStillsExecutorControllerDelegate, BWJasperDisparityProcessorControllerDelegate, BWLearnedNRProcessorControllerDelegate, BWNRFProcessorControllerDelegate, BWRedEyeReductionControllerDelegate, BWSWFRProcessorControllerDelegate, BWSmartStyleRenderingProcessorControllerDelegate, BWSoftISPProcessorControllerDelegate, BWStereoDisparityProcessorControllerDelegate, BWStillImageFilterStatusDelegate, BWStillImageProcessingSupportProvider> {
    NSDictionary * _captureTypesWithIDCSupportWithOptionalCaptureFlags;
    NSMutableDictionary * _clientBracketEmittedOrEnqueuedReferenceFrameIDByPortTypeAndSequenceNumber;
    BWColorConstancyProcessorControllerConfiguration * _colorConstancyProcessorControllerConfiguration;
    NSMutableDictionary * _colorConstancyProcessorControllerInputByPortType;
    NSString * _currentCaptureRequestIdentifier;
    long long  _currentSettingsID;
    BWStillImageSettings * _currentStillImageSettings;
    int  _dcOutputBufferCount;
    NSDictionary * _deepFusionEnhancedResolutionCanProcessDebugInfo;
    BWPixelBufferPool * _deepFusionEnhancedResolutionGainMapPool;
    BWPixelBufferPool * _deepFusionEnhancedResolutionOutputPool;
    BWPixelBufferPool * _deepFusionEnhancedResolutionSemanticStyleOutputPool;
    BWDeepFusionProcessorControllerConfiguration * _deepFusionProcessorControllerConfiguration;
    NSMutableDictionary * _deepFusionProcessorInputByPortType;
    BWDeepZoomProcessorControllerConfiguration * _deepZoomProcessorControllerConfiguration;
    NSMutableDictionary * _deepZoomProcessorInputByPortType;
    BWPixelBufferPool * _deepZoomTransferEnhancedResolutionOutputPool;
    NSObject<OS_dispatch_semaphore> * _deepZoomTransferEnhancedResolutionPortraitSemaphore;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _deepZoomTransferEnhancedResolutionPortraitSemaphoreLock;
    BWPixelBufferPool * _deepZoomTransferHighResolutionInputPool;
    BWDeferredCaptureControllerConfiguration * _deferredCaptureControllerConfiguration;
    BWDeferredCaptureControllerInput * _deferredCaptureControllerInput;
    struct opaqueCMSampleBuffer { } * _deferredCaptureProxyOrErrorRecoverySbuf;
    BWDeferredProcessorControllerConfiguration * _deferredProcessorControllerConfiguration;
    NSObject<OS_dispatch_queue> * _deferredProcessorControllerQueue;
    NSMutableDictionary * _deferredProcessorInputByPortType;
    NSMutableDictionary * _deferredStereoPhotoCaptureSecondarySbufsByFusionMode;
    int  _demosaicedRawOutputBufferCount;
    BWFigVideoCaptureDevice * _device;
    bool  _discardPointClouds;
    NSObject<OS_dispatch_queue> * _emitQueue;
    NSMutableDictionary * _emittedOrEnqueuedReferenceFrameIDByPortType;
    BWPixelBufferPool * _fusionMapPool;
    struct opaqueCMFormatDescription { } * _gainMapFormatDescription;
    NSMutableDictionary * _inferenceAttachedMediaFormatDescriptionByAttachedMediaKey;
    BWInferenceEngineControllerConfiguration * _inferenceControllerConfiguration;
    NSObject<OS_dispatch_group> * _inferenceControllerGroup;
    NSMutableDictionary * _inferenceControllerInputByPortType;
    NSObject<OS_dispatch_queue> * _inferenceControllerQueue;
    struct opaqueCMFormatDescription { } * _inferenceInputFormatDescription;
    NSDictionary * _inferenceInputPixelBufferProviderByQSubResolutionFlavor;
    struct OpaqueVTPixelTransferSession { } * _inferenceInputPixelTransferSession;
    NSDictionary * _inferenceOutputPixelBufferProvidersByAttachedMediaKey;
    BWStillImageInferences * _inferences;
    BWIntelligentDistortionCorrectionProcessorControllerConfiguration * _intelligentDistortionCorrectionControllerConfiguration;
    NSMutableDictionary * _intelligentDistortionCorrectionProcessorInputByPortType;
    BWPixelBufferPool * _intermediateInferenceInputPool;
    BWJasperColorStillsExecutorControllerConfiguration * _jasperColorStillsExecutorConfiguration;
    NSMutableDictionary * _jasperColorStillsExecutorInputByPortType;
    BWJasperDisparityProcessorControllerConfiguration * _jasperDisparityProcessorControllerConfiguration;
    NSMutableDictionary * _jasperDisparityProcessorInputByPortType;
    NSMutableDictionary * _learnedNRInputByPortType;
    BWLearnedNRProcessorControllerConfiguration * _learnedNRProcessorControllerConfiguration;
    unsigned int  _linearYUVPixelFormat;
    unsigned int  _lowResPersonSegmentationMaskHeight;
    unsigned int  _lowResPersonSegmentationMaskWidth;
    BWPhotonicEngineNodeConfiguration * _nodeConfiguration;
    BWPixelBufferPool * _noiseReductionAndFusionProcessorOutputIntermediatePool;
    BWNRFProcessorControllerConfiguration * _nrfProcessorControllerConfiguration;
    NSMutableDictionary * _nrfProcessorInputsByPortType;
    BWPhotoEncoderController * _photoEncoderController;
    NSDictionary * _pixelBufferProviderByPixelFormatByQSubResolutionFlavor;
    BWNodeInput * _pointCloudInput;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _pointCloudLock;
    unsigned long long  _pointCloudsLoggingCounter;
    NSArray * _portTypesWithIntelligentDistortionCorrectionSupport;
    NSObject<OS_dispatch_group> * _postponedProcessorCoordinatorGroup;
    NSObject<OS_dispatch_queue> * _postponedProcessorCoordinatorQueue;
    NSString * _previousCaptureRequestIdentifier;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _processingSupportProviderLock;
    BWStillImageProcessorCoordinator * _processorCoordinator;
    bool  _processorCoordinatorIsSetup;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _processorCoordinatorLock;
    NSObject<OS_dispatch_queue> * _processorCoordinatorWorkerQueue;
    NSDictionary * _providedInferenceAttachedMediaModesByAttachedMediaKey;
    BWStillImageInferences * _quadraForEnhancedResolutionInferences;
    BWPixelBufferPool * _rawNightModeDenoisedImagePool;
    BWPixelBufferPool * _rawNightModeNoiseMapPool;
    BWStillImageProcessorControllerConfiguration * _redEyeReductionConfiguration;
    NSMutableDictionary * _redEyeReductionInputByPortType;
    NSMutableDictionary * _remainingIntelligentDistortionCorrectionProcessorInputsByPortType;
    NSMutableDictionary * _remainingScalerProcessorControllerInputsByPortType;
    bool  _resourcesReleased;
    BWPhotonicEngineNodeSampleBufferAndInputQueue * _sampleBufferAndInputQueue;
    BWScalerProcessorControllerConfiguration * _scalerProcessorControllerConfiguration;
    NSMutableDictionary * _scalerProcessorControllerInputByPortType;
    NSMutableDictionary * _sensorRawErrorRecoveryFrameByPortType;
    BWNodeInput * _sensorRawInput;
    bool  _setupForBeginMomentProcessing;
    CMIExternalMemoryResource * _sharedExternalMemoryResource;
    NSArray * _sharedExternalMemoryResourceSetUpForResolutionFlavors;
    BWPixelBufferPool * _smartStyleEnhancedResolutionOutputPool;
    BWSmartStyleRenderingProcessorControllerConfiguration * _smartStyleRenderingConfiguration;
    NSMutableDictionary * _smartStyleRenderingInputByPortType;
    BWPixelBufferPool * _smartStyleUltraHighResolutionOutputPool;
    NSMutableDictionary * _softISPNumberOfInflightInputsByPortType;
    NSDictionary * _softISPOutputPoolByPixelFormat;
    BWSoftISPProcessorControllerConfiguration * _softISPProcessorControllerConfiguration;
    NSMutableDictionary * _softISPRemainingDisparitySbufsByCaptureFrameFlagsByPortType;
    NSMutableDictionary * _softISPRemainingInputsByPortType;
    NSMutableDictionary * _stashedAWBMetadataByPortType;
    NSMutableDictionary * _stashedSensorRawFramesByPortType;
    NSMutableDictionary * _stashedSoftISPResultsByPortType;
    NSMutableDictionary * _stereoDisparityClientBracketProcessorInputsBySequenceNumber;
    BWStereoDisparityProcessorControllerConfiguration * _stereoDisparityProcessorControllerConfiguration;
    NSObject<OS_dispatch_queue> * _stereoDisparityProcessorControllerQueue;
    BWStereoDisparityProcessorInput * _stereoDisparityProcessorInput;
    int  _stereoDisparityRemainingProcessorInputs;
    BWPixelBufferPool * _stereoPhotoOutputPool;
    BWStillImageInferences * _stereoPhotoSecondaryInferences;
    NSMutableDictionary * _stereoPhotoSensorRawFrameByPortType;
    struct opaqueCMSampleBuffer { } * _stereoPhotoStashedDeepZoomTransferSbuf;
    NSMutableDictionary * _stillImageFusionModeByCaptureRequestIdentifier;
    NSSet * _supportedPortTypes;
    struct opaqueCMFormatDescription { } * _sushiRawFormatDescription;
    BWSWFRProcessorControllerConfiguration * _swfrProcessorControllerConfiguration;
    NSMutableDictionary * _swfrProcessorControllerInputByPortType;
    NSMutableDictionary * _swfrRawRedEyeReductionAuxImageByPortType;
    BWPixelBufferPool * _syntheticIntermediatesPool;
    BWSharpnessScoreReferenceFrameSelector * _ultraHighResolutionSharpnessScoreReferenceFrameSelector;
    bool  _useSharedExternalMemoryResourceForProcessorControllers;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) BWPhotoEncoderController *photoEncoderController;
@property (nonatomic, readonly) BWNodeInput *pointCloudInput;
@property (nonatomic, readonly) BWNodeInput *sensorRawInput;
@property (readonly) Class superclass;

+ (void)initialize;

- (id)adaptiveBracketingDigitalFlashTotalIntegrationTimesProviderForPortType:(id)arg1 wait:(bool)arg2;
- (id)adaptiveBracketingParametersForDigitalFlashMode:(int)arg1 frameStatistics:(id)arg2 stationary:(bool)arg3 sphereOffsetEnabled:(bool)arg4 detectedObjects:(id)arg5;
- (void)configurationWithID:(long long)arg1 updatedFormat:(id)arg2 didBecomeLiveForInput:(id)arg3;
- (void)dealloc;
- (bool)demosaicedRawSupportedForCaptureType:(int)arg1;
- (void)didReachEndOfDataForInput:(id)arg1;
- (void)didSelectFormat:(id)arg1 forInput:(id)arg2;
- (void)didSelectFormat:(id)arg1 forOutput:(id)arg2;
- (void)filterNodeDidReceiveStandardResolutionDeepFusionBuffer:(id)arg1 error:(int)arg2;
- (void)handleNodeError:(id)arg1 forInput:(id)arg2;
- (void)handleStillImagePrewarmWithSettings:(id)arg1 forInput:(id)arg2;
- (bool)idcSupportedForCaptureType:(int)arg1 captureFlags:(unsigned long long)arg2 portType:(id)arg3;
- (id)initWithNodeConfiguration:(id)arg1 captureDevice:(id)arg2;
- (id)nodeSubType;
- (id)nodeType;
- (id)photoEncoderController;
- (id)pointCloudInput;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (id)preparedOutputPixelBufferPoolForAttachedMediaKey:(id)arg1 format:(id)arg2;
- (bool)processingOnBeginMomentSupportedForCaptureSettings:(id)arg1;
- (void)processorController:(id)arg1 didDetermineReferenceFrame:(struct opaqueCMSampleBuffer { }*)arg2 processorInput:(id)arg3 err:(int)arg4;
- (void)processorController:(id)arg1 didFinishProcessingBuffer:(struct __CVBuffer { }*)arg2 metadata:(id)arg3 type:(unsigned long long)arg4 captureFrameFlags:(unsigned long long)arg5 processorInput:(id)arg6 err:(int)arg7;
- (void)processorController:(id)arg1 didFinishProcessingInference:(id)arg2 inferenceAttachmentKey:(id)arg3 processorInput:(id)arg4 err:(int)arg5;
- (void)processorController:(id)arg1 didFinishProcessingInferenceAttachedMediaMetadata:(id)arg2 processorInput:(id)arg3;
- (void)processorController:(id)arg1 didFinishProcessingInferenceBuffer:(struct __CVBuffer { }*)arg2 metadata:(id)arg3 inferenceAttachedMediaKey:(id)arg4 processorInput:(id)arg5 err:(int)arg6;
- (void)processorController:(id)arg1 didFinishProcessingInput:(id)arg2 err:(int)arg3;
- (void)processorController:(id)arg1 didFinishProcessingSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 type:(unsigned long long)arg3 processorInput:(id)arg4 err:(int)arg5;
- (void)processorController:(id)arg1 didSelectFusionMode:(int)arg2 processorInput:(id)arg3;
- (void)processorController:(id)arg1 didSelectLowLightReferenceFrame:(struct opaqueCMSampleBuffer { }*)arg2 processorInput:(id)arg3;
- (void)processorController:(id)arg1 didSelectNewReferenceFrameWithPTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 transform:(id)arg3 processorInput:(id)arg4;
- (id)processorController:(id)arg1 newInferencesForProcessorInput:(id)arg2;
- (id)processorController:(id)arg1 newInferencesForProcessorInput:(id)arg2 inferenceInputBufferType:(unsigned long long)arg3;
- (struct __CVBuffer { }*)processorController:(id)arg1 newOutputPixelBufferForProcessorInput:(id)arg2 type:(unsigned long long)arg3;
- (struct __CVBuffer { }*)processorController:(id)arg1 newOutputPixelBufferForProcessorInput:(id)arg2 type:(unsigned long long)arg3 attachedMediaKey:(id)arg4;
- (struct __CVBuffer { }*)processorController:(id)arg1 newOutputPixelBufferForProcessorInput:(id)arg2 type:(unsigned long long)arg3 attachedMediaKey:(id)arg4 pixelFormat:(unsigned int)arg5 dimensions:(struct { int x1; int x2; })arg6;
- (struct __CVBuffer { }*)processorController:(id)arg1 newOutputPixelBufferForProcessorInput:(id)arg2 type:(unsigned long long)arg3 dimensions:(struct { int x1; int x2; })arg4;
- (struct { int x1; int x2; })processorController:(id)arg1 outputPixelBufferDimensionsForProcessorInput:(id)arg2 type:(unsigned long long)arg3 attachedMediaKey:(id)arg4;
- (int)processorController:(id)arg1 processRawErrorRecoveryFrameForProcessorInput:(id)arg2 failureMetadata:(id)arg3;
- (void)processorController:(id)arg1 willAddBuffer:(struct __CVBuffer { }*)arg2 metadata:(id)arg3 bufferType:(unsigned long long)arg4 processorInput:(id)arg5;
- (void)processorController:(id)arg1 willAddSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 processorInput:(id)arg3;
- (void)processorController:(id)arg1 willProcessRedEyeReductionForProcessorInput:(id)arg2;
- (void)processorControllerWillProcessInferences:(id)arg1;
- (id)processorCoordinator;
- (bool)rawNightModeSupportedForPortType:(id)arg1;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 forInput:(id)arg2;
- (id)sensorRawInput;
- (void)setPhotoEncoderController:(id)arg1;
- (void)stopAdaptiveBracketingForSettings:(id)arg1 withGroup:(int)arg2;

@end
