/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMCapture.framework/CMCapture
 */

@interface FigCaptureFrameCounter : NSObject {
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _intervalFirstFramePTS;
    long long  _intervalFramesCount;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _intervalLastFramePTS;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    double  _loggingInterval;
    bool  _started;
    NSObject<OS_dispatch_source> * _timer;
    NSObject<OS_dispatch_queue> * _timerQueue;
    NSString * _title;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _totalFirstFramePTS;
    long long  _totalFramesCount;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _totalLastFramePTS;
}

@property (nonatomic) double loggingInterval;
@property (nonatomic, readonly) NSString *title;

+ (void)initialize;
+ (id)osStateData;

- (double)_frameRateWithFramesCount:(long long)arg1 firstFramePTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 lastFramePTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (void)_logIntervalFrameRate;
- (id)_summaryIsolated;
- (void)dealloc;
- (void)incrementWithPTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)initWithTitle:(id)arg1;
- (double)loggingInterval;
- (void)setLoggingInterval:(double)arg1;
- (void)start;
- (void)stop;
- (id)summary;
- (id)title;

@end
