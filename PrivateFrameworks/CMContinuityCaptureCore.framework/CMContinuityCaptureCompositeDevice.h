/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMContinuityCaptureCore.framework/CMContinuityCaptureCore
 */

@interface CMContinuityCaptureCompositeDevice : NSObject <CMContinuityCaptureCompositeDeviceDelegate, CMContinuityCaptureEventQueueActionDelegate, ContinuityCaptureTaskDelegate> {
    NSMutableDictionary * _captureDeviceByEntityType;
    <ContinuityCaptureDeviceClient> * _client;
    NSMutableDictionary * _cmControlByName;
    NSMutableArray * _connectionSwitchLogs;
    <ContinuityCaptureTransportDevice> * _deviceStatusObserverDevice;
    CMContinuityCaptureEventQueue * _eventQueue;
    unsigned long long  _lastSessionID;
    bool  _microphonePublishingIsDeferred;
    id /* block */  _pendingTerminationTimeoutBlock;
    CMContinuityCaptureProvider * _provider;
    NSString * _publishTime;
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableArray * _remoteSessionLogs;
    NSMutableSet * _streamingIntentEntities;
    id /* block */  _undeferBlockForSidecarClient;
    _Atomic bool  autoTransportSwitchDisabled;
}

@property (readonly, retain) <ContinuityCaptureDeviceClient> *client;
@property (readonly, retain) NSArray *continuityCaptureDevices;
@property (readonly, retain) NSArray *controls;
@property (readonly) NSDate *currentSessionActivationStartTime;
@property (readonly) unsigned long long currentSessionID;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly, retain) CMContinuityCaptureEventQueue *eventQueue;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long lastSessionID;
@property (readonly) CMContinuityCaptureProvider *provider;
@property (readonly, retain) NSString *publishTime;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_device:(id)arg1 updatedValueForControl:(id)arg2;
- (void)_handlePlacementStepSkipped;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)_postEvent:(id)arg1 entity:(long long)arg2 data:(id)arg3;
- (void)_startStream:(id)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)_stopStream:(long long)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)captureStillImage:(id)arg1 entity:(long long)arg2 completion:(id /* block */)arg3;
- (id)client;
- (void)connectionInterrupted:(id)arg1 forDevice:(id)arg2;
- (id)continuityCaptureDevices;
- (id)controlWithName:(id)arg1;
- (id)controls;
- (long long)currentPreferredAvailableTransport;
- (id)currentSessionActivationStartTime;
- (unsigned long long)currentSessionID;
- (id)debugInfo;
- (void)deferDevice:(bool)arg1;
- (id)description;
- (void)device:(id)arg1 updatedValueForControl:(id)arg2;
- (void)didCaptureStillImage:(id)arg1 entity:(long long)arg2;
- (void)disableAutoTransportSwitch:(bool)arg1;
- (void)dispatchFrame:(struct opaqueCMSampleBuffer { }*)arg1 entity:(long long)arg2 completion:(id /* block */)arg3;
- (void)enqueueReactionEffect:(id)arg1 entity:(long long)arg2;
- (id)eventQueue;
- (void)handleAVCNegotiation:(long long)arg1 data:(id)arg2;
- (void)handleBatteryState:(id)arg1;
- (void)handleRemoteSystemNotificationControl:(id)arg1;
- (void)handleSynchronizeAudioClockCompletion;
- (bool)hasValidStreamState;
- (id)initWithDevice:(id)arg1 provider:(id)arg2;
- (unsigned long long)lastSessionID;
- (void)logConnectionSwitch:(id)arg1;
- (void)logRemoteSessionSummary:(id)arg1;
- (void)notifyTransportError:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)performConnectionChangeEventIfApplicable:(id)arg1;
- (void)performConnectionDisconnectEventIfApplicable:(id)arg1;
- (void)postEvent:(id)arg1 entity:(long long)arg2 data:(id)arg3;
- (bool)postEventAction:(unsigned long long)arg1 args:(id)arg2;
- (void)postEventOnAllEntities:(id)arg1 data:(id)arg2;
- (void)postValueChangeForControl:(id)arg1;
- (id)provider;
- (id)publishTime;
- (void)registerStreamIntentForCaptureDevice:(id)arg1 completion:(id /* block */)arg2;
- (void)relayEvent:(id)arg1;
- (void)relayUserDisconnect;
- (void)resetTransportDevice:(id)arg1;
- (void)scheduleBatteryLevelNotification:(id)arg1;
- (void)scheduleSystemPressureNotification:(id)arg1;
- (void)setValueForControl:(id)arg1 completion:(id /* block */)arg2;
- (bool)setupCaptureDevices;
- (void)setupControls;
- (void)setupSidebandMessageNotificationHandler;
- (bool)shouldSwitchConnection;
- (void)startStream:(id)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)stopStream:(long long)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)synchronizeAudioClockWithSampleTime:(unsigned long long)arg1 networkTime:(unsigned long long)arg2 clockGrandMasterIdentifier:(unsigned long long)arg3;
- (void)terminateCompleteForDevice:(id)arg1;
- (void)unregisterStreamIntentForCaptureDevice:(id)arg1;
- (bool)validConnectionResetEventForData:(id)arg1;

@end
