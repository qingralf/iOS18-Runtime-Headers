/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMImaging.framework/CMImaging
 */

@interface CMIStyleEngineConfiguration : NSObject <NSCopying> {
    bool  _applyDithering;
    bool  _applySyntheticNoise;
    bool  _createAndSolveGlobalLinearSystem;
    bool  _fastStyleApplication;
    unsigned long long  _filterForInputIntegrationThumbnailCreation;
    unsigned long long  _filterForInputLearningThumbnailCreation;
    unsigned long long  _filterForInputLearningWeightsThumbnailCreation;
    unsigned long long  _filterForInputResidualCorrectionThumbnailCreation;
    unsigned long long  _filterForTargetLearningThumbnailCreation;
    unsigned long long  _filterForTargetResidualCorrectionThumbnailCreation;
    float  _globalLinearSystemMixFactor;
    bool  _inputCoefficientsF16;
    bool  _inputIsLinear;
    bool  _inputThumbnailForIntegrationIsLinear;
    bool  _inputThumbnailForLearningIsLinear;
    bool  _inputThumbnailForLearningWeightsIsLinear;
    bool  _inputThumbnailForResidualCorrectionIsLinear;
    bool  _inputThumbnailIsLinear;
    unsigned long long  _linearSystemOrder;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[3]; 
    }  _linearSystemPriorMatrix;
    unsigned long long  _linearSystemSolver;
    unsigned long long  _linearSystemType;
    bool  _outputCoefficientsF16;
    bool  _outputShouldBeLinear;
    bool  _shouldFlushCVMTLBufferCacheAfterProcessing;
    bool  _shouldFlushCVMTLTextureCacheAfterProcessing;
    void _spotlightCount;
    bool  _targetThumbnailForLearningIsLinear;
    bool  _targetThumbnailForResidualCorrectionIsLinear;
    bool  _targetThumbnailIsLinear;
    struct CGSize { 
        double width; 
        double height; 
    }  _thumbnailSize;
    bool  _useBicubicIntegration;
    unsigned int  _weightPlaneCount;
}

@property (nonatomic) bool applyDithering;
@property (nonatomic) bool applySyntheticNoise;
@property (nonatomic) bool createAndSolveGlobalLinearSystem;
@property (nonatomic) bool fastStyleApplication;
@property (nonatomic) unsigned long long filterForInputIntegrationThumbnailCreation;
@property (nonatomic) unsigned long long filterForInputLearningThumbnailCreation;
@property (nonatomic) unsigned long long filterForInputLearningWeightsThumbnailCreation;
@property (nonatomic) unsigned long long filterForInputResidualCorrectionThumbnailCreation;
@property (nonatomic) unsigned long long filterForTargetLearningThumbnailCreation;
@property (nonatomic) unsigned long long filterForTargetResidualCorrectionThumbnailCreation;
@property (nonatomic) float globalLinearSystemMixFactor;
@property (nonatomic) bool inputCoefficientsF16;
@property (nonatomic) bool inputIsLinear;
@property (nonatomic) bool inputThumbnailForIntegrationIsLinear;
@property (nonatomic) bool inputThumbnailForLearningIsLinear;
@property (nonatomic) bool inputThumbnailForLearningWeightsIsLinear;
@property (nonatomic) bool inputThumbnailForResidualCorrectionIsLinear;
@property (nonatomic) bool inputThumbnailIsLinear;
@property (nonatomic) unsigned long long linearSystemOrder;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; } linearSystemPriorMatrix;
@property (nonatomic) unsigned long long linearSystemSolver;
@property (nonatomic) unsigned long long linearSystemType;
@property (nonatomic) bool outputCoefficientsF16;
@property (nonatomic) bool outputShouldBeLinear;
@property (nonatomic) bool shouldFlushCVMTLBufferCacheAfterProcessing;
@property (nonatomic) bool shouldFlushCVMTLTextureCacheAfterProcessing;
@property (nonatomic) void spotlightCount;
@property (nonatomic) bool targetThumbnailForLearningIsLinear;
@property (nonatomic) bool targetThumbnailForResidualCorrectionIsLinear;
@property (nonatomic) bool targetThumbnailIsLinear;
@property (nonatomic) struct CGSize { double x1; double x2; } thumbnailSize;
@property (nonatomic) bool useBicubicIntegration;
@property (nonatomic) unsigned int weightPlaneCount;

- (bool)applyDithering;
- (bool)applySyntheticNoise;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)createAndSolveGlobalLinearSystem;
- (bool)fastStyleApplication;
- (unsigned long long)filterForInputIntegrationThumbnailCreation;
- (unsigned long long)filterForInputLearningThumbnailCreation;
- (unsigned long long)filterForInputLearningWeightsThumbnailCreation;
- (unsigned long long)filterForInputResidualCorrectionThumbnailCreation;
- (unsigned long long)filterForTargetLearningThumbnailCreation;
- (unsigned long long)filterForTargetResidualCorrectionThumbnailCreation;
- (float)globalLinearSystemMixFactor;
- (unsigned long long)hash;
- (id)init;
- (bool)inputCoefficientsF16;
- (bool)inputIsLinear;
- (bool)inputThumbnailForIntegrationIsLinear;
- (bool)inputThumbnailForLearningIsLinear;
- (bool)inputThumbnailForLearningWeightsIsLinear;
- (bool)inputThumbnailForResidualCorrectionIsLinear;
- (bool)inputThumbnailIsLinear;
- (bool)isEqual:(id)arg1;
- (unsigned long long)linearSystemOrder;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; })linearSystemPriorMatrix;
- (unsigned long long)linearSystemSolver;
- (unsigned long long)linearSystemType;
- (bool)outputCoefficientsF16;
- (bool)outputShouldBeLinear;
- (void)setApplyDithering:(bool)arg1;
- (void)setApplySyntheticNoise:(bool)arg1;
- (void)setCreateAndSolveGlobalLinearSystem:(bool)arg1;
- (void)setFastStyleApplication:(bool)arg1;
- (void)setFilterForInputIntegrationThumbnailCreation:(unsigned long long)arg1;
- (void)setFilterForInputLearningThumbnailCreation:(unsigned long long)arg1;
- (void)setFilterForInputLearningWeightsThumbnailCreation:(unsigned long long)arg1;
- (void)setFilterForInputResidualCorrectionThumbnailCreation:(unsigned long long)arg1;
- (void)setFilterForTargetLearningThumbnailCreation:(unsigned long long)arg1;
- (void)setFilterForTargetResidualCorrectionThumbnailCreation:(unsigned long long)arg1;
- (void)setGlobalLinearSystemMixFactor:(float)arg1;
- (void)setInputCoefficientsF16:(bool)arg1;
- (void)setInputIsLinear:(bool)arg1;
- (void)setInputThumbnailForIntegrationIsLinear:(bool)arg1;
- (void)setInputThumbnailForLearningIsLinear:(bool)arg1;
- (void)setInputThumbnailForLearningWeightsIsLinear:(bool)arg1;
- (void)setInputThumbnailForResidualCorrectionIsLinear:(bool)arg1;
- (void)setInputThumbnailIsLinear:(bool)arg1;
- (void)setLinearSystemOrder:(unsigned long long)arg1;
- (void)setLinearSystemPriorMatrix:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; })arg1;
- (void)setLinearSystemSolver:(unsigned long long)arg1;
- (void)setLinearSystemType:(unsigned long long)arg1;
- (void)setOutputCoefficientsF16:(bool)arg1;
- (void)setOutputShouldBeLinear:(bool)arg1;
- (void)setShouldFlushCVMTLBufferCacheAfterProcessing:(bool)arg1;
- (void)setShouldFlushCVMTLTextureCacheAfterProcessing:(bool)arg1;
- (void)setSpotlightCount;
- (void)setTargetThumbnailForLearningIsLinear:(bool)arg1;
- (void)setTargetThumbnailForResidualCorrectionIsLinear:(bool)arg1;
- (void)setTargetThumbnailIsLinear:(bool)arg1;
- (void)setThumbnailSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setUseBicubicIntegration:(bool)arg1;
- (void)setWeightPlaneCount:(unsigned int)arg1;
- (bool)shouldFlushCVMTLBufferCacheAfterProcessing;
- (bool)shouldFlushCVMTLTextureCacheAfterProcessing;
- (void)spotlightCount;
- (bool)targetThumbnailForLearningIsLinear;
- (bool)targetThumbnailForResidualCorrectionIsLinear;
- (bool)targetThumbnailIsLinear;
- (struct CGSize { double x1; double x2; })thumbnailSize;
- (bool)useBicubicIntegration;
- (unsigned int)weightPlaneCount;

@end
