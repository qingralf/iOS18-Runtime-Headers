/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMImaging.framework/CMImaging
 */

@interface CMIStyleEngineProcessor : NSObject <MetalImageBufferProcessor> {
    struct CGSize { 
        double width; 
        double height; 
    }  _apiImageSize;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _apiInputDeltaMapImageRect;
    <MTLTexture> * _apiInputDeltaMapTexture;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _apiInputImageRect;
    <MTLBuffer> * _apiInputLinearSystemCoefficientsBuffer;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _apiInputOriginalImageRect;
    <MTLTexture> * _apiInputOriginalTexture;
    <MTLTexture> * _apiInputTexture;
    <MTLTexture> * _apiInputThumbnailTexture;
    <MTLTexture> * _apiInputThumbnailTextureForIntegration;
    <MTLTexture> * _apiInputThumbnailTextureForLearning;
    <MTLTexture> * _apiInputThumbnailTextureForLearningWeights;
    <MTLTexture> * _apiInputThumbnailTextureForResidualCorrection;
    <MTLTexture> * _apiOutputDeltaMapTexture;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _apiOutputImageRect;
    <MTLBuffer> * _apiOutputLinearSystemCoefficientsBuffer;
    <MTLTexture> * _apiOutputLumaGradientTexture;
    <MTLTexture> * _apiOutputTexture;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _apiRegionToRender;
    <MTLTexture> * _apiTargetThumbnailTexture;
    <MTLTexture> * _apiTargetThumbnailTextureForLearning;
    <MTLTexture> * _apiTargetThumbnailTextureForResidualCorrection;
    bool  _applyDither;
    CMIStyleEngineApplyStyle * _applyStyle;
    struct __CVMetalBufferCache { } * _bufferCache;
    FigMetalBufferDescriptor * _bufferDescriptor;
    NSDictionary * _cameraInfoByPortType;
    CMIStyleEngineCoefficientConverterF16ToF32 * _coefficientConverterF16ToF32;
    CMIStyleEngineCoefficientConverterF32ToF16 * _coefficientConverterF32ToF16;
    <MTLBuffer> * _coefficientsBuffer;
    CMIStyleEngineConfiguration * _configuration;
    CMIStyleEngineCreateLinearSystem * _createLinearSystem;
    CMIStyleEngineCreateSpotlights * _createSpotlights;
    CMIStyleEngineCreateWeightPlanes * _createWeightPlanes;
    CMIStyleEngineDownScaler * _downScale;
    CMIExternalMemoryResource * _externalMemoryResource;
    CMIStyleEngineIdentityCoefficientCreator * _identityCoefficientCreator;
    struct CGSize { 
        double width; 
        double height; 
    }  _imageSize;
    bool  _inputCoefficientsF16;
    struct __CVBuffer { } * _inputDeltaMapPixelBuffer;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _inputImageRect;
    <MTLTexture> * _inputLearningModulationMaskTexture;
    NSData * _inputLinearSystemCoefficients;
    struct __CVBuffer { } * _inputLinearSystemCoefficientsPixelBuffer;
    <MTLTexture> * _inputLinearSystemCoefficientsTexture;
    NSDictionary * _inputNoiseModel;
    struct __CVBuffer { } * _inputOriginalPixelBuffer;
    struct __CVBuffer { } * _inputPixelBuffer;
    struct __CVBuffer { } * _inputThumbnailPixelBuffer;
    struct __CVBuffer { } * _inputThumbnailPixelBufferForIntegration;
    struct __CVBuffer { } * _inputThumbnailPixelBufferForLearning;
    struct __CVBuffer { } * _inputThumbnailPixelBufferForLearningWeights;
    struct __CVBuffer { } * _inputThumbnailPixelBufferForResidualCorrection;
    <MTLTexture> * _inputWeightPlaneTexture;
    CMIStyleEngineIntegrateCoefficients * _integrateCoefficients;
    <MTLTexture> * _integratedCoefficientsTexture;
    NSString * _label;
    <MTLBuffer> * _linSysStatusBuffer;
    <MTLBuffer> * _linSysStatusFlagBuffer;
    unsigned long long  _memoryAllocationType;
    FigMetalContext * _metalContext;
    CMIMetalEventSynchronizer * _metalSynchronizer;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _optionalInputImageRect;
    bool  _outputCoefficientsF16;
    bool  _outputCoefficientsReady;
    struct __CVBuffer { } * _outputDeltaMapPixelBuffer;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _outputImageRect;
    struct __CVBuffer { } * _outputLinearSystemCoefficientsPixelBuffer;
    <MTLTexture> * _outputLinearSystemCoefficientsTexture;
    struct __CVBuffer { } * _outputLumaGradientPixelBuffer;
    struct __CVBuffer { } * _outputPixelBuffer;
    bool  _performApplication;
    bool  _performIntegration;
    bool  _performLearning;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _regionToRender;
    bool  _residualsCalculationDisabled;
    <MTLBuffer> * _rhsBuffer;
    CMIStyleEngineSolveLinearSystem * _solveLinearSystem;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[3]; 
    }  _spotlightAffineTransform;
    void _spotlightCount;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _spotlightIntegrationROI;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _spotlightZoomROI;
    struct __CVBuffer { } * _targetThumbnailPixelBuffer;
    struct __CVBuffer { } * _targetThumbnailPixelBufferForLearning;
    struct __CVBuffer { } * _targetThumbnailPixelBufferForResidualCorrection;
    CMIMetalResourceCache * _textureCache;
    FigMetalTextureDescriptor * _textureDescriptor;
    NSDictionary * _tuningParameters;
    bool  _useLiveMetalAllocations;
    bool  _weightPlaneApplySpatialFilterForIntegrate;
    bool  _weightPlaneApplySpatialFilterForLearn;
    unsigned int  _weightPlaneCount;
    float  _weightPlaneSpatialFilterWeightForIntegrate;
    float  _weightPlaneSpatialFilterWeightForLearn;
    float  _weightPlaneStandardDeviationForIntegrate;
    float  _weightPlaneStandardDeviationForLearn;
}

@property (nonatomic) bool applyDither;
@property (nonatomic, retain) NSDictionary *cameraInfoByPortType;
@property (nonatomic, retain) CMIStyleEngineConfiguration *configuration;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CMIExternalMemoryResource *externalMemoryResource; /* unknown property attribute: ? */
@property (readonly) unsigned long long hash;
@property (nonatomic) struct CGSize { double x1; double x2; } imageSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } inputDeltaMapImageRect;
@property (nonatomic) struct __CVBuffer { }*inputDeltaMapPixelBuffer;
@property (nonatomic) <MTLTexture> *inputDeltaMapTexture;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } inputImageRect;
@property (nonatomic) <MTLTexture> *inputLearningModulationMaskTexture;
@property (nonatomic, retain) NSData *inputLinearSystemCoefficients;
@property (nonatomic) <MTLBuffer> *inputLinearSystemCoefficientsBuffer;
@property (nonatomic) struct __CVBuffer { }*inputLinearSystemCoefficientsPixelBuffer;
@property (nonatomic) <MTLTexture> *inputLinearSystemCoefficientsTexture;
@property (nonatomic, retain) NSDictionary *inputNoiseModel;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } inputOriginalImageRect;
@property (nonatomic) struct __CVBuffer { }*inputOriginalPixelBuffer;
@property (nonatomic) <MTLTexture> *inputOriginalTexture;
@property (nonatomic) struct __CVBuffer { }*inputPixelBuffer;
@property (nonatomic) <MTLTexture> *inputTexture;
@property (nonatomic) struct __CVBuffer { }*inputThumbnailPixelBuffer;
@property (nonatomic) struct __CVBuffer { }*inputThumbnailPixelBufferForIntegration;
@property (nonatomic) struct __CVBuffer { }*inputThumbnailPixelBufferForLearning;
@property (nonatomic) struct __CVBuffer { }*inputThumbnailPixelBufferForLearningWeights;
@property (nonatomic) struct __CVBuffer { }*inputThumbnailPixelBufferForResidualCorrection;
@property (nonatomic) <MTLTexture> *inputThumbnailTexture;
@property (nonatomic) <MTLTexture> *inputThumbnailTextureForIntegration;
@property (nonatomic) <MTLTexture> *inputThumbnailTextureForLearning;
@property (nonatomic) <MTLTexture> *inputThumbnailTextureForLearningWeights;
@property (nonatomic) <MTLTexture> *inputThumbnailTextureForResidualCorrection;
@property (nonatomic) <MTLTexture> *inputWeightPlaneTexture;
@property (nonatomic, copy) NSString *label;
@property (nonatomic, retain) <MTLCommandQueue> *metalCommandQueue;
@property (nonatomic) struct __CVBuffer { }*outputDeltaMapPixelBuffer;
@property (nonatomic) <MTLTexture> *outputDeltaMapTexture;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } outputImageRect;
@property (nonatomic, readonly) <MTLTexture> *outputIntegratedCoefficients;
@property (nonatomic, readonly) NSData *outputLinearSystemCoefficients;
@property (nonatomic) <MTLBuffer> *outputLinearSystemCoefficientsBuffer;
@property (nonatomic) struct __CVBuffer { }*outputLinearSystemCoefficientsPixelBuffer;
@property (nonatomic) <MTLTexture> *outputLinearSystemCoefficientsTexture;
@property (nonatomic, readonly) <MTLBuffer> *outputLinearSystemStatusFlag;
@property (nonatomic) struct __CVBuffer { }*outputLumaGradientPixelBuffer;
@property (nonatomic) <MTLTexture> *outputLumaGradientTexture;
@property (nonatomic) struct __CVBuffer { }*outputPixelBuffer;
@property (nonatomic) <MTLTexture> *outputTexture;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } regionToRender;
@property (nonatomic) bool residualsCalculationDisabled;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; } spotlightAffineTransform;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } spotlightIntegrationROI;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } spotlightZoomROI;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsExternalMemoryResource; /* unknown property attribute: ? */
@property (nonatomic) struct __CVBuffer { }*targetThumbnailPixelBuffer;
@property (nonatomic) struct __CVBuffer { }*targetThumbnailPixelBufferForLearning;
@property (nonatomic) struct __CVBuffer { }*targetThumbnailPixelBufferForResidualCorrection;
@property (nonatomic) <MTLTexture> *targetThumbnailTexture;
@property (nonatomic) <MTLTexture> *targetThumbnailTextureForLearning;
@property (nonatomic) <MTLTexture> *targetThumbnailTextureForResidualCorrection;
@property (nonatomic, retain) NSDictionary *tuningParameters;
@property (nonatomic) bool useLiveMetalAllocations;

+ (unsigned long long)APIVersion;
+ (unsigned long long)coefficientCountForConfiguration:(id)arg1;
+ (struct CGSize { double x1; double x2; })coefficientPixelBufferSizeForConfiguration:(id)arg1 float16:(bool)arg2;
+ (struct CGSize { double x1; double x2; })coefficientPixelBufferSizeForTotalSize:(unsigned long long)arg1 float16:(bool)arg2;

- (void).cxx_destruct;
- (void)_allocateBuffer:(id*)arg1 withDescriptor:(id)arg2 useFigMetalAllocator:(bool)arg3;
- (int)_allocatePermanentResources;
- (void)_allocateTexture:(id*)arg1 withDescriptor:(id)arg2 useFigMetalAllocator:(bool)arg3;
- (bool)_applyResidualCorrection;
- (struct InternalIOBuffers { id x1; id x2; })_bindAllInternalIOBuffers:(int*)arg1;
- (struct InternalIOTextures { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; })_bindAllInternalIOTextures:(int*)arg1;
- (int)_bindAllInternalYUVTextures:(struct InternalIOTextures { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; }*)arg1;
- (int)_bindPixelBuffer:(struct __CVBuffer { }*)arg1 toBuffer:(id*)arg2;
- (int)_bindPixelBufferToTexture:(struct __CVBuffer { }*)arg1 usage:(unsigned long long)arg2 texturePtr:(id*)arg3;
- (int)_bindPixelBufferToTexture:(struct __CVBuffer { }*)arg1 usage:(unsigned long long)arg2 texturePtr:(id*)arg3 plane:(unsigned int)arg4;
- (int)_bindTexture:(id)arg1 toBuffer:(id*)arg2;
- (int)_bindYUV420PixelBufferToTextures:(struct __CVBuffer { }*)arg1 usage:(unsigned long long)arg2 lumaTexturePtr:(id*)arg3 chromaTexturePtr:(id*)arg4;
- (int)_checkConfigurationForTexture:(struct InternalIOTextures { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; }*)arg1 buffers:(struct InternalIOBuffers { id x1; id x2; }*)arg2;
- (int)_checkIOTexturePair:(struct InternalIOTextures { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; }*)arg1;
- (int)_checkIntegrationThumbnailTexture:(struct InternalIOTextures { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; }*)arg1;
- (int)_checkLearningThumbnailTexturePair:(struct InternalIOTextures { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; }*)arg1;
- (int)_checkLearningWeightThumbnailTexture:(struct InternalIOTextures { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; }*)arg1;
- (int)_checkROISpecification:(struct InternalIOTextures { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; }*)arg1;
- (int)_checkResidualCorrectionThumbnailTexturePair:(struct InternalIOTextures { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; }*)arg1;
- (int)_createMetalStages;
- (void)_freePermanentResources;
- (unsigned int)_independentPlusSpatialAverageLinearSystemCount;
- (id)_instanceLabel:(id)arg1;
- (unsigned int)_linearSystemCount;
- (unsigned int)_linearSystemNumberOfExpansionTerms;
- (unsigned int)_linearSystemNumberOfPolynomials;
- (unsigned int)_linearSystemSize;
- (unsigned long long)_requiredMetalHeapMemory:(unsigned int)arg1;
- (int)_setTuningParameters;
- (unsigned int)_spatialAverageLinearSystemCount;
- (bool)applyDither;
- (id)cameraInfoByPortType;
- (id)configuration;
- (int)createIdentityTransformCoefficients:(struct __CVBuffer { }*)arg1;
- (void)dealloc;
- (int)downScaleInputPixelBuffer:(struct __CVBuffer { }*)arg1 toOutputPixelBuffer:(struct __CVBuffer { }*)arg2;
- (int)downScaleInputPixelBuffer:(struct __CVBuffer { }*)arg1 toOutputPixelBuffer:(struct __CVBuffer { }*)arg2 copyAttachments:(bool)arg3;
- (int)downScaleInputPixelBuffer:(struct __CVBuffer { }*)arg1 toOutputPixelBuffer:(struct __CVBuffer { }*)arg2 copyAttachments:(bool)arg3 gdcParams:(const struct { float x1; float x2; float x3[8]; float x4[8]; float x5; }*)arg4;
- (int)downScaleInputPixelBuffer:(struct __CVBuffer { }*)arg1 withInputCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 toOutputPixelBuffer:(struct __CVBuffer { }*)arg3 copyAttachments:(bool)arg4;
- (int)downScaleInputPixelBuffer:(struct __CVBuffer { }*)arg1 withInputCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 usingBoxSize:(struct CGSize { double x1; double x2; })arg3 toOutputPixelBuffer:(struct __CVBuffer { }*)arg4 copyAttachments:(bool)arg5;
- (int)downScaleInputPixelBuffer:(struct __CVBuffer { }*)arg1 withInputCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 usingBoxSize:(struct CGSize { double x1; double x2; })arg3 toOutputPixelBuffer:(struct __CVBuffer { }*)arg4 filter:(unsigned long long)arg5 copyAttachments:(bool)arg6 gdcParams:(const struct { float x1; float x2; float x3[8]; float x4[8]; float x5; }*)arg7;
- (int)downScaleInputTexture:(id)arg1 toOutputTexture:(id)arg2;
- (int)downScaleInputTexture:(id)arg1 withInputCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 toOutputTexture:(id)arg3;
- (int)downScaleInputTexture:(id)arg1 withInputCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 usingBoxSize:(struct CGSize { double x1; double x2; })arg3 toOutputTexture:(id)arg4;
- (int)downScaleInputTexture:(id)arg1 withInputCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 usingBoxSize:(struct CGSize { double x1; double x2; })arg3 toOutputTexture:(id)arg4 filter:(unsigned long long)arg5 gdcParams:(const struct { float x1; float x2; float x3[8]; float x4[8]; float x5; }*)arg6;
- (id)externalMemoryDescriptorForConfiguration:(id)arg1;
- (id)externalMemoryResource;
- (int)finishProcessing;
- (void)forceMetalCachesFlush;
- (struct CGSize { double x1; double x2; })imageSize;
- (id)initWithOptionalMetalCommandQueue:(id)arg1;
- (id)initWithOptionalMetalCommandQueue:(id)arg1 withCoefficientSynchronization:(bool)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inputDeltaMapImageRect;
- (struct __CVBuffer { }*)inputDeltaMapPixelBuffer;
- (id)inputDeltaMapTexture;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inputImageRect;
- (id)inputLearningModulationMaskTexture;
- (id)inputLinearSystemCoefficients;
- (id)inputLinearSystemCoefficientsBuffer;
- (struct __CVBuffer { }*)inputLinearSystemCoefficientsPixelBuffer;
- (id)inputLinearSystemCoefficientsTexture;
- (id)inputNoiseModel;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inputOriginalImageRect;
- (struct __CVBuffer { }*)inputOriginalPixelBuffer;
- (id)inputOriginalTexture;
- (struct __CVBuffer { }*)inputPixelBuffer;
- (id)inputTexture;
- (struct __CVBuffer { }*)inputThumbnailPixelBuffer;
- (struct __CVBuffer { }*)inputThumbnailPixelBufferForIntegration;
- (struct __CVBuffer { }*)inputThumbnailPixelBufferForLearning;
- (struct __CVBuffer { }*)inputThumbnailPixelBufferForLearningWeights;
- (struct __CVBuffer { }*)inputThumbnailPixelBufferForResidualCorrection;
- (id)inputThumbnailTexture;
- (id)inputThumbnailTextureForIntegration;
- (id)inputThumbnailTextureForLearning;
- (id)inputThumbnailTextureForLearningWeights;
- (id)inputThumbnailTextureForResidualCorrection;
- (id)inputWeightPlaneTexture;
- (id)label;
- (id)metalCommandQueue;
- (struct __CVBuffer { }*)outputDeltaMapPixelBuffer;
- (id)outputDeltaMapTexture;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })outputImageRect;
- (id)outputIntegratedCoefficients;
- (id)outputLinearSystemCoefficients;
- (id)outputLinearSystemCoefficientsBuffer;
- (struct __CVBuffer { }*)outputLinearSystemCoefficientsPixelBuffer;
- (id)outputLinearSystemCoefficientsTexture;
- (id)outputLinearSystemStatusFlag;
- (struct __CVBuffer { }*)outputLumaGradientPixelBuffer;
- (id)outputLumaGradientTexture;
- (struct __CVBuffer { }*)outputPixelBuffer;
- (id)outputTexture;
- (int)prepareToProcess:(unsigned int)arg1;
- (int)prewarm;
- (int)process;
- (int)purgeResources;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })regionToRender;
- (int)resetState;
- (bool)residualsCalculationDisabled;
- (void)setApplyDither:(bool)arg1;
- (void)setCameraInfoByPortType:(id)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setExternalMemoryResource:(id)arg1;
- (void)setImageSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setInputDeltaMapImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setInputDeltaMapPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setInputDeltaMapTexture:(id)arg1;
- (void)setInputImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setInputLearningModulationMaskTexture:(id)arg1;
- (void)setInputLinearSystemCoefficients:(id)arg1;
- (void)setInputLinearSystemCoefficientsBuffer:(id)arg1;
- (void)setInputLinearSystemCoefficientsPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setInputLinearSystemCoefficientsTexture:(id)arg1;
- (void)setInputNoiseModel:(id)arg1;
- (void)setInputOriginalImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setInputOriginalPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setInputOriginalTexture:(id)arg1;
- (void)setInputPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setInputTexture:(id)arg1;
- (void)setInputThumbnailPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setInputThumbnailPixelBufferForIntegration:(struct __CVBuffer { }*)arg1;
- (void)setInputThumbnailPixelBufferForLearning:(struct __CVBuffer { }*)arg1;
- (void)setInputThumbnailPixelBufferForLearningWeights:(struct __CVBuffer { }*)arg1;
- (void)setInputThumbnailPixelBufferForResidualCorrection:(struct __CVBuffer { }*)arg1;
- (void)setInputThumbnailTexture:(id)arg1;
- (void)setInputThumbnailTextureForIntegration:(id)arg1;
- (void)setInputThumbnailTextureForLearning:(id)arg1;
- (void)setInputThumbnailTextureForLearningWeights:(id)arg1;
- (void)setInputThumbnailTextureForResidualCorrection:(id)arg1;
- (void)setInputWeightPlaneTexture:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setMetalCommandQueue:(id)arg1;
- (void)setOutputDeltaMapPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setOutputDeltaMapTexture:(id)arg1;
- (void)setOutputImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setOutputLinearSystemCoefficientsBuffer:(id)arg1;
- (void)setOutputLinearSystemCoefficientsPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setOutputLinearSystemCoefficientsTexture:(id)arg1;
- (void)setOutputLumaGradientPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setOutputLumaGradientTexture:(id)arg1;
- (void)setOutputPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setOutputTexture:(id)arg1;
- (void)setRegionToRender:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setResidualsCalculationDisabled:(bool)arg1;
- (void)setSpotlightAffineTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; })arg1;
- (void)setSpotlightIntegrationROI:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setSpotlightZoomROI:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setTargetThumbnailPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setTargetThumbnailPixelBufferForLearning:(struct __CVBuffer { }*)arg1;
- (void)setTargetThumbnailPixelBufferForResidualCorrection:(struct __CVBuffer { }*)arg1;
- (void)setTargetThumbnailTexture:(id)arg1;
- (void)setTargetThumbnailTextureForLearning:(id)arg1;
- (void)setTargetThumbnailTextureForResidualCorrection:(id)arg1;
- (void)setTuningParameters:(id)arg1;
- (void)setUseLiveMetalAllocations:(bool)arg1;
- (int)setup;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; })spotlightAffineTransform;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })spotlightIntegrationROI;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })spotlightZoomROI;
- (bool)supportsExternalMemoryResource;
- (struct __CVBuffer { }*)targetThumbnailPixelBuffer;
- (struct __CVBuffer { }*)targetThumbnailPixelBufferForLearning;
- (struct __CVBuffer { }*)targetThumbnailPixelBufferForResidualCorrection;
- (id)targetThumbnailTexture;
- (id)targetThumbnailTextureForLearning;
- (id)targetThumbnailTextureForResidualCorrection;
- (id)tuningParameters;
- (bool)useLiveMetalAllocations;

@end
