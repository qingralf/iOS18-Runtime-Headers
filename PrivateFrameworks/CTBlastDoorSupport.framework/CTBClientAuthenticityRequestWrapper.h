/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CTBlastDoorSupport.framework/CTBlastDoorSupport
 */

@interface CTBClientAuthenticityRequestWrapper : NSObject {
    struct optional<ctb::ClientAuthenticityRequest> { 
        union { 
            BOOL __null_state_; 
            struct ClientAuthenticityRequest { 
                struct vector<ctb::ClientAuthenticityRequest::Method, std::allocator<ctb::ClientAuthenticityRequest::Method>> { 
                    struct Method {} *__begin_; 
                    struct Method {} *__end_; 
                    struct __compressed_pair<ctb::ClientAuthenticityRequest::Method *, std::allocator<ctb::ClientAuthenticityRequest::Method>> { 
                        struct Method {} *__value_; 
                    } __end_cap_; 
                } fMethods; 
            } __val_; 
        } ; 
        bool __engaged_; 
    }  _wrapped;
}

@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{optional<ctb::ClientAuthenticityRequest>=(?=c{ClientAuthenticityRequest={vector<ctb::ClientAuthenticityRequest::Method' */ struct  wrapped; /* unknown property attribute:  std::allocator<ctb::ClientAuthenticityRequest::Method>>=^{Method}}}})B} */

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithWrapped:(struct optional<ctb::ClientAuthenticityRequest> { union { BOOL x_1_1_1; struct ClientAuthenticityRequest { struct vector<ctb::ClientAuthenticityRequest::Method, std::allocator<ctb::ClientAuthenticityRequest::Method>> { struct Method {} *x_1_3_1; struct Method {} *x_1_3_2; struct __compressed_pair<ctb::ClientAuthenticityRequest::Method *, std::allocator<ctb::ClientAuthenticityRequest::Method>> { struct Method {} *x_3_4_1; } x_1_3_3; } x_2_2_1; } x_1_1_2; } x1; bool x2; })arg1;
- (struct optional<ctb::ClientAuthenticityRequest> { union { BOOL x_1_1_1; struct ClientAuthenticityRequest { struct vector<ctb::ClientAuthenticityRequest::Method, std::allocator<ctb::ClientAuthenticityRequest::Method>> { struct Method {} *x_1_3_1; struct Method {} *x_1_3_2; struct __compressed_pair<ctb::ClientAuthenticityRequest::Method *, std::allocator<ctb::ClientAuthenticityRequest::Method>> { struct Method {} *x_3_4_1; } x_1_3_3; } x_2_2_1; } x_1_1_2; } x1; bool x2; })wrapped;

@end
