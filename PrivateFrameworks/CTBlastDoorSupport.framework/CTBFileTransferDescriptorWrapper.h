/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CTBlastDoorSupport.framework/CTBlastDoorSupport
 */

@interface CTBFileTransferDescriptorWrapper : NSObject {
    struct optional<ctb::FileTransferDescriptor> { 
        union { 
            BOOL __null_state_; 
            struct FileTransferDescriptor { 
                struct FileDescriptor { 
                    int fFileType; 
                    struct optional<ctb::FileTransferDescriptor::FileDescriptor::FileDisposition> { 
                        union { 
                            BOOL __null_state_; 
                            int __val_; 
                        } ; 
                        bool __engaged_; 
                    } fFileDisposition; 
                    unsigned long long fFileSize; 
                    struct optional<std::string> { 
                        union { 
                            BOOL __null_state_; 
                            struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                                struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                                    struct __rep { 
                                        union { 
                                            struct __short { 
                                                BOOL __data_[23]; 
                                                unsigned char __padding_[0]; 
                                                unsigned int __size_ : 7; 
                                                unsigned int __is_long_ : 1; 
                                            } __s; 
                                            struct __long { 
                                                char *__data_; 
                                                unsigned long long __size_; 
                                                unsigned int __cap_ : 63; 
                                                unsigned int __is_long_ : 1; 
                                            } __l; 
                                            struct __raw { 
                                                unsigned long long __words[3]; 
                                            } __r; 
                                        } ; 
                                    } __value_; 
                                } __r_; 
                            } __val_; 
                        } ; 
                        bool __engaged_; 
                    } fFileName; 
                    struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                        struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                            struct __rep { 
                                union { 
                                    struct __short { 
                                        BOOL __data_[23]; 
                                        unsigned char __padding_[0]; 
                                        unsigned int __size_ : 7; 
                                        unsigned int __is_long_ : 1; 
                                    } __s; 
                                    struct __long { 
                                        char *__data_; 
                                        unsigned long long __size_; 
                                        unsigned int __cap_ : 63; 
                                        unsigned int __is_long_ : 1; 
                                    } __l; 
                                    struct __raw { 
                                        unsigned long long __words[3]; 
                                    } __r; 
                                } ; 
                            } __value_; 
                        } __r_; 
                    } fResolvedContentType; 
                    struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                        struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                            struct __rep { 
                                union { 
                                    struct __short { 
                                        BOOL __data_[23]; 
                                        unsigned char __padding_[0]; 
                                        unsigned int __size_ : 7; 
                                        unsigned int __is_long_ : 1; 
                                    } __s; 
                                    struct __long { 
                                        char *__data_; 
                                        unsigned long long __size_; 
                                        unsigned int __cap_ : 63; 
                                        unsigned int __is_long_ : 1; 
                                    } __l; 
                                    struct __raw { 
                                        unsigned long long __words[3]; 
                                    } __r; 
                                } ; 
                            } __value_; 
                        } __r_; 
                    } fUrl; 
                    struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                        struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                            struct __rep { 
                                union { 
                                    struct __short { 
                                        BOOL __data_[23]; 
                                        unsigned char __padding_[0]; 
                                        unsigned int __size_ : 7; 
                                        unsigned int __is_long_ : 1; 
                                    } __s; 
                                    struct __long { 
                                        char *__data_; 
                                        unsigned long long __size_; 
                                        unsigned int __cap_ : 63; 
                                        unsigned int __is_long_ : 1; 
                                    } __l; 
                                    struct __raw { 
                                        unsigned long long __words[3]; 
                                    } __r; 
                                } ; 
                            } __value_; 
                        } __r_; 
                    } fExpirationDate; 
                    struct optional<unsigned long> { 
                        union { 
                            BOOL __null_state_; 
                            unsigned long long __val_; 
                        } ; 
                        bool __engaged_; 
                    } fPlayingLengthInSeconds; 
                } fFileDescriptor; 
                struct optional<ctb::FileTransferDescriptor::FileDescriptor> { 
                    union { 
                        BOOL __null_state_; 
                        struct FileDescriptor { 
                            int fFileType; 
                            struct optional<ctb::FileTransferDescriptor::FileDescriptor::FileDisposition> { 
                                union { 
                                    BOOL __null_state_; 
                                    int __val_; 
                                } ; 
                                bool __engaged_; 
                            } fFileDisposition; 
                            unsigned long long fFileSize; 
                            struct optional<std::string> { 
                                union { 
                                    BOOL __null_state_; 
                                    struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                                        struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                                            struct __rep { 
                                                union { 
                                                    struct __short { 
                                                        BOOL __data_[23]; 
                                                        unsigned char __padding_[0]; 
                                                        unsigned int __size_ : 7; 
                                                        unsigned int __is_long_ : 1; 
                                                    } __s; 
                                                    struct __long { 
                                                        char *__data_; 
                                                        unsigned long long __size_; 
                                                        unsigned int __cap_ : 63; 
                                                        unsigned int __is_long_ : 1; 
                                                    } __l; 
                                                    struct __raw { 
                                                        unsigned long long __words[3]; 
                                                    } __r; 
                                                } ; 
                                            } __value_; 
                                        } __r_; 
                                    } __val_; 
                                } ; 
                                bool __engaged_; 
                            } fFileName; 
                            struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                                struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                                    struct __rep { 
                                        union { 
                                            struct __short { 
                                                BOOL __data_[23]; 
                                                unsigned char __padding_[0]; 
                                                unsigned int __size_ : 7; 
                                                unsigned int __is_long_ : 1; 
                                            } __s; 
                                            struct __long { 
                                                char *__data_; 
                                                unsigned long long __size_; 
                                                unsigned int __cap_ : 63; 
                                                unsigned int __is_long_ : 1; 
                                            } __l; 
                                            struct __raw { 
                                                unsigned long long __words[3]; 
                                            } __r; 
                                        } ; 
                                    } __value_; 
                                } __r_; 
                            } fResolvedContentType; 
                            struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                                struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                                    struct __rep { 
                                        union { 
                                            struct __short { 
                                                BOOL __data_[23]; 
                                                unsigned char __padding_[0]; 
                                                unsigned int __size_ : 7; 
                                                unsigned int __is_long_ : 1; 
                                            } __s; 
                                            struct __long { 
                                                char *__data_; 
                                                unsigned long long __size_; 
                                                unsigned int __cap_ : 63; 
                                                unsigned int __is_long_ : 1; 
                                            } __l; 
                                            struct __raw { 
                                                unsigned long long __words[3]; 
                                            } __r; 
                                        } ; 
                                    } __value_; 
                                } __r_; 
                            } fUrl; 
                            struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                                struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                                    struct __rep { 
                                        union { 
                                            struct __short { 
                                                BOOL __data_[23]; 
                                                unsigned char __padding_[0]; 
                                                unsigned int __size_ : 7; 
                                                unsigned int __is_long_ : 1; 
                                            } __s; 
                                            struct __long { 
                                                char *__data_; 
                                                unsigned long long __size_; 
                                                unsigned int __cap_ : 63; 
                                                unsigned int __is_long_ : 1; 
                                            } __l; 
                                            struct __raw { 
                                                unsigned long long __words[3]; 
                                            } __r; 
                                        } ; 
                                    } __value_; 
                                } __r_; 
                            } fExpirationDate; 
                            struct optional<unsigned long> { 
                                union { 
                                    BOOL __null_state_; 
                                    unsigned long long __val_; 
                                } ; 
                                bool __engaged_; 
                            } fPlayingLengthInSeconds; 
                        } __val_; 
                    } ; 
                    bool __engaged_; 
                } fThumbnailDescriptor; 
            } __val_; 
        } ; 
        bool __engaged_; 
    }  _wrapped;
}

@property (nonatomic, readonly) struct optional<ctb::FileTransferDescriptor> { union { BOOL x_1_1_1; struct FileTransferDescriptor { struct FileDescriptor { int x_1_3_1; struct optional<ctb::FileTransferDescriptor::FileDescriptor::FileDisposition> { union { BOOL x_1_5_1; int x_1_5_2; } x_2_4_1; bool x_2_4_2; } x_1_3_2; unsigned long long x_1_3_3; /* Warning: unhandled struct encoding: '{optional<std::string>=(?=c{basic_string<char' */ struct x_1_3_4; } x_2_2_1; } x_1_1_2; } x1; } wrapped; /* unknown property attribute:  std::allocator<char>>={__rep=(?={__short=[23c][0C]b7b1}{__long=*Qb63b1}{__raw=[3Q]})}}}{optional<unsigned long>=(?=cQ)B}})B}})B} */

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithWrapped:(struct optional<ctb::FileTransferDescriptor> { union { BOOL x_1_1_1; struct FileTransferDescriptor { struct FileDescriptor { int x_1_3_1; struct optional<ctb::FileTransferDescriptor::FileDescriptor::FileDisposition> { union { BOOL x_1_5_1; int x_1_5_2; } x_2_4_1; bool x_2_4_2; } x_1_3_2; unsigned long long x_1_3_3; struct optional<std::string> { union { BOOL x_1_5_1; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_10_1[23]; unsigned char x_1_10_2[0]; unsigned int x_1_10_3 : 7; unsigned int x_1_10_4 : 1; } x_1_9_1; struct __long { char *x_2_10_1; unsigned long long x_2_10_2; unsigned int x_2_10_3 : 63; unsigned int x_2_10_4 : 1; } x_1_9_2; struct __raw { unsigned long long x_3_10_1[3]; } x_1_9_3; } x_1_8_1; } x_1_7_1; } x_2_6_1; } x_1_5_2; } x_4_4_1; bool x_4_4_2; } x_1_3_4; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_8_1[23]; unsigned char x_1_8_2[0]; unsigned int x_1_8_3 : 7; unsigned int x_1_8_4 : 1; } x_1_7_1; struct __long { char *x_2_8_1; unsigned long long x_2_8_2; unsigned int x_2_8_3 : 63; unsigned int x_2_8_4 : 1; } x_1_7_2; struct __raw { unsigned long long x_3_8_1[3]; } x_1_7_3; } x_1_6_1; } x_1_5_1; } x_5_4_1; } x_1_3_5; } x_2_2_1; } x_1_1_2; } x1; })arg1;
- (struct optional<ctb::FileTransferDescriptor> { union { BOOL x_1_1_1; struct FileTransferDescriptor { struct FileDescriptor { int x_1_3_1; struct optional<ctb::FileTransferDescriptor::FileDescriptor::FileDisposition> { union { BOOL x_1_5_1; int x_1_5_2; } x_2_4_1; bool x_2_4_2; } x_1_3_2; unsigned long long x_1_3_3; struct optional<std::string> { union { BOOL x_1_5_1; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_10_1[23]; unsigned char x_1_10_2[0]; unsigned int x_1_10_3 : 7; unsigned int x_1_10_4 : 1; } x_1_9_1; struct __long { char *x_2_10_1; unsigned long long x_2_10_2; unsigned int x_2_10_3 : 63; unsigned int x_2_10_4 : 1; } x_1_9_2; struct __raw { unsigned long long x_3_10_1[3]; } x_1_9_3; } x_1_8_1; } x_1_7_1; } x_2_6_1; } x_1_5_2; } x_4_4_1; bool x_4_4_2; } x_1_3_4; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_8_1[23]; unsigned char x_1_8_2[0]; unsigned int x_1_8_3 : 7; unsigned int x_1_8_4 : 1; } x_1_7_1; struct __long { char *x_2_8_1; unsigned long long x_2_8_2; unsigned int x_2_8_3 : 63; unsigned int x_2_8_4 : 1; } x_1_7_2; struct __raw { unsigned long long x_3_8_1[3]; } x_1_7_3; } x_1_6_1; } x_1_5_1; } x_5_4_1; } x_1_3_5; } x_2_2_1; } x_1_1_2; } x1; })wrapped;

@end
