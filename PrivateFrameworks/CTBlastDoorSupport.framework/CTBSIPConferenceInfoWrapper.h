/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CTBlastDoorSupport.framework/CTBlastDoorSupport
 */

@interface CTBSIPConferenceInfoWrapper : NSObject {
    struct optional<ctb::SIPConferenceInfo> { 
        union { 
            BOOL __null_state_; 
            struct SIPConferenceInfo { 
                struct optional<ctb::SIPConferenceInfo::Description> { 
                    union { 
                        BOOL __null_state_; 
                        struct Description { 
                            struct optional<std::string> { 
                                union { 
                                    BOOL __null_state_; 
                                    struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                                        struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                                            struct __rep { 
                                                union { 
                                                    struct __short { 
                                                        BOOL __data_[23]; 
                                                        unsigned char __padding_[0]; 
                                                        unsigned int __size_ : 7; 
                                                        unsigned int __is_long_ : 1; 
                                                    } __s; 
                                                    struct __long { 
                                                        char *__data_; 
                                                        unsigned long long __size_; 
                                                        unsigned int __cap_ : 63; 
                                                        unsigned int __is_long_ : 1; 
                                                    } __l; 
                                                    struct __raw { 
                                                        unsigned long long __words[3]; 
                                                    } __r; 
                                                } ; 
                                            } __value_; 
                                        } __r_; 
                                    } __val_; 
                                } ; 
                                bool __engaged_; 
                            } fSubject; 
                            struct optional<ctb::SIPConferenceInfo::SubjectExt> { 
                                union { 
                                    BOOL __null_state_; 
                                    struct SubjectExt { 
                                        struct basic_string<char, std::char_traits<char>, std::allocator<char>> { 
                                            struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { 
                                                struct __rep { 
                                                    union { 
                                                        struct __short { 
                                                            BOOL __data_[23]; 
                                                            unsigned char __padding_[0]; 
                                                            unsigned int __size_ : 7; 
                                                            unsigned int __is_long_ : 1; 
                                                        } __s; 
                                                        struct __long { 
                                                            char *__data_; 
                                                            unsigned long long __size_; 
                                                            unsigned int __cap_ : 63; 
                                                            unsigned int __is_long_ : 1; 
                                                        } __l; 
                                                        struct __raw { 
                                                            unsigned long long __words[3]; 
                                                        } __r; 
                                                    } ; 
                                                } __value_; 
                                            } __r_; 
                                        } fParticipantURI; 
                                    } __val_; 
                                } ; 
                                bool __engaged_; 
                            } fSubjectExt; 
                        } __val_; 
                    } ; 
                    bool __engaged_; 
                } fDescription; 
                struct vector<ctb::SIPConferenceInfo::User, std::allocator<ctb::SIPConferenceInfo::User>> { 
                    struct User {} *__begin_; 
                    struct User {} *__end_; 
                    struct __compressed_pair<ctb::SIPConferenceInfo::User *, std::allocator<ctb::SIPConferenceInfo::User>> { 
                        struct User {} *__value_; 
                    } __end_cap_; 
                } fUsers; 
            } __val_; 
        } ; 
        bool __engaged_; 
    }  _wrapped;
}

@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{optional<ctb::SIPConferenceInfo>=(?=c{SIPConferenceInfo={optional<ctb::SIPConferenceInfo::Description>=(?=c{Description={optional<std::string>=(?=c{basic_string<char' */ struct  wrapped; /* unknown property attribute:  std::allocator<ctb::SIPConferenceInfo::User>>=^{User}}}})B} */

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithWrapped:(struct optional<ctb::SIPConferenceInfo> { union { BOOL x_1_1_1; struct SIPConferenceInfo { struct optional<ctb::SIPConferenceInfo::Description> { union { BOOL x_1_4_1; struct Description { struct optional<std::string> { union { BOOL x_1_7_1; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_12_1[23]; unsigned char x_1_12_2[0]; unsigned int x_1_12_3 : 7; unsigned int x_1_12_4 : 1; } x_1_11_1; struct __long { char *x_2_12_1; unsigned long long x_2_12_2; unsigned int x_2_12_3 : 63; unsigned int x_2_12_4 : 1; } x_1_11_2; struct __raw { unsigned long long x_3_12_1[3]; } x_1_11_3; } x_1_10_1; } x_1_9_1; } x_2_8_1; } x_1_7_2; } x_1_6_1; bool x_1_6_2; } x_2_5_1; struct optional<ctb::SIPConferenceInfo::SubjectExt> { union { BOOL x_1_7_1; struct SubjectExt { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_13_1[23]; unsigned char x_1_13_2[0]; unsigned int x_1_13_3 : 7; unsigned int x_1_13_4 : 1; } x_1_12_1; struct __long { char *x_2_13_1; unsigned long long x_2_13_2; unsigned int x_2_13_3 : 63; unsigned int x_2_13_4 : 1; } x_1_12_2; struct __raw { unsigned long long x_3_13_1[3]; } x_1_12_3; } x_1_11_1; } x_1_10_1; } x_1_9_1; } x_2_8_1; } x_1_7_2; } x_2_6_1; bool x_2_6_2; } x_2_5_2; } x_1_4_2; } x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; })arg1;
- (struct optional<ctb::SIPConferenceInfo> { union { BOOL x_1_1_1; struct SIPConferenceInfo { struct optional<ctb::SIPConferenceInfo::Description> { union { BOOL x_1_4_1; struct Description { struct optional<std::string> { union { BOOL x_1_7_1; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_12_1[23]; unsigned char x_1_12_2[0]; unsigned int x_1_12_3 : 7; unsigned int x_1_12_4 : 1; } x_1_11_1; struct __long { char *x_2_12_1; unsigned long long x_2_12_2; unsigned int x_2_12_3 : 63; unsigned int x_2_12_4 : 1; } x_1_11_2; struct __raw { unsigned long long x_3_12_1[3]; } x_1_11_3; } x_1_10_1; } x_1_9_1; } x_2_8_1; } x_1_7_2; } x_1_6_1; bool x_1_6_2; } x_2_5_1; struct optional<ctb::SIPConferenceInfo::SubjectExt> { union { BOOL x_1_7_1; struct SubjectExt { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_13_1[23]; unsigned char x_1_13_2[0]; unsigned int x_1_13_3 : 7; unsigned int x_1_13_4 : 1; } x_1_12_1; struct __long { char *x_2_13_1; unsigned long long x_2_13_2; unsigned int x_2_13_3 : 63; unsigned int x_2_13_4 : 1; } x_1_12_2; struct __raw { unsigned long long x_3_13_1[3]; } x_1_12_3; } x_1_11_1; } x_1_10_1; } x_1_9_1; } x_2_8_1; } x_1_7_2; } x_2_6_1; bool x_2_6_2; } x_2_5_2; } x_1_4_2; } x_1_3_1; } x_2_2_1; } x_1_1_2; } x1; })wrapped;

@end
