/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CallHistory.framework/CallHistory
 */

@interface CHManager : CHSynchronizedLoggable <CHProtectedAppProviderDelegate, CallHistoryDataSource> {
    bool  _cacheIsDirty;
    NSString * _coalescingStrategy;
    <CHFeatureFlags> * _featureFlags;
    bool  _finishedLoadingAllCalls;
    bool  _generateSyncTransactions;
    NSArray * _limitingCallKinds;
    unsigned int  _limitingCallTypes;
    NSDate * _limitingEndDate;
    NSDate * _limitingStartDate;
    long long  _numberOfUnseenMissedCalls;
    CHPhoneBookIOSManager * _phoneBookManager;
    NSPredicate * _postFetchingPredicate;
    NSPredicate * _preFetchingPredicate;
    <CHProtectedAppProvider> * _protectedAppProvider;
    bool  _reCoalesce;
    NSArray * _recentCalls;
    bool  _shouldLoadOlderCalls;
    bool  _showsFaceTimeAudioCalls;
    bool  _showsFaceTimeVideoCalls;
    bool  _showsProtectedApps;
    bool  _showsTelephonyCalls;
    <SyncManagerProtocol> * _syncManager;
    NSArray * _uncoalescedRecentCalls;
    NSArray * _uncoalescedUnFilteredRecentCalls;
}

@property (nonatomic, copy) NSSet *allowedProtectedAppBundleIDs;
@property bool cacheIsDirty;
@property (nonatomic, copy) NSString *coalescingStrategy;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <CHFeatureFlags> *featureFlags;
@property (nonatomic) bool finishedLoadingAllCalls;
@property (nonatomic) bool generateSyncTransactions;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSArray *limitingCallKinds;
@property (nonatomic) unsigned int limitingCallTypes;
@property (nonatomic, copy) NSDate *limitingEndDate;
@property (nonatomic, copy) NSDate *limitingStartDate;
@property long long numberOfUnseenMissedCalls;
@property (nonatomic, readonly) CHPhoneBookIOSManager *phoneBookManager;
@property (nonatomic, retain) NSPredicate *postFetchingPredicate;
@property (nonatomic, retain) NSPredicate *preFetchingPredicate;
@property (nonatomic, readonly) <CHProtectedAppProvider> *protectedAppProvider;
@property bool reCoalesce;
@property (nonatomic, retain) NSArray *recentCalls;
@property bool shouldLoadOlderCalls;
@property (nonatomic) bool showsFaceTimeAudioCalls;
@property (nonatomic) bool showsFaceTimeVideoCalls;
@property (nonatomic) bool showsProtectedApps;
@property (nonatomic) bool showsTelephonyCalls;
@property (readonly) Class superclass;
@property (nonatomic, retain) <SyncManagerProtocol> *syncManager;
@property (getter=uncoalescedRecentCallsSync, nonatomic, retain) NSArray *uncoalescedRecentCalls;
@property (retain) NSArray *uncoalescedUnFilteredRecentCalls;

// Image: /System/Library/PrivateFrameworks/CallHistory.framework/CallHistory

+ (unsigned int)CHCallStatusForCallWithDuration:(double)arg1 isOriginated:(bool)arg2 isAnswered:(bool)arg3;
+ (id)limitingCallKindsForCallType:(unsigned int)arg1;

- (void).cxx_destruct;
- (void)addArrayToCallHistory:(id)arg1;
- (void)addArrayToCallHistory:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)addMultipleCallsToCallHistory:(id)arg1;
- (void)addMultipleCallsToCallHistoryWithTransactions:(id)arg1;
- (void)addToCallHistory:(id)arg1;
- (id)allowedProtectedAppBundleIDs;
- (id)applyPredicate:(id)arg1 toCalls:(id)arg2;
- (bool)cacheIsDirty;
- (unsigned long long)callCountWithPredicate:(id)arg1;
- (long long)callHistoryDBFetchLimit;
- (id)callIdentifiersWithPredicate:(id)arg1 limit:(unsigned long long)arg2 offset:(unsigned long long)arg3 batchSize:(unsigned long long)arg4;
- (double)callTimersGetIncoming;
- (double)callTimersGetLifetime;
- (double)callTimersGetOutgoing;
- (void)callTimersReset;
- (id)callsWithLimits:(id)arg1 limit:(unsigned long long)arg2 offset:(unsigned long long)arg3 batchSize:(unsigned long long)arg4;
- (id)callsWithPredicate:(id)arg1 limit:(unsigned long long)arg2 offset:(unsigned long long)arg3 batchSize:(unsigned long long)arg4;
- (bool)canLoadOlderRecentCalls;
- (void)clearDatabase;
- (unsigned long long)coalescedCallCountWithPredicate:(id)arg1;
- (id)coalescedCallsWithCalls:(id)arg1 usingStrategy:(id)arg2;
- (id)coalescedCallsWithPredicate:(id)arg1 limit:(unsigned long long)arg2 offset:(unsigned long long)arg3 batchSize:(unsigned long long)arg4;
- (id)coalescingStrategy;
- (unsigned long long)countCallsWithPredicate:(id)arg1;
- (unsigned long long)countCallsWithPredicateSync:(id)arg1;
- (void)currentLocaleChanged:(id)arg1;
- (void)dealloc;
- (void)deleteAllCalls;
- (void)deleteAllCallsSync;
- (void)deleteCall:(id)arg1;
- (void)deleteCallAtIndex:(unsigned long long)arg1;
- (void)deleteCalls:(id)arg1 withCompletion:(id /* block */)arg2;
- (long long)deleteCallsWithPredicate:(id)arg1;
- (void)deleteCallsWithPredicate:(id)arg1 completion:(id /* block */)arg2;
- (void)deleteTheseCalls:(id)arg1;
- (void)deleteTheseCallsSync:(id)arg1;
- (id)featureFlags;
- (id)fetchRecentCallsSyncWithCoalescing:(bool)arg1;
- (bool)finishedLoadingAllCalls;
- (void)flush;
- (bool)generateSyncTransactions;
- (id)getLimitsDictionary;
- (id)getLimitsDictionaryForPrivateHeader;
- (void)handleCallHistoryContactStoreChangedInternalNotification:(id)arg1;
- (void)handleCallHistoryDatabaseChangedInternalNotification:(id)arg1;
- (id)init;
- (id)initWithContactStore:(id)arg1;
- (id)initWithContactStore:(id)arg1 featureFlags:(id)arg2 protectedAppProvider:(id)arg3 queue:(id)arg4;
- (id)initWithFetchingLimitsDictionary:(id)arg1 andCoalescingStrategy:(id)arg2 andPostFetchingPredicate:(id)arg3 withQueue:(id)arg4;
- (id)initWithQueue:(id)arg1;
- (id)latestCallMatchingNormalizedRemoteParticipantHandleValues:(id)arg1;
- (id)latestCallMatchingPredicate:(id)arg1;
- (id)latestRecentCallMatchingPredicate:(id)arg1;
- (id)limitingCallKinds;
- (unsigned int)limitingCallTypes;
- (id)limitingEndDate;
- (id)limitingStartDate;
- (id)loadOlderRecentCalls;
- (id)loadOlderRecentCallsSyncWithCoalescing:(bool)arg1;
- (id)loadOlderRecentCallsWithPredicate:(id)arg1;
- (void)markAllCallsAsReadWithPredicate:(id)arg1;
- (long long)numberOfUnseenMissedCalls;
- (id)phoneBookManager;
- (id)postFetchingPredicate;
- (id)preFetchingPredicate;
- (id)protectedAppProvider;
- (void)protectedAppsChanged;
- (id)protectedBundleIDsExcludingCurrentProcess;
- (bool)reCoalesce;
- (id)recentCalls;
- (id)recentCallsWithPredicate:(id)arg1;
- (void)registerForNotifications;
- (void)resetCalls;
- (void)setAllowedProtectedAppBundleIDs:(id)arg1;
- (void)setCacheIsDirty:(bool)arg1;
- (void)setCoalescingStrategy:(id)arg1;
- (void)setDefaultInitValues;
- (void)setFinishedLoadingAllCalls:(bool)arg1;
- (void)setGenerateSyncTransactions:(bool)arg1;
- (void)setInitialLimitingCallKinds:(id)arg1;
- (void)setLimitingCallKinds:(id)arg1;
- (void)setLimitingCallKindsSync:(id)arg1;
- (void)setLimitingCallTypes:(unsigned int)arg1;
- (void)setLimitingCallTypesSync:(unsigned int)arg1;
- (void)setLimitingEndDate:(id)arg1;
- (void)setLimitingStartDate:(id)arg1;
- (void)setNumberOfUnseenMissedCalls:(long long)arg1;
- (void)setOutgoingLocalParticipantUUID:(id)arg1 forRecentCallsMatchingPredicate:(id)arg2;
- (void)setPostFetchingPredicate:(id)arg1;
- (void)setPreFetchingPredicate:(id)arg1;
- (void)setReCoalesce:(bool)arg1;
- (long long)setRead:(bool)arg1 forCallsWithPredicate:(id)arg2;
- (void)setRead:(bool)arg1 forCallsWithPredicate:(id)arg2 completion:(id /* block */)arg3;
- (void)setRecentCalls:(id)arg1;
- (void)setShouldLoadOlderCalls:(bool)arg1;
- (void)setShowsFaceTimeAudioCalls:(bool)arg1;
- (void)setShowsFaceTimeVideoCalls:(bool)arg1;
- (void)setShowsProtectedApps:(bool)arg1;
- (void)setShowsTelephonyCalls:(bool)arg1;
- (void)setSyncManager:(id)arg1;
- (void)setUncoalescedRecentCalls:(id)arg1;
- (void)setUncoalescedUnFilteredRecentCalls:(id)arg1;
- (bool)shouldLoadOlderCalls;
- (bool)showsFaceTimeAudioCalls;
- (bool)showsFaceTimeVideoCalls;
- (bool)showsProtectedApps;
- (bool)showsTelephonyCalls;
- (id)syncManager;
- (id)unCoalesceCall:(id)arg1;
- (id)uncoalescedRecentCallsSync;
- (id)uncoalescedUnFilteredRecentCalls;
- (void)updateAutoAnsweredReasonFor:(id)arg1 with:(long long)arg2;
- (void)updateBytesOfDataUsedFor:(id)arg1 with:(id)arg2;
- (void)updateEmergencyMediaItemFor:(id)arg1 with:(id)arg2;
- (void)updateMessageStatusFor:(id)arg1 with:(id)arg2;

// Image: /System/Library/PrivateFrameworks/SiriPhoneIntents.framework/SiriPhoneIntents

+ (id)siriManagerForIntentType:(Class)arg1;

@end
