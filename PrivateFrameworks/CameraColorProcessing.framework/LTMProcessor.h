/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraColorProcessing.framework/CameraColorProcessing
 */

@interface LTMProcessor : NSObject <LTMImageBufferProcessor> {
    unsigned long long  _allocatorForceSize;
    bool  _allocatorSetupComplete;
    bool  _allocatorWireMemory;
    struct sLtmComputeInput { 
        float localHist[3072]; 
        float averageLocalHist[64]; 
        float globalHist[1024]; 
        float tMaxArray[48]; 
        float nLumArray[48]; 
        float thumbnailHist[64]; 
        float thumbnailHistEV0[64]; 
        float thumbnailLumaHist[65]; 
        float faceWeightForTone[48]; 
        float sceneLux; 
        float bin0Ratio; 
        float pixelCountRatio; 
        float exposureRatio; 
        float exposureBias; 
        float preBiasExposureRatio; 
        float faceExposureRatio; 
        float darkExposureRatio; 
        float luminanceRatio; 
        float flareScale; 
        float rGainRatio; 
        float bGainRatio; 
        unsigned short gamutSizeIndex; 
        float ccm[9]; 
        float ccmWeights[192]; 
        float ccmMixFactor; 
        float eit; 
        float darkEit; 
        bool LTMHazeCorrectionOff; 
        bool useBt709; 
        float ltcGridScaleLogLumaThumb[48]; 
        float faceBiasScaler; 
    }  _computeInputs;
    struct sLtmComputeMeta { 
        bool useLinearLTCs; 
        bool useSpatialCCM; 
        bool useGlobalCCM; 
        bool useDigitalFlash; 
        bool useFlash; 
        int gammaCurve; 
        bool updateMixLUT; 
        int levelSmoothNumPasses; 
        float levelSmoothCenterWeight; 
        unsigned char channel; 
        struct LTMTuning { 
            float histDampingExponentHighlight; 
            float histDampingExponentMax; 
            float hmaxHeadroom; 
            float maxPaddingRange; 
            float dispRangeActiveRatio; 
            float sceneBlackRatio; 
            float sceneBlackRatioDark; 
            float sceneBgOffset; 
            float desatStrength; 
            float minFlareDark; 
            float shadowSuppressBase; 
            float shadowSuppressMax; 
            float minSceneLux; 
            float histSmoothingMax; 
            float smoothingStrength; 
            float dispRangeDarkRatio; 
            float sceneModelSmoothing; 
            float nonFaceRatioFloor; 
            float fstart; 
            float shadowDesat; 
            float darkSceneLux; 
            float ambientViewingLux; 
            float ambientViewingChromaticityX; 
            float ambientViewingChromaticityY; 
            float sceneBlackMax; 
            float dispLum; 
            float dispBlack; 
        } tuningParametersOverride[4]; 
        bool useTuningParametersOverride; 
    }  _computeInputsMetadata;
    LTMComputeRef * _computeLTM;
    struct sLtmComputeOutput { 
        float LTC[3120]; 
        float averageLTC[65]; 
        float globalLUT[257]; 
        float rgbToneCurve[257]; 
        float spatialCCM[5184]; 
        float WMixLUT[257]; 
        float midLuminance; 
        unsigned long long eit; 
        float encodedExpRatio; 
        unsigned int bWMixLUTUpdated : 1; 
        unsigned int bCCMUpdated : 1; 
        unsigned int bLTMUpdated : 1; 
        unsigned int bGlobalLUTUpdated : 1; 
        unsigned int bRgbToneCurveUpdated : 1; 
        unsigned int rsvd : 3; 
    }  _computeOutput;
    struct sRefDriverInputs { 
        bool HROn; 
        unsigned short hrGainDownRatio; 
        unsigned int exposureTime; 
        union uBTColorEntry16 { 
            unsigned short v16; 
            struct uBT88 { 
                unsigned char fractional; 
                unsigned char integer; 
            } v88; 
        } gainAnal; 
        unsigned int gainDigi; 
        float hardIspDGain; 
        float softIspDGain; 
        unsigned short expBias; 
        unsigned short realizedExpBias; 
        unsigned short hdrRatio; 
        unsigned short ev0Ratio; 
        unsigned int overflowDGain; 
        float faceExpRatioFiltered; 
        unsigned short panoExpRatio; 
        bool bLTMSingleFrameMode; 
        unsigned char ltmProcMode; 
        unsigned char bracketingMode; 
        unsigned int bracketingExpRatio; 
        union uBTColorEntry16 { 
            unsigned short v16; 
            struct uBT88 { 
                unsigned char fractional; 
                unsigned char integer; 
            } v88; 
        } gainDigiSensor; 
        float luxLevel; 
        bool useSpatialCCM; 
        unsigned char channel; 
        bool flashStatus; 
        bool isHLGMode; 
        float LTMGridConfigWidth; 
        float LTMGridConfigHeight; 
        float LTMGridConfigX; 
        float LTMGridConfigY; 
        unsigned short flashMixPercentage[512]; 
        float flashProjMixWeighting; 
        struct sBTRect { 
            int x; 
            int y; 
            unsigned int width; 
            unsigned int height; 
        } tileStatsRegionInRaw; 
        struct sAWBColorCorrectionMatrix_local { 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } coeff[9]; 
        } ccm; 
        bool isLEDMainFlashforAWB; 
        struct sBTRGGB16 { 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } r; 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } gr; 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } gb; 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } b; 
        } awbGains; 
        struct sBTRGGB16 { 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } r; 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } gr; 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } gb; 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } b; 
        } awbGainsSkinOnly; 
        struct sBTRGGB16 { 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } r; 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } gr; 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } gb; 
            union uBTColorEntry16 { 
                unsigned short v16; 
                struct uBT88 { 
                    unsigned char fractional; 
                    unsigned char integer; 
                } v88; 
            } b; 
        } awbGainsFlashProj; 
        unsigned int fdAWBChistMixFactor; 
        unsigned char awbColorspace; 
        struct sFaceInfo { 
            struct sCIspFDRect { 
                int x; 
                int y; 
                unsigned int width; 
                unsigned int height; 
            } rectArray[10]; 
            unsigned int numFaces; 
        } faceInfo; 
        bool forceDisableFaceBoost; 
        int gammaCurve; 
        bool useHighlightCompression; 
        bool useAdaptiveHighlightCompression; 
        float highlightCompressionGain; 
        bool isSIFRFrame; 
        bool LTMHazeCorrectionOff; 
        bool useBt709; 
        bool useHazeCorrection; 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*hazeCorrection; 
    }  _driverInputMetadata;
    LTMDriverRef * _driverLTM;
    bool  _enablePreLTMHazeCorrection;
    CMIExternalMemoryResource * _externalMemoryResource;
    LTMGeometryData * _geometryData;
    HazeEstimation * _hazeEstimator;
    bool  _isHazeEstimationEnabled;
    <MTLComputePipelineState> * _ltmApplyGlobalCCM;
    <MTLComputePipelineState> * _ltmCompressHighlight;
    <MTLComputePipelineState> * _ltmDehaze;
    <MTLComputePipelineState> * _ltmDownsampleRGBAFloatToRGB;
    <MTLComputePipelineState> * _ltmDownsampleYCbCrToRGB;
    <LTMIBPParams> * _ltmParams;
    LTMExtractMetadata * _metadataExtractor;
    <MTLCommandQueue> * _metalCommandQueue;
    FigMetalContext * _metalContext;
    struct sCLRProcHITHStat { 
        unsigned int thumbnailWindow; 
        unsigned short thumbnailEnable[6]; 
        unsigned short thumbnailDownsampleX; 
        unsigned short thumbnailDownsampleY; 
        unsigned int thumbnailTotal; 
        unsigned int localHistWindow; 
        unsigned short localHistEnable; 
        unsigned short localHistBinSize; 
        unsigned short localHistBlockSizeX; 
        unsigned short localHistBlockSizeY; 
        unsigned short localHistStrideX; 
        unsigned short localHistStrideY; 
        unsigned short localHistNumHorBlocks; 
        unsigned short localHistNumVerBlocks; 
        unsigned char localHistCountBitShift; 
        unsigned short globalHistEnable; 
        unsigned int globalHistWindow; 
        void *thumbnailStat; 
        unsigned int thumbnailOffset; 
        unsigned int thumbnailStatSize; 
        void *localHistStat; 
        unsigned int localHistOffset; 
        unsigned int localHistStatSize; 
        void *globalHistStat; 
        unsigned int globalHistOffset; 
        unsigned int globalHistStatSize; 
        unsigned int gridOriginX; 
        unsigned int gridOriginY; 
        unsigned int localHistogramOriginalTilePixelCount; 
        unsigned int localHistLowThreshold; 
        unsigned int localHistHighThreshold; 
    }  _procHITHStat;
    NSDictionary * cameraInfoByPortType;
    unsigned int  globalHistStat;
    unsigned short  localHistStat;
    unsigned short  thumbnailStat;
    NSDictionary * tuningParameters;
}

@property (nonatomic, retain) NSDictionary *cameraInfoByPortType;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CMIExternalMemoryResource *externalMemoryResource; /* unknown property attribute: ? */
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <LTMIBPParams> *ltmParams;
@property (nonatomic, retain) <MTLCommandQueue> *metalCommandQueue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsExternalMemoryResource; /* unknown property attribute: ? */
@property (nonatomic, retain) NSDictionary *tuningParameters;

- (void).cxx_destruct;
- (id)_applyGlobalCCM:(id)arg1 globalCCM:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; })arg2;
- (id)_compressHighlight:(id)arg1;
- (id)_dehaze:(void *)arg1 hazeValues:(void *)arg2; // needs 2 arg types, found 1: id
- (bool)_isOptimized:(int)arg1;
- (void)_prepareHighlightCompressionCurve;
- (void)_readDefaultsDehaze;
- (void)_readDefaultsLTMparam;
- (void)_readDefaultsMetalAllocator;
- (id)cameraInfoByPortType;
- (id)createIntermediateRGBAMetalTexture:(id)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3;
- (id)createLTMComputer;
- (id)createLTMInTextureFromLuma:(id)arg1 chroma:(id)arg2;
- (id)createLTMInTextureFromRGBAFloatTex:(id)arg1;
- (int)createShaders:(id)arg1;
- (id)externalMemoryResource;
- (int)finishProcessing;
- (id)generateLinearRGBATexture;
- (struct sCLRProcHITHStat { unsigned int x1; unsigned short x2[6]; unsigned short x3; unsigned short x4; unsigned int x5; unsigned int x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13; unsigned short x14; unsigned char x15; unsigned short x16; unsigned int x17; void *x18; unsigned int x19; unsigned int x20; void *x21; unsigned int x22; unsigned int x23; void *x24; unsigned int x25; unsigned int x26; unsigned int x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; }*)getHITHStat;
- (int)getLTMTuningFromTuningParams:(struct LTMTuning { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; float x27; }*)arg1 from:(id)arg2;
- (id)initWithCommandQueue:(id)arg1;
- (id)ltmParams;
- (id)metalCommandQueue;
- (int)prepareToProcess:(unsigned int)arg1;
- (int)prewarm;
- (int)process;
- (int)purgeResources;
- (int)resetState;
- (void)setCameraInfoByPortType:(id)arg1;
- (int)setDehazeTuningParamsFrom:(id)arg1;
- (void)setExternalMemoryResource:(id)arg1;
- (int)setLTMComputeTuningParams:(struct sRefDriverInputs { bool x1; unsigned short x2; unsigned int x3; union uBTColorEntry16 { unsigned short x_4_1_1; struct uBT88 { unsigned char x_2_2_1; unsigned char x_2_2_2; } x_4_1_2; } x4; unsigned int x5; float x6; float x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned int x12; float x13; unsigned short x14; bool x15; unsigned char x16; unsigned char x17; unsigned int x18; union uBTColorEntry16 { unsigned short x_19_1_1; struct uBT88 { unsigned char x_2_2_1; unsigned char x_2_2_2; } x_19_1_2; } x19; float x20; bool x21; unsigned char x22; bool x23; bool x24; float x25; float x26; float x27; float x28; unsigned short x29[512]; float x30; struct sBTRect { int x_31_1_1; int x_31_1_2; unsigned int x_31_1_3; unsigned int x_31_1_4; } x31; struct sAWBColorCorrectionMatrix_local { union uBTColorEntry16 { unsigned short x_1_2_1; struct uBT88 { unsigned char x_2_3_1; unsigned char x_2_3_2; } x_1_2_2; } x_32_1_1[9]; } x32; bool x33; struct sBTRGGB16 { union uBTColorEntry16 { unsigned short x_1_2_1; struct uBT88 { unsigned char x_2_3_1; unsigned char x_2_3_2; } x_1_2_2; } x_34_1_1; union uBTColorEntry16 { unsigned short x_2_2_1; struct uBT88 { unsigned char x_2_3_1; unsigned char x_2_3_2; } x_2_2_2; } x_34_1_2; union uBTColorEntry16 { unsigned short x_3_2_1; struct uBT88 { unsigned char x_2_3_1; unsigned char x_2_3_2; } x_3_2_2; } x_34_1_3; union uBTColorEntry16 { unsigned short x_4_2_1; struct uBT88 { unsigned char x_2_3_1; unsigned char x_2_3_2; } x_4_2_2; } x_34_1_4; } x34; }*)arg1 from:(id)arg2;
- (int)setLTMTuningParamsFrom:(id)arg1;
- (void)setMetalCommandQueue:(id)arg1;
- (void)setTuningParameters:(id)arg1;
- (int)setup;
- (id)tuningParameters;

@end
