/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit
 */

@interface CEKSlider2D : UIControl {
    bool  __active;
    UIImageView * __backgroundImageView;
    UIView * __backgroundSnapshotContainerView;
    UIView * __backgroundSnapshotView1;
    UIView * __backgroundSnapshotView2;
    UIView * __defaultValueIndicator;
    UIView * __gradientsView;
    UIImageView * __gridView;
    UILongPressGestureRecognizer * __pressGestureRecognizer;
    CEKSelectionFeedbackGenerator * __selectionFeedbackGenerator;
    UIView * __valueIndicator;
    UIImage * _backgroundImage;
    double  _cornerRadius;
    struct CGPoint { 
        double x; 
        double y; 
    }  _defaultValue;
    bool  _pulsingValueIndicator;
    bool  _snapTouchesToDefaultValue;
    struct CGPoint { 
        double x; 
        double y; 
    }  _value;
}

@property (nonatomic) bool _active;
@property (nonatomic, readonly) UIImageView *_backgroundImageView;
@property (nonatomic, readonly) UIView *_backgroundSnapshotContainerView;
@property (nonatomic, readonly) UIView *_backgroundSnapshotView1;
@property (nonatomic, readonly) UIView *_backgroundSnapshotView2;
@property (nonatomic, readonly) UIView *_defaultValueIndicator;
@property (nonatomic, readonly) UIView *_gradientsView;
@property (nonatomic, readonly) UIImageView *_gridView;
@property (nonatomic, readonly) UILongPressGestureRecognizer *_pressGestureRecognizer;
@property (nonatomic, readonly) CEKSelectionFeedbackGenerator *_selectionFeedbackGenerator;
@property (nonatomic, readonly) UIView *_valueIndicator;
@property (nonatomic, retain) UIImage *backgroundImage;
@property (nonatomic) double cornerRadius;
@property (nonatomic) struct CGPoint { double x1; double x2; } defaultValue;
@property (getter=isPulsingValueIndicator, nonatomic) bool pulsingValueIndicator;
@property (nonatomic) bool snapTouchesToDefaultValue;
@property (nonatomic) struct CGPoint { double x1; double x2; } value;

+ (id)backgroundImageWithImage:(id)arg1;

- (void).cxx_destruct;
- (bool)_active;
- (id)_backgroundImageView;
- (id)_backgroundSnapshotContainerView;
- (id)_backgroundSnapshotView1;
- (id)_backgroundSnapshotView2;
- (id)_blurFilter;
- (void)_createGradientsViewIfNecessary;
- (id)_createGridImageWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)_defaultValueIndicator;
- (void)_destroyGradientsViewIfNecessary;
- (id)_gradientsView;
- (id)_gridView;
- (void)_handlePressGesture:(id)arg1;
- (struct CGPoint { double x1; double x2; })_normalizedViewValueForValue:(struct CGPoint { double x1; double x2; })arg1;
- (void)_performFeedback;
- (void)_prepareFeedback;
- (id)_pressGestureRecognizer;
- (id)_selectionFeedbackGenerator;
- (void)_setActive:(bool)arg1 animated:(bool)arg2;
- (void)_setValue:(struct CGPoint { double x1; double x2; })arg1 shouldNotify:(bool)arg2 animated:(bool)arg3;
- (bool)_shouldPerformFeedback;
- (void)_startScalingWithScale:(double)arg1 duration:(double)arg2 repeatCount:(float)arg3 timingFunction:(id)arg4;
- (void)_stopScalingWithDuration:(double)arg1;
- (void)_updateGradientViews;
- (struct CGPoint { double x1; double x2; })_valueForNormalizedViewValue:(struct CGPoint { double x1; double x2; })arg1;
- (id)_valueIndicator;
- (bool)_wantsGradientLayers;
- (id)backgroundImage;
- (double)cornerRadius;
- (struct CGPoint { double x1; double x2; })defaultValue;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isPulsingValueIndicator;
- (void)layoutSubviews;
- (void)setBackgroundAsSnapshotOfView:(id)arg1;
- (void)setBackgroundFromExistingSlider2D:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setDefaultValue:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPulsingValueIndicator:(bool)arg1;
- (void)setSnapTouchesToDefaultValue:(bool)arg1;
- (void)setValue:(struct CGPoint { double x1; double x2; })arg1;
- (void)setValue:(struct CGPoint { double x1; double x2; })arg1 animated:(bool)arg2;
- (void)set_active:(bool)arg1;
- (bool)snapTouchesToDefaultValue;
- (struct CGPoint { double x1; double x2; })value;

@end
