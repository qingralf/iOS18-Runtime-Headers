/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraOverlayServices.framework/CameraOverlayServices
 */

@interface CAMOverlayDiscreteFloatRange : NSObject <CAMOverlayDiscreteValueRange, CAMOverlayFloatValueRange, NSSecureCoding> {
    NSArray * __explicitStorage;
    double  __implicitStep;
    unsigned long long  _count;
    double  _maximum;
    double  _minimum;
}

@property (nonatomic, readonly, copy) NSArray *_explicitStorage;
@property (nonatomic, readonly) double _implicitStep;
@property (nonatomic, readonly) unsigned long long count;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (getter=isDiscrete, nonatomic, readonly) bool discrete;
@property (getter=isFloatingPoint, nonatomic, readonly) bool floatingPoint;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double maximum;
@property (nonatomic, readonly) double minimum;
@property (nonatomic, readonly) unsigned long long rangeType;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long valueType;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_explicitStorage;
- (double)_implicitStep;
- (bool)containsValue:(id)arg1;
- (unsigned long long)count;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)indexOfValue:(id)arg1;
- (unsigned long long)indexOfValueClosestToValue:(double)arg1;
- (unsigned long long)indexOfValueGreaterThanValue:(double)arg1;
- (unsigned long long)indexOfValueLessThanValue:(double)arg1;
- (id)indexesOfValuesInRange:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithMinimum:(double)arg1 maximum:(double)arg2 step:(double)arg3;
- (id)initWithValues:(id)arg1;
- (bool)isDiscrete;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToRange:(id)arg1;
- (bool)isFloatingPoint;
- (bool)isValueExpectedType:(id)arg1;
- (double)maximum;
- (double)minimum;
- (unsigned long long)rangeType;
- (id)valueAtIndex:(unsigned long long)arg1;
- (double)valueClosestToValue:(double)arg1;
- (unsigned long long)valueType;

@end
