/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraOverlayServices.framework/CameraOverlayServices
 */

@interface CAMOverlayServiceSlider : CAMAbstractOverlayServiceControl {
    NSString * _captureDeviceUniqueID;
    NSString * _captureSessionUniqueID;
    <CAMOverlayValueRange> * _displayValueRange;
    NSArray * _displayValues;
    NSDictionary * _displayValuesByValue;
    CAMOverlayDiscreteFloatRange * _primaryValues;
    long long  _rangeScale;
    long long  _sliderType;
    NSString * _valueFormat;
    <CAMOverlayFloatValueRange> * _valueRange;
    NSArray * _values;
}

@property (nonatomic, readonly) NSString *captureDeviceUniqueID;
@property (nonatomic, readonly) NSString *captureSessionUniqueID;
@property (nonatomic, retain) NSDictionary *displayValuesByValue;
@property (nonatomic, readonly) CAMOverlayDiscreteFloatRange *primaryValues;
@property (nonatomic, readonly) long long rangeScale;
@property (nonatomic, readonly) long long sliderType;
@property (nonatomic, copy) NSString *valueFormat;
@property (nonatomic, readonly) <CAMOverlayFloatValueRange> *valueRange;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_initWithIdentifier:(id)arg1 sliderType:(long long)arg2 captureUniqueID:(id)arg3 zoomRange:(id)arg4;
- (id)captureDeviceUniqueID;
- (id)captureSessionUniqueID;
- (long long)controlType;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)displayValueRange;
- (id)displayValues;
- (id)displayValuesByValue;
- (void)encodeWithCoder:(id)arg1;
- (id)initPhotoZoomSliderWithIdentifier:(id)arg1 maximumZoomFactor:(double)arg2 captureDeviceUniqueID:(id)arg3;
- (id)initVideoZoomSliderWithIdentifier:(id)arg1 maximumZoomFactor:(double)arg2 captureDeviceUniqueID:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 sliderType:(long long)arg2 captureUniqueID:(id)arg3;
- (id)initWithIdentifier:(id)arg1 title:(id)arg2 imageName:(id)arg3 rangeScale:(long long)arg4 valueRange:(id)arg5 primaryValues:(id)arg6;
- (bool)isContentEqual:(id)arg1;
- (bool)isEnabled;
- (id)primaryValues;
- (long long)rangeScale;
- (void)setDisplayValuesByValue:(id)arg1;
- (void)setValueFormat:(id)arg1;
- (long long)sliderType;
- (id)sliderUnpackingDisplayValuesIfNeeded;
- (id)sliderWithPrimaryValues:(id)arg1;
- (id)updateWithFloatValue:(float)arg1;
- (id)updateWithRecording:(bool)arg1;
- (id)updateWithStyleDictionary:(id)arg1;
- (id)valueFormat;
- (id)valueRange;
- (id)values;

@end
