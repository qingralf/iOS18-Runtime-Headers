/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI
 */

@interface CAMCaptureGraphConfiguration : NSObject {
    long long  _aspectRatioCrop;
    unsigned long long  _audioConfiguration;
    bool  _captureMirrored;
    long long  _colorSpace;
    NSArray * _customLensGroup;
    long long  _device;
    bool  _enableAutoFPSVideo;
    bool  _enableContentAwareDistortionCorrection;
    bool  _enableDepthSuggestion;
    bool  _enableRAWCaptureIfSupported;
    bool  _enableResponsiveShutter;
    bool  _enableStereoVideoCapture;
    bool  _enableZoomPIP;
    long long  _macroMode;
    long long  _maximumPhotoResolution;
    bool  _mixAudioWithOthers;
    long long  _mode;
    long long  _photoEncodingBehavior;
    long long  _photoQualityPrioritization;
    bool  _prefersHDR10BitVideo;
    unsigned long long  _previewConfiguration;
    NSArray * _previewFilters;
    long long  _previewSampleBufferVideoFormat;
    <CEKCaptureStyle> * _previewSemanticStyle;
    unsigned long long  _semanticStyleSupport;
    bool  _suspendLivePhotoCapture;
    bool  _trueVideoEnabled;
    long long  _videoConfiguration;
    long long  _videoEncodingBehavior;
    bool  _videoHDRSuspended;
    long long  _videoStabilizationStrength;
    CAMVideoThumbnailOutputConfiguration * _videoThumbnailOutputConfiguration;
    bool  _windNoiseRemovalEnabled;
}

@property (nonatomic, readonly) long long aspectRatioCrop;
@property (nonatomic, readonly) unsigned long long audioConfiguration;
@property (getter=isCaptureMirrored, nonatomic, readonly) bool captureMirrored;
@property (nonatomic, readonly) long long colorSpace;
@property (nonatomic, readonly) NSArray *customLensGroup;
@property (nonatomic, readonly) long long device;
@property (nonatomic, readonly) long long devicePosition;
@property (nonatomic, readonly) bool enableAutoFPSVideo;
@property (nonatomic, readonly) bool enableContentAwareDistortionCorrection;
@property (nonatomic, readonly) bool enableDepthSuggestion;
@property (nonatomic, readonly) bool enableRAWCaptureIfSupported;
@property (nonatomic, readonly) bool enableResponsiveShutter;
@property (nonatomic, readonly) bool enableStereoVideoCapture;
@property (nonatomic, readonly) bool enableZoomPIP;
@property (nonatomic, readonly) long long macroMode;
@property (nonatomic, readonly) long long maximumPhotoResolution;
@property (nonatomic, readonly) bool mixAudioWithOthers;
@property (nonatomic, readonly) long long mode;
@property (nonatomic, readonly) long long photoEncodingBehavior;
@property (nonatomic, readonly) long long photoQualityPrioritization;
@property (nonatomic, readonly) bool prefersHDR10BitVideo;
@property (nonatomic, readonly) unsigned long long previewConfiguration;
@property (nonatomic, readonly) NSArray *previewFilters;
@property (nonatomic, readonly) long long previewSampleBufferVideoFormat;
@property (nonatomic, readonly) <CEKCaptureStyle> *previewSemanticStyle;
@property (nonatomic, readonly) unsigned long long semanticStyleSupport;
@property (nonatomic, readonly) bool suspendLivePhotoCapture;
@property (nonatomic, readonly) bool trueVideoEnabled;
@property (nonatomic, readonly) long long videoConfiguration;
@property (nonatomic, readonly) long long videoEncodingBehavior;
@property (getter=isVideoHDRSuspended, nonatomic, readonly) bool videoHDRSuspended;
@property (nonatomic, readonly) long long videoStabilizationStrength;
@property (nonatomic, readonly) CAMVideoThumbnailOutputConfiguration *videoThumbnailOutputConfiguration;
@property (nonatomic, readonly) bool windNoiseRemovalEnabled;

- (void).cxx_destruct;
- (long long)aspectRatioCrop;
- (unsigned long long)audioConfiguration;
- (long long)colorSpace;
- (id)completeDescription;
- (id)customLensGroup;
- (id)description;
- (long long)device;
- (id)deviceDescription;
- (long long)devicePosition;
- (id)devicePositionDescription;
- (bool)enableAutoFPSVideo;
- (bool)enableContentAwareDistortionCorrection;
- (bool)enableDepthSuggestion;
- (bool)enableRAWCaptureIfSupported;
- (bool)enableResponsiveShutter;
- (bool)enableStereoVideoCapture;
- (bool)enableZoomPIP;
- (id)initWithCaptureMode:(long long)arg1 captureDevice:(long long)arg2 macroMode:(long long)arg3 videoConfiguration:(long long)arg4 audioConfiguration:(unsigned long long)arg5 mixAudioWithOthers:(bool)arg6 windNoiseRemovalEnabled:(bool)arg7 previewConfiguration:(unsigned long long)arg8 previewSampleBufferVideoFormat:(long long)arg9 previewFilters:(id)arg10 videoThumbnailOutputConfiguration:(id)arg11 photoEncodingBehavior:(long long)arg12 videoEncodingBehavior:(long long)arg13 enableAutoFPSVideo:(bool)arg14 videoHDRSuspended:(bool)arg15 aspectRatioCrop:(long long)arg16 photoQualityPrioritization:(long long)arg17 captureMirrored:(bool)arg18 enableRAWCaptureIfSupported:(bool)arg19 semanticStyleSupport:(unsigned long long)arg20 previewSemanticStyle:(id)arg21 enableContentAwareDistortionCorrection:(bool)arg22 enableResponsiveShutter:(bool)arg23 suspendLivePhotoCapture:(bool)arg24 videoStabilizationStrength:(long long)arg25 maximumPhotoResolution:(long long)arg26 colorSpace:(long long)arg27 enableDepthSuggestion:(bool)arg28 enableZoomPIP:(bool)arg29 customLensGroup:(id)arg30 enableStereoVideoCapture:(bool)arg31 trueVideoEnabled:(bool)arg32 prefersHDR10BitVideo:(bool)arg33;
- (bool)isCaptureMirrored;
- (bool)isVideoHDRSuspended;
- (long long)macroMode;
- (long long)maximumPhotoResolution;
- (bool)mixAudioWithOthers;
- (long long)mode;
- (id)modeDescription;
- (long long)photoEncodingBehavior;
- (long long)photoQualityPrioritization;
- (bool)prefersHDR10BitVideo;
- (unsigned long long)previewConfiguration;
- (id)previewFilters;
- (long long)previewSampleBufferVideoFormat;
- (id)previewSemanticStyle;
- (unsigned long long)semanticStyleSupport;
- (id)shortDescription;
- (bool)suspendLivePhotoCapture;
- (bool)trueVideoEnabled;
- (long long)videoConfiguration;
- (long long)videoEncodingBehavior;
- (long long)videoStabilizationStrength;
- (id)videoThumbnailOutputConfiguration;
- (bool)windNoiseRemovalEnabled;

@end
