/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI
 */

@interface CAMControlDrawer : UIView <CAMAccessibilityHUDItemProvider, CAMBarsAccessibilityHUDManagerGestureProvider, CAMControlDrawerMenuButtonDelegate, UIScrollViewDelegate> {
    NSMutableDictionary * __controlMap;
    UIScrollView * __scrollView;
    CEKApertureSlider * _apertureSlider;
    <CAMControlDrawerDelegate> * _delegate;
    CAMControlDrawerButton<CAMControlDrawerExpandableButton> * _expandedControl;
    CAMExposureSlider * _exposureSlider;
    CEKWheelScrubberView * _filterScrubberView;
    CEKSlider * _intensitySlider;
    long long  _layoutStyle;
    CAMLowLightSlider * _lowLightSlider;
    long long  _orientation;
    <CAMControlDrawerPresentationDelegate> * _presentationDelegate;
    CAMSemanticStyleControl * _semanticStyleControl;
    NSArray * _visibleControlTypes;
}

@property (nonatomic, readonly) NSMutableDictionary *_controlMap;
@property (nonatomic, readonly) UIScrollView *_scrollView;
@property (nonatomic, readonly) CAMDrawerApertureButton *apertureButton;
@property (nonatomic, readonly) CEKApertureSlider *apertureSlider;
@property (getter=isApertureSliderExpanded, nonatomic, readonly) bool apertureSliderExpanded;
@property (nonatomic, readonly) CAMDrawerAspectRatioButton *aspectRatioButton;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <CAMControlDrawerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) CAMControlDrawerButton<CAMControlDrawerExpandableButton> *expandedControl;
@property (nonatomic, readonly) long long expandedControlType;
@property (nonatomic, readonly) CAMDrawerExposureButton *exposureButton;
@property (nonatomic, readonly) CAMExposureSlider *exposureSlider;
@property (getter=isExposureSliderExpanded, nonatomic, readonly) bool exposureSliderExpanded;
@property (nonatomic, readonly) CAMDrawerFilterButton *filterButton;
@property (getter=isFilterScrubberExpanded, nonatomic, readonly) bool filterScrubberExpanded;
@property (nonatomic, readonly) CEKWheelScrubberView *filterScrubberView;
@property (nonatomic, readonly) CAMDrawerFlashButton *flashButton;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) CAMDrawerHDRButton *hdrButton;
@property (nonatomic, readonly) CAMDrawerIntensityButton *intensityButton;
@property (nonatomic, readonly) CEKSlider *intensitySlider;
@property (getter=isIntensitySliderExpanded, nonatomic, readonly) bool intensitySliderExpanded;
@property (nonatomic) long long layoutStyle;
@property (nonatomic, readonly) CAMDrawerLivePhotoButton *livePhotoButton;
@property (nonatomic, readonly) CAMDrawerLowLightButton *lowLightButton;
@property (nonatomic, readonly) CAMLowLightSlider *lowLightSlider;
@property (getter=isLowLightSliderExpanded, nonatomic, readonly) bool lowLightSliderExpanded;
@property (nonatomic) long long orientation;
@property (nonatomic) <CAMControlDrawerPresentationDelegate> *presentationDelegate;
@property (nonatomic, readonly) CAMDrawerProResButton *proResButton;
@property (nonatomic, readonly) CAMDrawerRAWButton *rawButton;
@property (nonatomic, readonly) CAMDrawerSemanticStyleButton *semanticStyleButton;
@property (nonatomic, readonly) CAMSemanticStyleControl *semanticStyleControl;
@property (getter=isSemanticStyleControlExpanded, nonatomic, readonly) bool semanticStyleControlExpanded;
@property (nonatomic, readonly) CAMDrawerSharedLibraryButton *sharedLibraryButton;
@property (nonatomic, readonly) CAMDrawerSmartStyleButton *smartStyleButton;
@property (readonly) Class superclass;
@property (nonatomic, readonly) CAMDrawerTimerButton *timerButton;
@property (nonatomic, readonly) CAMDrawerVideoStabilizationButton *videoStabilizationButton;
@property (nonatomic, retain) NSArray *visibleControlTypes;

- (void).cxx_destruct;
- (void)_apertureSliderDidChangeValue;
- (void)_commonInitializationWithLayoutStyle:(long long)arg1;
- (double)_controlCenterSpacingForControlCount:(unsigned long long)arg1;
- (id)_controlMap;
- (id)_createControlForType:(long long)arg1;
- (void)_ensureVisibleControls;
- (void)_exposureSliderDidChangeValue;
- (void)_filterScrubberDidChangeValue;
- (void)_handleControlReleased:(id)arg1;
- (void)_handleControlValueChanged:(id)arg1;
- (void)_installControlIfNeededForType:(long long)arg1;
- (void)_intensitySliderDidChangeValue;
- (void)_iterateViewsForHUDManager:(id)arg1 withItemFoundBlock:(id /* block */)arg2;
- (void)_layoutApertureSlider;
- (void)_layoutExposureSlider;
- (void)_layoutFilterScrubberView;
- (void)_layoutFullWidthCustomView:(id)arg1 forAssociatedControl:(id)arg2 expanded:(bool)arg3;
- (void)_layoutFullWidthCustomView:(id)arg1 withAlignmentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 forAssociatedControl:(id)arg3 expanded:(bool)arg4;
- (void)_layoutIntensitySlider;
- (void)_layoutLowLightSlider;
- (void)_layoutScrubberView:(id)arg1 forAssociatedControl:(id)arg2 expanded:(bool)arg3;
- (void)_layoutSemanticStyleControl;
- (void)_layoutVisibleControlForType:(long long)arg1 visibleControlTypes:(id)arg2;
- (void)_loadApertureSliderIfNeeded;
- (void)_loadControlIfNeededForType:(long long)arg1;
- (void)_loadCustomUIIfNeededForControlType:(long long)arg1;
- (void)_loadExposureSliderIfNeeded;
- (void)_loadFilterScrubberIfNeeded;
- (void)_loadIntensitySliderIfNeeded;
- (void)_loadLowLightSliderIfNeeded;
- (void)_loadSemanticStyleControlIfNeeded;
- (void)_lowLightSliderDidChangeValue;
- (id)_scrollView;
- (struct CGSize { double x1; double x2; })_scrollingContentSizeForControlCount:(unsigned long long)arg1;
- (struct { double x1; double x2; })_scrubberGradientEdgeInsets;
- (void)_semanticStyleControlDidChangeValue;
- (void)_setExpandedControl:(id)arg1 animated:(bool)arg2 updatePreferredDrawerControl:(bool)arg3;
- (unsigned long long)_sliderFontStyle;
- (void)_updateControlsScaleAnimated:(bool)arg1;
- (void)_updateControlsVisibilityAnimated:(bool)arg1;
- (void)_updateExpansionInsetsForExpandableButton:(id)arg1;
- (double)_viewportLength;
- (unsigned long long)_viewportMaximumControlCount;
- (id)apertureButton;
- (id)apertureSlider;
- (id)aspectRatioButton;
- (id)buttonForType:(long long)arg1;
- (void)collapseExpandableButtonsAnimated:(bool)arg1 updatePreferredDrawerControl:(bool)arg2;
- (id)delegate;
- (void)expandControlForType:(long long)arg1 animated:(bool)arg2 updatePreferredDrawerControl:(bool)arg3;
- (void)expandableButton:(id)arg1 willChangeExpanded:(bool)arg2;
- (id)expandedControl;
- (long long)expandedControlType;
- (id)exposureButton;
- (id)exposureSlider;
- (id)filterButton;
- (id)filterScrubberView;
- (id)flashButton;
- (id)hdrButton;
- (id)hudItemForAccessibilityHUDManager:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithLayoutStyle:(long long)arg1;
- (id)intensityButton;
- (id)intensitySlider;
- (bool)isApertureSliderExpanded;
- (bool)isControlExpandedForType:(long long)arg1;
- (bool)isExposureSliderExpanded;
- (bool)isFilterScrubberExpanded;
- (bool)isIntensitySliderExpanded;
- (bool)isLowLightSliderExpanded;
- (bool)isSemanticStyleControlExpanded;
- (long long)layoutStyle;
- (void)layoutSubviews;
- (id)livePhotoButton;
- (id)lowLightButton;
- (id)lowLightSlider;
- (void)menuButtonDidSelectItem:(id)arg1;
- (long long)orientation;
- (id)presentationDelegate;
- (id)proResButton;
- (id)rawButton;
- (void)scrollViewDidScroll:(id)arg1;
- (void)selectedByAccessibilityHUDManager:(id)arg1;
- (id)semanticStyleButton;
- (id)semanticStyleControl;
- (void)setDelegate:(id)arg1;
- (void)setExpanded:(bool)arg1 forControlType:(long long)arg2 animated:(bool)arg3 updatePreferredDrawerControl:(bool)arg4;
- (void)setLayoutStyle:(long long)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 animated:(bool)arg2;
- (void)setPresentationDelegate:(id)arg1;
- (void)setVisibleControlTypes:(id)arg1;
- (void)setVisibleControlTypes:(id)arg1 animated:(bool)arg2;
- (id)sharedLibraryButton;
- (bool)shouldAccessibilityGestureBeginForHUDManager:(id)arg1;
- (id)smartStyleButton;
- (id)timerButton;
- (id)touchingRecognizersToCancel;
- (id)videoStabilizationButton;
- (id)visibleControlTypes;

@end
