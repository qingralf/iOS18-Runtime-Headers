/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI
 */

@interface CAMSystemOverlayView : UIView <CAMSystemOverlaySliderDelegate, CAMSystemOverlayVisibilityDelegate, CAMViewOrientable, CameraUI.OverlayMenuSliderDelegate, UIGestureRecognizerDelegate> {
    CEKFluidBehaviorSettings * __backgroundAnimationSettings;
    DRPDropletAnimationCoordinator * __backgroundAnimator;
    DRPDropletContextView * __backgroundContext;
    DRPDropletContainerView * __backgroundDroplet;
    bool  __backgroundHintNeedsReset;
    unsigned long long  __buttonStage;
    CAMutableMeshTransform * __dialEffectMesh;
    double  __dropletScale;
    UIView * __handleBarView;
    UIView * __hitTestingBackground;
    CAMSystemOverlayVisibility * __menuVisibility;
    UIPanGestureRecognizer * __panGestureRecognizer;
    CAFilter * __progressiveEdgeBlurFilter;
    CEKFluidBehaviorSettings * __scaleSettings;
    CAMScreenLuminanceObserverLayer * __screenLuminanceObserverLayer;
    unsigned long long  __sliderHideAnimationCount;
    UIViewFloatAnimatableProperty * __sliderPresentationProgress;
    UITapGestureRecognizer * __tapGestureRecognizer;
    UIGestureRecognizer * __touchingSliderGestureRecognizer;
    UILabel * __valueLabel;
    UIView * __valueLabelContainer;
    UIViewFloatAnimatableProperty * __valueLabelPresentationProgress;
    struct CGSize { 
        double width; 
        double height; 
    }  __valueTextSize;
    unsigned long long  _alignment;
    <CAMSystemOverlayViewDelegate> * _delegate;
    bool  _halfPressEnabled;
    bool  _handleBarVisible;
    _TtC8CameraUI17OverlayMenuSlider * _menu;
    long long  _orientation;
    CAMSystemOverlaySlider * _slider;
    long long  _sliderContent;
    bool  _sliderFeedbackDisabled;
    bool  _sliderPresented;
    CAMOverlaySliderState * _sliderState;
    UIView * _tipAnchor;
}

@property (nonatomic, readonly) CEKFluidBehaviorSettings *_backgroundAnimationSettings;
@property (setter=_setBackgroundAnimator:, nonatomic, retain) DRPDropletAnimationCoordinator *_backgroundAnimator;
@property (setter=_setBackgroundContext:, nonatomic, retain) DRPDropletContextView *_backgroundContext;
@property (setter=_setBackgroundContainer:, nonatomic, retain) DRPDropletContainerView *_backgroundDroplet;
@property (setter=_setBackgroundHintNeedsReset:, nonatomic) bool _backgroundHintNeedsReset;
@property (setter=_setButtonStage:, nonatomic) unsigned long long _buttonStage;
@property (nonatomic, readonly) CAMutableMeshTransform *_dialEffectMesh;
@property (nonatomic) double _dropletScale;
@property (setter=_setHandleBarView:, nonatomic, retain) UIView *_handleBarView;
@property (setter=_setHitTestingBackground:, nonatomic, retain) UIView *_hitTestingBackground;
@property (nonatomic, readonly) CAMSystemOverlayVisibility *_menuVisibility;
@property (setter=_setPanGestureRecognizer:, nonatomic, retain) UIPanGestureRecognizer *_panGestureRecognizer;
@property (nonatomic, readonly) CAFilter *_progressiveEdgeBlurFilter;
@property (nonatomic, readonly) CEKFluidBehaviorSettings *_scaleSettings;
@property (nonatomic, readonly) CAMScreenLuminanceObserverLayer *_screenLuminanceObserverLayer;
@property (setter=_setSliderHideAnimationCount:, nonatomic) unsigned long long _sliderHideAnimationCount;
@property (setter=_setSliderPresentationProgress:, nonatomic, retain) UIViewFloatAnimatableProperty *_sliderPresentationProgress;
@property (setter=_setTapGestureRecognizer:, nonatomic, retain) UITapGestureRecognizer *_tapGestureRecognizer;
@property (setter=_setTouchingSliderGestureRecognizer:, nonatomic, retain) UIGestureRecognizer *_touchingSliderGestureRecognizer;
@property (setter=_setValueLabel:, nonatomic, retain) UILabel *_valueLabel;
@property (setter=_setValueLabelContainer:, nonatomic, retain) UIView *_valueLabelContainer;
@property (setter=_setValueLabelPresentationProgress:, nonatomic, retain) UIViewFloatAnimatableProperty *_valueLabelPresentationProgress;
@property (setter=_setValueTextSize:, nonatomic) struct CGSize { double x1; double x2; } _valueTextSize;
@property (nonatomic) unsigned long long alignment;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <CAMSystemOverlayViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool halfPressEnabled;
@property (getter=isHandleBarVisible, nonatomic) bool handleBarVisible;
@property (readonly) unsigned long long hash;
@property (setter=_setMenu:, nonatomic, retain) _TtC8CameraUI17OverlayMenuSlider *menu;
@property (nonatomic) long long orientation;
@property (setter=_setSlider:, nonatomic, retain) CAMSystemOverlaySlider *slider;
@property (setter=_setSliderContent:, nonatomic) long long sliderContent;
@property (getter=isSliderFeedbackDisabled, nonatomic) bool sliderFeedbackDisabled;
@property (nonatomic, readonly) CAMSystemOverlaySlider *sliderIfLoaded;
@property (getter=isSliderPresented, setter=_setSliderPresented:, nonatomic) bool sliderPresented;
@property (nonatomic, retain) CAMOverlaySliderState *sliderState;
@property (getter=isSliderVisible, nonatomic, readonly) bool sliderVisible;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIView *tipAnchor;

+ (void)_applyGainModulationToElement:(id)arg1 withInputAmount:(id)arg2;

- (void).cxx_destruct;
- (id)_backgroundAnimationSettings;
- (id)_backgroundAnimator;
- (id)_backgroundContext;
- (id)_backgroundDroplet;
- (bool)_backgroundHintNeedsReset;
- (id)_blurFilter;
- (unsigned long long)_buttonStage;
- (void)_createHandleBarViewIfNeeded;
- (void)_createMenuIfNeeded;
- (void)_createSliderIfNeeded;
- (void)_createValueLabelIfNeeded;
- (id)_createValueLabelProgressProperty;
- (id)_dialEffectMesh;
- (double)_dropletCenterYFromState:(id)arg1 toState:(id)arg2;
- (double)_dropletScale;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForButton;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForSliderVisible:(bool)arg1 content:(long long)arg2 scale:(double)arg3;
- (id)_handleBarView;
- (void)_handlePan:(id)arg1;
- (void)_handleSliderTap:(id)arg1;
- (void)_handleTouchingMenu:(id)arg1;
- (void)_handleTouchingSlider:(id)arg1;
- (id)_hitTestingBackground;
- (id)_menuVisibility;
- (id)_panGestureRecognizer;
- (id)_progressiveEdgeBlurFilter;
- (void)_resetDropletBackgroundIfNeededFromState:(id)arg1 toState:(id)arg2;
- (id)_scaleSettings;
- (id)_screenLuminanceObserverLayer;
- (void)_setBackgroundAnimator:(id)arg1;
- (void)_setBackgroundContainer:(id)arg1;
- (void)_setBackgroundContext:(id)arg1;
- (void)_setBackgroundHintNeedsReset:(bool)arg1;
- (void)_setButtonStage:(unsigned long long)arg1;
- (void)_setDropletScale:(double)arg1;
- (void)_setDropletScale:(double)arg1 animated:(bool)arg2 interactive:(bool)arg3;
- (void)_setHandleBarView:(id)arg1;
- (void)_setHitTestingBackground:(id)arg1;
- (void)_setMenu:(id)arg1;
- (void)_setPanGestureRecognizer:(id)arg1;
- (void)_setSlider:(id)arg1;
- (void)_setSliderContent:(long long)arg1;
- (void)_setSliderContent:(long long)arg1 animated:(bool)arg2;
- (void)_setSliderHideAnimationCount:(unsigned long long)arg1;
- (void)_setSliderPresentationProgress:(id)arg1;
- (void)_setSliderPresented:(bool)arg1;
- (void)_setTapGestureRecognizer:(id)arg1;
- (void)_setTouchingSliderGestureRecognizer:(id)arg1;
- (void)_setValueLabel:(id)arg1;
- (void)_setValueLabelContainer:(id)arg1;
- (void)_setValueLabelPresentationProgress:(id)arg1;
- (void)_setValueTextSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_sliderContent:(long long)arg1 blurred:(bool)arg2;
- (unsigned long long)_sliderHideAnimationCount;
- (id)_sliderPresentationProgress;
- (id)_springAnimationWithKeyPath:(id)arg1;
- (id)_tapGestureRecognizer;
- (id)_touchingSliderGestureRecognizer;
- (void)_updateDropletBackgroundFromState:(id)arg1 toState:(id)arg2 animated:(bool)arg3 interactive:(bool)arg4;
- (void)_updateScaleForSliderContent:(long long)arg1 withMode:(long long)arg2 sliderContentDidChange:(bool)arg3 updateDropletScale:(bool)arg4;
- (void)_updateValueLabelFont;
- (void)_updateValueLabelLayoutMetrics;
- (void)_updateValueLabelText;
- (void)_updateValueLabelTextWithForcedMeasurement:(bool)arg1;
- (void)_updateValueLabelVisibility;
- (id)_valueLabel;
- (id)_valueLabelContainer;
- (id)_valueLabelPresentationProgress;
- (struct CGSize { double x1; double x2; })_valueTextSize;
- (unsigned long long)alignment;
- (id)delegate;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)halfPressEnabled;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isHandleBarVisible;
- (bool)isSliderFeedbackDisabled;
- (bool)isSliderPresented;
- (bool)isSliderVisible;
- (void)layoutSubviews;
- (id)menu;
- (long long)orientation;
- (void)overlayMenuSlider:(id)arg1 didSelectControlAt:(long long)arg2;
- (void)overlayMenuSliderDidEndScrolling:(id)arg1;
- (void)overlayMenuSliderWillBeginScrolling:(id)arg1;
- (id)overlaySlider:(id)arg1 cellConfigurationForValue:(id)arg2;
- (void)overlaySliderDidChangeCurrentValue:(id)arg1;
- (void)overlaySliderDidEndScrolling:(id)arg1;
- (void)overlaySliderWillBeginScrolling:(id)arg1;
- (void)performMenuPresentation:(unsigned long long)arg1;
- (void)reloadValueLabel;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHalfPressEnabled:(bool)arg1;
- (void)setHandleBarVisible:(bool)arg1;
- (void)setHandleBarVisible:(bool)arg1 animated:(bool)arg2;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 animated:(bool)arg2;
- (void)setSliderFeedbackDisabled:(bool)arg1;
- (void)setSliderState:(id)arg1;
- (void)setSliderState:(id)arg1 animated:(bool)arg2;
- (void)set_dropletScale:(double)arg1;
- (id)slider;
- (long long)sliderContent;
- (id)sliderIfLoaded;
- (id)sliderState;
- (void)systemOverlayVisibility:(id)arg1 changedForReason:(long long)arg2;
- (void)systemOverlayVisibilityBeganHidingTimer:(id)arg1;
- (void)systemOverlayVisibilityCancelledHidingTimer:(id)arg1;
- (id)tipAnchor;
- (void)updateUIForButtonStage:(unsigned long long)arg1;

@end
