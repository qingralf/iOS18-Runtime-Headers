/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CarAccessoryFramework.framework/CarAccessoryFramework
 */

@interface CAFCar : NSObject <CAFCacheableDescription, CAFCarConfigurationDelegate, CAFEntity, CAFValueMonitorDelegate> {
    NSDictionary * _accessories;
    NSDictionary * _accessoriesByCategory;
    NSMutableSet * _accessoryTypes;
    NSArray * _allAccessories;
    CAFCachedDescription * _cachedDescription;
    CAFCarConfiguration * _car;
    CAFCarManager * _carManager;
    CAFDimensionManager * _dimensionManager;
    id  _observableCache;
    CARObserverHashTable * _observers;
    CAFPositionManager * _positionManager;
    NSMutableSet * _processedPluginIDs;
    bool  _receivedAllValues;
    NSObject<OS_dispatch_queue> * _refreshQueue;
    bool  _trimmedAccessories;
    NSDictionary * _updatables;
    CAFValueMonitor * _valueMonitor;
}

@property (nonatomic, retain) NSDictionary *accessories;
@property (nonatomic, retain) NSDictionary *accessoriesByCategory;
@property (nonatomic, readonly) NSMutableSet *accessoryTypes;
@property (nonatomic, retain) NSArray *allAccessories;
@property (nonatomic, readonly) CAFAudioSettings *audioSettings;
@property (nonatomic, readonly) CAFAutomakerExteriorCamera *automakerExteriorCamera;
@property (nonatomic, readonly) NSArray *automakerInputStreams;
@property (nonatomic, readonly) CAFAutomakerNotificationHistory *automakerNotificationHistory;
@property (nonatomic, readonly) NSArray *automakerNotifications;
@property (nonatomic, readonly) NSArray *automakerRequestContent;
@property (nonatomic, readonly) CAFAutomakerSettings *automakerSettings;
@property (nonatomic, readonly) Class baseCAFClass;
@property (nonatomic, retain) CAFCachedDescription *cachedDescription;
@property (nonatomic, retain) CAFCarConfiguration *car;
@property (nonatomic, readonly) CAFCarManager *carManager;
@property (nonatomic, readonly) CAFCharging *charging;
@property (nonatomic, readonly) CAFClimate *climate;
@property (nonatomic, readonly) CAFClosure *closure;
@property (nonatomic, readonly) <CAFCarObserver> *combineObserver;
@property (nonatomic, readonly) NSArray *comparisonKeys;
@property (nonatomic, readonly) CAFMediaSource *currentMediaSource;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) CAFDimensionManager *dimensionManager;
@property (nonatomic, readonly) CAFDriveState *driveState;
@property (nonatomic, readonly) CAFDriverAssistance *driverAssistance;
@property (nonatomic, readonly) CAFElectricEngine *electricEngine;
@property (nonatomic, readonly) CAFEnvironmentalConditions *environmentalConditions;
@property (nonatomic, readonly) CAFFuel *fuel;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) CAFHighVoltageBattery *highVoltageBattery;
@property (nonatomic, readonly) CAFInternalCombustionEngine *internalCombustionEngine;
@property (nonatomic, readonly) CAFMedia *media;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) CAFNowPlayingInformation *nowPlayingInformation;
@property (nonatomic, readonly) unsigned int np_currentFrequency;
@property (nonatomic, readonly) CAFUInt32Range *np_currentFrequencyRange;
@property (nonatomic, readonly) CAFMediaItems *np_currentMediaItems;
@property (nonatomic, readonly) NSString *np_titleForCurrentMediaSource;
@property (nonatomic, retain) CARObserverHashTable *observers;
@property (nonatomic, readonly) CAFPairedDevices *pairedDevices;
@property (nonatomic, retain) CAFPositionManager *positionManager;
@property (nonatomic, readonly) NSMutableSet *processedPluginIDs;
@property (nonatomic) bool receivedAllValues;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *refreshQueue;
@property (nonatomic, readonly) bool rightHandDrive;
@property (nonatomic, readonly) CAFSeat *seat;
@property (nonatomic, readonly) NSArray *sortedAccessories;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSArray *testingUseOnly;
@property (nonatomic, readonly) CAFTire *tire;
@property (nonatomic) bool trimmedAccessories;
@property (nonatomic, readonly) CAFTripComputer *tripComputer;
@property (nonatomic, readonly) NSString *typeName;
@property (nonatomic, readonly) NSArray *uiControl;
@property (nonatomic, readonly) NSUUID *uniqueIdentifier;
@property (nonatomic, retain) NSDictionary *updatables;
@property (nonatomic, readonly) bool usable;
@property (nonatomic, retain) CAFValueMonitor *valueMonitor;
@property (nonatomic, readonly) CAFVehicleMotion *vehicleMotion;
@property (nonatomic, readonly) CAFVehicleResources *vehicleResources;
@property (nonatomic, readonly) CAFVehicleUnits *vehicleUnits;

- (void).cxx_destruct;
- (void)_accessoryDidUpdate:(id)arg1 service:(id)arg2 characteristic:(id)arg3;
- (void)_accessoryDidUpdate:(id)arg1 service:(id)arg2 control:(id)arg3;
- (void)_accessoryReceivedAllValues:(id)arg1;
- (void)_groupInitialization:(id)arg1 controls:(id)arg2;
- (void)_refreshAccessories;
- (id)accessories;
- (id)accessoriesByCategory;
- (id)accessoriesForCategory:(id)arg1;
- (id)accessoryTypes;
- (void)addObserver:(id)arg1;
- (void)addRegistrationForCharacteristics:(id)arg1;
- (id)allAccessories;
- (id)audioSettings;
- (id)automakerExteriorCamera;
- (id)automakerInputStreams;
- (id)automakerNotificationHistory;
- (id)automakerNotifications;
- (id)automakerRequestContent;
- (id)automakerSettings;
- (Class)baseCAFClass;
- (id)cachedDescription;
- (id)car;
- (void)car:(id)arg1 didUpdatePluginConfigs:(id)arg2;
- (id)carManager;
- (id)charging;
- (id)climate;
- (id)closure;
- (id)combineObserver;
- (long long)compare:(id)arg1;
- (id)comparisonKeys;
- (id)currentDescriptionForCache:(id)arg1;
- (id)currentMediaSource;
- (void)dealloc;
- (id)description;
- (void)didNotifyPluginID:(id)arg1 instanceID:(id)arg2 value:(id)arg3;
- (void)didRequestPluginID:(id)arg1 instanceID:(id)arg2 value:(id)arg3 withResponse:(id /* block */)arg4;
- (void)didUpdatePluginID:(id)arg1 values:(id)arg2;
- (id)dimensionManager;
- (id)driveState;
- (id)driverAssistance;
- (id)electricEngine;
- (void)enableNotificationForCharacteristic:(id)arg1 enable:(bool)arg2 response:(id /* block */)arg3;
- (void)enableNotificationForControl:(id)arg1 enable:(bool)arg2 response:(id /* block */)arg3;
- (id)environmentalConditions;
- (id)fuel;
- (bool)hasAccessoryType:(id)arg1;
- (bool)hasAllBridges;
- (id)highVoltageBattery;
- (id)initWithManager:(id)arg1 car:(id)arg2;
- (id)internalCombustionEngine;
- (void)invalidate;
- (bool)isConfigured;
- (id)media;
- (id)mediaSourceWithIdentifier:(id)arg1;
- (id)name;
- (void)notifyControl:(id)arg1 value:(id)arg2;
- (id)nowPlayingInformation;
- (unsigned int)np_currentFrequency;
- (id)np_currentFrequencyRange;
- (id)np_currentMediaItems;
- (id)np_titleForCurrentMediaSource;
- (id)observableCache;
- (id)observers;
- (id)pairedDevices;
- (void)performGroupRead:(id)arg1 completion:(id /* block */)arg2;
- (void)performGroupWrite:(id)arg1 completion:(id /* block */)arg2;
- (void)performGroupedRequest:(id)arg1 key:(id)arg2 value:(id)arg3 withResponse:(id /* block */)arg4;
- (id)positionManager;
- (id)processedPluginIDs;
- (void)readCharacteristic:(id)arg1 response:(id /* block */)arg2;
- (bool)receivedAllValues;
- (void)refreshAllCharacteristics;
- (void)refreshCharacteristics:(id)arg1;
- (id)refreshQueue;
- (void)registerObserver:(id)arg1;
- (bool)registeredForAccessory:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)removeRegistrationForCharacteristics:(id)arg1;
- (void)requestControl:(id)arg1 value:(id)arg2 response:(id /* block */)arg3;
- (bool)rightHandDrive;
- (id)seat;
- (void)setAccessories:(id)arg1;
- (void)setAccessoriesByCategory:(id)arg1;
- (void)setAllAccessories:(id)arg1;
- (void)setCachedDescription:(id)arg1;
- (void)setCar:(id)arg1;
- (void)setObservableCache:(id)arg1;
- (void)setObservers:(id)arg1;
- (void)setPositionManager:(id)arg1;
- (void)setReceivedAllValues:(bool)arg1;
- (void)setRefreshQueue:(id)arg1;
- (void)setTrimmedAccessories:(bool)arg1;
- (void)setUpdatables:(id)arg1;
- (void)setValueMonitor:(id)arg1;
- (id)sortedAccessories;
- (unsigned long long)state;
- (id)testingUseOnly;
- (id)tire;
- (void)trimAccessories;
- (bool)trimmedAccessories;
- (id)tripComputer;
- (id)typeName;
- (id)uiControl;
- (id)uniqueIdentifier;
- (void)unregisterObserver:(id)arg1;
- (id)updatables;
- (bool)usable;
- (id)valueMonitor;
- (id)vehicleMotion;
- (id)vehicleResources;
- (id)vehicleUnits;
- (void)writeCharacteristic:(id)arg1 value:(id)arg2 response:(id /* block */)arg3;

@end
