/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CarAccessoryFramework.framework/CarAccessoryFramework
 */

@interface CAFCharacteristic : NSObject <CAFCacheableDescription, CAFEntity, NSCopying> {
    CAFCachedDescription * _cachedDescription;
    id  _cachedValue;
    NSString * _characteristicType;
    CAFCharacteristicValue * _characteristicValue;
    NSNumber * _disabledInstanceID;
    NSError * _error;
    NSNumber * _errorInstanceID;
    bool  _hasErrorState;
    bool  _hasInitialValue;
    bool  _hasLargePayload;
    bool  _initializationFinished;
    NSNumber * _instanceID;
    bool  _isDisabled;
    bool  _isMutable;
    bool  _isNotificationEnabled;
    bool  _isRestricted;
    unsigned long long  _lastState;
    unsigned long long  _lockState;
    CAFCharacteristicMetadata * _metaData;
    NSNumber * _notifierInstanceID;
    NSNumber * _notifierValue;
    CARObserverHashTable * _observers;
    id  _pendingValue;
    NSNumber * _priority;
    NSNumber * _restrictedInstanceID;
    CAFService * _service;
    bool  _shouldInitialize;
    bool  _supportsInvalid;
    unsigned long long  _transactionId;
    NSString * _typeName;
    NSUUID * _uniqueIdentifier;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _valueLock;
    bool  _writable;
}

@property (nonatomic, readonly) CAFAccessory *accessory;
@property (nonatomic, readonly) Class baseCAFClass;
@property (nonatomic, readonly) NSString *baseFormat;
@property (nonatomic, retain) CAFCachedDescription *cachedDescription;
@property (nonatomic, retain) id cachedValue;
@property (nonatomic, readonly) CAFCar *car;
@property (nonatomic, readonly) NSString *characteristicType;
@property (nonatomic, retain) CAFCharacteristicValue *characteristicValue;
@property (nonatomic, readonly) NSArray *comparisonKeys;
@property (getter=isCurrent, nonatomic, readonly) bool current;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSNumber *disabledInstanceID;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, readonly) NSNumber *errorInstanceID;
@property (nonatomic, readonly) NSString *format;
@property (nonatomic, readonly) NSString *formattedValue;
@property (nonatomic, readonly) NSString *fullDescription;
@property (nonatomic, readonly) bool hasError;
@property (nonatomic) bool hasErrorState;
@property (nonatomic, readonly) bool hasInitialValue;
@property (nonatomic, readonly) bool hasLargePayload;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool hidden;
@property (nonatomic) bool initializationFinished;
@property (getter=isInitializing, nonatomic, readonly) bool initializing;
@property (nonatomic, readonly) NSNumber *instanceID;
@property (nonatomic) bool isDisabled;
@property (nonatomic, readonly) bool isInvalid;
@property (nonatomic, readonly) bool isMutable;
@property (nonatomic) bool isNotificationEnabled;
@property (nonatomic) bool isRestricted;
@property (nonatomic) unsigned long long lastState;
@property (nonatomic) unsigned long long lockState;
@property (nonatomic, readonly) CAFCharacteristicMetadata *metaData;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) NSNumber *notifierInstanceID;
@property (nonatomic, retain) NSNumber *notifierValue;
@property (nonatomic, readonly) bool notifies;
@property (nonatomic, retain) CARObserverHashTable *observers;
@property (nonatomic, retain) id pendingValue;
@property (nonatomic, readonly) NSNumber *priority;
@property (nonatomic, readonly) bool readable;
@property (nonatomic, readonly) NSNumber *restrictedInstanceID;
@property (nonatomic, readonly) CAFService *service;
@property (nonatomic, readonly) bool shouldInitialize;
@property (nonatomic, readonly) unsigned long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsInvalid;
@property (nonatomic) unsigned long long transactionId;
@property (nonatomic, retain) NSString *typeName;
@property (nonatomic, retain) NSUUID *uniqueIdentifier;
@property (nonatomic, readonly) bool usable;
@property (nonatomic, retain) id value;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x1; } valueLock;
@property (nonatomic, readonly) bool writable;

+ (id)characteristicFormats;
+ (id)characteristicWithService:(id)arg1 config:(id)arg2;
+ (void)load;
+ (id)observerProtocol;
+ (id)primaryCharacteristicFormat;
+ (void)registerCharacteristicClass:(Class)arg1;
+ (id)registeredCharacteristicClasses;
+ (id)secondaryCharacteristicFormats;

- (void).cxx_destruct;
- (void)_didUpdateFromGroupUpdate:(bool)arg1;
- (bool)_lock_setError:(id)arg1;
- (void)_readValueCompletionTransactionID:(unsigned long long)arg1 error:(id)arg2;
- (void)_updateStateIfNeeded;
- (id)accessory;
- (void)addObserver:(id)arg1;
- (id)allInstanceIDs;
- (Class)baseCAFClass;
- (id)baseFormat;
- (id)cachedDescription;
- (id)cachedValue;
- (id)car;
- (id)characteristicType;
- (id)characteristicValue;
- (long long)compare:(id)arg1;
- (id)comparisonKeys;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentDescriptionForCache:(id)arg1;
- (void)dealloc;
- (id)decodeValue:(id)arg1 error:(id*)arg2;
- (id)description;
- (id)descriptionExtras;
- (id)disabledInstanceID;
- (id)encodeValue:(id)arg1 error:(id*)arg2;
- (id)error;
- (id)errorInstanceID;
- (id)format;
- (id)formattedValue;
- (id)fullDescription;
- (void)groupInitializationRequested;
- (void)handleError:(id)arg1 value:(id)arg2;
- (void)handleRead:(id)arg1 value:(id)arg2;
- (void)handleRegistrationWithInstanceID:(id)arg1 registered:(bool)arg2;
- (void)handleRegistrationWithInstanceID:(id)arg1 value:(id)arg2 registered:(bool)arg3;
- (void)handleUpdateWithInstanceID:(id)arg1 value:(id)arg2;
- (void)handleValueAndError:(id)arg1 value:(id)arg2;
- (void)handleWrite:(id)arg1 value:(id)arg2;
- (bool)hasError;
- (bool)hasErrorState;
- (bool)hasInitialValue;
- (bool)hasLargePayload;
- (unsigned long long)hash;
- (bool)hidden;
- (id)initWithService:(id)arg1 config:(id)arg2;
- (bool)initializationFinished;
- (id)instanceID;
- (void)invalidate;
- (bool)isCurrent;
- (bool)isDisabled;
- (bool)isEqual:(id)arg1;
- (bool)isInitializing;
- (bool)isInvalid;
- (bool)isMutable;
- (bool)isNotificationEnabled;
- (bool)isRestricted;
- (unsigned long long)lastState;
- (unsigned long long)lockState;
- (id)metaData;
- (id)name;
- (id)notifierInstanceID;
- (id)notifierValue;
- (bool)notifies;
- (id)observers;
- (id)pendingValue;
- (id)pluginID;
- (id)priority;
- (id)propertiesDescription;
- (id)readInstanceIDs;
- (bool)readable;
- (void)registerObserver:(id)arg1;
- (id)registrationInstanceIDs;
- (void)removeObserver:(id)arg1;
- (id)restrictedInstanceID;
- (id)service;
- (void)setCachedDescription:(id)arg1;
- (void)setCachedValue:(id)arg1;
- (bool)setCachedValueIfAvailableForGroupUpdate:(bool)arg1;
- (void)setCharacteristicValue:(id)arg1;
- (void)setError:(id)arg1;
- (void)setHasErrorState:(bool)arg1;
- (void)setInitializationFinished:(bool)arg1;
- (void)setIsDisabled:(bool)arg1;
- (void)setIsNotificationEnabled:(bool)arg1;
- (void)setIsRestricted:(bool)arg1;
- (void)setLastState:(unsigned long long)arg1;
- (void)setLockState:(unsigned long long)arg1;
- (void)setNotifierValue:(id)arg1;
- (void)setObservers:(id)arg1;
- (void)setPendingValue:(id)arg1;
- (void)setTransactionId:(unsigned long long)arg1;
- (void)setTypeName:(id)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (void)setValue:(id)arg1;
- (void)setValueLock:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (bool)shouldDeferInitialization;
- (bool)shouldInitialize;
- (unsigned long long)state;
- (bool)supportsDisable;
- (bool)supportsError;
- (bool)supportsInvalid;
- (bool)supportsNotifier;
- (bool)supportsRestricted;
- (bool)supportsStates;
- (unsigned long long)transactionId;
- (id)typeName;
- (id)uniqueIdentifier;
- (void)unregisterObserver:(id)arg1;
- (void)updateValueRequiringRead:(bool)arg1;
- (bool)usable;
- (id)value;
- (struct os_unfair_lock_s { unsigned int x1; })valueLock;
- (bool)writable;

@end
