/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CarAccessoryFramework.framework/CarAccessoryFramework
 */

@interface CAFEngineTemperature : CAFService

@property (nonatomic, readonly) bool hasTemperatureMarkerCold;
@property (nonatomic, readonly) bool hasTemperatureMarkerHot;
@property (nonatomic, readonly) NSMeasurement *temperature;
@property (nonatomic, readonly) CAFMeasurementCharacteristic *temperatureCharacteristic;
@property (nonatomic, readonly) bool temperatureInvalid;
@property (nonatomic, readonly) NSMeasurement *temperatureMarkerCold;
@property (nonatomic, readonly) CAFMeasurementCharacteristic *temperatureMarkerColdCharacteristic;
@property (nonatomic, readonly) CAFFloatRange *temperatureMarkerColdRange;
@property (nonatomic, readonly) NSMeasurement *temperatureMarkerHot;
@property (nonatomic, readonly) CAFMeasurementCharacteristic *temperatureMarkerHotCharacteristic;
@property (nonatomic, readonly) CAFFloatRange *temperatureMarkerHotRange;
@property (nonatomic, readonly) NSMeasurement *temperatureMax;
@property (nonatomic, readonly) CAFMeasurementCharacteristic *temperatureMaxCharacteristic;
@property (nonatomic, readonly) CAFFloatRange *temperatureMaxRange;
@property (nonatomic, readonly) NSMeasurement *temperatureMin;
@property (nonatomic, readonly) CAFMeasurementCharacteristic *temperatureMinCharacteristic;
@property (nonatomic, readonly) CAFFloatRange *temperatureMinRange;
@property (nonatomic, readonly) CAFFloatRange *temperatureRange;
@property (nonatomic, readonly) unsigned char temperatureState;
@property (nonatomic, readonly) CAFTemperatureStateCharacteristic *temperatureStateCharacteristic;

+ (void)load;
+ (id)observerProtocol;
+ (id)serviceIdentifier;

- (void)_characteristicDidUpdate:(id)arg1 fromGroupUpdate:(bool)arg2;
- (void)addObserver:(id)arg1;
- (bool)hasTemperatureMarkerCold;
- (bool)hasTemperatureMarkerHot;
- (id)name;
- (void)registerObserver:(id)arg1;
- (bool)registeredForTemperature;
- (bool)registeredForTemperatureMarkerCold;
- (bool)registeredForTemperatureMarkerHot;
- (bool)registeredForTemperatureMax;
- (bool)registeredForTemperatureMin;
- (bool)registeredForTemperatureState;
- (void)removeObserver:(id)arg1;
- (id)temperature;
- (id)temperatureCharacteristic;
- (bool)temperatureInvalid;
- (id)temperatureMarkerCold;
- (id)temperatureMarkerColdCharacteristic;
- (id)temperatureMarkerColdRange;
- (id)temperatureMarkerHot;
- (id)temperatureMarkerHotCharacteristic;
- (id)temperatureMarkerHotRange;
- (id)temperatureMax;
- (id)temperatureMaxCharacteristic;
- (id)temperatureMaxRange;
- (id)temperatureMin;
- (id)temperatureMinCharacteristic;
- (id)temperatureMinRange;
- (id)temperatureRange;
- (unsigned char)temperatureState;
- (id)temperatureStateCharacteristic;
- (void)unregisterObserver:(id)arg1;

@end
