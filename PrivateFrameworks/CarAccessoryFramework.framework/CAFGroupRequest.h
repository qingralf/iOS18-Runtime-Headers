/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CarAccessoryFramework.framework/CarAccessoryFramework
 */

@interface CAFGroupRequest : NSObject <CAFCacheableDescription> {
    CAFCachedDescription * _cachedDescription;
    CAFCachedDescription * _cachedFullDescription;
    CAFCachedDescription * _cachedRequestsDescription;
    CAFCar * _car;
    NSMutableDictionary * _errors;
    bool  _forced;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    unsigned long long  _pendingGroups;
    bool  _performed;
    NSMutableDictionary * _requests;
    NSUUID * _uniqueIdentifier;
}

@property (nonatomic, retain) CAFCachedDescription *cachedDescription;
@property (nonatomic, retain) CAFCachedDescription *cachedFullDescription;
@property (nonatomic, retain) CAFCachedDescription *cachedRequestsDescription;
@property (nonatomic, readonly) CAFCar *car;
@property (nonatomic, readonly) unsigned long long count;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSMutableDictionary *errors;
@property (nonatomic) bool forced;
@property (nonatomic, readonly) NSString *fullDescription;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x1; } lock;
@property (nonatomic) unsigned long long pendingGroups;
@property (nonatomic) bool performed;
@property (nonatomic, readonly) NSMutableDictionary *requests;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSUUID *uniqueIdentifier;

- (void).cxx_destruct;
- (void)_addRequest:(id)arg1;
- (id)_currentDescriptionForFull;
- (id)_currentDescriptionForRequests;
- (void)_lockedPerformBlock:(id /* block */)arg1;
- (void)addCharacteristic:(id)arg1;
- (void)addCharacteristics:(id)arg1;
- (id)cachedDescription;
- (id)cachedFullDescription;
- (id)cachedRequestsDescription;
- (id)car;
- (unsigned long long)count;
- (id)currentDescriptionForCache:(id)arg1;
- (id)description;
- (id)errors;
- (bool)forced;
- (id)fullDescription;
- (id)initWithCar:(id)arg1;
- (struct os_unfair_lock_s { unsigned int x1; })lock;
- (unsigned long long)pendingGroups;
- (void)performWithCompletion:(id /* block */)arg1;
- (bool)performed;
- (id)requests;
- (void)setCachedDescription:(id)arg1;
- (void)setCachedFullDescription:(id)arg1;
- (void)setCachedRequestsDescription:(id)arg1;
- (void)setForced:(bool)arg1;
- (void)setLock:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (void)setPendingGroups:(unsigned long long)arg1;
- (void)setPerformed:(bool)arg1;
- (id)uniqueIdentifier;

@end
