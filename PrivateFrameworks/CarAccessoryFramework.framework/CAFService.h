/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CarAccessoryFramework.framework/CarAccessoryFramework
 */

@interface CAFService : NSObject <CAFCacheableDescription, CAFEntity, CAFValueMonitorDelegate> {
    CAFAccessory * _accessory;
    CAFCachedDescription * _cachedDescription;
    NSDictionary * _characteristics;
    NSDictionary * _characteristicsByType;
    NSArray * _characteristicsWithLargePayload;
    NSDictionary * _controls;
    NSDictionary * _controlsByType;
    NSNumber * _instanceID;
    id  _observableCache;
    CARObserverHashTable * _observers;
    bool  _receivedAllValues;
    NSString * _serviceType;
    NSString * _typeName;
    NSUUID * _uniqueIdentifier;
    CAFValueMonitor * _valueMonitor;
}

@property (nonatomic, readonly) CAFAccessory *accessory;
@property (nonatomic, readonly) Class baseCAFClass;
@property (nonatomic, retain) CAFCachedDescription *cachedDescription;
@property (nonatomic, readonly) CAFCar *car;
@property (nonatomic, readonly) NSDictionary *characteristics;
@property (nonatomic, readonly) NSDictionary *characteristicsByType;
@property (nonatomic, readonly) NSArray *characteristicsWithLargePayload;
@property (nonatomic, readonly) NSArray *comparisonKeys;
@property (nonatomic, readonly) NSDictionary *controls;
@property (nonatomic, readonly) NSDictionary *controlsByType;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasError;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSNumber *instanceID;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, retain) CARObserverHashTable *observers;
@property (nonatomic) bool receivedAllValues;
@property (nonatomic, readonly) NSString *serviceType;
@property (nonatomic, readonly) NSArray *sortedCharacteristics;
@property (nonatomic, readonly) NSArray *sortedControls;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *typeName;
@property (nonatomic, retain) NSUUID *uniqueIdentifier;
@property (nonatomic, readonly) bool usable;
@property (nonatomic, retain) CAFValueMonitor *valueMonitor;

+ (id)indexBy;
+ (void)load;
+ (id)observerProtocol;
+ (void)registerServiceClass:(Class)arg1;
+ (id)registeredServiceClasses;
+ (id)serviceIdentifier;
+ (id)serviceType;
+ (id)serviceWithAccessory:(id)arg1 config:(id)arg2;

- (void).cxx_destruct;
- (void)_characteristicDidUpdate:(id)arg1 fromGroupUpdate:(bool)arg2;
- (void)_characteristicDidUpdateState:(id)arg1;
- (void)_controlDidUpdate:(id)arg1;
- (void)_didUpdateValuesForGroupedCharacteristics:(id)arg1;
- (void)_updateReceivedValuesWithCharacteristic:(id)arg1;
- (id)accessory;
- (void)addObserver:(id)arg1;
- (Class)baseCAFClass;
- (id)cachedDescription;
- (id)car;
- (id)characteristicForName:(id)arg1;
- (id)characteristicForType:(id)arg1;
- (id)characteristics;
- (id)characteristicsByType;
- (id)characteristicsWithLargePayload;
- (long long)compare:(id)arg1;
- (id)comparisonKeys;
- (id)controlForName:(id)arg1;
- (id)controlForType:(id)arg1;
- (id)controls;
- (id)controlsByType;
- (id)currentDescriptionForCache:(id)arg1;
- (id)description;
- (bool)hasError;
- (id)indexBy;
- (id)initWithAccessory:(id)arg1 config:(id)arg2;
- (id)instanceID;
- (void)invalidate;
- (id)name;
- (id)observableCache;
- (id)observers;
- (id)pluginID;
- (bool)receivedAllValues;
- (void)refreshCharacteristics;
- (void)registerAllRawDataIfNeeded;
- (void)registerObserver:(id)arg1;
- (void)removeObserver:(id)arg1;
- (id)serviceType;
- (void)setCachedDescription:(id)arg1;
- (void)setObservableCache:(id)arg1;
- (void)setObservers:(id)arg1;
- (void)setReceivedAllValues:(bool)arg1;
- (void)setTypeName:(id)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (void)setValueMonitor:(id)arg1;
- (id)sortedCharacteristics;
- (id)sortedControls;
- (unsigned long long)state;
- (id)typeName;
- (id)uniqueIdentifier;
- (void)unregisterAllRawDataIfNeeded;
- (void)unregisterObserver:(id)arg1;
- (bool)usable;
- (id)valueMonitor;

@end
