/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKAnimatedImage : NSObject <IMAnimatedImageProtocol> {
    double  _animationStartTimeOffset;
    UIImage * _cachedMultiFrameUIImage;
    NSArray * _frameEndTimestamps;
    NSArray * _frameStartTimestamps;
    CKMultiFrameImage * _multiFrameImage;
    long long  _previouslyReturnedFrameIndexHint;
}

@property (nonatomic) double animationStartTimeOffset;
@property (nonatomic, retain) UIImage *cachedMultiFrameUIImage;
@property (nonatomic, readonly, copy) NSArray *durations;
@property (nonatomic, readonly, copy) NSArray *frameEndTimestamps;
@property (nonatomic, readonly, copy) NSArray *frameStartTimestamps;
@property (nonatomic, readonly) NSArray *frames;
@property (nonatomic, readonly) UIImage *image;
@property (nonatomic, retain) CKMultiFrameImage *multiFrameImage;
@property (nonatomic) long long previouslyReturnedFrameIndexHint;
@property (nonatomic, readonly) double scale;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } size;

+ (id)animatedImageFromOptimizedBitmapAtFileURL:(id)arg1 error:(id*)arg2;
+ (id)filenameExtension;

- (void).cxx_destruct;
- (void)_calculateFrameTimestamps;
- (double)animationStartTimeOffset;
- (id)cachedMultiFrameUIImage;
- (id)description;
- (id)durations;
- (double)endTimestampForFrameIndex:(unsigned long long)arg1;
- (id)frameEndTimestamps;
- (id)frameForAnimationTime:(double)arg1;
- (long long)frameIndexForAnimationTime:(double)arg1;
- (id)frameStartTimestamps;
- (id)frames;
- (id)image;
- (id)initWithImages:(id)arg1 durations:(id)arg2;
- (id)initWithMultiFrameImage:(id)arg1;
- (id)multiFrameImage;
- (long long)previouslyReturnedFrameIndexHint;
- (double)scale;
- (void)setAnimationStartTimeOffset:(double)arg1;
- (void)setCachedMultiFrameUIImage:(id)arg1;
- (void)setMultiFrameImage:(id)arg1;
- (void)setPreviouslyReturnedFrameIndexHint:(long long)arg1;
- (struct CGSize { double x1; double x2; })size;
- (double)timeInLoopForTime:(double)arg1;
- (bool)writeAsOptimizedBitmapToFileURL:(id)arg1 error:(id*)arg2;

@end
