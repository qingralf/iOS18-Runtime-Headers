/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKFullScreenBalloonViewControllerPhone : CKFullScreenBalloonViewController <CKBalloonViewDelegate, CKMessageHighlightButtonDelegate, CKStickerDetailViewControllerDelegate, CKTapbackPickerBalloonParentViewDelegate, CKTapbackPickerViewControllerDelegate, ChatKit.CKTapbackAttributionViewDelegate, PHLivePhotoViewDelegate> {
    bool  _animatedBalloonViewFrameUpdates;
    bool  _animationsDisabledForTesting;
    _TtC7ChatKit24CKTapbackAttributionView * _attributionView;
    UIView * _balloonView;
    double  _balloonYOffsetFromTranscript;
    bool  _hasSetInitialBalloonViewFrame;
    bool  _hideBalloonView;
    CKMessageHighlightButton * _highlightButton;
    NSArray * _interfaceActions;
    CKLivePhotoBalloonView * _livePhotoBalloonView;
    NSArray * _mirrorStickerCells;
    NSArray * _mirrorStickerViews;
    NSArray * _parentStickerCells;
    NSArray * _parentStickerChatItems;
    CKTapbackPickerBalloonParentView * _pickerBalloonParentView;
    CAShapeLayer * _replyButtonBorderLayer;
    UIVisualEffectView * _replyButtonEffectView;
    CAShapeLayer * _replyButtonMaskLayer;
    UIView * _replyButtonView;
    bool  _shouldLayoutViews;
    CKTapbackPickerViewController * _tapbackPickerViewController;
    CAShapeLayer * _tintViewMaskLayer;
}

@property (nonatomic) bool animatedBalloonViewFrameUpdates;
@property (nonatomic) bool animationsDisabledForTesting;
@property (nonatomic, retain) _TtC7ChatKit24CKTapbackAttributionView *attributionView;
@property (nonatomic, retain) UIView *balloonView;
@property (nonatomic) double balloonYOffsetFromTranscript;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hasSetInitialBalloonViewFrame;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hideBalloonView;
@property (nonatomic, retain) CKMessageHighlightButton *highlightButton;
@property (nonatomic, copy) NSArray *interfaceActions;
@property (nonatomic, retain) CKLivePhotoBalloonView *livePhotoBalloonView;
@property (nonatomic, copy) NSArray *mirrorStickerCells;
@property (nonatomic, copy) NSArray *mirrorStickerViews;
@property (nonatomic, retain) NSArray *parentStickerCells;
@property (nonatomic, retain) NSArray *parentStickerChatItems;
@property (nonatomic, retain) CKTapbackPickerBalloonParentView *pickerBalloonParentView;
@property (nonatomic, retain) CAShapeLayer *replyButtonBorderLayer;
@property (nonatomic, retain) UIVisualEffectView *replyButtonEffectView;
@property (nonatomic, retain) CAShapeLayer *replyButtonMaskLayer;
@property (nonatomic, retain) UIView *replyButtonView;
@property (readonly) Class superclass;
@property (nonatomic, retain) CKTapbackPickerViewController *tapbackPickerViewController;
@property (nonatomic, retain) CAShapeLayer *tintViewMaskLayer;

- (void).cxx_destruct;
- (double)_balloonOffsetFromTranscriptParentBalloon;
- (id)_parentStickerChatItemGUIDToMirrorStickerViewDictionary;
- (void)_presentAccessoryViews;
- (void)_presentOverlayBalloonView;
- (void)_presentStickersIfNeeded;
- (void)_presentTapbackAttributionIfNeeded;
- (void)_presentTapbackPickerIfNeeded;
- (void)_revealTintAnimated:(bool)arg1;
- (void)_scrollTranscriptToBalloonView:(double)arg1 completion:(id /* block */)arg2;
- (void)_stickerDetailViewControllerCloseButtonPressed:(id)arg1;
- (void)_updateBoundsCenterFrameForMirrorAssociatedItemView:(id)arg1 parentStickerChatItem:(id)arg2;
- (void)_updateKeyboardSnapshotIfNeeded;
- (void)addHighlightButtonIfNeeded;
- (bool)animatedBalloonViewFrameUpdates;
- (bool)animationsDisabledForTesting;
- (id)attributionView;
- (void)audioBalloonScrubberDidChangeValue:(double)arg1;
- (void)audioBalloonScrubberWithRecognizer:(id)arg1 didChangeValue:(double)arg2;
- (double)balloonMinimumTopOffset:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)balloonView;
- (void)balloonView:(id)arg1 userDidDragOutsideBalloonWithPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)balloonViewDoubleTapped:(id)arg1;
- (void)balloonViewLongTouched:(id)arg1;
- (void)balloonViewSelected:(id)arg1 keyModifierFlags:(long long)arg2 selectedText:(id)arg3;
- (void)balloonViewSelected:(id)arg1 withModifierFlags:(long long)arg2 selectedText:(id)arg3;
- (void)balloonViewShouldCopyToPasteboard:(id)arg1;
- (void)balloonViewShowInlineReply:(id)arg1;
- (void)balloonViewTapped:(id)arg1 withModifierFlags:(long long)arg2 selectedText:(id)arg3;
- (void)balloonViewTextViewDidChangeSelection:(id)arg1 selectedText:(id)arg2 textView:(id)arg3;
- (double)balloonYOffsetFromTranscript;
- (void)beginDismissal;
- (void)closeEmojiPicker;
- (id)contextualCKChatItemsForTapbackPickerViewController:(id)arg1;
- (void)dealloc;
- (void)disableAnimationsForTesting;
- (id)generateDuplicateBalloonViewForChatItem:(id)arg1;
- (bool)hasSetInitialBalloonViewFrame;
- (bool)hideBalloonView;
- (id)highlightButton;
- (id)initWithChatItem:(id)arg1 interfaceActions:(id)arg2 displayConfiguration:(id)arg3 delegate:(id)arg4;
- (void)initializeTapbackPicker;
- (void)insertSticker:(id)arg1;
- (void)interactionStartedFromPreviewItemControllerInBalloonView:(id)arg1;
- (void)interactionStartedWithPluginBalloonView:(id)arg1;
- (void)interactionStoppedFromPreviewItemControllerInBalloonView:(id)arg1;
- (id)interfaceActions;
- (void)keyCommandSelectTapback:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)launchReaderViewForBalloonView:(id)arg1;
- (void)liveBalloonTouched:(id)arg1;
- (id)livePhotoBalloonView;
- (void)livePhotoView:(id)arg1 didEndPlaybackWithStyle:(long long)arg2;
- (void)loadLivePhotoBalloonViewIfNeeded;
- (double)maximumAllowedBalloonOriginY;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })messageHightlightButtonBalloonViewFrame:(id)arg1;
- (void)messageHightlightButtonDidFinishAnimating:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })messageHightlightButtonReplyButtonFrame:(id)arg1;
- (BOOL)messageHightlightButtonTranscriptOrientation:(id)arg1;
- (void)messageHightlightButtonWasClicked:(id)arg1;
- (double)minimumAllowedBalloonOriginY:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)mirrorStickerCells;
- (id)mirrorStickerViews;
- (id)parentStickerCells;
- (id)parentStickerChatItems;
- (void)performClosingAnimationsAnimated:(bool)arg1 withSendAnimation:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)performInitialAnimations;
- (id)pickerBalloonParentView;
- (double)pickerBalloonParentViewY;
- (void)playbackSpeedDidChangeForAudioMessageBalloonView:(id)arg1 playbackSpeed:(double)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })preferredTapbackLayoutFrame;
- (void)presentStickerDetailControllerWithStickers:(id)arg1;
- (id)replyButtonBorderLayer;
- (id)replyButtonEffectView;
- (double)replyButtonHeightFromBalloon;
- (id)replyButtonMaskLayer;
- (double)replyButtonVerticalOffset;
- (id)replyButtonView;
- (void)sendTouchBarTapback:(long long)arg1;
- (void)setAnimatedBalloonViewFrameUpdates:(bool)arg1;
- (void)setAnimationsDisabledForTesting:(bool)arg1;
- (void)setAttributionView:(id)arg1;
- (void)setBalloonView:(id)arg1;
- (void)setBalloonYOffsetFromTranscript:(double)arg1;
- (void)setHasSetInitialBalloonViewFrame:(bool)arg1;
- (void)setHideBalloonView:(bool)arg1;
- (void)setHighlightButton:(id)arg1;
- (void)setInterfaceActions:(id)arg1;
- (void)setLivePhotoBalloonView:(id)arg1;
- (void)setMirrorStickerCells:(id)arg1;
- (void)setMirrorStickerViews:(id)arg1;
- (void)setParentStickerCells:(id)arg1;
- (void)setParentStickerChatItems:(id)arg1;
- (void)setPickerBalloonParentView:(id)arg1;
- (void)setReplyButtonBorderLayer:(id)arg1;
- (void)setReplyButtonEffectView:(id)arg1;
- (void)setReplyButtonMaskLayer:(id)arg1;
- (void)setReplyButtonView:(id)arg1;
- (void)setStickerVisibility:(bool)arg1 forStickerChatItemGUID:(id)arg2;
- (void)setTapbackPickerViewController:(id)arg1;
- (void)setTintViewMaskLayer:(id)arg1;
- (void)setupReplyButton;
- (bool)shouldAllowStickerInputFor:(id)arg1;
- (bool)shouldPresentAsTapbackKeyboardInput;
- (bool)shouldShowStickerSuggestionsFor:(id)arg1;
- (void)showAllStickers;
- (void)showTapbackPicker;
- (id)smartEmojiResponses:(id)arg1 chatItem:(id)arg2;
- (void)stickerDetailViewController:(id)arg1 deletedStickerWithTransferGUID:(id)arg2;
- (void)stickerDetailViewController:(id)arg1 didRequestSaveSticker:(id)arg2;
- (void)stickerDetailViewController:(id)arg1 selectedStickerPackWithAdamID:(id)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (void)tapbackAttributionView:(id)arg1 didTapToSaveSticker:(id)arg2;
- (void)tapbackPickerBalloonParentView:(id)arg1 didInsertTapback:(id)arg2;
- (void)tapbackPickerBalloonParentView:(id)arg1 requestedPresentPlugin:(id)arg2 payloadID:(id)arg3;
- (void)tapbackPickerBalloonParentViewRequestedAppCardDismiss:(id)arg1;
- (void)tapbackPickerBalloonParentViewRequestedShowEmojiKeyboard:(id)arg1;
- (void)tapbackPickerBalloonParentViewReturningToSuggestionPicker:(id)arg1;
- (id)tapbackPickerBalloonParentViewTapbackBackingBalloon:(id)arg1;
- (id)tapbackPickerBalloonParentViewTapbackPileView:(id)arg1;
- (id)tapbackPickerBalloonParentViewTapbackTintableMessageBalloon:(id)arg1;
- (id)tapbackPickerViewController;
- (void)tapbackPickerViewController:(id)arg1 didDeselectTapback:(id)arg2;
- (void)tapbackPickerViewController:(id)arg1 didSelectTapback:(id)arg2;
- (void)tapbackPickerViewControllerDidChangePreferredContentSize:(id)arg1;
- (void)tapbackPickerViewControllerDidRequestDismiss:(id)arg1;
- (id)textInputContextIdentifier:(id)arg1;
- (id)tintViewMaskLayer;
- (void)updateBalloonViewFrame;
- (void)updateReplyButtonColor;
- (void)updateReplyButtonSizeAndLocation:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 layoutRelativeToHighlightButton:(bool)arg2;
- (void)updateReplyButtonSizeAndLocationForBalloonViewFrameIfNeeded:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)updateStickersAnimated:(bool)arg1;
- (void)updateTintViewAlpha;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)viewToAlignWith;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })votingViewTargetFrame;

@end
