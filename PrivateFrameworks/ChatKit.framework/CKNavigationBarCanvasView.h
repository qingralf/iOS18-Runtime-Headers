/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKNavigationBarCanvasView : UIView <UIContextMenuInteractionDelegate> {
    bool  _audioEnabled;
    CKNavigationButtonView * _buttonViewFaceTimeAudio;
    CKNavigationButtonView * _buttonViewFaceTimeVideo;
    CKNavigationButtonView * _buttonViewInfo;
    NSMutableArray * _buttonsToDisplay;
    <CKNavigationBarCanvasViewDelegate> * _delegate;
    bool  _enforceLeftItemViewsAlignmentToCenter;
    bool  _expanseEnabled;
    bool  _ignoreNextWidthChange;
    UIButton * _invisibleContextMenuButton;
    bool  _isAnimatingAvatars;
    bool  _isBusinessChat;
    bool  _isInEditingMode;
    long long  _joinButtonStyle;
    bool  _keepTitleViewCentered;
    double  _lastLayoutPreferredHeight;
    UIView * _leftItemView;
    bool  _multiwayAudioButtonHidden;
    UIView * _rightItemView;
    UIContextMenuInteraction * _secondaryTitleInteraction;
    bool  _shouldAnimateAvatarLayoutChanges;
    UIImageView * _statusIndicatorImageView;
    long long  _statusIndicatorType;
    UIView * _subtitleView;
    UIColor * _titleDefaultBackgroundColor;
    UIView * _titleView;
    UIMenu * _titleViewContextMenu;
    bool  _videoEnabled;
}

@property (nonatomic) bool audioEnabled;
@property (nonatomic, retain) CKNavigationButtonView *buttonViewFaceTimeAudio;
@property (nonatomic, retain) CKNavigationButtonView *buttonViewFaceTimeVideo;
@property (nonatomic, retain) CKNavigationButtonView *buttonViewInfo;
@property (nonatomic, retain) NSMutableArray *buttonsToDisplay;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <CKNavigationBarCanvasViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool enforceLeftItemViewsAlignmentToCenter;
@property (nonatomic) bool expanseEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoreNextWidthChange;
@property (nonatomic, retain) UIButton *invisibleContextMenuButton;
@property (nonatomic) bool isAnimatingAvatars;
@property (nonatomic) bool isBusinessChat;
@property (nonatomic) bool isInEditingMode;
@property (nonatomic) long long joinButtonStyle;
@property (nonatomic) bool keepTitleViewCentered;
@property (nonatomic) double lastLayoutPreferredHeight;
@property (nonatomic, retain) UIView *leftItemView;
@property (nonatomic) bool multiwayAudioButtonHidden;
@property (nonatomic, retain) UIView *rightItemView;
@property (nonatomic, retain) UIContextMenuInteraction *secondaryTitleInteraction;
@property (nonatomic) bool shouldAnimateAvatarLayoutChanges;
@property (nonatomic, retain) UIImageView *statusIndicatorImageView;
@property (nonatomic) long long statusIndicatorType;
@property (nonatomic, retain) UIView *subtitleView;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIColor *titleDefaultBackgroundColor;
@property (nonatomic, retain) UIView *titleView;
@property (nonatomic, retain) UIMenu *titleViewContextMenu;
@property (nonatomic) bool videoEnabled;

+ (double)preferredLandscapeHeightForCompactWidth;
+ (double)preferredLandscapeHeightForRegularWidth;

- (void).cxx_destruct;
- (void)_addLaserEffectToButton:(id)arg1;
- (struct CGSize { double x1; double x2; })_baseBarItemViewSizeForView:(id)arg1 proposedSize:(struct CGSize { double x1; double x2; })arg2 minSize:(double)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_calculateFrameForButton:(id)arg1 shouldOffset:(bool)arg2;
- (double)_calculateYOriginForButtonWithHeight:(double)arg1;
- (bool)_canShowAvatarView;
- (double)_preferredHeightFromSubviewMetrics;
- (double)_preferredHeightWithSubviewLayout:(id)arg1;
- (id)_subviewLayoutWithBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updateJoinButtonStyle;
- (double)_updatedPreferredHeight;
- (bool)audioEnabled;
- (id)buttonViewFaceTimeAudio;
- (id)buttonViewFaceTimeVideo;
- (id)buttonViewInfo;
- (id)buttonsToDisplay;
- (void)clearAllItemViews;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (id)delegate;
- (void)didHoverOverTitleView:(id)arg1;
- (void)didMoveToSuperview;
- (bool)enforceLeftItemViewsAlignmentToCenter;
- (bool)expanseEnabled;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (bool)ignoreNextWidthChange;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)invisibleContextMenuButton;
- (bool)isAnimatingAvatars;
- (bool)isBusinessChat;
- (bool)isInEditingMode;
- (long long)joinButtonStyle;
- (bool)keepTitleViewCentered;
- (double)lastLayoutPreferredHeight;
- (void)layoutSubviews;
- (void)layoutTitleViewIfNeeded:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)leftItemView;
- (bool)multiwayAudioButtonHidden;
- (void)removeButtonViewsIfNeeded;
- (void)removeFromSuperview;
- (id)rightItemView;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaInsets;
- (id)secondaryTitleInteraction;
- (void)setAudioEnabled:(bool)arg1;
- (void)setButtonViewFaceTimeAudio:(id)arg1;
- (void)setButtonViewFaceTimeVideo:(id)arg1;
- (void)setButtonViewInfo:(id)arg1;
- (void)setButtonsToDisplay:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnforceLeftItemViewsAlignmentToCenter:(bool)arg1;
- (void)setExpanseEnabled:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setIgnoreNextWidthChange:(bool)arg1;
- (void)setInvisibleContextMenuButton:(id)arg1;
- (void)setIsAnimatingAvatars:(bool)arg1;
- (void)setIsBusinessChat:(bool)arg1;
- (void)setIsInEditingMode:(bool)arg1;
- (void)setJoinButtonStyle:(long long)arg1;
- (void)setKeepTitleViewCentered:(bool)arg1;
- (void)setLastLayoutPreferredHeight:(double)arg1;
- (void)setLeftItemView:(id)arg1;
- (void)setMultiwayAudioButtonHidden:(bool)arg1;
- (void)setRightItemView:(id)arg1;
- (void)setSecondaryTitleInteraction:(id)arg1;
- (void)setShouldAnimateAvatarLayoutChanges:(bool)arg1;
- (void)setStatusIndicatorImageView:(id)arg1;
- (void)setStatusIndicatorType:(long long)arg1;
- (void)setSubtitleView:(id)arg1;
- (void)setTitleDefaultBackgroundColor:(id)arg1;
- (void)setTitleView:(id)arg1;
- (void)setTitleViewContextMenu:(id)arg1;
- (void)setVideoEnabled:(bool)arg1;
- (bool)shouldAnimateAvatarLayoutChanges;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)statusIndicatorImageView;
- (long long)statusIndicatorType;
- (id)subtitleView;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })systemMinimumLayoutMarginsFromDelegate;
- (id)titleDefaultBackgroundColor;
- (id)titleView;
- (id)titleViewContextMenu;
- (bool)videoEnabled;

@end
