/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices
 */

@interface CHSWatchComplicationsCurvedLabelMetrics : NSObject <BSXPCSecureCoding, NSMutableCopying, NSSecureCoding> {
    struct CGSize { 
        double width; 
        double height; 
    }  _accessoryMaxSize;
    double  _accessoryPadding;
    unsigned long long  _accessoryPlacement;
    CHSBezierPath * _bezierPath;
    double  _centerAngle;
    struct CGPoint { 
        double x; 
        double y; 
    }  _circleCenter;
    double  _circleRadius;
    double  _fontSize;
    bool  _interior;
    double  _maximumAngularWidth;
    BSColor * _textColor;
    double  _tracking;
}

@property (nonatomic, readonly) struct CGSize { double x1; double x2; } accessoryMaxSize;
@property (nonatomic, readonly) double accessoryPadding;
@property (nonatomic, readonly) unsigned long long accessoryPlacement;
@property (nonatomic, readonly) CHSBezierPath *bezierPath;
@property (nonatomic, readonly) double centerAngle;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } circleCenter;
@property (nonatomic, readonly) double circleRadius;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double fontSize;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool interior;
@property (nonatomic, readonly) double maximumAngularWidth;
@property (readonly) Class superclass;
@property (nonatomic, readonly) BSColor *textColor;
@property (nonatomic, readonly) double tracking;

+ (bool)supportsBSXPCSecureCoding;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_filenameSafeStableHash;
- (id)_filenameSafeStableHashFromData:(id)arg1;
- (id)_initWithInstance:(id)arg1;
- (struct CGSize { double x1; double x2; })accessoryMaxSize;
- (double)accessoryPadding;
- (unsigned long long)accessoryPlacement;
- (id)bezierPath;
- (double)centerAngle;
- (struct CGPoint { double x1; double x2; })circleCenter;
- (double)circleRadius;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)encodeWithBSXPCCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (double)fontSize;
- (unsigned long long)hash;
- (id)init;
- (id)initWithBSXPCCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (bool)interior;
- (bool)isEqual:(id)arg1;
- (double)maximumAngularWidth;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)textColor;
- (double)tracking;

@end
