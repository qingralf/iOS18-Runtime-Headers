/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ClockKitUI.framework/ClockKitUI
 */

@interface CLKUIDualTimeAnalogTicksView : UIView {
    struct { 
        unsigned long long minuteTickCount; 
        unsigned long long hourTickCount; 
        struct CGSize { 
            double width; 
            double height; 
        } minuteTickSize; 
        struct CGSize { 
            double width; 
            double height; 
        } hourTickSize; 
        double minuteTickInset; 
        double hourTickInset; 
        bool allowBackgroundColorAction; 
    }  _configuration;
    CALayer * _hourTickLayer;
    CAReplicatorLayer * _hourTickReplicatorLayer;
    CALayer * _minuteTickLayer;
    CAReplicatorLayer * _minuteTickReplicatorLayer;
}

- (void).cxx_destruct;
- (id)_createReplicatorLayerWithTickCount:(unsigned long long)arg1;
- (id)_createTickLayerWithSize:(struct CGSize { double x1; double x2; })arg1 actions:(id)arg2;
- (id)initWithConfiguration:(struct { unsigned long long x1; unsigned long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; double x5; double x6; bool x7; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 configuration:(struct { unsigned long long x1; unsigned long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; double x5; double x6; bool x7; })arg2;
- (void)layoutSubviews;
- (void)setHourTickColor:(id)arg1 minuteTickColor:(id)arg2;

@end
