/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDAssetZoneKey : NSObject <NSCopying> {
    NSData * _cloneContext;
    long long  _destinationDatabaseScope;
    CKRecordZoneID * _destinationZoneID;
    bool  _isPackageRereference;
    long long  _sourceDatabaseScope;
    CKRecordZoneID * _sourceZoneID;
    NSNumber * _useMMCSEncryptionV2;
}

@property (nonatomic, retain) NSData *cloneContext;
@property (nonatomic, readonly) long long destinationDatabaseScope;
@property (nonatomic, readonly) CKRecordZoneID *destinationZoneID;
@property (nonatomic, readonly) bool isCrossOwner;
@property (nonatomic, readonly) bool isPackageRereference;
@property (nonatomic, readonly) bool isReReference;
@property (nonatomic, readonly) long long sourceDatabaseScope;
@property (nonatomic, readonly) CKRecordZoneID *sourceZoneID;
@property (nonatomic, readonly) NSNumber *useMMCSEncryptionV2;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (int)authPutType;
- (id)cloneContext;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (long long)destinationDatabaseScope;
- (id)destinationZoneID;
- (unsigned long long)hash;
- (id)initWithDestinationZoneID:(id)arg1 destinationDatabaseScope:(long long)arg2 usesMMCSEncryptionV2:(id)arg3;
- (id)initWithDestinationZoneID:(id)arg1 destinationDatabaseScope:(long long)arg2 usesMMCSEncryptionV2:(id)arg3 sourceZoneID:(id)arg4 sourceDatabaseScope:(long long)arg5 isPackageRereference:(bool)arg6;
- (bool)isCrossOwner;
- (bool)isEqual:(id)arg1;
- (bool)isPackageRereference;
- (bool)isReReference;
- (void)setCloneContext:(id)arg1;
- (long long)sourceDatabaseScope;
- (id)sourceZoneID;
- (id)useMMCSEncryptionV2;

@end
