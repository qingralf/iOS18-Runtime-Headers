/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDPCSManager : NSObject <CKDPCSTestOverrideProvider, CKDProtocolTranslatorIdentityDelegate> {
    CKDAccount * _account;
    NSData * _boundaryKeyData;
    NSObject<OS_dispatch_queue> * _callbackQueue;
    CKContainerID * _containerID;
    <CKDContainerScopedUserIDProvider> * _containerScopedUserIDProvider;
    CKDLogicalDeviceContext * _deviceContext;
    bool  _forceEnableReadOnlyManatee;
    CKDPCSIdentityManager * _identityManager;
    NSDate * _lastMissingManateeIdentityErrorDateForCurrentService;
    unsigned long long  _mmcsEncryptionSupport;
    NSMutableDictionary * _pcsTestOverrides;
    NSString * _responsibleBundleID;
    NSObject<OS_dispatch_queue> * _synchronizeQueue;
    NSMutableSet * _undecryptablePCSDataHashes;
    bool  _useZoneWidePCS;
    NSUUID * _uuid;
}

@property (retain) CKDAccount *account;
@property (nonatomic, retain) NSData *boundaryKeyData;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic, readonly) CKContainerID *containerID;
@property (nonatomic, readonly) <CKDContainerScopedUserIDProvider> *containerScopedUserIDProvider;
@property (nonatomic, readonly) bool currentServiceIsManatee;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) CKDLogicalDeviceContext *deviceContext;
@property (nonatomic, readonly) bool forceEnableReadOnlyManatee;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) CKDPCSIdentityManager *identityManager;
@property (nonatomic, retain) NSDate *lastMissingManateeIdentityErrorDateForCurrentService;
@property (nonatomic, readonly) unsigned long long mmcsEncryptionSupport;
@property (nonatomic, readonly) NSString *pcsServiceName;
@property (nonatomic, retain) NSMutableDictionary *pcsTestOverrides;
@property (nonatomic, readonly) NSString *responsibleBundleID;
@property (nonatomic, readonly) unsigned long long serviceTypeForSharing;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *synchronizeQueue;
@property (nonatomic, retain) NSMutableSet *undecryptablePCSDataHashes;
@property (nonatomic, readonly) bool useZoneWidePCS;
@property (nonatomic, retain) NSUUID *uuid;

+ (id)_legacyServiceNameForContainerID:(id)arg1;
+ (id)allProtectionIdentifiersFromShareProtection:(struct _OpaquePCSShareProtection { }*)arg1;
+ (id)etagFromPCSData:(id)arg1;
+ (id)noMatchingIdentityErrorForPCSError:(id)arg1 withErrorCode:(long long)arg2 description:(id)arg3;
+ (id)pcsOverrideKeys;
+ (id)protectionIdentifierFromShareProtection:(struct _OpaquePCSShareProtection { }*)arg1;
+ (id)publicKeyIDFromIdentity:(struct _OpaquePCSShareProtection { }*)arg1;

- (void).cxx_destruct;
- (id)_addIdentity:(struct _PCSIdentitySetData { }*)arg1 withService:(unsigned long long)arg2 toPCS:(struct _OpaquePCSShareProtection { }*)arg3;
- (bool)_addPublicIdentityForService:(unsigned long long)arg1 toSharePCS:(struct _OpaquePCSShareProtection { }*)arg2 withError:(id*)arg3;
- (bool)_checkAndClearPCSTestOverrideForKey:(id)arg1;
- (bool)_checkPCSTestOverrideForKey:(id)arg1;
- (bool)_checkUnitTestOverridesForDecryptionFailuresWithState:(bool)arg1 error:(id*)arg2;
- (void)_createPCSFromData:(id)arg1 ofType:(unsigned long long)arg2 usingPCSServiceType:(unsigned long long)arg3 tryDecryptingWithOtherServices:(bool)arg4 withSyncKeyRegistryRetry:(bool)arg5 lastModifiedDate:(id)arg6 requestorOperationID:(id)arg7 completionHandler:(id /* block */)arg8;
- (bool)_isAllowlistedKeyRollingContainerID:(id)arg1;
- (bool)_isKeyRollingUnitTestContainerID:(id)arg1;
- (void)_lockedGlobalPerUserBoundaryKeyDataWithCompletionHandler:(id /* block */)arg1;
- (void)_locked_createPCSFromData:(id)arg1 ofType:(unsigned long long)arg2 usingPCSServiceType:(unsigned long long)arg3 tryDecryptingWithOtherServices:(bool)arg4 withSyncKeyRegistryRetry:(bool)arg5 lastModifiedDate:(id)arg6 keySyncAnalytics:(id)arg7 requestorOperationID:(id)arg8 completionHandler:(id /* block */)arg9;
- (void)_locked_createZonePCSWithSyncKeyRegistryRetry:(bool)arg1 requestorOperationID:(id)arg2 keySyncAnalytics:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)_locked_decryptCurrentPerParticipantPCSDataOnSharePCS:(id)arg1 withPublicSharingKey:(id)arg2 oonPrivateKey:(id)arg3 shareModificationDate:(id)arg4 requestorOperationID:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)_locked_decryptPCSDataOnSharePCS:(id)arg1 shareModificationDate:(id)arg2 withPublicSharingKey:(id)arg3 oonPrivateKey:(id)arg4 requestorOperationID:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)_locked_markMissingIdentitiesFromFailedDecryptError:(id)arg1 serviceName:(id)arg2;
- (void)_locked_pcsDataFromFetchedShare:(id)arg1 withPublicSharingKey:(id)arg2 oonPrivateKey:(id)arg3 withServiceType:(unsigned long long)arg4 requestorOperationID:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)_onSynchronizeQueue:(id /* block */)arg1;
- (id)_pcsObjectKindForCKDPCSBlobType:(unsigned long long)arg1;
- (id)_pcsTestOverrideForKey:(id)arg1;
- (id)_unwrapEncryptedData:(id)arg1 usingKeyID:(id)arg2 forPCS:(struct _OpaquePCSShareProtection { }*)arg3 withContextString:(id)arg4;
- (id)account;
- (void)addEntriesForUnitTestOverrides:(id)arg1;
- (id)addIdentityBackToPCS:(struct _OpaquePCSShareProtection { }*)arg1;
- (id)addIdentityForService:(unsigned long long)arg1 toPCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (id)addPublicIdentity:(struct _PCSPublicIdentityData { }*)arg1 toSharePCS:(struct _OpaquePCSShareProtection { }*)arg2 permission:(unsigned int)arg3;
- (bool)addRandomShareeToPCS:(struct _OpaquePCSShareProtection { }*)arg1;
- (bool)addSharePCS:(struct _OpaquePCSShareProtection { }*)arg1 toRecordPCS:(struct _OpaquePCSShareProtection { }*)arg2 error:(id*)arg3;
- (bool)addSharePCS:(struct _OpaquePCSShareProtection { }*)arg1 toRecordPCS:(struct _OpaquePCSShareProtection { }*)arg2 permission:(unsigned long long)arg3 error:(id*)arg4;
- (id)addSharingIdentity:(struct _PCSIdentityData { }*)arg1 toSharePCS:(struct _OpaquePCSShareProtection { }*)arg2 permission:(unsigned long long)arg3;
- (bool)availableIdentityForService:(unsigned long long)arg1 error:(id*)arg2;
- (id)boundaryKeyData;
- (id)callbackQueue;
- (void)canDecryptInvitedProtectionData:(id)arg1 participantProtectionInfo:(id)arg2 serviceType:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (bool)canRollShareKeys;
- (id)containerID;
- (id)containerScopedUserIDProvider;
- (bool)containerSupportsEnhancedContext;
- (id)copyAllPublicKeysForService:(unsigned long long)arg1 withError:(id*)arg2;
- (struct _PCSPublicIdentityData { }*)copyDiversifiedPublicIdentityForService:(unsigned long long)arg1 withError:(id*)arg2;
- (id)copyDiversifiedPublicKeyForService:(unsigned long long)arg1 withError:(id*)arg2;
- (struct _PCSPublicIdentityData { }*)copyPublicAuthorshipIdentityFromPCS:(struct _OpaquePCSShareProtection { }*)arg1;
- (id)copyPublicKeyForService:(unsigned long long)arg1 withError:(id*)arg2;
- (id)counterSignRecordPCS:(struct _OpaquePCSShareProtection { }*)arg1 zonePCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (struct _OpaquePCSShareProtection { }*)createChainPCSWithError:(id*)arg1;
- (id)createCloudKitFeaturesSignatureForData:(id)arg1 forScope:(unsigned long long)arg2 error:(id*)arg3;
- (struct _PCSIdentityData { }*)createCombinedIdentityWithOutOfNetworkPrivateKey:(id)arg1 publicSharingIdentity:(id)arg2;
- (struct _OpaquePCSShareProtection { }*)createEmptySharePCSOfType:(unsigned long long)arg1 error:(id*)arg2;
- (struct _OpaquePCSShareProtection { }*)createEmptySignedSharePCSOfType:(unsigned long long)arg1 forPCSServiceType:(unsigned long long)arg2 withError:(id*)arg3;
- (void)createIngestedPPPCSDataFromInvitationData:(id)arg1 shareModificationDate:(id)arg2 requestorOperationID:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)createNewSharePCSDataForShareWithID:(id)arg1 withPublicSharingKey:(id)arg2 addDebugIdentity:(bool)arg3 error:(id*)arg4;
- (struct _OpaquePCSShareProtection { }*)createPCSObjectFromData:(id)arg1 ofType:(unsigned long long)arg2 sharedToPCS:(struct _OpaquePCSShareProtection { }*)arg3 error:(id*)arg4;
- (struct _OpaquePCSShareProtection { }*)createPCSObjectFromData:(id)arg1 ofType:(unsigned long long)arg2 sharedToPCS:(struct _OpaquePCSShareProtection { }*)arg3 logFailure:(bool)arg4 error:(id*)arg5;
- (struct _OpaquePCSShareProtection { }*)createPCSObjectFromData:(id)arg1 ofType:(unsigned long long)arg2 sharedToPCS:(struct _OpaquePCSShareProtection { }*)arg3 logFailure:(bool)arg4 trusts:(id)arg5 error:(id*)arg6;
- (struct _OpaquePCSShareProtection { }*)createPCSObjectFromData:(id)arg1 ofType:(unsigned long long)arg2 sharedToPCS:(struct _OpaquePCSShareProtection { }*)arg3 trusts:(id)arg4 error:(id*)arg5;
- (id)createProtectionInfoFromOONPrivateKey:(id)arg1 privateToken:(id)arg2 OONProtectionInfo:(id)arg3 error:(id*)arg4;
- (struct _PCSPublicIdentityData { }*)createPublicSharingIdentityFromPublicKey:(id)arg1 error:(id*)arg2;
- (struct _PCSIdentityData { }*)createRandomSharingIdentityWithError:(id*)arg1;
- (struct _OpaquePCSShareProtection { }*)createRecordPCSWithEncryptedZonePCS:(struct __CFData { }*)arg1 sharePCS:(struct _OpaquePCSShareProtection { }*)arg2 createLite:(bool)arg3 error:(id*)arg4;
- (struct _OpaquePCSShareProtection { }*)createRecordPCSWithZonePCS:(struct _OpaquePCSShareProtection { }*)arg1 sharePCS:(struct _OpaquePCSShareProtection { }*)arg2 createLite:(bool)arg3 error:(id*)arg4;
- (void)createSharePCSFromData:(id)arg1 ofType:(unsigned long long)arg2 withService:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (struct _OpaquePCSShareProtection { }*)createSharePCSFromData:(id)arg1 ofType:(unsigned long long)arg2 withService:(unsigned long long)arg3 error:(id*)arg4;
- (struct _OpaquePCSShareProtection { }*)createSharePCSFromData:(id)arg1 ofType:(unsigned long long)arg2 withService:(unsigned long long)arg3 logFailure:(bool)arg4 error:(id*)arg5;
- (struct _OpaquePCSShareProtection { }*)createSharePCSFromData:(id)arg1 sharePrivateKey:(id)arg2 error:(id*)arg3;
- (struct _OpaquePCSShareProtection { }*)createSharePCSFromData:(id)arg1 sharingIdentity:(struct _PCSIdentityData { }*)arg2 error:(id*)arg3;
- (struct _OpaquePCSShareProtection { }*)createSharePCSFromData:(id)arg1 sharingIdentity:(struct _PCSIdentityData { }*)arg2 logFailure:(bool)arg3 error:(id*)arg4;
- (struct _OpaquePCSShareProtection { }*)createSharePCSFromEncryptedData:(id)arg1 error:(id*)arg2;
- (struct _OpaquePCSShareProtection { }*)createSharePCSOfType:(unsigned long long)arg1 forPCSServiceType:(unsigned long long)arg2 error:(id*)arg3;
- (struct _OpaquePCSShareProtection { }*)createSharePublicPCSWithIdentity:(struct _PCSIdentityData { }*)arg1 error:(id*)arg2;
- (struct _PCSIdentityData { }*)createSharingIdentityFromData:(id)arg1 error:(id*)arg2;
- (id)createSignatureWithIdentity:(struct _PCSIdentityData { }*)arg1 dataToBeSigned:(id)arg2 forScope:(unsigned long long)arg3 error:(id*)arg4;
- (void)createZonePCSFromData:(id)arg1 usingServiceIdentityWithType:(unsigned long long)arg2 zonePCSModificationDate:(id)arg3 requestorOperationID:(id)arg4 completionHandler:(id /* block */)arg5;
- (struct _OpaquePCSShareProtection { }*)createZonePCSWithError:(id*)arg1;
- (void)createZonePCSWithRequestorOperationID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)createZonePCSWithSyncKeyRegistryRetry:(bool)arg1 requestorOperationID:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)currentServiceIsManatee;
- (id)dataFromRecordPCS:(struct _OpaquePCSShareProtection { }*)arg1 error:(id*)arg2;
- (id)dataFromSharePCS:(struct _OpaquePCSShareProtection { }*)arg1 pcsBlobType:(unsigned long long)arg2 error:(id*)arg3;
- (id)dataFromSharingIdentity:(struct _PCSIdentityData { }*)arg1 error:(id*)arg2;
- (id)dataFromZonePCS:(struct _OpaquePCSShareProtection { }*)arg1 error:(id*)arg2;
- (void)dealloc;
- (struct _PCSIdentityData { }*)debugSharingIdentity;
- (id)decryptChainPCSForRecordPCS:(id)arg1;
- (void)decryptPCSDataOnSharePCS:(id)arg1 shareModificationDate:(id)arg2 requestorOperationID:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)decryptSharedZonePCSData:(id)arg1 withInvitedPCS:(struct _OpaquePCSShareProtection { }*)arg2 error:(id*)arg3;
- (id)deviceContext;
- (id)etagFromSharePCS:(struct _OpaquePCSShareProtection { }*)arg1 error:(id*)arg2;
- (id)etagFromZonePCS:(struct _OpaquePCSShareProtection { }*)arg1 error:(id*)arg2;
- (void)findSelfParticipantOnShareMetadata:(id)arg1 invitationToken:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)forceEnableReadOnlyManatee;
- (id)generateAnonymousCKUserIDForCurrentUserInShare:(id)arg1 containerID:(id)arg2 acceptA2AShareUsingVersionOneAnonymousIdentifier:(bool)arg3;
- (id)generateOONPrivateKeyWithError:(id*)arg1;
- (id)generateOctopusAnonymousUserID;
- (id)getAllPublicKeysForExportedData:(id)arg1 error:(id*)arg2;
- (id)getCurrentIdentityExportedPrivateKey;
- (void)globalPerUserBoundaryKeyDataWithCompletionHandler:(id /* block */)arg1;
- (id)identityManager;
- (id)initWithContainer:(id)arg1 account:(id)arg2;
- (bool)isPCSSizeTooBigForKeyRoll:(unsigned long long)arg1;
- (bool)isPCSTooBigForKeyRoll:(struct _OpaquePCSShareProtection { }*)arg1;
- (bool)isPreviouslyUndecryptablePCS:(id)arg1;
- (bool)isRemindersZoneThatNeedsUpdate:(struct _OpaquePCSShareProtection { }*)arg1;
- (id)keyRollForZoneWideShareRecordPCS:(id)arg1 sharedZonePCS:(id)arg2 sharePCS:(id)arg3 forOperation:(id)arg4;
- (id)keyRollForZoneWideShareWithZonePCS:(id)arg1 sharePCS:(id)arg2 forOperation:(id)arg3;
- (id)keyRollIfNeededForPerRecordPCS:(id)arg1 needsRollAndCounterSign:(bool)arg2 forOperation:(id)arg3 didRoll:(bool*)arg4;
- (long long)keyrollingErrorCodeForPCSOfType:(unsigned long long)arg1;
- (id)lastMissingManateeIdentityErrorDateForCurrentService;
- (void)markUndecryptablePCS:(id)arg1;
- (unsigned long long)maxPcsBytes;
- (unsigned long long)mmcsEncryptionSupport;
- (id)participantPublicKeyForServiceType:(unsigned long long)arg1 error:(id*)arg2;
- (void)pcsDataFromFetchedShare:(id)arg1 requestorOperationID:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)pcsDataFromFetchedShare:(id)arg1 withPublicSharingKey:(id)arg2 oonPrivateKey:(id)arg3 withServiceType:(unsigned long long)arg4 requestorOperationID:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)pcsDataFromFetchedShare:(id)arg1 withServiceType:(unsigned long long)arg2 requestorOperationID:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)pcsServiceName;
- (id)pcsTestOverrides;
- (id)publicKeyDataFromPCS:(struct _OpaquePCSShareProtection { }*)arg1 error:(id*)arg2;
- (id)publicKeyFromSignature:(id)arg1 error:(id*)arg2;
- (unsigned long long)publicKeyVersionForServiceType:(unsigned long long)arg1;
- (bool)recordProtectionDataNeedsCounterSign:(id)arg1 error:(id*)arg2;
- (id)referenceIdentifierStringFromAssetKey:(id)arg1;
- (id)removeEncryptedPCS:(id)arg1 fromSharePCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (unsigned long long)removePCSKeys:(id)arg1 fromPCS:(struct _OpaquePCSShareProtection { }*)arg2 withProtectionEtag:(id)arg3 forOperation:(id)arg4;
- (id)removePrivateKeysForKeyIDs:(id)arg1 fromPCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (id)removePublicIdentity:(struct _PCSPublicIdentityData { }*)arg1 fromSharePCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (id)removePublicKeyID:(id)arg1 fromPCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (bool)removePublicKeys:(id)arg1 fromPCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (bool)removeSharePCS:(struct _OpaquePCSShareProtection { }*)arg1 fromRecordPCS:(struct _OpaquePCSShareProtection { }*)arg2 error:(id*)arg3;
- (id)removeSharingIdentity:(struct _PCSIdentityData { }*)arg1 fromSharePCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (id)replacePrimaryKeyInPCS:(struct _OpaquePCSShareProtection { }*)arg1 ofType:(unsigned long long)arg2;
- (id)responsibleBundleID;
- (id)rollIdentityForSharePCS:(struct _OpaquePCSShareProtection { }*)arg1 ofType:(unsigned long long)arg2 removeAllExistingPrivateKeys:(bool)arg3 error:(id*)arg4;
- (id)rollMasterKeyForRecordPCS:(struct _OpaquePCSShareProtection { }*)arg1 forOperation:(id)arg2;
- (id)rollMasterKeyForRecordPCS:(struct _OpaquePCSShareProtection { }*)arg1 isZoneishRecord:(bool)arg2 bypassAllowlistedContainers:(bool)arg3 forOperation:(id)arg4;
- (void)sendCoreAnalyticsEventForKeySync:(id)arg1;
- (unsigned long long)serviceTypeForSharing;
- (bool)serviceTypeIsManatee:(unsigned long long)arg1;
- (void)setAccount:(id)arg1;
- (void)setBoundaryKeyData:(id)arg1;
- (void)setCallbackQueue:(id)arg1;
- (void)setLastMissingManateeIdentityErrorDateForCurrentService:(id)arg1;
- (void)setOwnerIdentity:(struct _PCSPublicIdentityData { }*)arg1 onPCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (void)setPCSServiceNameOverwrite:(id)arg1;
- (void)setPcsTestOverrides:(id)arg1;
- (void)setSynchronizeQueue:(id)arg1;
- (void)setUndecryptablePCSDataHashes:(id)arg1;
- (void)setUuid:(id)arg1;
- (bool)sharingFingerprintsContainPublicKeyWithData:(id)arg1 error:(id*)arg2;
- (id)sharingIdentityDataFromPCS:(struct _OpaquePCSShareProtection { }*)arg1 error:(id*)arg2;
- (unsigned long long)sizeOfPCS:(struct _OpaquePCSShareProtection { }*)arg1;
- (id)synchronizeQueue;
- (void)synchronizeUserKeyRegistryForServiceType:(unsigned long long)arg1 shouldThrottle:(bool)arg2 context:(id)arg3 requestorOperationID:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)synchronizeUserKeyRegistryForSigningIdentitiesForRequestorOperationID:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)undecryptablePCSDataHashes;
- (id)unwrapAssetKey:(id)arg1 withRecordPCS:(struct _OpaquePCSShareProtection { }*)arg2 inContext:(id)arg3 withError:(id*)arg4;
- (id)unwrapEncryptedData:(id)arg1 withPCS:(struct _OpaquePCSShareProtection { }*)arg2 inContext:(id)arg3;
- (id)unwrapEncryptedData:(id)arg1 withPCS:(struct _OpaquePCSShareProtection { }*)arg2 withContextString:(id)arg3;
- (void)updateAccount:(id)arg1 clearPCSCacheHandler:(id /* block */)arg2;
- (id)updateIdentityAndRollKeyForZonePCS:(struct _OpaquePCSShareProtection { }*)arg1 usingServiceIdentityWithType:(unsigned long long)arg2 forOperation:(id)arg3;
- (id)updateServiceIdentityOnZonePCS:(struct _OpaquePCSShareProtection { }*)arg1;
- (bool)updateSigningIdentityOnPCS:(struct _OpaquePCSShareProtection { }*)arg1 usingSignedPCS:(struct _OpaquePCSShareProtection { }*)arg2;
- (id)updateZoneIdentityForRecordPCS:(struct _OpaquePCSShareProtection { }*)arg1 usingZonePCS:(struct _OpaquePCSShareProtection { }*)arg2 isZoneishRecord:(bool)arg3 bypassAllowlistedContainers:(bool)arg4;
- (bool)useZoneWidePCS;
- (id)uuid;
- (bool)validateFullPublicKeySignature:(id)arg1 forSignedData:(id)arg2 error:(id*)arg3;
- (bool)validateSignature:(id)arg1 forSignedData:(id)arg2 usingIdentityType:(unsigned long long)arg3 error:(id*)arg4;
- (id)wrapAssetKey:(id)arg1 withRecordPCS:(struct _OpaquePCSShareProtection { }*)arg2 inContext:(id)arg3 withError:(id*)arg4;
- (id)wrapEncryptedData:(id)arg1 withPCS:(struct _OpaquePCSShareProtection { }*)arg2 inContext:(id)arg3;
- (id)wrapEncryptedData:(id)arg1 withPCS:(struct _OpaquePCSShareProtection { }*)arg2 withContextString:(id)arg3;
- (bool)zonePCSNeedsKeyRolled:(struct _OpaquePCSShareProtection { }*)arg1;
- (bool)zonePCSNeedsKeyRolled:(struct _OpaquePCSShareProtection { }*)arg1 isZoneishZone:(bool)arg2 bypassAllowlistedContainers:(bool)arg3;
- (bool)zonePCSNeedsUpdate:(struct _OpaquePCSShareProtection { }*)arg1;

@end
