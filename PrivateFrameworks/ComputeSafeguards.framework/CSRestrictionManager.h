/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ComputeSafeguards.framework/ComputeSafeguards
 */

@interface CSRestrictionManager : NSObject <CSProcessesChangesObserving, CSScenarioChangesObserving> {
    NSSet * _currentActiveScenarios;
    NSMutableDictionary * _currentRestrictionsByProcess;
    <CSRestrictionDataProviding> * _dataProvider;
    <CSRestriction> * _defaultRestriction;
    NSObject<OS_os_log> * _logger;
    NSMutableSet * _monitors;
    CSProcessManager * _processManager;
    NSMutableDictionary * _processesAffectedByScenarioMap;
    NSDictionary * _restrictionsByProcessPerScenario;
    CSScenarioManager * _scenarioManager;
}

@property (retain) NSSet *currentActiveScenarios;
@property (retain) NSMutableDictionary *currentRestrictionsByProcess;
@property (retain) <CSRestrictionDataProviding> *dataProvider;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (retain) <CSRestriction> *defaultRestriction;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NSObject<OS_os_log> *logger;
@property (retain) NSMutableSet *monitors;
@property (retain) CSProcessManager *processManager;
@property (retain) NSMutableDictionary *processesAffectedByScenarioMap;
@property (retain) NSDictionary *restrictionsByProcessPerScenario;
@property (retain) CSScenarioManager *scenarioManager;
@property (readonly) Class superclass;

+ (id)sharedInstanceWithDataProvider:(id)arg1;

- (void).cxx_destruct;
- (id)_initWithDataProvider:(id)arg1;
- (bool)applyDefaultRestrictionsToProcess:(id)arg1;
- (bool)applyRestrictionsToProcess:(id)arg1 forScenario:(id)arg2;
- (id)currentActiveScenarios;
- (void)currentActiveScenarios:(id)arg1 previousActiveScenarios:(id)arg2;
- (id)currentRestrictionsByProcess;
- (id)dataProvider;
- (id)defaultRestriction;
- (id)determineScenarioForProcess:(id)arg1;
- (id)logger;
- (id)monitors;
- (void)observeNewRunningProcesses:(id)arg1;
- (void)observeProcessChanges;
- (void)populateScenarios;
- (id)processManager;
- (id)processesAffectedByScenarioMap;
- (void)queueChangeForActivatedScenarios:(id)arg1 deactivatedScenarios:(id)arg2;
- (id)restrictionsByProcessPerScenario;
- (id)scenarioManager;
- (void)setCurrentActiveScenarios:(id)arg1;
- (void)setCurrentRestrictionsByProcess:(id)arg1;
- (void)setDataProvider:(id)arg1;
- (void)setDefaultRestriction:(id)arg1;
- (void)setLogger:(id)arg1;
- (void)setMonitors:(id)arg1;
- (void)setProcessManager:(id)arg1;
- (void)setProcessesAffectedByScenarioMap:(id)arg1;
- (void)setRestrictionsByProcessPerScenario:(id)arg1;
- (void)setScenarioManager:(id)arg1;
- (void)traverseRestrictionsData;

@end
