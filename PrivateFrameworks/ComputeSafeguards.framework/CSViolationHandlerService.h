/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ComputeSafeguards.framework/ComputeSafeguards
 */

@interface CSViolationHandlerService : NSXPCListener <NSXPCListenerDelegate, SafeguardsViolationReporting> {
    CSExcessiveCPUViolationHandler * _cpuViolationHandler;
    NSObject<OS_os_log> * _logger;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (nonatomic, retain) CSExcessiveCPUViolationHandler *cpuViolationHandler;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_os_log> *logger;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;

+ (id)_sharedInstance;
+ (void)run;

- (void).cxx_destruct;
- (id)_init;
- (void)_start;
- (id)cpuViolationHandler;
- (void)initializeHandlers;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)logger;
- (id)queue;
- (void)reportExcessiveCPUUseBy:(id)arg1 pid:(unsigned long long)arg2 path:(id)arg3 endTime:(struct mach_timespec { unsigned int x1; int x2; })arg4 observedValue:(long long)arg5 observationWindow:(long long)arg6 limitValue:(long long)arg7 limitWindow:(long long)arg8 fatal:(bool)arg9;
- (void)setCpuViolationHandler:(id)arg1;
- (void)setLogger:(id)arg1;
- (void)setQueue:(id)arg1;

@end
