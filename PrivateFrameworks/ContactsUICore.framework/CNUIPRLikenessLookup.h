/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore
 */

@interface CNUIPRLikenessLookup : NSObject <CNUIPRLikenessResolver> {
    CNContactStore * _contactStore;
    unsigned long long  _lookupOptions;
    CNUIMeContactMonitor * _meMonitor;
    NSString * _personaId;
    <CNUIPlaceholderProviderFactory> * _placeholderProviderFactory;
    long long  _prohibitedSources;
    <CNSchedulerProvider> * _schedulerProvider;
}

@property (nonatomic, readonly) CNContactStore *contactStore;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) <CNUIPRLikenessProvider> *loadingPlaceholderLikeness;
@property (nonatomic) unsigned long long lookupOptions;
@property (nonatomic, retain) CNUIMeContactMonitor *meMonitor;
@property (nonatomic, readonly) NSString *personaId;
@property (nonatomic, retain) <CNUIPlaceholderProviderFactory> *placeholderProviderFactory;
@property (nonatomic) long long prohibitedSources;
@property (nonatomic, readonly) <CNSchedulerProvider> *schedulerProvider;
@property (readonly) Class superclass;

+ (id)basicMonogramForContactFuture:(id)arg1 monogramColor:(id)arg2;
+ (id)basicMonogramFromString:(id)arg1 color:(id)arg2;
+ (id)basicMonogramObservableForContactFuture:(id)arg1 monogramColor:(id)arg2;
+ (id)basicMonogramObservableFromString:(id)arg1 color:(id)arg2;
+ (id)contactFuture:(id)arg1 contactStore:(id)arg2 personaId:(id)arg3 scheduler:(id)arg4 refetchContact:(bool)arg5;
+ (id)contactFuture:(id)arg1 contactStore:(id)arg2 refetchContact:(bool)arg3;
+ (id)descriptorForRequiredKeys;
+ (id)observableFromLikenessProviderBlock:(id /* block */)arg1 withScheduler:(id)arg2;
+ (id)photoObservableWithPhotoFuture:(id)arg1 likenessFingerprint:(id)arg2 scheduler:(id)arg3;
+ (id)photoWithPhotoFuture:(id)arg1 likenessFingerprint:(id)arg2;
+ (bool)useGivenAvatarForContact:(id)arg1;

- (void).cxx_destruct;
- (id)badgeObservableWithLikenessBadge:(id)arg1 workScheduler:(id)arg2;
- (id)badgeWithLikenessBadge:(id)arg1;
- (id)basicMonogramFromString:(id)arg1 color:(id)arg2;
- (id)basicMonogramObservableFromString:(id)arg1 color:(id)arg2;
- (id)basicMonogramObservableWithContactFuture:(id)arg1 monogramColor:(id)arg2;
- (id)basicMonogramWithContactFuture:(id)arg1 monogramColor:(id)arg2;
- (id)blessedPhotoObservableWithFuture:(id)arg1 contact:(id)arg2 workScheduler:(id)arg3;
- (id)blessedPhotoWithFuture:(id)arg1 contact:(id)arg2;
- (id)contactStore;
- (id)contentObservableForContact:(id)arg1 placeholderProviderFactory:(id)arg2 options:(id)arg3 workScheduler:(id)arg4;
- (id)futureResultForPhotoImageDataForContact:(id)arg1 error:(id*)arg2;
- (id)futureResultForPhotoImageDataForMeContact:(id)arg1 error:(id*)arg2;
- (id)initWithContactStore:(id)arg1 scheduler:(id)arg2;
- (id)initWithContactStore:(id)arg1 scheduler:(id)arg2 meMonitor:(id)arg3;
- (id)initWithContactStore:(id)arg1 schedulerProvider:(id)arg2;
- (id)initWithContactStore:(id)arg1 schedulerProvider:(id)arg2 meMonitor:(id)arg3;
- (id)initWithContactStore:(id)arg1 schedulerProvider:(id)arg2 meMonitor:(id)arg3 personaId:(id)arg4;
- (id)initWithPersonaId:(id)arg1 schedulerProvider:(id)arg2;
- (bool)isMeContact:(id)arg1;
- (id)likenessForContact:(id)arg1 error:(id*)arg2;
- (id)likenessForContact:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)likenessForContact:(id)arg1 placeholderProviderFactory:(id)arg2 options:(id)arg3;
- (id)likenessObservableForContact:(id)arg1 placeholderProviderFactory:(id)arg2 options:(id)arg3 workScheduler:(id)arg4;
- (id)likenessesForContact:(id)arg1 options:(id)arg2 workScheduler:(id)arg3;
- (id)likenessesForContact:(id)arg1 workScheduler:(id)arg2;
- (id)likenessesForContacts:(id)arg1 options:(id)arg2 error:(id)arg3;
- (id)loadingPlaceholderLikeness;
- (id)loadingPlaceholderObservableWithPlaceholderProviderFactory:(id)arg1;
- (id)loadingPlaceholderWithPlaceholderProviderFactory:(id)arg1;
- (unsigned long long)lookupOptions;
- (bool)mayIncludeSource:(long long)arg1;
- (id)meMonitor;
- (id)personaId;
- (id)photoFutureForContactFuture:(id)arg1 photoFuture:(id)arg2 allowingFallbackForMeCard:(bool)arg3;
- (id)photoFutureForContactFuture:(id)arg1 scheduler:(id)arg2;
- (id)photoImageDataForContact:(id)arg1 error:(id*)arg2;
- (id)placeholderProviderFactory;
- (long long)prohibitedSources;
- (id)remoteImageWithContactFuture:(id)arg1;
- (id)remoteImagesObservableWithContactFuture:(id)arg1 workScheduler:(id)arg2;
- (id)resolveLikenessesForContacts:(id)arg1 workScheduler:(id)arg2 withContentHandler:(id /* block */)arg3;
- (id)schedulerProvider;
- (void)setLookupOptions:(unsigned long long)arg1;
- (void)setMeMonitor:(id)arg1;
- (void)setPlaceholderProviderFactory:(id)arg1;
- (void)setProhibitedSources:(long long)arg1;
- (bool)shouldFetchSharedPhotoForContact:(id)arg1;
- (id)silhouetteObservableWithPlaceholderProviderFactory:(id)arg1 contact:(id)arg2 workScheduler:(id)arg3;
- (id)silhouetteWithPlaceholderProviderFactory:(id)arg1 contact:(id)arg2;
- (bool)skipContactLookup;

@end
