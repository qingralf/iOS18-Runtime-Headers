/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit
 */

@interface CCUIContentModuleContext : NSObject {
    <CCUIContentModuleContextDelegate> * _delegate;
    NSString * _moduleIdentifier;
    NSObject<OS_dispatch_queue> * _queue;
    NSUUID * _uniqueIdentifier;
}

@property (nonatomic) <CCUIContentModuleContextDelegate> *delegate;
@property (getter=isDevicePasscodeLocked, nonatomic, readonly) bool devicePasscodeLocked;
@property (nonatomic, readonly, copy) NSString *moduleIdentifier;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly, copy) CCUISensorActivityData *sensorActivityDataEligibleForInactiveMicModeSelection;
@property (nonatomic, readonly, copy) NSUUID *uniqueIdentifier;

+ (id)_sharedOpenAppService;
+ (id)_sharedOpenApplicationOptions;
+ (bool)areAnimationsPermittedInWindow:(id)arg1;
+ (void)initialize;
+ (void)performWithoutAnimationWhileHiddenInWindow:(id)arg1 actions:(id /* block */)arg2;
+ (void)setAnimationsPermitted:(bool)arg1 inWindow:(id)arg2;

- (void).cxx_destruct;
- (id)delegate;
- (void)dismissControlCenter;
- (void)dismissModule;
- (void)enqueueStatusUpdate:(id)arg1;
- (id)initWithModuleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;
- (bool)isDevicePasscodeLocked;
- (id)moduleIdentifier;
- (struct CCUIModuleLayoutSize { unsigned long long x1; unsigned long long x2; })moduleLayoutSizeForOrientation:(long long)arg1;
- (void)openApplication:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)openApplication:(id)arg1 withOptions:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)openURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)queue;
- (void)requestAuthenticationWithCompletionHandler:(id /* block */)arg1;
- (void)requestExpandModule;
- (void)requestLayoutSizeUpdate;
- (id)sensorActivityDataEligibleForInactiveMicModeSelection;
- (id)sensorActivityDataForActiveSensorType:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHomeGestureDismissalAllowed:(bool)arg1;
- (void)setQueue:(id)arg1;
- (id)uniqueIdentifier;

@end
