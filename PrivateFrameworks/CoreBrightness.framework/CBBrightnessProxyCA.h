/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness
 */

@interface CBBrightnessProxyCA : NSObject <CBBrightnessProxy> {
    unsigned long long  _CBDispTypeDFR;
    unsigned long long  _CBDispTypeExternal;
    unsigned long long  _CBDispTypeIntegrated;
    unsigned long long  _CBDispTypeVirtual;
    unsigned long long  _CBDispTypeWireless;
    bool  _allowUpdates;
    <CABrightnessControl> * _brightnessControl;
    id  _brightnessNotificationPowerOff;
    id  _brightnessNotificationPowerOn;
    id  _brightnessNotificationRequestEDR;
    id  _brightnessNotificationSecureIndicatorOff;
    id  _brightnessNotificationSecureIndicatorOn;
    NSString * _brightnessRequestEDRHeadroom;
    NSString * _brightnessRequestRampDuration;
    NSString * _brightnessSecureIndicatorActiveCount;
    NSString * _brightnessSecureIndicatorType;
    NSObject<OS_os_log> * _logHandle;
}

@property (readonly) unsigned long long CBDispTypeDFR;
@property (readonly) unsigned long long CBDispTypeExternal;
@property (readonly) unsigned long long CBDispTypeIntegrated;
@property (readonly) unsigned long long CBDispTypeVirtual;
@property (readonly) unsigned long long CBDispTypeWireless;
@property bool allowUpdates;
@property (readonly) bool brightnessAvailable;
@property (readonly) NSDictionary *brightnessCapabilities;
@property (readonly) id brightnessNotificationAttached;
@property (readonly) id brightnessNotificationDetached;
@property (readonly) id brightnessNotificationPowerOff;
@property (readonly) id brightnessNotificationPowerOn;
@property (readonly) id brightnessNotificationRequestEDR;
@property (readonly) id brightnessNotificationSecureIndicatorOff;
@property (readonly) id brightnessNotificationSecureIndicatorOn;
@property (readonly) NSString *brightnessRequestEDRHeadroom;
@property (readonly) NSString *brightnessRequestRampDuration;
@property (readonly) NSString *brightnessSecureIndicatorActiveCount;
@property (readonly) NSString *brightnessSecureIndicatorType;
@property (readonly) NSUUID *containerId;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) int displayId;
@property (readonly) unsigned long long displayType;
@property (readonly) unsigned long long hash;
@property (readonly) float maximumLuminance;
@property (readonly) struct { float x1; float x2; } nativeWhitePoint;
@property (readonly) unsigned long long productId;
@property (readonly) unsigned long long serialNumber;
@property (readonly) Class superclass;
@property (readonly) NSUUID *uuid;
@property (readonly) unsigned long long vendorId;
@property (readonly) bool whitePointAvailable;

- (unsigned long long)CBDispTypeDFR;
- (unsigned long long)CBDispTypeExternal;
- (unsigned long long)CBDispTypeIntegrated;
- (unsigned long long)CBDispTypeVirtual;
- (unsigned long long)CBDispTypeWireless;
- (bool)allowUpdates;
- (id)brightnessNotificationAttached;
- (id)brightnessNotificationPowerOff;
- (id)brightnessNotificationPowerOn;
- (id)brightnessNotificationRequestEDR;
- (id)brightnessNotificationSecureIndicatorOff;
- (id)brightnessNotificationSecureIndicatorOn;
- (id)brightnessRequestEDRHeadroom;
- (id)brightnessRequestRampDuration;
- (id)brightnessSecureIndicatorActiveCount;
- (id)brightnessSecureIndicatorType;
- (bool)commitBrightness:(id*)arg1;
- (bool)commitBrightness:(id*)arg1 withBlock:(id /* block */)arg2;
- (void)dealloc;
- (bool)forceCommitBrightness:(id*)arg1 withBlock:(id /* block */)arg2;
- (id)getBrightnessCapabilities;
- (unsigned int)getDisplayId;
- (unsigned long long)getDisplayType;
- (unsigned long long)getProductId;
- (id)getUUID;
- (unsigned long long)getVendorId;
- (id)initWithCABrightnessControl:(id)arg1;
- (bool)isBrightnessAvailable;
- (bool)isWhitePointAvailable;
- (bool)isWhitePointD50XYZ;
- (void)registerForNotifications:(id)arg1 withBlock:(id /* block */)arg2;
- (void)setAllowUpdates:(bool)arg1;
- (void)setAmbient:(float)arg1;
- (void)setBrightnessControlDisabled:(bool)arg1;
- (void)setBrightnessLimit:(float)arg1;
- (void)setContrastEnhancer:(float)arg1;
- (void)setHeadroom:(float)arg1;
- (void)setHighAmbientAdaptation:(float)arg1;
- (void)setIndicatorBrightness:(float)arg1;
- (void)setIndicatorBrightnessLimit:(float)arg1;
- (void)setLowAmbientAdaptation:(float)arg1;
- (void)setNotificationQueue:(id)arg1;
- (void)setPotentialHeadroom:(float)arg1;
- (void)setSDRBrightness:(float)arg1;
- (bool)setWhitePoint:(id)arg1 rampDuration:(double)arg2 error:(id*)arg3;
- (void)unregisterNotificationBlocks;

@end
