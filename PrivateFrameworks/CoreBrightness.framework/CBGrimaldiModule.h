/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness
 */

@interface CBGrimaldiModule : CBModule <CBContainerModuleProtocol> {
    bool  _coexJasper;
    bool  _coexStrobe;
    double  _correctionFactor;
    BOOL  _currentNumSamples;
    NSMutableDictionary * _currentRLuxOutputDict;
    <CBGrimaldiEventSource> * _eventSource;
    NSNumber * _lastLux;
    NSDictionary * _lastRLuxOutputDict;
    NSMutableDictionary * _overriddenInput;
    bool  _overriding;
    bool  _provideCoex;
    bool  _provideLux;
    bool  _sampleMultiple;
    bool  _sampleOnce;
    <CBGrimaldiSamplingStrategy> * _samplingStrategy;
    unsigned long long  _samplingTime;
    bool  _started;
    NSSet * _validKeys;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) bool jasperCoex;
@property bool provideCoex;
@property bool provideLux;
@property (readonly) bool strobeCoex;
@property (readonly) Class superclass;

- (void)CBAPDSGetCoex;
- (void)clearOutput;
- (id)copyGainChanged;
- (id)copyJasperCoex;
- (id)copyParam:(id)arg1;
- (id)copyPropertyForKey:(id)arg1;
- (id)copyPropertyForKey:(id)arg1 withParameter:(id)arg2;
- (id)copyRearLux;
- (id)copyReliableLux;
- (id)copyStrobeCoex;
- (void)dealloc;
- (void)grimaldiLuxReceived:(struct ApplePhotonDetectorServicesLuxInfo { float *x1; float *x2; unsigned long long *x3; char *x4; int x5; unsigned char x6; }*)arg1;
- (void)handleNotificationForKey:(id)arg1 withProperty:(id)arg2;
- (id)initWithQueue:(id)arg1 andEventSource:(id)arg2 andSamplingStrategy:(id)arg3;
- (bool)jasperCoex;
- (bool)provideCoex;
- (bool)provideLux;
- (void)registerNotificationBlock:(id /* block */)arg1;
- (void)sendNotificationForKey:(id)arg1 withValue:(id)arg2;
- (void)setGrimaldiLux;
- (bool)setProperty:(id)arg1 forKey:(id)arg2;
- (void)setProvideCoex:(bool)arg1;
- (void)setProvideLux:(bool)arg1;
- (void)start;
- (void)startSingleSample;
- (void)startWithFrequency:(float)arg1;
- (void)startWithFrequency:(float)arg1 singleSample:(bool)arg2;
- (void)stop;
- (bool)strobeCoex;
- (void)timerCallback;
- (void)unregisterNotificationBlock;

@end
