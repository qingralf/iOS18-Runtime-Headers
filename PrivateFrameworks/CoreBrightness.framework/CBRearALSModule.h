/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness
 */

@interface CBRearALSModule : CBModule <CBContainerModuleProtocol, CBHIDServiceProtocol> {
    CBGrimaldiModule * _Grimaldi;
    bool  _displayOn;
    bool  _enableIlluminanceOverride;
    float  _illuminanceOverride;
    bool  _jasperCoex;
    NSNumber * _lastLux;
    unsigned long long  _providerType;
    CBALSNode * _rearALS;
    bool  _started;
    bool  _strobeCoex;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isRearALSSupported, readonly) bool rearALSSupported;
@property (readonly) Class superclass;

- (bool)AABSensorOverridePropertyHandler:(id)arg1;
- (bool)addHIDServiceClient:(struct __IOHIDServiceClient { }*)arg1;
- (id)copyParam:(id)arg1;
- (id)copyPropertyForKey:(id)arg1;
- (id)copyPropertyForKey:(id)arg1 withParameter:(id)arg2;
- (id)copyRearLux;
- (void)dealloc;
- (bool)displayBrightnessFactorPropertyHandler:(id)arg1;
- (bool)handleHIDEvent:(struct __IOHIDEvent { }*)arg1 from:(struct __IOHIDServiceClient { }*)arg2;
- (void)handleNotificationForKey:(id)arg1 withProperty:(id)arg2;
- (id)initWithQueue:(id)arg1 andGrimaldiFactory:(id)arg2;
- (bool)isMitigationActive;
- (bool)isRearALSSupported;
- (bool)rLuxOverridePropertyHandler:(id)arg1;
- (bool)removeHIDServiceClient:(struct __IOHIDServiceClient { }*)arg1;
- (bool)setProperty:(id)arg1 forKey:(id)arg2;
- (void)start;
- (void)startSamplingWithFrequency:(float)arg1;
- (void)stop;
- (void)stopSampling;

@end
