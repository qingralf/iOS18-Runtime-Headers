/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreEmbeddedSpeechRecognition.framework/CoreEmbeddedSpeechRecognition
 */

@interface CESRSpeechItemRanker_Media : CESRSpeechItemRanker {
    unsigned long long  _artistLimit;
    NSMutableSet * _codepathIds;
    NSDictionary * _itemIdToRank;
    unsigned long long  _playableLimit;
    NSString * _trialMediaRankingStrategy;
}

+ (bool)_isArtistItem:(id)arg1;
+ (bool)_isPlayableItem:(id)arg1;
+ (id)_itemIdsFromMediaEntities:(id)arg1;
+ (id)_performMediaCollectionsQuery:(id)arg1 limit:(unsigned long long)arg2 orderingProperties:(id)arg3 orderingDirectionMappings:(id)arg4;
+ (id)_performMediaItemsQuery:(id)arg1 limit:(unsigned long long)arg2 orderingProperties:(id)arg3 orderingDirectionMappings:(id)arg4;
+ (id)_rankedItemIdsFromTopPlayables:(id)arg1 topArtists:(id)arg2 playableLimit:(unsigned long long)arg3 artistLimit:(unsigned long long)arg4;
+ (id)queryRecentMediaEntities;
+ (id)queryTopPlayableIds;

- (void).cxx_destruct;
- (void)_activateEnrolledTrialExperiments;
- (int)_dataProtectionClass;
- (bool)_loadRankedItemCache;
- (id)_queryAndRankMediaItems;
- (id)_rankedItemCacheFile;
- (bool)addSet:(id)arg1;
- (bool)enumerateRankedItemsWithError:(id*)arg1 usingBlock:(id /* block */)arg2;
- (id)getActivatedCodepathIds;
- (id)getAllCodepathIds;
- (id)initWithInstance:(id)arg1 speechProfileSite:(id)arg2 categoryGroup:(id)arg3;
- (id)initWithInstance:(id)arg1 speechProfileSite:(id)arg2 categoryGroup:(id)arg3 playableLimit:(unsigned long long)arg4 artistLimit:(unsigned long long)arg5 itemIdToRank:(id)arg6;
- (bool)refreshRankedItemCache:(id*)arg1;

@end
