/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP
 */

@interface HAPAccessoryServerBrowserIP : HAPAccessoryServerBrowser <HAPAccessoryServerNotification, HAPPowerManagerProtocol, HAPWACAccessoryBrowserDelegate, HMFTimerDelegate> {
    struct BonjourBrowser { } * _bonjourBrowser;
    HMFTimer * _bonjourEventTimer;
    <HAPAccessoryServerBrowserDelegate> * _delegate;
    NSOperationQueue * _delegateOperationQueue;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    NSMutableSet * _discoveredAccessoryServers;
    HAPWACAccessoryBrowser * _hapWACBrowser;
    unsigned long long  _maximumNumberOfPairVeifiesAllowed;
    NSMutableSet * _pendingBonjourEvents;
    HAPPowerManager * _powerManager;
    NSString * _serverIdentifierToSkipBonjourUpdate;
}

@property (nonatomic, readonly, copy) NSArray *attributeDescriptions; /* unknown property attribute: ? */
@property (nonatomic, retain) HMFTimer *bonjourEventTimer;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <HAPAccessoryServerBrowserDelegate> *delegate;
@property (nonatomic, retain) NSOperationQueue *delegateOperationQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableSet *discoveredAccessoryServers;
@property (nonatomic, retain) HAPWACAccessoryBrowser *hapWACBrowser;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned long long maximumNumberOfPairVeifiesAllowed;
@property (nonatomic, retain) NSMutableSet *pendingBonjourEvents;
@property (nonatomic, retain) HAPPowerManager *powerManager;
@property (readonly, copy) NSString *privateDescription;
@property (readonly, copy) NSString *propertyDescription; /* unknown property attribute: ? */
@property (nonatomic, retain) NSString *serverIdentifierToSkipBonjourUpdate;
@property (readonly, copy) NSString *shortDescription;
@property (readonly) Class superclass;

+ (id)logCategory;

- (void).cxx_destruct;
- (bool)_delegateRespondsToSelector:(SEL)arg1;
- (void)_doBonjourRemoveWithServer:(id)arg1;
- (void)_doReachabilityUpdateForServer:(id)arg1 withDictionary:(id)arg2;
- (void)_handleBonjourAddOrUpdateWithEventInfo:(id)arg1;
- (void)_handleBonjourBrowserEvent:(unsigned int)arg1 eventInfo:(id)arg2;
- (void)_handleBonjourRemoveWithEventInfo:(id)arg1;
- (void)_handleConnectionUpdateWithBonjourDeviceInfo:(id)arg1 socketInfo:(id)arg2;
- (int)_initializeAndStartBonjourBrowser;
- (void)_invalidateAccessoryServers:(bool)arg1;
- (void)_invalidateAndRemoveAccessoryServer:(id)arg1;
- (void)_invalidateWACServers;
- (void)_matchAccessoryServerWithSetupID:(id)arg1 serverIdentifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_pendBonjourEvent:(id)arg1;
- (void)_pendBonjourRemoveEvent:(id)arg1;
- (int)_processPendingBonjourEvent:(id)arg1;
- (int)_purgePendingBonjourEvents:(id)arg1 withProcessing:(bool)arg2;
- (int)_server:(id*)arg1 forBonjourDevice:(id)arg2;
- (void)_server:(id*)arg1 forHAPWACAccessory:(id)arg2;
- (void)_setReachability:(bool)arg1 forServer:(id)arg2;
- (void)_timerDidExpire:(id)arg1;
- (id)bonjourEventTimer;
- (id)delegate;
- (id)delegateOperationQueue;
- (id)delegateQueue;
- (void)devicePowerStateChanged:(unsigned long long)arg1;
- (void)discoverAccessoryServerWithIdentifier:(id)arg1;
- (id)discoveredAccessoryServers;
- (void)handleConnectionUpdateWithBonjourDeviceInfo:(id)arg1 socketInfo:(id)arg2;
- (id)hapWACBrowser;
- (void)indicateNotificationFromServer:(id)arg1 notifyType:(unsigned long long)arg2 withDictionary:(id)arg3;
- (id)initWithQueue:(id)arg1;
- (long long)linkType;
- (id)logIdentifier;
- (void)matchAccessoryServerWithSetupID:(id)arg1 serverIdentifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (unsigned long long)maximumNumberOfPairVeifiesAllowed;
- (unsigned long long)maximumPairVerifyFailureCount;
- (void)notifyDelegatesOfWACCompletionWithIdentifier:(id)arg1 error:(id)arg2;
- (void)pendDelegateBlock:(id /* block */)arg1 identifier:(id)arg2;
- (void)pendDelegateOperation:(id)arg1 identifier:(id)arg2;
- (id)pendingBonjourEvents;
- (id)powerManager;
- (void)processPendingBonjourRemoveEvents:(id)arg1;
- (void)processPendingBonjourRemoveEventsForDeviceID:(id)arg1;
- (bool)recommendBrowserReset;
- (id)serverIdentifierToSkipBonjourUpdate;
- (id)serverWithIdentifier:(id)arg1 ignoreLPM:(bool)arg2;
- (void)setBonjourEventTimer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (void)setDelegateOperationQueue:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)setDiscoveredAccessoryServers:(id)arg1;
- (void)setHapWACBrowser:(id)arg1;
- (void)setPendingBonjourEvents:(id)arg1;
- (void)setPowerManager:(id)arg1;
- (void)setServerIdentifierToSkipBonjourUpdate:(id)arg1;
- (void)startDiscoveringAccessoryServers;
- (void)startDiscoveringAirPlayAccessoriesWithDelegate:(id)arg1;
- (void)startDiscoveringWACAccessoryServerWithIdentifier:(id)arg1;
- (void)startDiscoveringWACAccessoryServers;
- (void)stopDiscoveringAccessoryServers;
- (void)stopDiscoveringWACAccessoryServersWithInvalidation:(bool)arg1;
- (void)timerDidFire:(id)arg1;
- (void)unitTest_handleBonjourBrowserEvent:(unsigned int)arg1 eventInfo:(id)arg2;
- (id)visible2Pt4Networks;
- (id)wacBrowser;
- (void)wacBrowser:(id)arg1 didFindHAPWACAccessory:(id)arg2;
- (void)wacBrowser:(id)arg1 didFindUnconfiguredPairedHAPWACAccessory:(id)arg2;
- (void)wacBrowser:(id)arg1 didRemoveHAPWACAccessory:(id)arg2;

@end
