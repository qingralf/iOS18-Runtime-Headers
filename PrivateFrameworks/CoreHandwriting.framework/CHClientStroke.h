/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 */

@interface CHClientStroke : NSObject <CHStroke> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _boundingBox;
    CHEncodedStrokeIdentifier * _encodedStrokeIdentifier;
    double  _endTimestamp;
    long long  _identifier;
    bool  _isFinished;
    struct CHClientStrokePoint { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; double x4; double x5; } * _points;
    unsigned long long  _pointsCapacity;
    unsigned long long  _pointsCount;
    double  _startTimestamp;
    unsigned long long  _strokeAttributes;
    long long  _type;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } boundingBox;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CHEncodedStrokeIdentifier *encodedStrokeIdentifier;
@property (nonatomic, readonly) double endTimestamp;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long identifier;
@property (nonatomic, readonly) bool isFinished;
@property (nonatomic) struct CHClientStrokePoint { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; double x4; double x5; }*points;
@property (nonatomic) unsigned long long pointsCapacity;
@property (nonatomic) unsigned long long pointsCount;
@property (nonatomic, readonly) double startTimestamp;
@property (nonatomic) unsigned long long strokeAttributes;
@property (nonatomic, readonly) <CHStrokeIdentifier> *strokeIdentifier;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long type;

+ (void)setStrokeIdentifierOffset:(long long)arg1;
+ (long long)strokeIdentifierOffset;
+ (id)strokesFromDrawing:(id)arg1 classification:(long long)arg2;

- (void).cxx_destruct;
- (void)_expandPointsArrayIfNeeded;
- (double)_strokePathLength;
- (void)addAllPoints:(struct CHClientStrokePoint { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; double x4; double x5; }*)arg1 count:(long long)arg2;
- (void)addPoint:(struct CHClientStrokePoint { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; double x4; double x5; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingBox;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (void)dealloc;
- (id)description;
- (id)encodedStrokeIdentifier;
- (double)endTimestamp;
- (void)enumeratePointsWithDistanceStep:(double)arg1 usingBlock:(id /* block */)arg2;
- (void)enumeratePointsWithTimestep:(double)arg1 usingBlock:(id /* block */)arg2;
- (unsigned long long)hash;
- (long long)identifier;
- (id)initWithAllPoints:(struct CHClientStrokePoint { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; double x4; double x5; }*)arg1 pointCount:(long long)arg2 type:(long long)arg3;
- (id)initWithArray:(id)arg1 channels:(id)arg2 withTimeOffset:(double)arg3 type:(long long)arg4;
- (bool)isFinished;
- (id)newStrokeWithTransformation:(id /* block */)arg1;
- (id)newStrokeWithoutTransformation;
- (struct CHClientStrokePoint { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; double x4; double x5; })pointAtIndex:(long long)arg1;
- (struct CHClientStrokePoint { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; double x4; double x5; }*)points;
- (unsigned long long)pointsCapacity;
- (unsigned long long)pointsCount;
- (void)setBoundingBox:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setEncodedStrokeIdentifier:(id)arg1;
- (void)setPoints:(struct CHClientStrokePoint { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; double x4; double x5; }*)arg1;
- (void)setPointsCapacity:(unsigned long long)arg1;
- (void)setPointsCount:(unsigned long long)arg1;
- (void)setStrokeAttributes:(unsigned long long)arg1;
- (double)startTimestamp;
- (unsigned long long)strokeAttributes;
- (id)strokeIdentifier;
- (long long)type;

@end
