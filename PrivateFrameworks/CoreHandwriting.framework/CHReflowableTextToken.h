/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 */

@interface CHReflowableTextToken : NSObject {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _bounds;
    bool  _hasPrecedingSpace;
    struct { 
        struct { 
            struct CGPoint { 
                double x; 
                double y; 
            } start; 
            struct CGPoint { 
                double x; 
                double y; 
            } end; 
        } descender; 
        struct { 
            struct CGPoint { 
                double x; 
                double y; 
            } start; 
            struct CGPoint { 
                double x; 
                double y; 
            } end; 
        } base; 
        struct { 
            struct CGPoint { 
                double x; 
                double y; 
            } start; 
            struct CGPoint { 
                double x; 
                double y; 
            } end; 
        } median; 
        struct { 
            struct CGPoint { 
                double x; 
                double y; 
            } start; 
            struct CGPoint { 
                double x; 
                double y; 
            } end; 
        } top; 
    }  _principalLines;
    NSString * _string;
    CHTextSize * _textSize;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (nonatomic, readonly) bool hasPrecedingSpace;
@property (nonatomic, readonly) bool hasValidPrincipalLines;
@property (nonatomic, readonly) struct { struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; } principalLines;
@property (nonatomic, readonly) double principalOrientation;
@property (nonatomic, readonly, copy) NSString *string;
@property (nonatomic, readonly, copy) CHTextSize *textSize;

- (void).cxx_destruct;
- (id)asFullTextResultWithStrokeIdentifiers:(id)arg1 strokeProvider:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (bool)hasPrecedingSpace;
- (bool)hasValidPrincipalLines;
- (id)initWithString:(id)arg1 principalLines:(struct { struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; })arg2 textSize:(id)arg3 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 hasPrecedingSpace:(bool)arg5;
- (id)initWithTokenizedTextResultToken:(id)arg1;
- (struct { struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGPoint { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; })principalLines;
- (double)principalOrientation;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)string;
- (id)textSize;

@end
