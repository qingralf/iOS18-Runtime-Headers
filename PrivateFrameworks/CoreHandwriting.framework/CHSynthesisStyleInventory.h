/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 */

@interface CHSynthesisStyleInventory : NSObject <NSCopying, NSSecureCoding> {
    NSObject<OS_dispatch_queue> * __workQueue;
    long long  _characterInventoryVersion;
    double  _characterStyleTimestamp;
    long long  _currentSamplingTimestep;
    NSMutableDictionary * _fastPathCharacterStyles;
    bool  _hasInventoryChanged;
    NSURL * _inventoryStorageURL;
    NSDate * _lastSavedDate;
    NSMutableDictionary * _sampleCountByCharacter;
    NSMutableDictionary * _styles;
    NSString * _synthesisModelHash;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_workQueue;
@property (nonatomic) long long characterInventoryVersion;
@property (nonatomic, readonly) double characterStyleTimestamp;
@property (nonatomic) long long currentSamplingTimestep;
@property (nonatomic, retain) NSMutableDictionary *fastPathCharacterStyles;
@property (nonatomic, readonly) bool hasAllDigits;
@property (nonatomic) bool hasInventoryChanged;
@property (nonatomic, readonly) NSURL *inventoryStorageURL;
@property (nonatomic, retain) NSDate *lastSavedDate;
@property (nonatomic, retain) NSMutableDictionary *sampleCountByCharacter;
@property (nonatomic, retain) NSMutableDictionary *styles;
@property (nonatomic, retain) NSString *synthesisModelHash;

+ (id)_defaultInventoryStorageURL;
+ (id)_formatVersion;
+ (id)_groupContainerURL;
+ (long long)_longConfigLength;
+ (id)_mathCharacterSet;
+ (long long)_maxInventorySize;
+ (long long)_maxSamplesToStitch;
+ (long long)_minimumSampleCountByCharacter;
+ (long long)_shortConfigLength;
+ (bool)clear;
+ (bool)isPersonalizedSynthesisModelInitializing;
+ (bool)isPersonalizedSynthesisModelReady;
+ (long long)maxStyleSampleLengthForPrompt:(id)arg1;
+ (id)personalizedSynthesisModelVersion;
+ (id)relativePath;
+ (id)remainingCharacterSetFromPromptCharacterSet:(id)arg1 withSample:(id)arg2;
+ (bool)shouldBypassGating;
+ (id)statusWithInventory:(id)arg1;
+ (id)stitchStyleSamples:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_safelyRunBlock:(id /* block */)arg1;
- (void)_unsafeAddSample:(id)arg1;
- (bool)_unsafeHasLowSampleCountForCharacters:(id)arg1 minimumSampleCount:(long long)arg2;
- (void)_unsafeRemoveSample:(id)arg1;
- (id)_unsafeSamplesWithStylePrediction;
- (void)_unsafeUpdateCharacterCoverageWithAddedSample:(id)arg1;
- (void)_unsafeUpdateCharacterCoverageWithRemovedSample:(id)arg1;
- (id)_workQueue;
- (void)addSample:(id)arg1;
- (void)addSampleOfSynthesizedCharacter:(id)arg1 transcription:(id)arg2 key:(unsigned int)arg3;
- (void)addSampleOfSynthesizedCharacter:(id)arg1 transcription:(id)arg2 key:(unsigned int)arg3 version:(long long)arg4;
- (void)addSamplesIfNeededWithTokenizedMathResult:(id)arg1 drawing:(id)arg2 strokeIdentifiers:(id)arg3;
- (void)addSamplesIfNeededWithTokenizedTextResult:(id)arg1 drawing:(id)arg2 strokeIdentifiers:(id)arg3;
- (void)addSamplesWithArray:(id)arg1;
- (id)characterCoverage;
- (long long)characterInventoryVersion;
- (double)characterStyleTimestamp;
- (void)cleanupFastPathCharacters;
- (void)clearSamplesEmbeddingVector;
- (bool)containsSampleWithTranscription:(id)arg1 strokeIdentifiers:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)countOfStyleSamples;
- (long long)currentSamplingTimestep;
- (id)defaultStyleSample;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateStyleSamplesUsingBlock:(id /* block */)arg1;
- (id)fastPathCharacterStyles;
- (id)fastPathCharacterStylesWithVariations;
- (double)getLastCharacterStyleTimestamp;
- (bool)hasAllDigits;
- (bool)hasInventoryChanged;
- (id)highestCharacterCoverageStyleSampleForPrompt:(id)arg1 styles:(id)arg2;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyles:(id)arg1 sampleCountByCharacter:(id)arg2 storageURL:(id)arg3 synthesisModelHash:(id)arg4 currentSamplingTimestep:(long long)arg5 characterStyleTimestamp:(double)arg6 fastPathCharacterStyles:(id)arg7 characterInventoryVersion:(long long)arg8;
- (id)initWithURL:(id)arg1;
- (id)inventoryStorageURL;
- (bool)isEqual:(id)arg1;
- (bool)isPersonalizationAvailable;
- (bool)isSimpleMathPattern:(id)arg1;
- (bool)isTokenAcceptable:(id)arg1;
- (id)lastSavedDate;
- (long long)minimumNumberOfSamplesWithStylePrediction;
- (id)nearestInventorySamplesToSample:(id)arg1 prompt:(id)arg2 maxStyleSampleLength:(long long)arg3;
- (bool)needsStylePredictionUpdate;
- (void)removeSample:(id)arg1;
- (void)removeSamplesContainingStrokeIdentifiers:(id)arg1;
- (void)removeStyleSamplesIfNeeded;
- (void)removeStyleSamplesIfNeededWithMaximumSize:(long long)arg1 minimumSampleCountByCharacter:(long long)arg2;
- (void)reset;
- (void)resetCurrentSamplingTimestep;
- (id)sampleCountByCharacter;
- (id)samplesWithoutStylePrediction;
- (bool)save;
- (void)saveIfNeeded;
- (void)setCharacterInventoryVersion:(long long)arg1;
- (void)setCurrentSamplingTimestep:(long long)arg1;
- (void)setFastPathCharacterStyles:(id)arg1;
- (void)setHasInventoryChanged:(bool)arg1;
- (void)setLastSavedDate:(id)arg1;
- (void)setSampleCountByCharacter:(id)arg1;
- (void)setStyles:(id)arg1;
- (void)setSynthesisModelHash:(id)arg1;
- (id)shortStringHeuristicStyleSampleForPrompt:(id)arg1 styles:(id)arg2 maxNumOfSamples:(unsigned long long)arg3;
- (id)styleCharCoverageForInputSample:(id)arg1 prompt:(id)arg2 maxStyleSampleLength:(long long)arg3;
- (id)styleSampleForInputSample:(id)arg1 prompt:(id)arg2 samplingAlgorithm:(unsigned long long)arg3;
- (id)styleSampleForInputSample:(id)arg1 prompt:(id)arg2 samplingAlgorithm:(unsigned long long)arg3 maxStyleSampleLength:(long long)arg4;
- (id)styleSampleOptionsForRequest:(id)arg1;
- (id)styleSamplesForInputSample:(id)arg1 prompt:(id)arg2 samplingAlgorithm:(unsigned long long)arg3 maxNumOfSamples:(unsigned long long)arg4;
- (id)styles;
- (id)synthesisModelHash;
- (void)updateSamplingCountForSample:(id)arg1;
- (void)updateStylePredictionsWithSamples:(id)arg1;
- (void)updateSynthesisModelHash:(id)arg1;

@end
