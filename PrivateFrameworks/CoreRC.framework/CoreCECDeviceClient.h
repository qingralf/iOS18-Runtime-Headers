/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreRC.framework/CoreRC
 */

@interface CoreCECDeviceClient : CoreCECDevice

+ (bool)supportsSecureCoding;

- (Class)classForCoder;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)deckControlCommandWithMode:(unsigned long long)arg1 target:(id)arg2 error:(id*)arg3;
- (bool)deckControlPlayWithMode:(unsigned long long)arg1 target:(id)arg2 error:(id*)arg3;
- (bool)deckControlRefreshStatus:(id)arg1 requestType:(unsigned long long)arg2 error:(id*)arg3;
- (bool)deckControlSetDeckStatus:(unsigned long long)arg1 error:(id*)arg2;
- (bool)makeActiveSourceWithTVMenus:(bool)arg1 error:(id*)arg2;
- (bool)performStandbyWithTargetDevice:(id)arg1 error:(id*)arg2;
- (bool)refreshDevices:(id*)arg1;
- (bool)refreshProperties:(id)arg1 ofDevice:(id)arg2 error:(id*)arg3;
- (bool)requestActiveSource:(id*)arg1;
- (bool)requestAudioReturnChannelStatusChangeTo:(unsigned long long)arg1 error:(id*)arg2;
- (bool)requestAudioStatus:(id*)arg1;
- (bool)requestSystemAudioModeStatusChangeTo:(unsigned long long)arg1 error:(id*)arg2;
- (bool)resignActiveSource:(id*)arg1;
- (bool)setAudioMuteStatus:(bool)arg1 error:(id*)arg2;
- (bool)setAudioReturnChannelControlEnabled:(bool)arg1 error:(id*)arg2;
- (bool)setAudioVolumeStatus:(unsigned long long)arg1 error:(id*)arg2;
- (bool)setPowerStatus:(unsigned long long)arg1 error:(id*)arg2;
- (bool)setSupportedAudioFormats:(const struct CoreCECAudioFormat { unsigned char x1[3]; }*)arg1 count:(unsigned long long)arg2 error:(id*)arg3;
- (bool)setSystemAudioControlEnabled:(bool)arg1 error:(id*)arg2;
- (bool)setTrackAudioStatusEnabled:(bool)arg1 pressTimeout:(long long)arg2 pollInterval:(long long)arg3 error:(id*)arg4;
- (bool)systemAudioModeRequest:(unsigned long long)arg1 error:(id*)arg2;

@end
