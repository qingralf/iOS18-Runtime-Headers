/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreRE.framework/CoreRE
 */

@interface REProxyAudioClockManager : NSObject {
    struct OpaqueCMClock { } * _audioClock;
    NSObject<OS_dispatch_queue> * _audioClockUpdateQueue;
    struct unordered_set<OpaqueCMClock *, std::hash<OpaqueCMClock *>, std::equal_to<OpaqueCMClock *>, std::allocator<OpaqueCMClock *>> { 
        struct __hash_table<OpaqueCMClock *, std::hash<OpaqueCMClock *>, std::equal_to<OpaqueCMClock *>, std::allocator<OpaqueCMClock *>> { 
            struct unique_ptr<std::__hash_node_base<std::__hash_node<OpaqueCMClock *, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<OpaqueCMClock *, void *> *> *>>> { 
                struct __compressed_pair<std::__hash_node_base<std::__hash_node<OpaqueCMClock *, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<OpaqueCMClock *, void *> *> *>>> { 
                    void **__value_; 
                    struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<OpaqueCMClock *, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<OpaqueCMClock *, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__hash_node_base<std::__hash_node<OpaqueCMClock *, void *> *>, std::allocator<std::__hash_node<OpaqueCMClock *, void *>>> { 
                struct __hash_node_base<std::__hash_node<OpaqueCMClock *, void *> *> { 
                    void *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::hash<OpaqueCMClock *>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::equal_to<OpaqueCMClock *>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _clocks;
    bool  _initialized;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _ownTimelineAnchor;
    NSObject<OS_dispatch_queue> * _queue;
    double  _rateRelativeToHost;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _referenceTimelineAnchor;
    NSObject<OS_dispatch_source> * _timer;
}

+ (id)sharedInstance;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_addClock:(struct OpaqueCMClock { }*)arg1;
- (struct OpaqueCMClock { }*)_copyAudioClock;
- (void)_removeClock:(struct OpaqueCMClock { }*)arg1;
- (void)_routeChangeOrMediaServicesReset:(id)arg1;
- (void)_setAudioClock:(struct OpaqueCMClock { }*)arg1;
- (void)_setUp;
- (void)_tearDown;
- (void)_updateClock:(struct OpaqueCMClock { }*)arg1;
- (void)_updateClocks;
- (void)_updateClocksWithRate:(double)arg1 ownTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 referenceTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (void)addClock:(struct OpaqueCMClock { }*)arg1;
- (struct OpaqueCMClock { }*)copyAudioClock;
- (void)dealloc;
- (id)init;
- (void)removeClock:(struct OpaqueCMClock { }*)arg1;
- (void)routeChangeOrMediaServicesReset:(id)arg1;
- (void)simulateStall;

@end
