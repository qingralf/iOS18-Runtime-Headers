/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
 */

@interface CSHybridEndpointAnalyzer : NSObject <CSAssetManagerDelegate, CSEndpointAnalyzerImpl, OSDAnalyzerDelegate> {
    unsigned long long  _activeChannel;
    unsigned long long  _anchorMachAbsTime;
    NSObject<OS_dispatch_queue> * _apQueue;
    NSMutableArray * _asrFeatureLatencies;
    NSObject<OS_dispatch_queue> * _asrFeaturesQueue;
    double  _asrFeaturesWarmupLatency;
    double  _automaticEndpointingSuspensionEndTime;
    bool  _canProcessCurrentRequest;
    double  _clampedASRFeatureLatencyMsForClientLag;
    double  _clientLagThresholdMs;
    CSAsset * _currentAsset;
    unsigned long long  _currentRequestSampleRate;
    double  _delay;
    <CSEndpointAnalyzerDelegate> * _delegate;
    bool  _didAddAudio;
    bool  _didCommunicateEndpoint;
    bool  _didDetectSpeech;
    bool  _didNotifyTwoShot;
    bool  _didReceiveASRFeatures;
    bool  _didTimestampFirstAudioPacket;
    double  _endWaitTime;
    long long  _endpointStyle;
    NSString * _endpointerModelVersion;
    bool  _epResult;
    NSDate * _firstAudioPacketTimestamp;
    double  _firstAudioSampleSensorTimestamp;
    double  _hepAudioOriginInMs;
    _EAREndpointer * _hybridClassifier;
    NSObject<OS_dispatch_queue> * _hybridClassifierQueue;
    <CSEndpointAnalyzerImplDelegate> * _implDelegate;
    double  _interspeechWaitTime;
    bool  _isAnchorTimeBuffered;
    bool  _isRequestTimeout;
    NSDate * _lastASRFeatureTimestamp;
    float  _lastEndpointPosterior;
    double  _lastKnownASRFeatureLatency;
    CSASRFeatures * _lastKnownASRFeatures;
    OSDFeatures * _lastKnownOSDFeatures;
    double  _lastReportedEndpointTimeMs;
    NSString * _mhId;
    double  _minimumDurationForEndpointer;
    unsigned long long  _numSamplesProcessed;
    unsigned long long  _numSamplesProcessedBeforeAnchorTime;
    OSDAnalyzer * _osdAnalyzer;
    OSDFeatures * _osdFeaturesAtEndpoint;
    NSObject<OS_dispatch_queue> * _osdQueue;
    double  _postVoiceTriggerSilence;
    double  _processedAudioInSeconds;
    CSAudioRecordContext * _recordContext;
    bool  _recordingDidStop;
    bool  _saveSamplesSeenInReset;
    bool  _speechEndpointDetected;
    double  _startWaitTime;
    NSObject<OS_dispatch_queue> * _stateSerialQueue;
    double  _twoShotSilenceThresholdInMs;
    bool  _useDefaultASRFeaturesOnClientLag;
    unsigned long long  _vtEndInSampleCount;
    double  _vtExtraAudioAtStartInMs;
}

@property (nonatomic) unsigned long long activeChannel;
@property (nonatomic) unsigned long long anchorMachAbsTime;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *apQueue;
@property (nonatomic, retain) NSMutableArray *asrFeatureLatencies;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *asrFeaturesQueue;
@property (nonatomic) double asrFeaturesWarmupLatency;
@property (nonatomic) double automaticEndpointingSuspensionEndTime;
@property (nonatomic) double bypassSamples; /* unknown property attribute: ? */
@property (nonatomic) bool canProcessCurrentRequest;
@property (nonatomic) double clampedASRFeatureLatencyMsForClientLag;
@property (nonatomic) double clientLagThresholdMs;
@property (nonatomic, retain) CSAsset *currentAsset;
@property (nonatomic) unsigned long long currentRequestSampleRate;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) double delay;
@property (nonatomic) <CSEndpointAnalyzerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didAddAudio;
@property (nonatomic) bool didCommunicateEndpoint;
@property (nonatomic) bool didDetectSpeech;
@property (nonatomic) bool didNotifyTwoShot;
@property (nonatomic) bool didReceiveASRFeatures;
@property (nonatomic) bool didTimestampFirstAudioPacket;
@property (nonatomic) double endWaitTime; /* unknown property attribute: ? */
@property (nonatomic) long long endpointStyle;
@property (nonatomic, retain) NSString *endpointerModelVersion;
@property (nonatomic) bool epResult;
@property (nonatomic, retain) NSDate *firstAudioPacketTimestamp;
@property (nonatomic) double firstAudioSampleSensorTimestamp;
@property (readonly) unsigned long long hash;
@property (nonatomic) double hepAudioOriginInMs;
@property (nonatomic, retain) _EAREndpointer *hybridClassifier;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *hybridClassifierQueue;
@property (nonatomic) <CSEndpointAnalyzerImplDelegate> *implDelegate;
@property (nonatomic) double interspeechWaitTime; /* unknown property attribute: ? */
@property (nonatomic) bool isAnchorTimeBuffered;
@property (nonatomic) bool isRequestTimeout;
@property (nonatomic, retain) NSDate *lastASRFeatureTimestamp;
@property (nonatomic, readonly) double lastEndOfVoiceActivityTime;
@property (nonatomic) float lastEndpointPosterior;
@property (nonatomic) double lastKnownASRFeatureLatency;
@property (nonatomic, retain) CSASRFeatures *lastKnownASRFeatures;
@property (nonatomic, retain) OSDFeatures *lastKnownOSDFeatures;
@property (nonatomic) double lastReportedEndpointTimeMs;
@property (nonatomic, readonly) double lastStartOfVoiceActivityTime;
@property (nonatomic, retain) NSString *mhId; /* unknown property attribute: ? */
@property (nonatomic) double minimumDurationForEndpointer;
@property (nonatomic) unsigned long long numSamplesProcessed;
@property (nonatomic) unsigned long long numSamplesProcessedBeforeAnchorTime;
@property (nonatomic, retain) OSDAnalyzer *osdAnalyzer;
@property (nonatomic, retain) OSDFeatures *osdFeaturesAtEndpoint;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *osdQueue;
@property (nonatomic) double postVoiceTriggerSilence;
@property (nonatomic) double processedAudioInSeconds;
@property (nonatomic, retain) CSAudioRecordContext *recordContext;
@property (nonatomic) bool recordingDidStop;
@property (nonatomic) bool saveSamplesSeenInReset; /* unknown property attribute: ? */
@property (nonatomic) bool speechEndpointDetected;
@property (nonatomic) double startWaitTime;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *stateSerialQueue;
@property (readonly) Class superclass;
@property (nonatomic) double twoShotSilenceThresholdInMs;
@property (nonatomic) bool useDefaultASRFeaturesOnClientLag;
@property (nonatomic) unsigned long long vtEndInSampleCount;
@property (nonatomic) double vtExtraAudioAtStartInMs;

- (void).cxx_destruct;
- (void)CSAssetManagerDidDownloadNewAsset:(id)arg1;
- (void)CSLanguageCodeUpdateMonitor:(id)arg1 didReceiveLanguageCodeChanged:(id)arg2;
- (void)_emitEndpointDetectedEventWithEndpointTimeMs:(double)arg1 endpointBufferHostTime:(unsigned long long)arg2 endpointerFeatures:(id)arg3 endpointerDecisionLagInNs:(double)arg4 extraDelayMs:(unsigned long long)arg5 endpointScore:(double)arg6 asrFeaturesLatencies:(id)arg7;
- (id)_getCSHybridEndpointerConfigForAsset:(id)arg1;
- (id)_getSerialQueueWithName:(id)arg1 targetQueue:(id)arg2;
- (void)_loadAndSetupEndpointerAssetIfNecessary;
- (bool)_multimodalEndpointerEnabled;
- (void)_readParametersFromHEPAsset:(id)arg1;
- (bool)_shouldProvideTwoShotFeedbackWithRecordContext;
- (void)_updateAssetWithCurrentLanguage;
- (void)_updateAssetWithLanguage:(id)arg1;
- (unsigned long long)activeChannel;
- (unsigned long long)anchorMachAbsTime;
- (id)apQueue;
- (id)asrFeatureLatencies;
- (id)asrFeaturesQueue;
- (double)asrFeaturesWarmupLatency;
- (double)automaticEndpointingSuspensionEndTime;
- (bool)canProcessCurrentRequest;
- (double)clampedASRFeatureLatencyMsForClientLag;
- (double)clientLagThresholdMs;
- (id)currentAsset;
- (unsigned long long)currentRequestSampleRate;
- (double)delay;
- (id)delegate;
- (bool)didAddAudio;
- (bool)didCommunicateEndpoint;
- (bool)didDetectSpeech;
- (bool)didNotifyTwoShot;
- (bool)didReceiveASRFeatures;
- (bool)didTimestampFirstAudioPacket;
- (double)endWaitTime;
- (long long)endpointStyle;
- (id)endpointerModelVersion;
- (bool)epResult;
- (long long)fetchCurrentEndpointerOperationMode;
- (id)firstAudioPacketTimestamp;
- (double)firstAudioSampleSensorTimestamp;
- (void)handleVoiceTriggerWithActivationInfo:(id)arg1;
- (double)hepAudioOriginInMs;
- (id)hybridClassifier;
- (id)hybridClassifierQueue;
- (id)implDelegate;
- (id)init;
- (double)interspeechWaitTime;
- (bool)isAnchorTimeBuffered;
- (bool)isRequestTimeout;
- (id)lastASRFeatureTimestamp;
- (double)lastEndOfVoiceActivityTime;
- (float)lastEndpointPosterior;
- (double)lastKnownASRFeatureLatency;
- (id)lastKnownASRFeatures;
- (id)lastKnownOSDFeatures;
- (double)lastReportedEndpointTimeMs;
- (double)lastStartOfVoiceActivityTime;
- (void)logFeaturesWithEvent:(id)arg1 locale:(id)arg2;
- (id)mhId;
- (double)minimumDurationForEndpointer;
- (unsigned long long)numSamplesProcessed;
- (unsigned long long)numSamplesProcessedBeforeAnchorTime;
- (id)osdAnalyzer;
- (void)osdAnalyzer:(id)arg1 didUpdateOSDFeatures:(id)arg2;
- (id)osdFeaturesAtEndpoint;
- (id)osdQueue;
- (double)postVoiceTriggerSilence;
- (void)preheat;
- (void)processASRFeatures:(id)arg1 fromServer:(bool)arg2;
- (void)processAudioSamplesAsynchronously:(id)arg1;
- (double)processedAudioInSeconds;
- (id)recordContext;
- (bool)recordingDidStop;
- (void)recordingStoppedForReason:(long long)arg1;
- (void)reset;
- (void)resetForNewRequestWithSampleRate:(unsigned long long)arg1 recordContext:(id)arg2 disableRCSelection:(bool)arg3;
- (bool)saveSamplesSeenInReset;
- (void)setActiveChannel:(unsigned long long)arg1;
- (void)setAnchorMachAbsTime:(unsigned long long)arg1;
- (void)setApQueue:(id)arg1;
- (void)setAsrFeatureLatencies:(id)arg1;
- (void)setAsrFeaturesQueue:(id)arg1;
- (void)setAsrFeaturesWarmupLatency:(double)arg1;
- (void)setAutomaticEndpointingSuspensionEndTime:(double)arg1;
- (void)setCanProcessCurrentRequest:(bool)arg1;
- (void)setClampedASRFeatureLatencyMsForClientLag:(double)arg1;
- (void)setClientLagThresholdMs:(double)arg1;
- (void)setCurrentAsset:(id)arg1;
- (void)setCurrentRequestSampleRate:(unsigned long long)arg1;
- (void)setDelay:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidAddAudio:(bool)arg1;
- (void)setDidCommunicateEndpoint:(bool)arg1;
- (void)setDidDetectSpeech:(bool)arg1;
- (void)setDidNotifyTwoShot:(bool)arg1;
- (void)setDidReceiveASRFeatures:(bool)arg1;
- (void)setDidTimestampFirstAudioPacket:(bool)arg1;
- (void)setEndWaitTime:(double)arg1;
- (void)setEndpointStyle:(long long)arg1;
- (void)setEndpointerModelVersion:(id)arg1;
- (void)setEndpointerOperationMode:(long long)arg1;
- (void)setEpResult:(bool)arg1;
- (void)setFirstAudioPacketTimestamp:(id)arg1;
- (void)setFirstAudioSampleSensorTimestamp:(double)arg1;
- (void)setHepAudioOriginInMs:(double)arg1;
- (void)setHybridClassifier:(id)arg1;
- (void)setHybridClassifierQueue:(id)arg1;
- (void)setImplDelegate:(id)arg1;
- (void)setInterspeechWaitTime:(double)arg1;
- (void)setIsAnchorTimeBuffered:(bool)arg1;
- (void)setIsRequestTimeout:(bool)arg1;
- (void)setLastASRFeatureTimestamp:(id)arg1;
- (void)setLastEndpointPosterior:(float)arg1;
- (void)setLastKnownASRFeatureLatency:(double)arg1;
- (void)setLastKnownASRFeatures:(id)arg1;
- (void)setLastKnownOSDFeatures:(id)arg1;
- (void)setLastReportedEndpointTimeMs:(double)arg1;
- (void)setMhId:(id)arg1;
- (void)setMinimumDurationForEndpointer:(double)arg1;
- (void)setNumSamplesProcessed:(unsigned long long)arg1;
- (void)setNumSamplesProcessedBeforeAnchorTime:(unsigned long long)arg1;
- (void)setOsdAnalyzer:(id)arg1;
- (void)setOsdFeaturesAtEndpoint:(id)arg1;
- (void)setOsdQueue:(id)arg1;
- (void)setPostVoiceTriggerSilence:(double)arg1;
- (void)setProcessedAudioInSeconds:(double)arg1;
- (void)setRecordContext:(id)arg1;
- (void)setRecordingDidStop:(bool)arg1;
- (void)setSaveSamplesSeenInReset:(bool)arg1;
- (void)setSpeechEndpointDetected:(bool)arg1;
- (void)setStartWaitTime:(double)arg1;
- (void)setStateSerialQueue:(id)arg1;
- (void)setTwoShotSilenceThresholdInMs:(double)arg1;
- (void)setUseDefaultASRFeaturesOnClientLag:(bool)arg1;
- (void)setVtEndInSampleCount:(unsigned long long)arg1;
- (void)setVtExtraAudioAtStartInMs:(double)arg1;
- (void)shouldAcceptEagerResultForDuration:(double)arg1 resultsCompletionHandler:(id /* block */)arg2;
- (bool)speechEndpointDetected;
- (double)startWaitTime;
- (id)stateSerialQueue;
- (void)stopEndpointer;
- (void)terminateProcessing;
- (double)twoShotSilenceThresholdInMs;
- (void)updateEndpointerDelayedTrigger:(bool)arg1;
- (void)updateEndpointerThreshold:(float)arg1;
- (bool)useDefaultASRFeaturesOnClientLag;
- (unsigned long long)vtEndInSampleCount;
- (double)vtExtraAudioAtStartInMs;

@end
