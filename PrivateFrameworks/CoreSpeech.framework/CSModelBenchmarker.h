/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
 */

@interface CSModelBenchmarker : NSObject <CSAudioInjectionEngineDelegate, CSBenchmarkXPCProtocol> {
    unsigned long long  _allFramesInferenceLatency;
    CSAudioInjectionEngine * _audioInjectionEngine;
    id /* block */  _completion;
    long long  _inferenceTimeSpan;
    NSObject<OS_dispatch_queue> * _modelExeQueue;
    void * _novDetectAnalyzer;
    SLODLDProcessor * _odldModelAnalyzer;
    OSDAnalyzer * _osdAnalyzer;
    EARSyncPSRAudioProcessor * _psrAudioProcessor;
    NSObject<OS_dispatch_queue> * _queue;
    NSString * _tempCacheDirectoryForMil2Bnns;
    long long  _totalNumberSamples;
    CSSyncKeywordAnalyzerQuasar * _vtSecondPassAnalyzer;
}

@property (nonatomic) unsigned long long allFramesInferenceLatency;
@property (nonatomic, retain) CSAudioInjectionEngine *audioInjectionEngine;
@property (nonatomic, copy) id /* block */ completion;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long inferenceTimeSpan;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *modelExeQueue;
@property (nonatomic) void*novDetectAnalyzer;
@property (nonatomic, retain) SLODLDProcessor *odldModelAnalyzer;
@property (nonatomic, retain) OSDAnalyzer *osdAnalyzer;
@property (nonatomic, retain) EARSyncPSRAudioProcessor *psrAudioProcessor;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *tempCacheDirectoryForMil2Bnns;
@property (nonatomic) long long totalNumberSamples;
@property (nonatomic, retain) CSSyncKeywordAnalyzerQuasar *vtSecondPassAnalyzer;

- (void).cxx_destruct;
- (void)_onDeviceCompilationWithConfigFile:(id)arg1 locale:(id)arg2 modelType:(long long)arg3;
- (bool)_setupAudioInjectionEngineWithAudioURL:(id)arg1;
- (unsigned long long)allFramesInferenceLatency;
- (void)audioEngineAudioChunkForTvAvailable:(id)arg1 audioChunk:(id)arg2;
- (void)audioEngineBufferAvailable:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 buffer:(id)arg3 remoteVAD:(id)arg4 atTime:(unsigned long long)arg5 isFileLoadedBuffer:(bool)arg6;
- (void)audioEngineDidStartRecord:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 successfully:(bool)arg3 error:(id)arg4;
- (void)audioEngineDidStopRecord:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (id)audioInjectionEngine;
- (void)benchmarkOnDeviceCompilationCleanup:(id /* block */)arg1;
- (id /* block */)completion;
- (long long)inferenceTimeSpan;
- (id)init;
- (id)modelExeQueue;
- (void*)novDetectAnalyzer;
- (id)odldModelAnalyzer;
- (id)osdAnalyzer;
- (void)pingpong:(id)arg1 completion:(id /* block */)arg2;
- (id)psrAudioProcessor;
- (id)queue;
- (void)reset;
- (void)runAudioInjectionOnly:(id)arg1 completion:(id /* block */)arg2;
- (void)runLstmPhsModelWithConfig:(id)arg1 withUrl:(id)arg2 withConfigRoot:(id)arg3 completion:(id /* block */)arg4;
- (void)runNCModelWithConfig:(id)arg1 completion:(id /* block */)arg2;
- (void)runNovDetectorWithConfig:(id)arg1 configRoot:(id)arg2 withUrl:(id)arg3 completion:(id /* block */)arg4;
- (void)runODLDModelWithConfig:(id)arg1 locale:(id)arg2 inputText:(id)arg3 completion:(id /* block */)arg4;
- (void)runOSDAnalyzerWithConfig:(id)arg1 withUrl:(id)arg2 completion:(id /* block */)arg3;
- (void)runVTSecondPassModelWithConfig:(id)arg1 locale:(id)arg2 withUrl:(id)arg3 completion:(id /* block */)arg4;
- (void)setAllFramesInferenceLatency:(unsigned long long)arg1;
- (void)setAllProcessorsAsNil;
- (void)setAudioInjectionEngine:(id)arg1;
- (void)setCompletion:(id /* block */)arg1;
- (void)setInferenceTimeSpan:(long long)arg1;
- (void)setModelExeQueue:(id)arg1;
- (void)setNovDetectAnalyzer:(void*)arg1;
- (void)setOdldModelAnalyzer:(id)arg1;
- (void)setOsdAnalyzer:(id)arg1;
- (void)setPsrAudioProcessor:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setTempCacheDirectoryForMil2Bnns:(id)arg1;
- (void)setTotalNumberSamples:(long long)arg1;
- (void)setVtSecondPassAnalyzer:(id)arg1;
- (id)tempCacheDirectoryForMil2Bnns;
- (long long)totalNumberSamples;
- (id)vtSecondPassAnalyzer;

@end
