/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSpeechFoundation.framework/CoreSpeechFoundation
 */

@interface CSEnhancedEndpointer : NSObject {
    double  _continuityEndTargetTime;
    int  _continuityWindowDuration;
    float  _defaultThresholdPartial;
    float  _defaultThresholdRC;
    double  _delayedTargetTimeDefault;
    double  _delayedTargetTimeRelaxed;
    bool  _delayedTrigger;
    MLModel * _endpointerModel;
    int  _extraDelayMs;
    bool  _hasHadDelayedDefaultResult;
    NSDictionary * _inputSpecs;
    <_TtP20CoreSpeechFoundation31CSEnhancedEndpointerInputVector_> * _inputVector;
    NSArray * _outputNodes;
    float  _relaxedThresholdPartial;
    float  _relaxedThresholdRC;
    float  _speechDetectedThreshold;
}

@property (nonatomic) double continuityEndTargetTime;
@property (nonatomic) int continuityWindowDuration;
@property (nonatomic) float defaultThresholdPartial;
@property (nonatomic) float defaultThresholdRC;
@property (nonatomic) double delayedTargetTimeDefault;
@property (nonatomic) double delayedTargetTimeRelaxed;
@property (nonatomic) bool delayedTrigger;
@property (nonatomic, retain) MLModel *endpointerModel;
@property (nonatomic) int extraDelayMs;
@property (nonatomic) bool hasHadDelayedDefaultResult;
@property (nonatomic, retain) NSDictionary *inputSpecs;
@property (nonatomic, retain) <_TtP20CoreSpeechFoundation31CSEnhancedEndpointerInputVector_> *inputVector;
@property (nonatomic, retain) NSArray *outputNodes;
@property (nonatomic) float relaxedThresholdPartial;
@property (nonatomic) float relaxedThresholdRC;
@property (nonatomic) float speechDetectedThreshold;

- (void).cxx_destruct;
- (id)_constructFeatureDictionary:(id)arg1;
- (bool)_didDefaultEndpointerFireWithPartialScore:(float)arg1 rcScore:(float)arg2;
- (bool)_didDetectSpeechWithPartialScore:(float)arg1;
- (bool)_didRelaxedEndpointerFireWithPartialScore:(float)arg1 rcScore:(float)arg2;
- (void)_extractModelSpecs;
- (bool)_shouldForceEndpoint:(id)arg1;
- (double)continuityEndTargetTime;
- (int)continuityWindowDuration;
- (float)defaultThresholdPartial;
- (float)defaultThresholdRC;
- (double)delayedTargetTimeDefault;
- (double)delayedTargetTimeRelaxed;
- (bool)delayedTrigger;
- (void)didEndpointWithFeatures:(id)arg1 audioTimestampMs:(double)arg2 completion:(id /* block */)arg3;
- (id)endpointerModel;
- (int)extraDelayMs;
- (bool)hasHadDelayedDefaultResult;
- (id)initWithModelFile:(id)arg1 defaultThresholdPartial:(float)arg2 defaultThresholdRC:(float)arg3 relaxedThresholdPartial:(float)arg4 relaxedThresholdRC:(float)arg5 extraDelayMs:(int)arg6 continuityWindowDuration:(int)arg7 speechDetectedThreshold:(float)arg8;
- (id)inputSpecs;
- (id)inputVector;
- (id)modelType;
- (id)outputNodes;
- (float)relaxedThresholdPartial;
- (float)relaxedThresholdRC;
- (void)setContinuityEndTargetTime:(double)arg1;
- (void)setContinuityWindowDuration:(int)arg1;
- (void)setDefaultThresholdPartial:(float)arg1;
- (void)setDefaultThresholdRC:(float)arg1;
- (void)setDelayedTargetTimeDefault:(double)arg1;
- (void)setDelayedTargetTimeRelaxed:(double)arg1;
- (void)setDelayedTrigger:(bool)arg1;
- (void)setEndpointerModel:(id)arg1;
- (void)setExtraDelayMs:(int)arg1;
- (void)setHasHadDelayedDefaultResult:(bool)arg1;
- (void)setInputSpecs:(id)arg1;
- (void)setInputVector:(id)arg1;
- (void)setOutputNodes:(id)arg1;
- (void)setRelaxedThresholdPartial:(float)arg1;
- (void)setRelaxedThresholdRC:(float)arg1;
- (void)setSpeechDetectedThreshold:(float)arg1;
- (float)speechDetectedThreshold;
- (void)updateDefaultThresholdPartial:(float)arg1 defaultThresholdRC:(float)arg2 relaxedThresholdPartial:(float)arg3 relaxedThresholdRC:(float)arg4;
- (void)updateDelayedTriggerSwitch:(bool)arg1;

@end
