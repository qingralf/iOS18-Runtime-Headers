/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSpeechFoundation.framework/CoreSpeechFoundation
 */

@interface CSExclaveRecordClient : NSObject <CSExclaveAdBlockerAnalyzing, CSExclaveAssetsControlling, CSExclaveAudioProviding, CSExclaveFirstPassVoiceTriggerAnalyzing, CSExclaveSecondPassVoiceTriggerAnalyzing> {
    NSObject<OS_dispatch_source> * _audioFeedTimer;
    CSSecureSiriAudioProvidingProxy * _audioProvidingProxy;
    <CSExclaveAudioProvidingDelegate> * _delegate;
    CSExclaveIndicatorController * _exclaveIndicatorController;
    bool  _isRecording;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (nonatomic, retain) NSObject<OS_dispatch_source> *audioFeedTimer;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <CSExclaveAudioProvidingDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CSExclaveIndicatorController *exclaveIndicatorController;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isRecording;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;

+ (id)sharedClient;

- (void).cxx_destruct;
- (void)adBlockerMatchingInProgress:(id /* block */)arg1;
- (id)audioFeedTimer;
- (void)configAOPVoiceTrigger;
- (id)delegate;
- (id)exclaveIndicatorController;
- (void)fetchAOPVoiceTriggerResult:(id /* block */)arg1;
- (bool)fetchAndStoreAudioBuffer;
- (id)init;
- (bool)initializeSecondPass;
- (bool)isRecording;
- (bool)prepare;
- (void)processBargeInVoiceTriggerWithResult:(id /* block */)arg1;
- (void)processSecondPassVoiceTriggerWithShouldFlushAudio:(bool)arg1 result:(id /* block */)arg2;
- (id)queue;
- (void)requestHistoricalAudioBufferFor:(unsigned long long)arg1 startSample:(unsigned long long)arg2 numSamples:(unsigned long long)arg3 hostTime:(unsigned long long)arg4;
- (void)resetFirstPassVoiceTrigger;
- (void)setAdBlockerAsset:(id /* block */)arg1;
- (void)setAssetForLocale:(id)arg1 isOTA:(bool)arg2 completion:(id /* block */)arg3;
- (void)setAudioFeedTimer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExclaveIndicatorController:(id)arg1;
- (void)setIsRecording:(bool)arg1;
- (void)setQueue:(id)arg1;
- (bool)setSpeakerProfile:(id)arg1 numEmbeddings:(unsigned long long)arg2 dimension:(unsigned long long)arg3 speakerRecognizerType:(unsigned long long)arg4;
- (void)startAdBlockerMatching;
- (void)startBargeInVoiceTrigger;
- (void)startSecondPassVoiceTriggerWithFirstPassSource:(unsigned long long)arg1 enablePHS:(bool)arg2 supportMultiPhrase:(bool)arg3 activeChannel:(unsigned int)arg4;
- (void)startSecureAdBlockerMobileAssetLoaderService:(id /* block */)arg1;
- (void)startSecureMobileAssetLoaderService:(bool)arg1 completion:(id /* block */)arg2;
- (unsigned long long)startSensor;
- (void)stopAdBlockerMatching;
- (void)stopBargeInVoiceTrigger;
- (void)stopSecondPassVoiceTrigger;
- (void)stopSecureAdBlockerMobileAssetLoaderService:(id /* block */)arg1;
- (void)stopSecureMobileAssetLoaderService:(id /* block */)arg1;
- (unsigned long long)stopSensor;

@end
