/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreUARP.framework/CoreUARP
 */

@interface UARPSuperBinary : NSObject {
    struct uarpPlatformAsset { struct UARPSuperBinaryHeader { unsigned int x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; struct UARPVersion { unsigned int x_4_2_1; unsigned int x_4_2_2; unsigned int x_4_2_3; unsigned int x_4_2_4; } x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; unsigned int x_1_1_7; unsigned int x_1_1_8; } x1; unsigned short x2; unsigned short x3; struct UARP4ccTag { unsigned char x_4_1_1; unsigned char x_4_1_2; unsigned char x_4_1_3; unsigned char x_4_1_4; } x4; struct UARPVersion { unsigned int x_5_1_1; unsigned int x_5_1_2; unsigned int x_5_1_3; unsigned int x_5_1_4; } x5; unsigned int x6; unsigned char x7; unsigned char x8; struct uarpPlatformAssetCallbacks { int (*x_9_1_1)(); int (*x_9_1_2)(); int (*x_9_1_3)(); int (*x_9_1_4)(); int (*x_9_1_5)(); int (*x_9_1_6)(); int (*x_9_1_7)(); int (*x_9_1_8)(); int (*x_9_1_9)(); int (*x_9_1_10)(); int (*x_9_1_11)(); int (*x_9_1_12)(); int (*x_9_1_13)(); int (*x_9_1_14)(); int (*x_9_1_15)(); int (*x_9_1_16)(); int (*x_9_1_17)(); int (*x_9_1_18)(); int (*x_9_1_19)(); int (*x_9_1_20)(); int (*x_9_1_21)(); int (*x_9_1_22)(); int (*x_9_1_23)(); int (*x_9_1_24)(); int (*x_9_1_25)(); int (*x_9_1_26)(); int (*x_9_1_27)(); int (*x_9_1_28)(); } x9; } * _asset;
    unsigned int  _boardID;
    unsigned int  _chipID;
    NSData * _data;
    <UARPSuperBinaryDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    NSNumber * _demote;
    unsigned long long  _ecID;
    NSData * _ecidData;
    unsigned int  _formatVersion;
    NSMutableString * _keyManifest;
    void * _layer2Context;
    unsigned char  _life;
    NSData * _manifest;
    unsigned char  _manifestEpoch;
    NSMutableArray * _measurements;
    NSData * _metaData;
    bool  _needsHostPersonalization;
    NSData * _nonce;
    NSMutableArray * _payloads;
    bool  _prefixNeedsUnitNumber;
    unsigned char  _productionMode;
    bool  _provisioning;
    unsigned char  _securityDomain;
    unsigned char  _securityMode;
    bool  _suffixNeedsUnitNumber;
    NSMutableDictionary * _tatsuMeasurements;
    bool  _ticketNeedsUnitNumber;
    NSString * _ticketPrefix;
    NSString * _ticketSuffix;
    NSMutableArray * _tlvs;
    unsigned long long  _totalBytesRequested;
    unsigned long long  _totalLength;
    NSMutableArray * _trimmedTlvs;
    NSNumber * _trustedOverride;
    NSMutableDictionary * _tssRequest;
    UARPAssetVersion * _version;
}

@property unsigned int boardID;
@property unsigned int chipID;
@property (retain) NSNumber *demote;
@property unsigned long long ecID;
@property (retain) NSData *ecidData;
@property void*layer2Context;
@property unsigned char life;
@property unsigned char manifestEpoch;
@property (readonly) bool needsHostPersonalization;
@property (retain) NSData *nonce;
@property (readonly) NSArray *payloads;
@property unsigned char productionMode;
@property bool provisioning;
@property unsigned char securityDomain;
@property unsigned char securityMode;
@property (readonly) NSArray *tlvs;
@property (readonly) unsigned long long totalBytesRequested;
@property (readonly) unsigned long long totalLength;
@property (retain) NSNumber *trustedOverride;

- (void).cxx_destruct;
- (unsigned int)boardID;
- (unsigned int)chipID;
- (id)composeTSSRequest:(unsigned long long)arg1 asMeasurement:(bool)arg2;
- (id)demote;
- (unsigned long long)ecID;
- (id)ecidData;
- (bool)expandMetaData:(struct UARPSuperBinaryHeader { unsigned int x1; unsigned int x2; unsigned int x3; struct UARPVersion { unsigned int x_4_1_1; unsigned int x_4_1_2; unsigned int x_4_1_3; unsigned int x_4_1_4; } x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; }*)arg1;
- (bool)expandSuperBinary;
- (bool)expandTLVs;
- (id)generatePersonalizedSuperBinary;
- (id)generatePersonalizedSuperBinaryInternal:(id)arg1;
- (id)generatePersonalizedSuperBinaryWithoutRRKO;
- (void)generateTatsuMeasurements:(unsigned long long)arg1;
- (bool)generateTatsuMeasurements:(unsigned long long)arg1 relativeURL:(id)arg2;
- (void)generateTatsuMeasurementsPerPayload:(unsigned long long)arg1;
- (id)getDataBlock:(unsigned long long)arg1 offset:(unsigned long long)arg2;
- (id)getPayloads;
- (id)getTlvs;
- (id)initWithData:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3;
- (id)initWithFilePath:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3;
- (void*)layer2Context;
- (unsigned char)life;
- (void)log:(id)arg1;
- (void)logInternal:(id)arg1 arguments:(char *)arg2;
- (unsigned char)manifestEpoch;
- (bool)needsHostPersonalization;
- (id)nonce;
- (id)payloadWith4ccTag:(id)arg1;
- (id)payloads;
- (id)payloadsWithout4ccTag:(id)arg1;
- (id)personalizeSuperBinary:(unsigned long long)arg1 signingServer:(id)arg2 ssoOnly:(bool)arg3;
- (id)personalizedMetaData;
- (bool)preparePayload:(struct UARPPayloadHeader2 { unsigned int x1; struct UARP4ccTag { unsigned char x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; unsigned char x_2_1_4; } x2; struct UARPVersion { unsigned int x_3_1_1; unsigned int x_3_1_2; unsigned int x_3_1_3; unsigned int x_3_1_4; } x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; }*)arg1;
- (void)processMeasurementsForTSSOptions:(id)arg1 unitNumber:(unsigned long long)arg2 asMeasurement:(bool)arg3;
- (void)processTLVsForPersonalization;
- (unsigned char)productionMode;
- (bool)provisioning;
- (bool)queryTatsuSigningServer:(id)arg1 ssoOnly:(bool)arg2 error:(id*)arg3;
- (id)requiredTSSOptions;
- (unsigned char)securityDomain;
- (unsigned char)securityMode;
- (void)setBoardID:(unsigned int)arg1;
- (void)setChipID:(unsigned int)arg1;
- (void)setDemote:(id)arg1;
- (void)setEcID:(unsigned long long)arg1;
- (void)setEcidData:(id)arg1;
- (void)setLayer2Context:(void*)arg1;
- (void)setLife:(unsigned char)arg1;
- (void)setManifestEpoch:(unsigned char)arg1;
- (void)setNonce:(id)arg1;
- (void)setProductionMode:(unsigned char)arg1;
- (void)setProvisioning:(bool)arg1;
- (void)setSecurityDomain:(unsigned char)arg1;
- (void)setSecurityMode:(unsigned char)arg1;
- (void)setTrustedOverride:(id)arg1;
- (id)tatsuMeasurements:(unsigned long long)arg1;
- (id)tlvs;
- (unsigned long long)totalBytesRequested;
- (unsigned long long)totalLength;
- (id)trustedOverride;
- (id)tssKeyName:(id)arg1 unitNumber:(unsigned long long)arg2;

@end
