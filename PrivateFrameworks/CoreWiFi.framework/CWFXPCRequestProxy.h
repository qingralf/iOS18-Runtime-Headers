/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi
 */

@interface CWFXPCRequestProxy : NSObject {
    NSMutableDictionary * _EAP8021XMap;
    CWFIO80211 * _IO80211;
    CWFSCNetworkConfiguration * _SCNetworkConfiguration;
    NSMutableDictionary * _SCNetworkInterfaceMap;
    CWFSCNetworkReachability * _SCNetworkReachability;
    NSMutableDictionary * _SCNetworkServiceMap;
    NSMutableSet * _apple80211EligibleRemovalList;
    NSMutableDictionary * _apple80211Map;
    CWFNetworkProfile * _cachedKnownNetwork;
    NSOperationQueue * _defaultQueue;
    <CWFXPCRequestProxyDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _eventQueue;
    NSObject<OS_dispatch_queue> * _interfaceQueue;
    CWFXPCConnection * _internalRequestXPCConnection;
    bool  _isMonitoringEvents;
    CWFKernelEventMonitor * _keventMonitor;
    double  _lastLinkQualityMetricLoggedAt;
    NSMutableDictionary * _mutableAutoJoinStatusMap;
    NSMutableDictionary * _mutableAutoJoinTriggerMap;
    NSSet * _mutableEventIDs;
    NSMutableDictionary * _mutableJoinStatusMap;
    NSMutableDictionary * _mutableLinkDownNetworkMap;
    NSMutableDictionary * _mutableLinkDownStatusMap;
    NSMutableDictionary * _mutableLinkQualityMap;
    NSMutableDictionary * _mutableQueueMap;
    NSMutableDictionary * _mutableRoamStatusMap;
    NSObject<OS_dispatch_queue> * _mutexQueue;
    unsigned int  _netRBAssertionID;
    struct NETRBClient { } * _netRBClient;
    id /* block */  _netRBStartServiceReply;
    id /* block */  _netRBStopServiceReply;
    NSMutableSet * _nonApple80211InterfaceList;
    NSObject<OS_dispatch_source> * _privateMACConnectivityTimer;
    CWFPrivateMACManager * _privateMACManager;
}

@property (retain) <CWFXPCRequestProxyDelegate> *delegate;
@property (readonly) CWFPrivateMACManager *privateMACManager;

- (void).cxx_destruct;
- (id)EAP8021XWithInterfaceName:(id)arg1;
- (id)SCNetworkInterfaceWithInterfaceName:(id)arg1;
- (id)SCNetworkServiceWithInterfaceName:(id)arg1;
- (void)XPCManager:(id)arg1 XPCConnection:(id)arg2 canceledXPCRequestsWithUUID:(id)arg3;
- (void)XPCManager:(id)arg1 XPCConnection:(id)arg2 receivedXPCRequest:(id)arg3;
- (void)XPCManager:(id)arg1 XPCConnection:(id)arg2 updatedRegisteredEventIDs:(id)arg3;
- (void)XPCManager:(id)arg1 invalidatedXPCConnection:(id)arg2;
- (void)XPCManager:(id)arg1 sendXPCEvent:(id)arg2 reply:(id /* block */)arg3;
- (id)__EAP8021XWithInterfaceName:(id)arg1;
- (id)__SCNetworkInterfaceWithInterfaceName:(id)arg1;
- (id)__SCNetworkServiceWithInterfaceName:(id)arg1;
- (void)__addJoinStatusWithScanResult:(id)arg1 knownNetworkProfile:(id)arg2 isAutoJoin:(bool)arg3 interfaceName:(id)arg4;
- (void)__addKnownNetwork:(id)arg1 XPCConnection:(id)arg2;
- (bool)__allowXPCRequestWithoutAvailableInterface:(id)arg1;
- (id)__apple80211WithInterfaceName:(id)arg1;
- (id)__apple80211WithVirtualInterfaceRole:(int)arg1 parentInterfaceName:(id)arg2;
- (void)__autoJoinEndedWithResult:(bool)arg1 interfaceName:(id)arg2;
- (void)__autoJoinStartedWithTrigger:(long long)arg1 interfaceName:(id)arg2;
- (id)__autojoinStatusWithInterfaceName:(id)arg1;
- (id)__cachedKnownNetwork;
- (void)__cancelRequestsWithNamePrefix:(id)arg1;
- (id)__currentNetworkProfileWithInterfaceName:(id)arg1;
- (id)__currentScanResultWithInterfaceName:(id)arg1 forceNoCache:(bool)arg2;
- (void)__currentScanResultWithInterfaceName:(id)arg1 forceNoCache:(bool)arg2 reply:(id /* block */)arg3;
- (int)__defaultInterfaceRoleForRequestType:(long long)arg1;
- (id)__deviceUUID;
- (bool)__didFindMatching80211InterfaceForXPCRequest:(id)arg1;
- (void)__disassocWithReason:(long long)arg1 interfaceName:(id)arg2;
- (void)__getActivities:(id)arg1 XPCConnection:(id)arg2;
- (void)__getApple80211:(id)arg1;
- (void)__getAutoJoinStatus:(id)arg1;
- (void)__getBSSID:(id)arg1 XPCConnection:(id)arg2;
- (void)__getBSSIDForVendor:(id)arg1 XPCConnection:(id)arg2;
- (void)__getCurrentScanResult:(id)arg1 XPCConnection:(id)arg2;
- (void)__getCurrentScanResult:(id)arg1 XPCConnection:(id)arg2 reply:(id /* block */)arg3;
- (void)__getDHCPLeaseExpirationTime:(id)arg1;
- (void)__getDHCPLeaseStartTime:(id)arg1;
- (void)__getDHCPServerID:(id)arg1;
- (void)__getDHCPv6ServerID:(id)arg1;
- (void)__getDNSServerAddresses:(id)arg1;
- (void)__getEAP8021XClientStatus:(id)arg1;
- (void)__getEAP8021XControlMode:(id)arg1;
- (void)__getEAP8021XControlState:(id)arg1;
- (void)__getEAP8021XSupplicantState:(id)arg1;
- (void)__getEventIDs:(id)arg1 XPCConnection:(id)arg2;
- (void)__getGlobalDNSServerAddresses:(id)arg1;
- (void)__getGlobalIPv4Addresses:(id)arg1;
- (void)__getGlobalIPv4InterfaceName:(id)arg1;
- (void)__getGlobalIPv4NetServiceID:(id)arg1;
- (void)__getGlobalIPv4NetServiceName:(id)arg1;
- (void)__getGlobalIPv4Router:(id)arg1;
- (void)__getGlobalIPv6Addresses:(id)arg1;
- (void)__getGlobalIPv6InterfaceName:(id)arg1;
- (void)__getGlobalIPv6NetServiceID:(id)arg1;
- (void)__getGlobalIPv6NetServiceName:(id)arg1;
- (void)__getGlobalIPv6Router:(id)arg1;
- (void)__getHardwareMACAddress:(id)arg1;
- (void)__getIO80211ControllerInfo:(id)arg1;
- (void)__getIO80211InterfaceInfo:(id)arg1;
- (void)__getIPv4ARPResolvedHardwareAddress:(id)arg1;
- (void)__getIPv4ARPResolvedIPAddress:(id)arg1;
- (void)__getIPv4Addresses:(id)arg1;
- (void)__getIPv4NetworkSignature:(id)arg1;
- (void)__getIPv4Router:(id)arg1;
- (void)__getIPv4SubnetMasks:(id)arg1;
- (void)__getIPv6Addresses:(id)arg1;
- (void)__getIPv6NetworkSignature:(id)arg1;
- (void)__getIPv6Router:(id)arg1;
- (void)__getJoinStatus:(id)arg1;
- (void)__getKnownNetworkInfoForLocalNetworkPrompt:(id)arg1 XPCConnection:(id)arg2;
- (void)__getKnownNetworkMatchingNetworkProfile:(id)arg1;
- (void)__getKnownNetworkMatchingScanResult:(id)arg1;
- (void)__getLinkDownStatus:(id)arg1;
- (void)__getLinkQualityMetric:(id)arg1;
- (void)__getMACAddress:(id)arg1;
- (void)__getNetServiceEnabled:(id)arg1;
- (void)__getNetServiceID:(id)arg1;
- (void)__getNetServiceName:(id)arg1;
- (void)__getNetworkReachability:(id)arg1;
- (void)__getPlatformCapabilities:(id)arg1;
- (void)__getPrivateMACAddress:(id)arg1;
- (void)__getPrivateMACAddressMode:(id)arg1;
- (void)__getPrivateMACAddressModeSystemSetting:(id)arg1;
- (void)__getQuickProbeRequired:(id)arg1;
- (void)__getRoamStatus:(id)arg1;
- (void)__getSSID:(id)arg1 XPCConnection:(id)arg2;
- (void)__getSSIDForVendor:(id)arg1 XPCConnection:(id)arg2;
- (void)__getSecurity:(id)arg1;
- (void)__getSystemActivities:(id)arg1 XPCManager:(id)arg2;
- (void)__getSystemEventIDs:(id)arg1 XPCManager:(id)arg2;
- (void)__getWAPISubtype:(id)arg1;
- (void)__getWEPSubtype:(id)arg1;
- (void)__getWiFiUIStateFlags:(id)arg1;
- (void)__handleAssocDoneInternalEvent:(id)arg1;
- (void)__handleAutoJoinStateChangedInternalEvent:(id)arg1;
- (void)__handleKnownNetworkProfileChangedEvent:(id)arg1;
- (void)__handleWillAssocInternalEvent:(id)arg1;
- (id)__hashedBSSID:(id)arg1 XPCConnection:(id)arg2 error:(id*)arg3;
- (id)__hashedSSID:(id)arg1 XPCConnection:(id)arg2 error:(id*)arg3;
- (id)__interfaceNames;
- (id)__interfaceSpecificEventIDs:(id)arg1;
- (id)__joinStatusWithInterfaceName:(id)arg1;
- (id)__knownNetworkProfiles;
- (id)__linkDownNetworkWithInterfaceName:(id)arg1;
- (id)__linkDownStatusWithInterfaceName:(id)arg1;
- (id)__linkQualityMetricWithInterfaceName:(id)arg1;
- (void)__logLqmSummary:(id)arg1;
- (id)__networkStackMACAddressWithInterfaceName:(id)arg1;
- (void)__performAutoJoinWithParameters:(id)arg1 interfaceName:(id)arg2;
- (void)__performScan:(id)arg1 XPCConnection:(id)arg2;
- (void)__privateMACEvaluationCheckConnectivity;
- (void)__privateMACEvaluationCompletedWithState:(long long)arg1 knownNetwork:(id)arg2 interfaceName:(id)arg3;
- (id)__privateMACManager;
- (void)__privateMACSettingChangedForNetworkProfile:(id)arg1 interfaceName:(id)arg2;
- (id)__queueForXPCRequest:(id)arg1;
- (void)__reportQuickProbeResult:(id)arg1;
- (id)__roamStatusWithInterfaceName:(id)arg1;
- (void)__setAutoJoinStatus:(id)arg1 interfaceName:(id)arg2;
- (void)__setCachedKnownNetwork:(id)arg1;
- (void)__setChannel:(id)arg1;
- (void)__setJoinStatus:(id)arg1 interfaceName:(id)arg2;
- (void)__setLQMConfig:(id)arg1;
- (void)__setLinkDownStatus:(id)arg1 interfaceName:(id)arg2;
- (void)__setLinkQualityMetric:(id)arg1 interfaceName:(id)arg2;
- (void)__setPrivateMACAddressMode:(id)arg1;
- (void)__setPrivateMACAddressModeSystemSetting:(id)arg1;
- (void)__setPrivateMACAddressUserJoinFailureUIState:(id)arg1;
- (void)__setRoamStatus:(id)arg1 interfaceName:(id)arg2;
- (void)__setupEventHandlers;
- (void)__setupEventHandlersWithInterfaceName:(id)arg1;
- (void)__startHostAPMode:(id)arg1 XPCConnection:(id)arg2;
- (void)__startMonitoringDefaultEventIDs;
- (void)__startMonitoringDefaultEventIDsForInterfaceName:(id)arg1;
- (void)__startNetworkRelayBridgeWithHostAPConfiguration:(id)arg1 interfaceName:(id)arg2 reply:(id /* block */)arg3;
- (void)__stopHostAPMode:(id)arg1 XPCConnection:(id)arg2;
- (void)__stopMonitoringDefaultEventIDs;
- (void)__stopMonitoringDefaultEventIDsForInterfaceName:(id)arg1;
- (void)__stopNetworkRelayBridgeForInterfaceName:(id)arg1 reply:(id /* block */)arg2;
- (void)__updateAutoJoinState:(long long)arg1 interfaceName:(id)arg2;
- (void)__updateAutoJoinStatusWithJoin:(id)arg1;
- (void)__updateCurrentKnownBSSWithIPConfigurationForInterfaceName:(id)arg1;
- (void)__updateEventMonitoring:(id)arg1;
- (void)__updateEventRegistration:(id)arg1 XPCManager:(id)arg2;
- (void)__updateJoinStatusWithAssoc:(id)arg1;
- (void)__updateJoinStatusWithAuth:(id)arg1;
- (void)__updateJoinStatusWithEAP8021X:(id)arg1;
- (void)__updateJoinStatusWithError:(id)arg1 interaceName:(id)arg2;
- (void)__updateJoinStatusWithIPv4:(id)arg1;
- (void)__updateJoinStatusWithIPv6:(id)arg1;
- (void)__updateJoinStatusWithLinkUp:(id)arg1;
- (void)__updateMonitoring:(bool)arg1 eventIDs:(id)arg2;
- (void)__updateNetworkProfile:(id)arg1 updateProperties:(id)arg2 interfaceName:(id)arg3 reply:(id /* block */)arg4;
- (void)__updateWiFiNetworkInterfaces:(id)arg1 reply:(id /* block */)arg2;
- (void)__updateWiFiNetworkServices;
- (id)__userAutoJoinDisabled;
- (id)__vendorSpecificIdentifierForXPCConnection:(id)arg1;
- (id)__virtualInterfaceNames;
- (id)__wifiInterfaceNames;
- (id)apple80211WithInterfaceName:(id)arg1;
- (id)apple80211WithVirtualInterfaceRole:(int)arg1 parentInterfaceName:(id)arg2;
- (id)delegate;
- (id)init;
- (id)interfaceNames;
- (void)invalidate;
- (bool)isMonitoringEvents;
- (bool)isNon80211InterfaceName:(id)arg1;
- (id)privateMACManager;
- (void)setDelegate:(id)arg1;
- (void)setTargetQueue:(id)arg1 requestType:(long long)arg2 interfaceName:(id)arg3;
- (void)startEventMonitoring;
- (void)stopEventMonitoring;
- (id)virtualInterfaceNames;
- (id)wifiInterfaceNames;

@end
