/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoverSheetKit.framework/CoverSheetKit
 */

@interface CSTitleElementViewAdapter : NSObject <CSProminentTitleLabelDefining> {
    void animatesChanges;
    void coordinator;
    void hostingController;
    void visible;
}

@property (nonatomic) bool adjustsFontSizeToFitWidth; /* unknown property attribute: ? */
@property (nonatomic) bool animatesChanges; /* unknown property attribute: ? */
@property (nonatomic) bool animatesChanges;
@property (nonatomic, retain) NSAttributedString *attributedText; /* unknown property attribute: ? */
@property (nonatomic) bool clipsToBounds; /* unknown property attribute: ? */
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIFont *font;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property (readonly) unsigned long long hash;
@property (nonatomic) double minimumScaleFactor;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *text;
@property (nonatomic, copy) NSString *text;
@property (nonatomic) long long textAlignment;
@property (nonatomic, retain) UIColor *textColor;
@property (nonatomic, readonly) UIViewController *viewController;
@property (getter=isVisible, nonatomic) bool visible; /* unknown property attribute: ? */
@property (nonatomic) bool visible;

- (void).cxx_destruct;
- (bool)animatesChanges;
- (id)font;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)minimumScaleFactor;
- (void)setAnimatesChanges:(bool)arg1;
- (void)setFont:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setMinimumScaleFactor:(double)arg1;
- (void)setText:(id)arg1;
- (void)setTextAlignment:(long long)arg1;
- (void)setTextColor:(id)arg1;
- (void)setView:(id)arg1;
- (void)setVisible:(bool)arg1;
- (id)text;
- (long long)textAlignment;
- (id)textColor;
- (id)view;
- (id)viewController;
- (bool)visible;

@end
