/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/DesktopServicesPriv
 */

@interface FIDSNode : FINode {
    struct TPrivateNodeInstantiationEnabler { 
        struct shared_ptr<TFSVolumeInfo> { 
            struct TFSVolumeInfo {} *__ptr_; 
            struct __shared_weak_count {} *__cntrl_; 
        } fVolumeInfoPtr; 
        struct shared_ptr<TFSInfo> { 
            struct TFSInfo {} *__ptr_; 
            struct __shared_weak_count {} *__cntrl_; 
        } fFSInfo; 
        struct TNodePtr { 
            FINode *fFINode; 
        } fAliasTarget; 
        struct unique_ptr<TOperationLock, std::default_delete<TOperationLock>> { 
            struct __compressed_pair<TOperationLock *, std::default_delete<TOperationLock>> { 
                struct TOperationLock {} *__value_; 
            } __ptr_; 
        } fOperationLock; 
        struct TNode {} *fParent; 
        struct unique_ptr<TChildrenList, std::default_delete<TChildrenList>> { 
            struct __compressed_pair<TChildrenList *, std::default_delete<TChildrenList>> { 
                struct TChildrenList {} *__value_; 
            } __ptr_; 
        } fChildrenList; 
        void *fCustomNode; 
        struct unique_ptr<TNotifierList, std::default_delete<TNotifierList>> { 
            struct __compressed_pair<TNotifierList *, std::default_delete<TNotifierList>> { 
                struct TNotifierList {} *__value_; 
            } __ptr_; 
        } fNotifierList; 
        struct atomic<unsigned short> { 
            struct __cxx_atomic_impl<unsigned short, std::__cxx_atomic_base_impl<unsigned short>> { 
                _Atomic unsigned short __a_value; 
            } __a_; 
        } fFlags; 
    }  _node;
}

+ (id)_makeWithCoder:(id)arg1;
+ (id)appContainersForContainerRoot:(id)arg1 showAllFiles:(bool)arg2 showSystemFiles:(bool)arg3;
+ (void)registerClassForFIDSNodeCoding:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_sendNotification:(unsigned int)arg1 node:(id)arg2 property:(unsigned int)arg3;
- (unsigned int)allObservedOptions;
- (void*)asTNode;
- (id)brContainer;
- (id)brContainerDocuments;
- (id)copyProgress;
- (void)dispatchEvent:(id)arg1 forObserver:(id)arg2;
- (id)downloadProgress;
- (void)encodeWithCoder:(id)arg1;
- (id)enumeratorError;
- (id)fiDomain;
- (id)fileParent;
- (id)fileURL;
- (id)fpDomain;
- (id)fpItem;
- (struct shared_ptr<TFSInfo> { struct TFSInfo {} *x1; struct __shared_weak_count {} *x2; })fsInfo;
- (void)inlineProgressCancel;
- (bool)isObserved;
- (bool)isObservedForAll:(unsigned int)arg1;
- (bool)isObservedForAny:(unsigned int)arg1;
- (bool)isObservedForNone:(unsigned int)arg1;
- (bool)isPopulated;
- (bool)isValid;
- (id)iteratorWithOptions:(unsigned int)arg1;
- (bool)markAsUsed:(id*)arg1;
- (unsigned long long)nodeIs:(unsigned long long)arg1 error:(id*)arg2;
- (unsigned int)nodePermissions:(unsigned int)arg1 error:(id*)arg2;
- (void)nodeRestartObservingWithOptions:(unsigned int)arg1;
- (id)propertyAsArray:(unsigned int)arg1 async:(bool)arg2 options:(unsigned int)arg3 error:(id*)arg4;
- (bool)propertyAsBool:(unsigned int)arg1 async:(bool)arg2 options:(unsigned int)arg3 error:(id*)arg4;
- (id)propertyAsData:(unsigned int)arg1 async:(bool)arg2 options:(unsigned int)arg3 error:(id*)arg4;
- (id)propertyAsDate:(unsigned int)arg1 async:(bool)arg2 options:(unsigned int)arg3 error:(id*)arg4;
- (id)propertyAsDictionary:(unsigned int)arg1 async:(bool)arg2 options:(unsigned int)arg3 error:(id*)arg4;
- (id)propertyAsNSObject:(unsigned int)arg1 async:(bool)arg2 options:(unsigned int)arg3 error:(id*)arg4;
- (id)propertyAsNumber:(unsigned int)arg1 async:(bool)arg2 options:(unsigned int)arg3 error:(id*)arg4;
- (id)propertyAsString:(unsigned int)arg1 async:(bool)arg2 options:(unsigned int)arg3 error:(id*)arg4;
- (bool)setProperty:(unsigned int)arg1 asArray:(id)arg2 async:(bool)arg3 options:(unsigned int)arg4 error:(id*)arg5;
- (bool)setProperty:(unsigned int)arg1 asBool:(bool)arg2 async:(bool)arg3 options:(unsigned int)arg4 error:(id*)arg5;
- (bool)setProperty:(unsigned int)arg1 asData:(id)arg2 async:(bool)arg3 options:(unsigned int)arg4 error:(id*)arg5;
- (bool)setProperty:(unsigned int)arg1 asDate:(id)arg2 async:(bool)arg3 options:(unsigned int)arg4 error:(id*)arg5;
- (bool)setProperty:(unsigned int)arg1 asNumber:(id)arg2 async:(bool)arg3 options:(unsigned int)arg4 error:(id*)arg5;
- (bool)setProperty:(unsigned int)arg1 asString:(id)arg2 async:(bool)arg3 options:(unsigned int)arg4 error:(id*)arg5;
- (id)shortDescription;
- (void)startObserving:(unsigned int)arg1 with:(struct OpaqueEventNotifier { }*)arg2;
- (void)stopObserving:(unsigned int)arg1 with:(struct OpaqueEventNotifier { }*)arg2;
- (void)synchronizeChildren:(unsigned int)arg1 events:(void*)arg2;
- (void)synchronizeWithOptions:(unsigned int)arg1 async:(bool)arg2;
- (unsigned int)volumeIs:(unsigned int)arg1 error:(id*)arg2;

@end
