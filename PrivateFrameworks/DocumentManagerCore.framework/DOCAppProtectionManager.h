/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DocumentManagerCore.framework/DocumentManagerCore
 */

@interface DOCAppProtectionManager : NSObject <APSubjectMonitor, DOCAppProtectionContextProviding, DOCProtectedAppContainerCacheDelegate> {
    NSSet * _allProtectedApplications;
    DOCProtectedAppContainerCache * _appContainerCache;
    <APSubjectMonitorSubscription> * _appMonitorSubscription;
    NSArray * _appToOID;
    NSArray * _filteredDocumentApplicationsWithContentHiddenFromSearch;
    NSArray * _hiddenFilteredDocumentApplications;
    NSString * _hostIdentifier;
    NSArray * _lockedFilteredDocumentApplications;
}

@property (retain) NSSet *allProtectedApplications;
@property (retain) DOCProtectedAppContainerCache *appContainerCache;
@property (retain) <APSubjectMonitorSubscription> *appMonitorSubscription;
@property (nonatomic, readonly) NSArray *appToOID;
@property (nonatomic, readonly) NSArray *applicationsWithContentHiddenFromSearch;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (retain) NSArray *filteredDocumentApplicationsWithContentHiddenFromSearch;
@property (nonatomic, readonly) bool hasAnyProtectedApps;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *hiddenApplicationBundleIDs;
@property (nonatomic, readonly) NSArray *hiddenApplications;
@property (retain) NSArray *hiddenFilteredDocumentApplications;
@property (copy) NSString *hostIdentifier;
@property (nonatomic, readonly) bool isFilesAppLocked;
@property (nonatomic, readonly) NSArray *lockedApplicationBundleIDs;
@property (nonatomic, readonly) NSArray *lockedApplications;
@property (retain) NSArray *lockedFilteredDocumentApplications;
@property (nonatomic, readonly) NSArray *protectedApplicationBundleIDs;
@property (nonatomic, readonly) NSArray *protectedApplications;
@property (readonly) Class superclass;

+ (id)sharedManager;

- (void).cxx_destruct;
- (id)_applicationRecordsForAPApplications:(id)arg1;
- (bool)_applicationShouldBeIncludedInList:(id)arg1;
- (id)allProtectedApplications;
- (id)appContainerCache;
- (id)appMonitorSubscription;
- (void)appProtectionCacheDidUpdate:(id)arg1;
- (void)appProtectionSubjectsChanged:(id)arg1 forSubscription:(id)arg2;
- (id)appToOID;
- (id)applicationsWithContentHiddenFromSearch;
- (void)authenticateLocationWithNoUI:(id)arg1 completion:(id /* block */)arg2;
- (void)authenticateLocationWithShielding:(id)arg1 completion:(id /* block */)arg2;
- (void)bundleIDOfAppContainer:(id)arg1 completion:(id /* block */)arg2;
- (id)bundleIDOfAppContainer_Sync:(id)arg1;
- (bool)canNodeHostAnAppContainer:(id)arg1;
- (id)filterApplications:(id)arg1;
- (id)filteredDocumentApplicationsWithContentHiddenFromSearch;
- (bool)hasAnyProtectedApps;
- (id)hiddenApplicationBundleIDs;
- (id)hiddenApplications;
- (id)hiddenFilteredDocumentApplications;
- (unsigned long long)hostAppCanNavigateToAppBundleID:(id)arg1;
- (unsigned long long)hostAppCanNavigateToFileProviderDomain:(id)arg1;
- (unsigned long long)hostAppCanNavigateToTargetNode:(id)arg1;
- (bool)hostAppCanSeeFileProviderDomain:(id)arg1;
- (unsigned long long)hostAppPermissionForTargetNode:(id)arg1;
- (id)hostIdentifier;
- (id)init;
- (bool)isFilesAppLocked;
- (bool)itemIsAppContainer:(id)arg1;
- (bool)itemIsInAppContainer:(id)arg1;
- (id)lockedApplicationBundleIDs;
- (id)lockedApplications;
- (id)lockedFilteredDocumentApplications;
- (bool)nodeRequiresAuthentication_Sync:(id)arg1;
- (id)protectedAppForAppContainerBundleID:(id)arg1;
- (void)protectedAppForAppContainerBundleID:(id)arg1 completion:(id /* block */)arg2;
- (id)protectedAppForAppContainerOID:(id)arg1;
- (id)protectedApplicationBundleIDs;
- (id)protectedApplications;
- (void)setAllProtectedApplications:(id)arg1;
- (void)setAppContainerCache:(id)arg1;
- (void)setAppMonitorSubscription:(id)arg1;
- (void)setFilteredDocumentApplicationsWithContentHiddenFromSearch:(id)arg1;
- (void)setHiddenFilteredDocumentApplications:(id)arg1;
- (void)setHostIdentifier:(id)arg1;
- (void)setLockedFilteredDocumentApplications:(id)arg1;
- (void)startObserving;
- (void)stopObserving;
- (void)updateCachedFilteredApplications;
- (void)updateCachedFilteredApplicationsIfNeeded;

@end
