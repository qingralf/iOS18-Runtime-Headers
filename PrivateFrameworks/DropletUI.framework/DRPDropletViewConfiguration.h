/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DropletUI.framework/DropletUI
 */

@interface DRPDropletViewConfiguration : NSObject {
    void _anyAnimationCompletionBlock;
    void animationBlockMap;
    void animationCompletionBlockMap;
    void behaviorSettingsMap;
    void boundaryEdges;
    void boundaryOutsets;
    void centerX;
    void centerY;
    void containerCornerRadius;
    void containerHeight;
    void containerTransform;
    void containerWidth;
    void disableDropletEffectFilters;
    void dropletColor;
    void dropletRadius;
    void keylineStyle;
}

@property (nonatomic) unsigned long long boundaryEdges;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } boundaryOutsets;
@property (nonatomic) double centerX;
@property (nonatomic) double centerY;
@property (nonatomic) double containerCornerRadius;
@property (nonatomic) double containerHeight;
@property (nonatomic) struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; } containerTransform;
@property (nonatomic) double containerWidth;
@property (nonatomic, readonly) NSString *debugDescription;
@property (nonatomic, readonly) NSString *description;
@property (nonatomic) bool disableDropletEffectFilters;
@property (nonatomic, retain) UIColor *dropletColor;
@property (nonatomic) double dropletRadius;
@property (nonatomic, retain) <DRPDropletContextKeylineStyle> *keylineStyle;

+ (id)edgeAdaptiveKeylineWithCanvasSize:(struct CGSize { double x1; double x2; })arg1 edge:(unsigned long long)arg2 protrusionFromEdge:(double)arg3 centerAlongEdge:(double)arg4 containerSize:(struct CGSize { double x1; double x2; })arg5 containerCornerRadius:(double)arg6 transform3D:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg7 dropletRadius:(double)arg8;
+ (id)edgeContentPresentedWithCanvasSize:(struct CGSize { double x1; double x2; })arg1 edge:(unsigned long long)arg2 lengthAlongEdge:(double)arg3 protrusionFromEdge:(double)arg4 centerAlongEdge:(double)arg5 inflationProgress:(double)arg6 dropletRadius:(double)arg7;
+ (id)edgeHintWithCanvasSize:(struct CGSize { double x1; double x2; })arg1 hintSize:(double)arg2 edge:(unsigned long long)arg3 centerAlongEdge:(double)arg4 progress:(double)arg5 dropletRadius:(double)arg6;
+ (id)rightEdgeContentPresentedWithCanvasSize:(struct CGSize { double x1; double x2; })arg1 contentSize:(struct CGSize { double x1; double x2; })arg2 centerY:(double)arg3 dropletRadius:(double)arg4 isOffscreen:(bool)arg5 inflationProgress:(double)arg6;
+ (id)rightEdgeHintWithCanvasSize:(struct CGSize { double x1; double x2; })arg1 centerY:(double)arg2 progress:(double)arg3;
+ (id)trailingContentPresentedWithCanvasSize:(struct CGSize { double x1; double x2; })arg1 contentSize:(struct CGSize { double x1; double x2; })arg2 centerY:(double)arg3 dropletRadius:(double)arg4 isOffscreen:(bool)arg5 inflationProgress:(double)arg6;
+ (id)trailingHintWithCanvasSize:(struct CGSize { double x1; double x2; })arg1 centerY:(double)arg2 progress:(double)arg3;

- (void).cxx_destruct;
- (void)addAlongsideAnimationBlockForKeyPath:(id)arg1 animationBlock:(id /* block */)arg2;
- (void)addAnimationCompletionBlockForKeyPath:(id)arg1 animationCompletionBlock:(id /* block */)arg2;
- (void)addAnyAnimationCompletionBlock:(id /* block */)arg1;
- (id /* block */)animationBlockForKeyPath:(id)arg1;
- (id /* block */)animationCompletionBlockForKeyPath:(id)arg1;
- (id /* block */)anyAnimationCompletionBlock;
- (id)behaviorSettingsForKeyPath:(id)arg1;
- (unsigned long long)boundaryEdges;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })boundaryOutsets;
- (double)centerX;
- (double)centerY;
- (void)changeToIntelligentLightStyle:(unsigned long long)arg1 preferAudioReactivity:(bool)arg2 canvasSize:(struct CGSize { double x1; double x2; })arg3;
- (double)containerCornerRadius;
- (double)containerHeight;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })containerTransform;
- (double)containerWidth;
- (id)copy;
- (id)debugDescription;
- (void)defaultResetKeylineForCanvasSize:(struct CGSize { double x1; double x2; })arg1;
- (id)description;
- (bool)disableDropletEffectFilters;
- (id)dropletColor;
- (double)dropletRadius;
- (id)init;
- (id)initWithCenterX:(double)arg1 centerY:(double)arg2 boundaryEdges:(unsigned long long)arg3 containerCornerRadius:(double)arg4 containerHeight:(double)arg5 containerWidth:(double)arg6 containerTransform:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg7 dropletColor:(id)arg8 dropletRadius:(double)arg9 disableDropletEffectFilters:(bool)arg10 boundaryOutsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg11 keylineStyle:(id)arg12;
- (id)initWithViewConfiguration:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)keylineStyle;
- (void)removeAnyAnimationCompletionBlocks;
- (void)setBehaviorSettingsForKeyPath:(id)arg1 behaviorSettings:(id)arg2;
- (void)setBoundaryEdges:(unsigned long long)arg1;
- (void)setBoundaryOutsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setCenterX:(double)arg1;
- (void)setCenterY:(double)arg1;
- (void)setContainerCornerRadius:(double)arg1;
- (void)setContainerHeight:(double)arg1;
- (void)setContainerTransform:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;
- (void)setContainerWidth:(double)arg1;
- (void)setDisableDropletEffectFilters:(bool)arg1;
- (void)setDropletColor:(id)arg1;
- (void)setDropletRadius:(double)arg1;
- (void)setKeylineStyle:(id)arg1;

@end
