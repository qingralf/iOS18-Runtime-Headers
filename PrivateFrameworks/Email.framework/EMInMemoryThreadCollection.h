/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Email.framework/Email
 */

@interface EMInMemoryThreadCollection : NSObject {
    id /* block */  _comparator;
    NSMutableOrderedSet * _conversationIDs;
    <EMInMemoryThreadCollectionDataSource> * _dataSource;
    long long  _dateSortOrder;
    <EMInMemoryThreadCollectionDelegate> * _delegate;
    EFLazyCache * _inMemoryThreadCache;
    NSMutableDictionary * _inMemoryThreadsByConversationID;
    bool  _limitedCache;
    NSObject<OS_os_log> * _logClient;
    <EMMailboxTypeResolver> * _mailboxTypeResolver;
    NSMutableDictionary * _mailboxesByConversationID;
    EFLocked * _oldestThreadsByMailboxObjectIDs;
    EMQuery * _query;
    <EFAssertableScheduler> * _scheduler;
    EFLocked * _sectionIndexesByConversationID;
    EFOrderedDictionary * _sectionPredicates;
    EMThreadScope * _threadScope;
    NSMutableDictionary * _threadsByConversationID;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _threadsLock;
}

@property (nonatomic, readonly) id /* block */ comparator;
@property (nonatomic, readonly) <EMInMemoryThreadCollectionDataSource> *dataSource;
@property (nonatomic, readonly) long long dateSortOrder;
@property (nonatomic, readonly) <EMInMemoryThreadCollectionDelegate> *delegate;
@property (nonatomic, readonly) EFLazyCache *inMemoryThreadCache;
@property (nonatomic) bool limitedCache;
@property (nonatomic, retain) NSObject<OS_os_log> *logClient;
@property (nonatomic, readonly) <EMMailboxTypeResolver> *mailboxTypeResolver;
@property (nonatomic, readonly, copy) EMQuery *query;
@property (nonatomic, readonly) <EFAssertableScheduler> *scheduler;
@property (nonatomic, readonly) EFOrderedDictionary *sectionPredicates;
@property (nonatomic, readonly, copy) EMThreadScope *threadScope;

+ (id /* block */)_comparatorForInThreadProxiesWithSortDescriptors:(id)arg1 sectionComparator:(id /* block */)arg2;

- (void).cxx_destruct;
- (void)clearForRecovery;
- (void)clearInMemoryThreadCache;
- (void)clearOldestThreadsByMailboxObjectIDs;
- (id /* block */)comparator;
- (void)conversationIDDidChangeForMessages:(id)arg1 fromConversationID:(long long)arg2;
- (void)conversationNotificationLevelDidChangeForConversation:(long long)arg1 conversationID:(long long)arg2;
- (id)dataSource;
- (long long)dateSortOrder;
- (id)delegate;
- (void)enumerateObjectIDsInBatchesOfSize:(unsigned long long)arg1 block:(id /* block */)arg2;
- (id)inMemoryThreadCache;
- (id)initWithQuery:(id)arg1 mailboxTypeResolver:(id)arg2 dataSource:(id)arg3 delgate:(id)arg4 scheduler:(id)arg5 logClient:(id)arg6 limitedCache:(bool)arg7;
- (void)initializeOldestThreadsByMailbox;
- (id)itemIDs;
- (bool)limitedCache;
- (id)logClient;
- (id)mailboxTypeResolver;
- (id)messageListItemForObjectID:(id)arg1 error:(id*)arg2;
- (id)messagesForThread:(id)arg1;
- (void)messagesWereAdded:(id)arg1;
- (void)messagesWereChanged:(id)arg1 forKeyPaths:(id)arg2 deleted:(bool)arg3;
- (void)notifyObserverOfOldestThreadsByMailboxObjectIDs;
- (void)objectIDDidChangeForMessage:(id)arg1 oldObjectID:(id)arg2 oldConversationID:(long long)arg3;
- (void)performBlockOnSchedulerIfNecessary:(id /* block */)arg1;
- (id)query;
- (bool)removeThreadProxies:(id)arg1 forMove:(bool)arg2;
- (id)scheduler;
- (id)sectionIdentifierForThreadObjectID:(id)arg1;
- (id)sectionPredicates;
- (void)setLimitedCache:(bool)arg1;
- (void)setLogClient:(id)arg1;
- (id)threadScope;
- (id)threadsAndMessagesForObjectIDs:(id)arg1;

@end
