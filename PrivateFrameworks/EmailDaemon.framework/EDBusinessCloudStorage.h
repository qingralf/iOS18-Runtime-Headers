/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
 */

@interface EDBusinessCloudStorage : NSObject <EDBusinessChangeHookResponder, EMUbiquitouslyPersistedDictionaryDelegate, EMUbiquitouslyPersistedDictionaryDelegate_Private> {
    EDBusinessPersistence * _businessPersistence;
    EDCategoryPersistence * _categoryPersistence;
    EFLocked * _deletedKeyMap;
    EDMessagePersistence * _messagePersistence;
    <EFScheduler> * _observerScheduler;
    NSHashTable * _observers;
    <EMMutableDictionaryProtocol> * _persistentDictionary;
    EFLazyCache * _syncKeyCache;
}

@property (nonatomic, retain) EDBusinessPersistence *businessPersistence;
@property (nonatomic, retain) EDCategoryPersistence *categoryPersistence;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic, readonly) EFLocked *deletedKeyMap;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) EDMessagePersistence *messagePersistence;
@property (nonatomic, readonly) <EFScheduler> *observerScheduler;
@property (nonatomic, readonly) <EMMutableDictionaryProtocol> *persistentDictionary;
@property (readonly) Class superclass;
@property (nonatomic, readonly) EFLazyCache *syncKeyCache;

- (void).cxx_destruct;
- (id)_categoryStringForCategoryType:(id)arg1;
- (id)_dateForKey:(id)arg1 categoryType:(id)arg2 businessWithExternalID:(id)arg3;
- (id)_dictionaryForBusiness:(id)arg1;
- (long long)_getCategorizationSyncTypeForSender:(id)arg1 businessID:(long long)arg2 senderAlreadyKnown:(bool)arg3 senderAddressID:(long long)arg4 connection:(id)arg5 mailboxURL:(id)arg6 account:(id)arg7 outCategory:(id*)arg8 outDate:(id*)arg9;
- (bool)_hasCategoryChanged:(id)arg1 from:(id)arg2;
- (id)_hashSchemeForGrouping:(long long)arg1;
- (id)_messageQueryForSender:(id)arg1 forAccount:(id)arg2;
- (id)_mutableDictionaryForBusiness:(id)arg1;
- (void)_removeDictionaryForBusiness:(id)arg1;
- (bool)_setLastSeenDate:(id)arg1 forCategoryType:(id)arg2 onDictionary:(id)arg3 isDisplayDate:(bool)arg4;
- (void)_setMutableDictionary:(id)arg1 forBusiness:(id)arg2;
- (id)_syncKeyForExternalID:(id)arg1;
- (void)_updateCategoryOverrideForBusinessExternalID:(id)arg1;
- (void)_updateCategoryOverrideForBusinessID:(long long)arg1 withBusinessExternalID:(id)arg2;
- (bool)_updateIcloudSyncwithMessageHeaders:(id)arg1 category:(id)arg2 timestamp:(id)arg3;
- (void)beginObserving:(id)arg1;
- (id)businessPersistence;
- (id)categoryForBusinessWithExternalID:(id)arg1 lastModifiedDate:(id*)arg2;
- (id)categoryPersistence;
- (id)deletedKeyMap;
- (id)initWithBusinessPersistence:(id)arg1 categoryPersistence:(id)arg2 messagePersistence:(id)arg3 hookRegistry:(id)arg4;
- (id)lastSeenDateForCategoryType:(id)arg1 businessWithExternalID:(id)arg2;
- (id)lastSeenDisplayDateForCategoryType:(id)arg1 businessWithExternalID:(id)arg2;
- (id)mergeChangesForRemotelyChangedKeys:(id)arg1 localStore:(id)arg2 cloudStore:(id)arg3;
- (id)messagePersistence;
- (id)observerScheduler;
- (void)persistedDictionaryDidChangeRemotelyWithChangedItems:(id)arg1 deletedItems:(id)arg2;
- (void)persistenceIsCreatingBusinessID:(long long)arg1 withExternalBusinessID:(id)arg2;
- (id)persistentDictionary;
- (void)removeAllEntries;
- (void)removeAllEntriesForBusinessWithExternalID:(id)arg1;
- (void)removeCategoryForBusinessWithExternalID:(id)arg1;
- (void)removeCategoryForBusinessWithExternalID:(id)arg1 withLastModifiedDate:(id)arg2;
- (void)setBusinessPersistence:(id)arg1;
- (void)setCategory:(unsigned long long)arg1 forBusinessWithExternalID:(id)arg2;
- (void)setCategory:(unsigned long long)arg1 forBusinessWithExternalID:(id)arg2 withLastModifiedDate:(id)arg3;
- (void)setCategoryPersistence:(id)arg1;
- (void)setIfNeededLastSeenDate:(id)arg1 andDisplayDate:(id)arg2 forCategoryType:(id)arg3 businessWithExternalID:(id)arg4;
- (void)setMessagePersistence:(id)arg1;
- (void)stopObserving:(id)arg1;
- (id)syncKeyCache;
- (void)updateIcloudOverridesForAddress:(id)arg1 cache:(id)arg2 connection:(id)arg3 account:(id)arg4 isIcloudAccount:(bool)arg5 messageHeaders:(id)arg6 mailboxURL:(id)arg7 isNewAddress:(bool)arg8;

@end
