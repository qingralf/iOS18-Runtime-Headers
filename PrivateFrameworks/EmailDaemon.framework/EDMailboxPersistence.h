/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
 */

@interface EDMailboxPersistence : NSObject <EDMailboxProviderDelegate, EMMailboxTypeResolver> {
    EMCoreAnalyticsCollector * _analyticsCollector;
    NSMutableDictionary * _changeObserversByIdentifier;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _changeObserversByIdentifierLock;
    EDPersistenceDatabase * _database;
    EDPersistenceHookRegistry * _hookRegistry;
    EDMailboxProvider * _mailboxProvider;
    NSBackgroundActivityScheduler * _statisticsReportingScheduler;
}

@property (nonatomic, readonly) NSSet *allMailboxObjectIDs;
@property (nonatomic, readonly) EMCoreAnalyticsCollector *analyticsCollector;
@property (nonatomic, retain) NSMutableDictionary *changeObserversByIdentifier;
@property (nonatomic, retain) EDPersistenceDatabase *database;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) EDPersistenceHookRegistry *hookRegistry;
@property (nonatomic, retain) EDMailboxProvider *mailboxProvider;
@property (nonatomic, readonly) EDMailboxPersistenceStatistics *statistics;
@property (nonatomic, retain) NSBackgroundActivityScheduler *statisticsReportingScheduler;
@property (readonly) Class superclass;

+ (id)log;

- (void).cxx_destruct;
- (void)_reportPersistenceStatistics:(id)arg1;
- (void)_sendCoreAnalyticsForLargestMailbox:(long long)arg1 messageCountInSecondLargestMailbox:(long long)arg2;
- (void)_sendCoreAnalyticsForMailboxesPerAccount:(id)arg1 accountTypePerAccount:(id)arg2;
- (void)_sendCoreAnalyticsForMessagesPerAccount:(id)arg1 accountTypePerAccount:(id)arg2;
- (void)_sendCoreAnalyticsForMessagesPerInbox:(id)arg1 accountTypePerAccount:(id)arg2 accountPerInbox:(id)arg3;
- (void)_sendEventToCoreAnalytics:(id)arg1 withEventDictionary:(id)arg2;
- (void)_startReportingPersistenceStatistics;
- (void)_stopReportingPersistenceStatistics;
- (void)addChangeObserver:(id)arg1 withIdentifier:(id)arg2;
- (id)allMailboxObjectIDs;
- (id)allMailboxes;
- (void)allMailboxesWithCompletionHandler:(id /* block */)arg1;
- (id)analyticsCollector;
- (id)changeObserversByIdentifier;
- (bool)createMailbox:(id)arg1 parentMailboxID:(id)arg2;
- (id)database;
- (void)dealloc;
- (bool)deleteMailbox:(id)arg1;
- (void)fetchMailboxListsWithKind:(long long)arg1;
- (id)hookRegistry;
- (id)initForTesting:(bool)arg1;
- (id)initWithMailboxProvider:(id)arg1 database:(id)arg2 hookRegistry:(id)arg3;
- (struct EDMailboxRowID_s { unsigned long long x1; })insertDatabaseRowForMailboxURL:(id)arg1;
- (id)legacyMailboxForMailboxURL:(id)arg1;
- (id)legacyMailboxForObjectID:(id)arg1;
- (struct EDMailboxRowID_s { unsigned long long x1; })mailboxDatabaseIDForMailboxURL:(id)arg1;
- (id)mailboxDatabaseIDsForMailboxObjectIDs:(id)arg1 createIfNecessary:(bool)arg2;
- (id)mailboxDatabaseIDsForMailboxURLStrings:(id)arg1;
- (void)mailboxListInvalidated;
- (id)mailboxObjectIDsForMailboxType:(long long)arg1;
- (id)mailboxProvider;
- (long long)mailboxTypeForMailboxObjectID:(id)arg1;
- (id)mailboxURLForMailboxDatabaseID:(struct EDMailboxRowID_s { unsigned long long x1; })arg1;
- (bool)mailboxURLIsGmailLabel:(id)arg1;
- (bool)moveMailbox:(id)arg1 newParentMailboxID:(id)arg2;
- (void)recordFrecencyEventWithMailboxesWithIDs:(id)arg1;
- (void)removeChangeObserverWithIdentifier:(id)arg1;
- (bool)renameMailbox:(id)arg1 newName:(id)arg2;
- (void)scheduleRecurringActivity;
- (void)serverCountsForMailboxScope:(id)arg1 block:(id /* block */)arg2;
- (void)setChangeObserversByIdentifier:(id)arg1;
- (void)setDatabase:(id)arg1;
- (void)setHookRegistry:(id)arg1;
- (void)setMailboxProvider:(id)arg1;
- (void)setStatisticsReportingScheduler:(id)arg1;
- (void)setUidNext:(unsigned int)arg1 forMailbox:(struct EDMailboxRowID_s { unsigned long long x1; })arg2;
- (void)setUidValidity:(unsigned int)arg1 forMailbox:(struct EDMailboxRowID_s { unsigned long long x1; })arg2;
- (id)statistics;
- (id)statisticsReportingScheduler;
- (void)testRecordFrecencyEventsForAllMailboxes;
- (void)testResetFrecencyForAllMailboxes;
- (void)test_tearDown;
- (unsigned int)uidNextForMailbox:(struct EDMailboxRowID_s { unsigned long long x1; })arg1;
- (unsigned int)uidValidityForMailbox:(struct EDMailboxRowID_s { unsigned long long x1; })arg1;
- (id)userCreatedMailboxObjectIDs;

@end
