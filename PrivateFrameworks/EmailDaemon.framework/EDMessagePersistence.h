/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
 */

@interface EDMessagePersistence : NSObject <EDBusinessChangeHookResponder, EDCategoryChangeHookResponder, EDMessageObjectIDToDatabaseIDConverter, EFSignpostable> {
    EMBlockedSenderManager * _blockedSenderManager;
    NSNumber * _cachedMetadataEstimatedRowCount;
    NSObject<OS_dispatch_queue> * _cachedMetadataIsolation;
    int  _cachedMetadataUpdatesSinceLastCheck;
    EDPersistenceDatabase * _database;
    EDGmailLabelPersistence * _gmailLabelPersistence;
    EDPersistenceHookRegistry * _hookRegistry;
    EDMailboxPersistence * _mailboxPersistence;
    EDMessageTransformer * _messageTransformer;
    EDMessagePersistenceStatistics * _persistenceStatistics;
    EDMessageQueryParser * _queryParser;
    <EMUserProfileProvider> * _userProfileProvider;
    <EMVIPReader> * _vipReader;
}

@property (nonatomic, readonly) EMBlockedSenderManager *blockedSenderManager;
@property (nonatomic, retain) NSNumber *cachedMetadataEstimatedRowCount;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *cachedMetadataIsolation;
@property (nonatomic) int cachedMetadataUpdatesSinceLastCheck;
@property (nonatomic, readonly) EDPersistenceDatabase *database;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <EFSQLValueExpressable> *expressionForFilteringUnavailableMessages;
@property (nonatomic, readonly) <EFSQLValueExpressable> *expressionForFilteringUnavailableMessagesFromCount;
@property (nonatomic, readonly) <EFSQLValueExpressable> *expressionForFilteringUnavailableMessagesFromCountForGlobalMessageQuery;
@property (nonatomic, readonly) <EFSQLValueExpressable> *expressionForFindingOnlyJournaledMessages;
@property (nonatomic, readonly) EDGmailLabelPersistence *gmailLabelPersistence;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) EDPersistenceHookRegistry *hookRegistry;
@property (nonatomic, readonly) EDMailboxPersistence *mailboxPersistence;
@property (nonatomic, retain) EDMessageTransformer *messageTransformer;
@property (nonatomic, readonly) EDMessagePersistenceStatistics *persistenceStatistics;
@property (nonatomic, retain) EDMessageQueryParser *queryParser;
@property (readonly) unsigned long long signpostID;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <EMUserProfileProvider> *userProfileProvider;
@property (nonatomic, readonly) <EMVIPReader> *vipReader;

// Image: /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon

+ (id)_addressMetadataTableSchema;
+ (id)_addressesTableSchema;
+ (id)_brandIndicatorsTableSchema;
+ (id)_cachedMetadataTableSchema;
+ (long long)_databaseIDFromSelect:(id)arg1 connection:(id)arg2;
+ (id)_generatedSummariesTableSchema;
+ (id)_messageReferencesTableSchema;
+ (id)_protectedMessageDataTableSchema;
+ (id)_recipientClauseForType:(unsigned long long)arg1 addressValue:(id)arg2;
+ (id)_subjectsTableSchema;
+ (id)_summariesTableSchema;
+ (void)addAdditionalKeyPathMappersToDictionary:(id)arg1 schema:(id)arg2;
+ (void)addCategoryKeyPathMappersToDictionary:(id)arg1 schema:(id)arg2 protectedSchema:(id)arg3;
+ (id)addJoinsForAddressToSelectComponent:(id)arg1 withSourceAddressColumn:(id)arg2;
+ (void)addStandardKeyPathMappersToDictionary:(id)arg1 schema:(id)arg2 protectedSchema:(id)arg3;
+ (id)additionalSelectExpressions;
+ (id)addressesTableAddressColumnName;
+ (id)addressesTableCommentColumnName;
+ (id)addressesTableName;
+ (id)allDatabaseIDsForSimpleAddresses:(id)arg1 connection:(id)arg2;
+ (id)bitExpressionForAttachments;
+ (id)bitExpressionForConversationFlag:(unsigned long long)arg1;
+ (id)bitExpressionForIsCCMe;
+ (id)bitExpressionForIsToMe;
+ (long long)databaseIDForEmailAddress:(id)arg1 connection:(id)arg2;
+ (id)generatedSummariesTableName;
+ (id)globalMessageIDColumnName;
+ (id)log;
+ (id)messageBusinessCategoryColumnAlias;
+ (id)messageGlobalDataCategoryIsTemporaryColumnName;
+ (id)messageGlobalDataCategoryModelVersionColumnName;
+ (id)messageGlobalDataHighImpactColumnName;
+ (id)messageGlobalDataModelAnalyticsColumnName;
+ (id)messageGlobalDataModelCategoryColumnName;
+ (id)messageGlobalDataModelSubcategoryColumnName;
+ (id)messageGlobalDataTableName;
+ (id)messageGlobalDataTableSchemaAndAssociationsToResolve:(id*)arg1;
+ (id)messageGlobalDataValidationState;
+ (id)messagesDateReceivedColumnName;
+ (id)messagesDisplayDateColumnName;
+ (id)messagesSenderColumnName;
+ (id)messagesTableName;
+ (id)objectPropertyMapperForSchema:(id)arg1 protectedSchema:(id)arg2;
+ (id)partialMessagesTableSchemaAndForeignKeysToResolve:(id*)arg1 associationsToResolve:(id*)arg2;
+ (id)protectedTablesAndForeignKeysToResolve:(id*)arg1;
+ (id)recipientsTableSchemaAndForeignKeysToResolve:(id*)arg1 associationsToResolve:(id*)arg2;
+ (id)selectAddressesStatementWithResultColumns:(id*)arg1;
+ (id)signpostLog;
+ (id)tableRelationshipsForSchema:(id)arg1 protectedSchema:(id)arg2;
+ (id)tablesAndForeignKeysToResolve:(id*)arg1 associationsToResolve:(id*)arg2;

- (void).cxx_destruct;
- (id)_cachedMetadataJSONForKey:(id)arg1 globalMessageID:(long long)arg2;
- (void)_checkCachedMetadataRowLimitWithConnection:(id)arg1;
- (void)_checkForFollowUpExpirationWithQuery:(id)arg1;
- (long long)_countForSQLQuery:(id)arg1;
- (id)_databaseIDsDictionaryForGlobalMessageIDs:(id)arg1 mailboxScope:(id)arg2;
- (id)_expressionForNonDeletedMessagesDisqualifyingColumn:(bool)arg1;
- (id)_groupMessageObjectIDsByMailboxScope:(id)arg1;
- (void)_iterateMessagesMatchingQuery:(id)arg1 limit:(long long)arg2 cancelationToken:(id)arg3 handler:(id /* block */)arg4;
- (void)_iteratePersistedMessagesMatchingQuery:(id)arg1 limit:(long long)arg2 cancelationToken:(id)arg3 requireProtectedData:(bool)arg4 handler:(id /* block */)arg5;
- (id)_messageForSQLRow:(id)arg1 connection:(id)arg2 mailboxScope:(id)arg3 recipientsCache:(id)arg4;
- (bool)_persistAuthenticationState:(id)arg1 forGlobalMessageID:(id)arg2 connection:(id)arg3;
- (id)_persistedMessageIDsForMessagesForConversationIDs:(id)arg1 onlyFollowUps:(bool)arg2;
- (id)_predicatesSeparatedByMailboxOrAccountForAndPredicate:(id)arg1 containsMailboxPredicate:(bool*)arg2;
- (id)_predicatesSeparatedByMailboxOrAccountForOrPredicate:(id)arg1 containsMailboxPredicate:(bool*)arg2;
- (id)_predicatesSeparatedByMailboxOrAccountForPredicate:(id)arg1 containsMailboxPredicate:(bool*)arg2;
- (void)_recipientsForMessageWithDatabaseID:(long long)arg1 connection:(id)arg2 recipientsCache:(id)arg3 toRecipientStrings:(id)arg4 ccRecipientStrings:(id)arg5;
- (void)_setCachedMetadataJSON:(id)arg1 forKey:(id)arg2 globalMessageID:(long long)arg3;
- (id)_threadQueryForThreadObjectID:(id)arg1;
- (long long)addBrandIndicatorWithData:(id)arg1;
- (id)baseMessageForOutgoingMessage:(id)arg1 isDraft:(bool)arg2;
- (id)blockedSenderManager;
- (id)brandIndicatorForDatabaseID:(long long)arg1;
- (id)brandIndicatorForURL:(id)arg1;
- (id)brandIndicatorsForURLs:(id)arg1;
- (id)cachedDatabaseIDsDictionaryForGlobalMessageIDs:(id)arg1;
- (id)cachedMetadataEstimatedRowCount;
- (id)cachedMetadataIsolation;
- (id)cachedMetadataJSONForKey:(id)arg1 messageID:(id)arg2;
- (int)cachedMetadataUpdatesSinceLastCheck;
- (id)collectStatistics;
- (void)collectStatisticsWithStatistics:(id)arg1;
- (id)completeCachedMetadataJSONForGlobalMessageID:(long long)arg1;
- (bool)compressDirectory:(id)arg1 shouldCancel:(id /* block */)arg2 error:(id*)arg3;
- (bool)compressFile:(id)arg1 error:(id*)arg2;
- (long long)countOfJournaledMessagesMatchingQuery:(id)arg1;
- (long long)countOfMessageStatement:(id)arg1;
- (long long)countOfMessagesMatchingQuery:(id)arg1;
- (id)countOfMessagesMatchingQueryPerMailbox:(id)arg1;
- (long long)countOfMessagesWithGlobalMessageID:(long long)arg1 matchingQuery:(id)arg2;
- (id)createContextForIteration;
- (id)database;
- (id)databaseIDsDictionaryForMessageObjectIDs:(id)arg1;
- (id)diagnosticsForForMessageObjectIDs:(id)arg1;
- (id)enabledAccountMailboxesExpression;
- (id)expressionForFilteringUnavailableMessages;
- (id)expressionForFilteringUnavailableMessagesFromCount;
- (id)expressionForFilteringUnavailableMessagesFromCountForGlobalMessageQuery;
- (id)expressionForFindingOnlyJournaledMessages;
- (long long)findAddressIDForAddress:(id)arg1;
- (id)flagsForLegacyFlags:(long long)arg1 numberOfAttachments:(long long*)arg2;
- (id)fullDataIfAvailableForMessage:(id)arg1;
- (long long)globalIDForMessageIDHash:(id)arg1;
- (long long)globalIDForMessageIDHeader:(id)arg1;
- (long long)globalIDForMessageWithDatabaseID:(long long)arg1 mailboxScope:(id*)arg2;
- (id)gmailLabelPersistence;
- (id)hookRegistry;
- (id)initWithMailboxPersistence:(id)arg1 database:(id)arg2 hookRegistry:(id)arg3 userProfileProvider:(id)arg4 blockedSenderManager:(id)arg5 vipReader:(id)arg6 gmailLabelPersistence:(id)arg7;
- (void)iterateMessagesMatchingQuery:(id)arg1 batchSize:(long long)arg2 firstBatchSize:(long long)arg3 limit:(long long)arg4 cancelationToken:(id)arg5 handler:(id /* block */)arg6;
- (void)iteratePersistedMessagesMatchingQuery:(id)arg1 limit:(long long)arg2 cancelationToken:(id)arg3 handler:(id /* block */)arg4;
- (void)iteratePersistedMessagesMatchingQuery:(id)arg1 limit:(long long)arg2 cancelationToken:(id)arg3 requireProtectedData:(bool)arg4 handler:(id /* block */)arg5;
- (id)mailboxPersistence;
- (id)messageIDsWithBasePaths:(id)arg1;
- (id)messageObjectIDCriterionExpressionForPredicateValue:(id)arg1;
- (id)messageObjectIDForURL:(id)arg1;
- (id)messageObjectIDsForSearchableItemIdentifiers:(id)arg1;
- (id)messageTransformer;
- (id)messagesForMessageObjectIDs:(id)arg1 missedMessageObjectIDs:(id*)arg2;
- (id)messagesForPersistedMessages:(id)arg1 mailboxScope:(id)arg2;
- (id)messagesMatchingQuery:(id)arg1;
- (id)messagesMatchingQuery:(id)arg1 limit:(long long)arg2;
- (id)messagesMatchingQuery:(id)arg1 limit:(long long)arg2 cancelationToken:(id)arg3;
- (id)metadataForAddresses:(id)arg1;
- (void)notifyGeneratedSummaryChangeForMessage:(id)arg1 window:(id)arg2;
- (void)performDatabaseReadBlock:(id /* block */)arg1;
- (void)performDatabaseWorkInBlockWithHighPriority:(id /* block */)arg1;
- (void)persistFollowUp:(id)arg1 forMessages:(id)arg2;
- (bool)persistMessageAuthenticationState:(long long)arg1 forMessage:(id)arg2;
- (bool)persistMessageAuthenticationState:(long long)arg1 forMessageWithGlobalMessageID:(long long)arg2;
- (bool)persistMessageAuthenticationStates:(id)arg1;
- (void)persistSendLaterForMessages:(id)arg1 date:(id)arg2;
- (id)persistedMessageForSQLRow:(id)arg1 connection:(id)arg2 iterationContext:(id)arg3;
- (id)persistedMessageIDsForGlobalMessageIDs:(id)arg1;
- (id)persistedMessageIDsForMessagesForConversationIDs:(id)arg1;
- (id)persistedMessageIDsForMessagesWithFollowUpsForConversationIDs:(id)arg1;
- (id)persistedMessagesForBusinessID:(long long)arg1;
- (id)persistedMessagesForDatabaseIDs:(id)arg1 requireProtectedData:(bool)arg2 temporarilyUnavailableDatabaseIDs:(id*)arg3;
- (id)persistedMessagesForForMessageIDHeader:(id)arg1 requireProtectedData:(bool)arg2;
- (id)persistedMessagesForMessageObjectIDs:(id)arg1 requireProtectedData:(bool)arg2 temporarilyUnavailableMessageObjectIDs:(id*)arg3;
- (id)persistedMessagesForObjectIDs:(id)arg1 requireProtectedData:(bool)arg2;
- (id)persistedMessagesFromSendersWithAddressIDs:(id)arg1 temporarilyUnavailableMessageObjectIDs:(id)arg2;
- (id)persistedMessagesFromSendersWithAddressIDs:(id)arg1 temporarilyUnavailableMessageObjectIDs:(id)arg2 limit:(unsigned long long)arg3;
- (id)persistedMessagesMatchingQuery:(id)arg1 limit:(long long)arg2;
- (id)persistedMessagesMatchingQuery:(id)arg1 limit:(long long)arg2 requireProtectedData:(bool)arg3;
- (void)persistenceDidChangeBusinessIDForAddressID:(id)arg1 fromBusinessID:(long long)arg2;
- (void)persistenceDidChangeCategoryForAddressIDs:(id)arg1 generationWindow:(id)arg2;
- (void)persistenceDidNotChangeCategoryForAddressIDs:(id)arg1;
- (id)persistenceStatistics;
- (void)persistenceWillChangeCategoryForAddressIDs:(id)arg1;
- (id)queriesSeparatedByMailboxForQuery:(id)arg1;
- (id)queryParser;
- (id)queryWithExpandedMailboxesFromQuery:(id)arg1;
- (void)recipientsForMessageWithDatabaseID:(long long)arg1 connection:(id)arg2 recipientsCache:(id)arg3 toRecipientStrings:(id)arg4 ccRecipientStrings:(id)arg5;
- (void)reconcileJournalWithCompletionBlock:(id /* block */)arg1;
- (void)removeBrandIndicatorForURL:(id)arg1;
- (id)requestContentForMessageObjectID:(id)arg1 requestID:(unsigned long long)arg2 options:(id)arg3 delegate:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)requestSummaryForMessageObjectID:(id)arg1;
- (id)retrieveFollowUpJsonStringForModelEvaluationForSuggestionsForMessages:(id)arg1;
- (void)setBrandIndicator:(id)arg1 forURL:(id)arg2;
- (void)setBrandIndicatorDatabaseID:(long long)arg1 location:(id)arg2 forMessages:(id)arg3;
- (void)setCachedMetadataEstimatedRowCount:(id)arg1;
- (void)setCachedMetadataJSON:(id)arg1 forKey:(id)arg2 messageID:(id)arg3;
- (void)setCachedMetadataUpdatesSinceLastCheck:(int)arg1;
- (void)setContentProtectionForAttachmentFile:(id)arg1;
- (void)setGeneratedSummaries:(id)arg1;
- (void)setGeneratedSummary:(id)arg1 forPersistedMessage:(id)arg2;
- (void)setGeneratedSummary:(id)arg1 forSearchableItemIdentifer:(id)arg2;
- (void)setMessageTransformer:(id)arg1;
- (void)setMetadata:(id)arg1 forAddress:(id)arg2;
- (void)setQueryParser:(id)arg1;
- (unsigned long long)signpostID;
- (id)sortableMessagesForPersistedMessages:(id)arg1 mailboxScope:(id)arg2;
- (id)sortableMessagesMatchingQuery:(id)arg1 limit:(long long)arg2;
- (id)sqlQueryForQuery:(id)arg1 connection:(id)arg2;
- (void)test_tearDown;
- (id)undownloadedBrandIndicatorsWithLimit:(unsigned long long)arg1;
- (void)updateBeforeDisplayForMessagesMatchingQuery:(id)arg1;
- (void)updateBeforeDisplayForPersistedMessages:(id)arg1;
- (void)updateDisplayDateForPersistedMessages:(id)arg1 displayDate:(id)arg2 changeIsRemote:(bool)arg3;
- (id)userProfileProvider;
- (id)vipReader;

// Image: /System/Library/PrivateFrameworks/Message.framework/Message

- (id)mailDropAttachmentPresentForMessage:(id)arg1;
- (void)setIsMailDropAttachmentPresent:(bool)arg1 forMessage:(id)arg2;

@end
