/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FPFS.framework/FPFS
 */

@interface FSChangeMonitor : NSObject {
    NSURL * _barrierFolderURL;
    bool  _createNoDelay;
    NSObject<OS_dispatch_queue> * _delegationQueue;
    bool  _drainEvents;
    unsigned long long  _fseventProcessBatchSize;
    NSObject<OS_dispatch_source> * _fseventsProcessSource;
    NSMutableArray * _fseventsToProcess;
    bool  _hasMarkSelf;
    bool  _isActivated;
    bool  _isCancelled;
    bool  _isProcessingHistory;
    NSObject<OS_os_log> * _log;
    unsigned long long  _maxFSEventQueueSize;
    bool  _optimizeOutOwnEvents;
    NSMutableArray * _pendingBarrierEvents;
    bool  _plannedRescan;
    NSObject<OS_dispatch_queue> * _processQueue;
    _Atomic int  _resetCount;
    struct fpfs_fsevent_stream { } * _stream;
    NSObject<OS_dispatch_queue> * _streamQueue;
    NSMutableArray * _subscriptions;
    _Atomic int  _suspendCount;
    FPFSVolume * _volume;
}

@property (nonatomic, retain) NSURL *barrierFolderURL;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *delegationQueue;
@property (nonatomic, readonly) bool hasBufferedEvents;
@property (nonatomic, readonly) double latency;
@property (getter=hasPlannedRescan, nonatomic) bool plannedRescan;

- (void).cxx_destruct;
- (bool)_activateSubscription:(id)arg1 error:(id*)arg2;
- (void)_cancel;
- (void)_close;
- (struct fpfs_fsevent_stream { }*)_createStreamNamed:(id)arg1 since:(unsigned long long)arg2 criteria:(id)arg3;
- (bool)_queueEvents:(id)arg1 markSelfEncountered:(bool)arg2;
- (bool)activateSubscription:(id)arg1 error:(id*)arg2;
- (id)barrierFolderURL;
- (void)cancel;
- (void)close;
- (void)dealloc;
- (id)delegationQueue;
- (void)deliverBarrierEvents;
- (id)description;
- (void)disableSubscription:(id)arg1;
- (void)flushStream;
- (void)foreachSubscriptionInState:(unsigned long long)arg1 apply:(id /* block */)arg2;
- (bool)handleFSEvent:(id)arg1 indexInBatch:(unsigned int)arg2 batchSize:(unsigned int)arg3;
- (bool)hasBufferedEvents;
- (bool)hasPlannedRescan;
- (id)init;
- (id)initWithLabel:(id)arg1 workloop:(id)arg2;
- (double)latency;
- (id)liveFSEventsXPCActivityCriteria;
- (unsigned long long)oldestStartingPoint;
- (void)processFseventBatch;
- (void)queueEvents:(id)arg1 markSelfEncountered:(bool)arg2;
- (void)resetWithReason:(long long)arg1 newFSEventID:(unsigned long long)arg2;
- (void)resume;
- (void)setBarrierFolderURL:(id)arg1;
- (void)setPlannedRescan:(bool)arg1;
- (bool)setUpStreamForReason:(long long)arg1 error:(id*)arg2;
- (id)subscribeToEventsAtPath:(id)arg1 fd:(int)arg2 sinceEventID:(unsigned long long)arg3 streamUUID:(id)arg4 ignoreOwnEvents:(bool)arg5 delegate:(id)arg6 purpose:(id)arg7;
- (void)suspend;

@end
