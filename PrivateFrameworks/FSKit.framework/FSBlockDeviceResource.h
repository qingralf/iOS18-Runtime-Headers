/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FSKit.framework/FSKit
 */

@interface FSBlockDeviceResource : FSResource {
    NSString * _BSDName;
    unsigned long long  _blockCount;
    unsigned long long  _blockSize;
    NSString * _devicePath;
    int  _fileDescriptor;
    FSWorkQueue * _fsExecQueue;
    NSObject<OS_dispatch_queue> * _ioKitQueue;
    unsigned int  _notification;
    struct IONotificationPort { } * _notifyPort;
    unsigned long long  _partitionBase;
    unsigned long long  _physicalBlockSize;
    unsigned long long  _queueDepth;
    bool  _supportsBarrier;
    bool  _supportsPriority;
    bool  _supportsUnmap;
    bool  _terminated;
    NSString * _usingResourcePurpose;
    bool  _writable;
}

@property (readonly, copy) NSString *BSDName;
@property (readonly) unsigned long long blockCount;
@property (readonly) unsigned long long blockSize;
@property (nonatomic, readonly) NSString *bsdName;
@property (readonly) NSString *devicePath;
@property (readonly) int fileDescriptor;
@property (retain) FSWorkQueue *fsExecQueue;
@property (retain) NSObject<OS_dispatch_queue> *ioKitQueue;
@property unsigned int notification;
@property struct IONotificationPort { }*notifyPort;
@property (readonly) unsigned long long partitionBase;
@property (readonly) unsigned long long physicalBlockSize;
@property (getter=isTerminated, nonatomic, readonly) bool terminated;
@property (retain) NSString *usingResourcePurpose;
@property (getter=isWritable, readonly) bool writable;

+ (id)newProxyForBSDName:(id)arg1 isWritable:(bool)arg2;
+ (void)openWithBSDName:(id)arg1 writable:(bool)arg2 auditToken:(id)arg3 replyHandler:(id /* block */)arg4;
+ (id)proxyResourceForBSDName:(id)arg1;
+ (id)proxyResourceForBSDName:(id)arg1 isWritable:(bool)arg2;
+ (id)proxyResourceForBSDName:(id)arg1 writable:(bool)arg2;
+ (id)resourceWithBSDName:(id)arg1 devicePath:(id)arg2 fileDescriptor:(int)arg3 writable:(bool)arg4;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)BSDName;
- (id)asynchronousMetadataFlush;
- (unsigned long long)blockCount;
- (unsigned long long)blockSize;
- (id)bsdName;
- (Class)classForCoder;
- (void)dealloc;
- (id)delayedMetadataWriteFrom:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3;
- (id)devicePath;
- (void)encodeWithCoder:(id)arg1;
- (int)fileDescriptor;
- (id)fsExecQueue;
- (id)getResourceID;
- (id)initProxyForBSDName:(id)arg1;
- (id)initProxyForBSDName:(id)arg1 isWritable:(bool)arg2;
- (id)initWithBSDName:(id)arg1 devicePath:(id)arg2 fileDescriptor:(int)arg3 writable:(bool)arg4;
- (id)initWithCoder:(id)arg1;
- (id)initWithResource:(id)arg1;
- (id)ioKitQueue;
- (bool)isEqual:(id)arg1;
- (bool)isTerminated;
- (bool)isWritable;
- (long long)kind;
- (id)makeProxy;
- (id)metadataClear:(id)arg1 wait:(bool)arg2;
- (id)metadataFlush;
- (id)metadataPurge:(id)arg1;
- (id)metadataReadInto:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3;
- (id)metadataReadInto:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3 readAheadExtents:(const struct { long long x1; unsigned long long x2; }*)arg4 readAheadCount:(long long)arg5;
- (id)metadataWriteFrom:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3;
- (void)metadataWriteFrom:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (unsigned int)notification;
- (struct IONotificationPort { }*)notifyPort;
- (unsigned long long)partitionBase;
- (unsigned long long)physicalBlockSize;
- (void)readFirstSectorAndLog;
- (void)readInto:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (unsigned long long)readInto:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3 error:(id*)arg4;
- (void)releaseNotification;
- (void)revoke;
- (void)setFsExecQueue:(id)arg1;
- (void)setIoKitQueue:(id)arg1;
- (void)setNotification:(unsigned int)arg1;
- (void)setNotifyPort:(struct IONotificationPort { }*)arg1;
- (void)setUsingResourcePurpose:(id)arg1;
- (id)startUsingResource:(id)arg1;
- (id)stopUsingResource:(id)arg1;
- (void)synchronousReadInto:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3 reply:(id /* block */)arg4;
- (void)synchronousReadInto:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3 replyHandler:(id /* block */)arg4;
- (void)terminate;
- (bool)terminated;
- (id)usingResourcePurpose;
- (void)writeFrom:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (unsigned long long)writeFrom:(void*)arg1 startingAt:(long long)arg2 length:(unsigned long long)arg3 error:(id*)arg4;

@end
