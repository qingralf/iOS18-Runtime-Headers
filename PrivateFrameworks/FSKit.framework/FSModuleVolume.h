/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FSKit.framework/FSKit
 */

@interface FSModuleVolume : NSObject <NSXPCListenerDelegate> {
    NSMutableDictionary * _connections;
    NSObject<OS_dispatch_queue> * _fileHandleQueue;
    NSMutableDictionary * _fileHandleToItemTable;
    NSXPCListener * _listener;
    FSModuleExtension * _ourExtension;
    bool  _reportAsLocal;
    FSResource * _resource;
    FSItem * _rootFSItem;
    bool  _spotlightIsEnabled;
    bool  _supportsAccessOps;
    bool  _supportsCloneOps;
    bool  _supportsKOIOOps;
    bool  _supportsLimitedXattrOps;
    bool  _supportsOpenCloseOps;
    bool  _supportsOpenUnlink;
    bool  _supportsPreallocateOps;
    bool  _supportsReadWriteOps;
    bool  _supportsVolumeRenameOps;
    bool  _supportsXattrOps;
    FSVolume<FSVolumeOperations> * _volume;
    int  connectionCount;
    unsigned char  validConnections;
}

@property (readonly) NSMutableDictionary *connections;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (retain) NSObject<OS_dispatch_queue> *fileHandleQueue;
@property (retain) NSMutableDictionary *fileHandleToItemTable;
@property (readonly) unsigned long long hash;
@property (readonly) NSXPCListener *listener;
@property (retain) FSModuleExtension *ourExtension;
@property (readonly) bool reportAsLocal;
@property (retain) FSResource *resource;
@property (retain) FSItem *rootFSItem;
@property (readonly) bool spotlightIsEnabled;
@property (readonly) Class superclass;
@property (readonly) bool supportsAccessOps;
@property (readonly) bool supportsCloneOps;
@property (readonly) bool supportsKOIOOps;
@property (readonly) bool supportsLimitedXattrOps;
@property (readonly) bool supportsOpenCloseOps;
@property (readonly) bool supportsOpenUnlink;
@property (readonly) bool supportsPreallocateOps;
@property (readonly) bool supportsReadWriteOps;
@property (readonly) bool supportsVolumeRenameOps;
@property (readonly) bool supportsXattrOps;
@property (retain) FSVolume<FSVolumeOperations> *volume;

+ (id)volumeWithName:(id)arg1 resource:(id)arg2;

- (void).cxx_destruct;
- (id)connections;
- (void)fetchAndSetTypeForItem:(id)arg1;
- (id)fileHandleQueue;
- (id)fileHandleToItemTable;
- (id)getAndRemoveItemForFH:(id)arg1;
- (id)getItemForFH:(id)arg1;
- (long long)getMaxFileSizeInBits;
- (long long)getMaxXattrSizeInBits;
- (id)initWithVolume:(id)arg1 resource:(id)arg2;
- (void)insertIntoFHCache:(id)arg1;
- (id)listener;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (unsigned char)newConnectionID:(id)arg1;
- (id)ourExtension;
- (void)removeConnectionByID:(unsigned char)arg1;
- (void)removeFromFHCache:(id)arg1;
- (bool)reportAsLocal;
- (id)resource;
- (id)rootFSItem;
- (void)setFileHandleQueue:(id)arg1;
- (void)setFileHandleToItemTable:(id)arg1;
- (void)setOurExtension:(id)arg1;
- (void)setResource:(id)arg1;
- (void)setRootFSItem:(id)arg1;
- (void)setVolume:(id)arg1;
- (bool)spotlightIsEnabled;
- (id)stopUsingVolume;
- (bool)supportsAccessOps;
- (bool)supportsCloneOps;
- (bool)supportsKOIOOps;
- (bool)supportsLimitedXattrOps;
- (bool)supportsOpenCloseOps;
- (bool)supportsOpenUnlink;
- (bool)supportsPreallocateOps;
- (bool)supportsReadWriteOps;
- (bool)supportsVolumeRenameOps;
- (bool)supportsXattrOps;
- (void)updateRootItem:(id)arg1;
- (id)volume;

@end
