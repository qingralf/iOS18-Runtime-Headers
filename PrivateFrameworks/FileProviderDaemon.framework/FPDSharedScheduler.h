/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FileProviderDaemon.framework/FileProviderDaemon
 */

@interface FPDSharedScheduler : NSObject {
    NSObject<OS_xpc_object> * _activity;
    long long  _alwaysRunnableCount;
    struct _xpc_activity_eligibility_changed_handler_s { } * _changeHandler;
    id /* block */  _criteriaBuilder;
    NSString * _label;
    NSDate * _lastDeferralDate;
    NSDate * _lastRegistrationDate;
    NSDate * _lastTriggerDate;
    NSDate * _lastUnregistrationDate;
    NSDate * _lastUsageDate;
    bool  _manualScheduling;
    long long  _options;
    bool  _preventRunning;
    bool  _registered;
    long long  _registrationCount;
    NSObject<OS_dispatch_source> * _unregistrationTimer;
    bool  _wasCheckedIn;
    NSMapTable * _watchers;
}

@property (readonly) long long dasContext;
@property (readonly) bool hasRegisteredExecutors;
@property (readonly) NSString *label;
@property (readonly) NSDate *lastDeferralDate;
@property (readonly) NSDate *lastRegistrationDate;
@property (readonly) NSDate *lastTriggerDate;
@property (readonly) NSDate *lastUsageDate;
@property (getter=useManualScheduling) bool manualScheduling;
@property bool preventRunning;
@property (getter=isRegistered, readonly) bool registered;
@property (readonly) long long registrationCount;
@property (getter=isRunning, readonly) bool running;

+ (void)checkIn;
+ (bool)disableDelayedUnregistration;
+ (id)queue;
+ (id)schedulerWithLabel:(id)arg1;
+ (void)setDisableDelayedUnregistration:(bool)arg1;

- (void).cxx_destruct;
- (long long)_contextForActivity:(id)arg1;
- (void)addWatcher:(id)arg1;
- (bool)canOrIsForcedToRunCheckingDeferral:(bool)arg1 reason:(id*)arg2;
- (bool)canRunCheckingDeferral:(bool)arg1 reason:(id*)arg2;
- (void)cancelDelayedUnregistration;
- (void)checkIn;
- (void)completeActivityWithState:(long long)arg1;
- (long long)dasContext;
- (void)defer;
- (id)description;
- (id /* block */)forceRunningWithReason:(id)arg1;
- (bool)hasRegisteredExecutors;
- (id)initWithLabel:(id)arg1 criteria:(id)arg2;
- (id)initWithLabel:(id)arg1 criteriaBuilder:(id /* block */)arg2;
- (id)initWithLabel:(id)arg1 options:(long long)arg2 criteria:(id)arg3;
- (id)initWithLabel:(id)arg1 options:(long long)arg2 criteriaBuilder:(id /* block */)arg3;
- (bool)isRegistered;
- (bool)isRunning;
- (id)label;
- (id)lastDeferralDate;
- (id)lastRegistrationDate;
- (id)lastTriggerDate;
- (id)lastUsageDate;
- (void)markWatcherDone:(id)arg1;
- (void)notifyCanRun;
- (void)notifyIsDeferred;
- (void)ping;
- (bool)preventRunning;
- (void)registerActivity;
- (void)registerActivityIfNeeded;
- (long long)registrationCount;
- (void)removeWatcher:(id)arg1;
- (bool)runIfPossible:(id /* block */)arg1;
- (void)setManualScheduling:(bool)arg1;
- (void)setPreventRunning:(bool)arg1;
- (bool)shouldPause;
- (void)unregisterActivityImmediately;
- (void)unregisterActivityWithDelay;
- (void)unregisterActivityWithDelayIfNeeded;
- (bool)useManualScheduling;
- (void)withReevaluationOfSchedulingState:(id /* block */)arg1;

@end
