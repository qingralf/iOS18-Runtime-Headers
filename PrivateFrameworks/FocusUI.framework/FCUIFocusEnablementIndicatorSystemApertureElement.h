/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FocusUI.framework/FocusUI
 */

@interface FCUIFocusEnablementIndicatorSystemApertureElement : NSObject <SAAlertBehavior, SAElement, SAUIElementViewProviding, SAUILayoutSpecifying, SBUISystemApertureContentViewContaining> {
    <FCActivityDescribing> * _activityDescription;
    bool  _activityEnabled;
    UIButton * _activityIconButton;
    UIImageView * _activityIconImageView;
    FCUICAPackageView * _activityIconPackageView;
    FCActivityManager * _activityManager;
    UILabel * _activityOnOffLabel;
    UILabel * _activityTitleLabel;
    <SAAlertHosting> * _alertHost;
    double  _expandedHeight;
    bool  _isForPickerPresentation;
    <SAUILayoutHosting> * _layoutHost;
    long long  _layoutMode;
    UIView * _leadingView;
    SBUISystemApertureTextContentProvider * _onOffTrailingTextProvider;
    UIImageView * _pickerTrailingView;
    long long  _preferredLayoutMode;
    double  _sensorObstructionHeight;
}

@property (nonatomic, readonly, copy) <FCActivityDescribing> *activityDescription;
@property (getter=isActivityEnabled, nonatomic) bool activityEnabled;
@property (nonatomic) <SAAlertHosting> *alertHost; /* unknown property attribute: ? */
@property (nonatomic, readonly, copy) NSString *clientIdentifier;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UIView *detachedMinimalView; /* unknown property attribute: ? */
@property (nonatomic, readonly) <SAElement> *element;
@property (nonatomic) <SAElementHosting> *elementHost; /* unknown property attribute: ? */
@property (nonatomic, readonly, copy) NSString *elementIdentifier;
@property (readonly) unsigned long long hash;
@property (getter=isInteractiveDismissalEnabled, nonatomic, readonly) bool interactiveDismissalEnabled; /* unknown property attribute: ? */
@property (nonatomic) unsigned long long layoutAxis; /* unknown property attribute: ? */
@property (nonatomic) <SAUILayoutHosting> *layoutHost; /* unknown property attribute: ? */
@property (nonatomic, readonly) long long layoutMode;
@property (nonatomic, readonly) UIView *leadingView;
@property (nonatomic, readonly) long long maximumSupportedLayoutMode;
@property (getter=isMinimalPresentationPossible, nonatomic, readonly) bool minimalPresentationPossible; /* unknown property attribute: ? */
@property (nonatomic, readonly) UIView *minimalView;
@property (nonatomic, readonly) long long minimumSupportedLayoutMode;
@property (nonatomic, readonly) long long preferredLayoutMode;
@property (getter=isRequestingMenuPresentation, nonatomic, readonly) bool requestingMenuPresentation; /* unknown property attribute: ? */
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIView *trailingView;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (void)_configureCustomViewsIfNecessary;
- (id)_customLayoutFont;
- (id)_enablementText;
- (void)_layoutCustomActivityButtonInContainerView:(id)arg1;
- (void)_layoutCustomTextViewsInContainerView:(id)arg1;
- (void)_layoutHuggingObstructionForLabel:(id)arg1 x:(double)arg2 width:(double)arg3 maxLabelHeight:(double)arg4;
- (id)_primaryColor;
- (void)_updateOnOffTrailingLabelAnimated:(bool)arg1;
- (void)_updateTrailingLabel;
- (void)_updateVisualStylingAnimated:(bool)arg1;
- (id)activityDescription;
- (id)alertHost;
- (id)clientIdentifier;
- (void)contentProviderWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 inContainerView:(id)arg2 transitionCoordinator:(id)arg3;
- (id)element;
- (id)elementIdentifier;
- (bool)hasAlertBehavior;
- (id)initForPickerWithActivityDescription:(id)arg1 enabled:(bool)arg2;
- (id)initWithActivityDescription:(id)arg1 enabled:(bool)arg2;
- (bool)isActivityEnabled;
- (id)keyColor;
- (id)layoutHost;
- (void)layoutHostContainerViewDidLayoutSubviews:(id)arg1;
- (long long)layoutMode;
- (id)leadingView;
- (long long)maximumSupportedLayoutMode;
- (id)minimalView;
- (long long)minimumSupportedLayoutMode;
- (void)preferredContentSizeDidInvalidateForContentViewProvider:(id)arg1;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })preferredEdgeOutsetsForLayoutMode:(long long)arg1 suggestedOutsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg2 maximumOutsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (long long)preferredLayoutMode;
- (void)setActivityEnabled:(bool)arg1;
- (void)setAlertHost:(id)arg1;
- (void)setLayoutHost:(id)arg1;
- (void)setLayoutMode:(long long)arg1 reason:(long long)arg2;
- (bool)shouldSuppressElementWhileOnCoversheet;
- (id)trailingView;
- (id)viewProvider;

@end
