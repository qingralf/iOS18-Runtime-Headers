/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOComposedRouteAnchorPoint : GEOComposedWaypoint <NSCopying, NSSecureCoding> {
    unsigned long long  _anchorPointType;
    NSString * _countryCode;
    GEOComposedWaypointDisplayInfo * _displayInfo;
    double  _elevation;
    bool  _isAddress;
    bool  _isCoordinate;
    bool  _isCuratedRoute;
    bool  _isCurrentLocation;
    struct { 
        double latitude; 
        double longitude; 
        double altitude; 
    }  _locationCoordinate;
    int  _mapDisplayType;
    GEOMapItemIdentifier * _mapItemIdentifier;
    NSString * _name;
    struct { 
        unsigned int index; 
        float offset; 
    }  _routeCoordinate;
    GEOFeatureStyleAttributes * _styleAttributes;
    NSUUID * _uniqueID;
}

@property (nonatomic) unsigned long long anchorPointType;
@property (nonatomic, readonly, copy) NSString *countryCode;
@property (nonatomic, retain) GEOComposedWaypointDisplayInfo *displayInfo;
@property (nonatomic, readonly) double elevation;
@property (nonatomic, readonly) bool elevationIsValid;
@property (nonatomic) bool isAddress;
@property (nonatomic) bool isCoordinate;
@property (nonatomic) bool isCuratedRoute;
@property (nonatomic) bool isCurrentLocation;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } locationCoordinate;
@property (nonatomic, readonly) int mapDisplayType;
@property (nonatomic, readonly) GEOMapItemIdentifier *mapItemIdentifier;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) struct { unsigned int x1; float x2; } routeCoordinate;
@property (nonatomic, readonly) GEOFeatureStyleAttributes *styleAttributes;
@property (nonatomic, retain) NSUUID *uniqueID;
@property (nonatomic, readonly) NSUUID *uniqueID;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

+ (id)anchorPointWithCoordinate:(struct { double x1; double x2; double x3; })arg1;
+ (id)anchorPointWithCoordinate:(struct { double x1; double x2; double x3; })arg1 isCurrentLocation:(bool)arg2 name:(id)arg3;
+ (id)anchorPointWithMapItem:(id)arg1 coordinate:(struct { double x1; double x2; double x3; })arg2;
+ (id)anchorPointWithMapItemIdentifier:(id)arg1 coordinate:(struct { double x1; double x2; double x3; })arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_defaultDisplayInfo;
- (void)_setElevationIfNecessaryForMapItem:(id)arg1;
- (unsigned long long)anchorPointType;
- (struct { double x1; double x2; double x3; })coordinate;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)countryCode;
- (id)description;
- (id)displayInfo;
- (id)duplicateWithRouteCoordinate:(struct { unsigned int x1; float x2; })arg1;
- (double)elevation;
- (bool)elevationIsValid;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithLocationCoordinate:(struct { double x1; double x2; double x3; })arg1;
- (id)initWithLocationCoordinate:(struct { double x1; double x2; double x3; })arg1 isCurrentLocation:(bool)arg2 name:(id)arg3;
- (id)initWithMapItem:(id)arg1;
- (id)initWithMapItem:(id)arg1 coordinate:(struct { double x1; double x2; double x3; })arg2;
- (id)initWithMapItemIdentifier:(id)arg1;
- (id)initWithMapItemIdentifier:(id)arg1 coordinate:(struct { double x1; double x2; double x3; })arg2;
- (id)initWithUniqueID:(id)arg1 locationCoordinate:(struct { double x1; double x2; double x3; })arg2 routeCoordinate:(struct { unsigned int x1; float x2; })arg3;
- (bool)isAddress;
- (bool)isAddressWaypointType;
- (bool)isCoordinate;
- (bool)isCuratedRoute;
- (bool)isCurrentLocation;
- (bool)isEqual:(id)arg1;
- (bool)isLocationWaypointType;
- (id)location;
- (struct { double x1; double x2; double x3; })locationCoordinate;
- (int)mapDisplayType;
- (id)mapItemIdentifier;
- (id)name;
- (void)refineWithMapItem:(id)arg1;
- (struct { unsigned int x1; float x2; })routeCoordinate;
- (void)setAnchorPointType:(unsigned long long)arg1;
- (void)setDisplayInfo:(id)arg1;
- (void)setIsAddress:(bool)arg1;
- (void)setIsCoordinate:(bool)arg1;
- (void)setIsCuratedRoute:(bool)arg1;
- (void)setIsCurrentLocation:(bool)arg1;
- (void)setUniqueID:(id)arg1;
- (id)styleAttributes;
- (id)uniqueID;
- (id)updatedAnchorPointWithLocationCoordinate:(struct { double x1; double x2; double x3; })arg1 routeCoordinate:(struct { unsigned int x1; float x2; })arg2;

// Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation

- (id)geoLocation;
- (id)loggingDescription;

@end
