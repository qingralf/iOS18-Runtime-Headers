/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOMapDataSubscriptionLocalSyncManager : NSObject <GEOMapDataSubscriptionSyncManager> {
    NRDevice * _activeDevice;
    GEOTileDB * _db;
    <GEOMapDataSubscriptionSyncManagerDelegate> * _delegate;
    id  _featureFlagObserver;
    bool  _hasPairedDevices;
    NSObject<OS_dispatch_group> * _initialNanoRegistryFetchGroup;
    geo_isolater * _isolation;
    NSMutableArray * _observedIdentifiers;
    NSMutableDictionary * _observedStates;
    GEOOfflineDataConfiguration * _offlineDataConfiguration;
    NSXPCConnection * _pairedDeviceDaemonConnection;
    <GEOMapDataSubscriptionPersistence> * _persistence;
    GEOPairedDeviceSubscriptionStatesSummary * _subscriptionsSummary;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <GEOMapDataSubscriptionSyncManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <GEOMapDataSubscriptionPersistence> *persistence;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_pairedDeviceConnectivityDidChange:(id)arg1;
- (void)_pairedDevicesDidChange:(id)arg1;
- (void)beginMonitoringStateForPairedDeviceSubscriptionWithIdentifier:(id)arg1;
- (void)cancelDownloadForPairedDeviceSubscriptionIdentifiers:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)didAddSubscription:(id)arg1;
- (void)didUpdateSubscriptionWithIdentifier:(id)arg1;
- (void)endMonitoringStateForPairedDeviceSubscriptionWithIdentifier:(id)arg1;
- (void)fetchAvailableDiskSpaceForPairedDeviceOfflineSubscriptionsWithQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchLastUpdatedDateForPairedDeviceOfflineSubscriptionsWithQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchSerializedPairedDeviceSubscriptionIdentifiersToObserveWithCallbackQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchSerializedPairedDeviceSubscriptionsSummaryWithCallbackQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchStateForPairedDeviceSubscriptionWithIdentifier:(id)arg1 callbackQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)fetchSubscriptionIdentifiersToSyncToPairedDeviceWithQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchSubscriptionsForSyncToWatchWithIdentifier:(id)arg1 callbackQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)handlePairedDeviceStateUpdate:(id)arg1 callbackQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)handleSerializedPairedDeviceStateUpdate:(id)arg1 callbackQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)initWithPersistence:(id)arg1 tileDB:(id)arg2 dataConfiguration:(id)arg3;
- (id)persistence;
- (void)setDelegate:(id)arg1;
- (void)setNeedsPairedDeviceStateSynchronization;
- (void)setPairedDeviceSubscriptionsSummary:(id)arg1 callbackQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setSerializedPairedDeviceSubscriptionsSummary:(id)arg1 callbackQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setSubscriptionWithIdentifier:(id)arg1 shouldSyncToPairedDevice:(bool)arg2 callbackQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)startDownloadForPairedDeviceSubscriptionIdentifiers:(id)arg1 mode:(unsigned long long)arg2;

@end
