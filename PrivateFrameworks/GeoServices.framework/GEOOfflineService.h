/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOOfflineService : NSObject <GEOPListStateCapturing> {
    geo_isolater * _applicationStateIsolater;
    GEOXPCConnection * _connection;
    NSObject<OS_dispatch_source> * _connectivityCheckTimer;
    int  _daemonLaunchNotifyToken;
    <GEOOfflineServiceDelegate> * _delegate;
    unsigned char  _delegateInformedMode;
    NSObject<OS_dispatch_source> * _heartbeatTimer;
    <GEOOfflineServiceViewportReporter> * _latestMapView;
    NSDictionary * _localSubscriptionInfos;
    id  _offlineAvailabilityObserver;
    GEOApplicationAuditToken * _preferredAuditToken;
    NSMapTable * _registeredMapViews;
    union { 
        unsigned int raw; 
        struct { 
            unsigned char mode; 
            unsigned char reason; 
            unsigned char device; 
            unsigned char _reserved; 
        } ; 
    }  _savedState;
    unsigned long long  _serviceState;
    union { 
        unsigned int raw; 
        struct { 
            unsigned char mode; 
            unsigned char reason; 
            unsigned char device; 
            unsigned char _reserved; 
        } ; 
    }  _state;
    unsigned long long  _stateCaptureHandle;
    id /* block */  _stateUpdateBlock;
    GEOMapDataSubscriptionManager * _subscriptionManager;
    int  _subscriptionsChangedNotifyToken;
    unsigned long long  _suggestedState;
    GEOCoalescingTimer * _updateCoalescingTimer;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <GEOOfflineServiceDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isUsingOffline;
@property (nonatomic, readonly) unsigned long long offlineRegionCount;
@property (nonatomic, readonly) union { unsigned int x1; struct { unsigned char x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; unsigned char x_2_1_4; } x2; } state;
@property (readonly) Class superclass;

+ (union { unsigned int x1; struct { unsigned char x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; unsigned char x_2_1_4; } x2; })activeStateForCohortId:(id)arg1;
+ (id)shared;
+ (id)sharedNoCreate;

- (void).cxx_destruct;
- (union { unsigned int x1; struct { unsigned char x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; unsigned char x_2_1_4; } x2; })canUseOfflineForCoordinateRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)captureStatePlistWithHints:(struct os_state_hints_s { unsigned int x1; char *x2; unsigned int x3; unsigned int x4; }*)arg1;
- (void)dealloc;
- (id)delegate;
- (void)delegate:(id)arg1 prefersMode:(unsigned char)arg2;
- (void)delegate:(id)arg1 prefersMode:(unsigned char)arg2 device:(unsigned char)arg3;
- (void)delegatePrefersMode:(unsigned char)arg1;
- (void)delegatePrefersMode:(unsigned char)arg1 device:(unsigned char)arg2;
- (id)initWithPreferredAuditToken:(id)arg1;
- (bool)isUsingOffline;
- (void)mapView:(id)arg1 viewPortUpdated:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)mapView:(id)arg1 viewPortUpdated:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg2 showingGrid:(bool)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (unsigned long long)offlineRegionCount;
- (void)registerMapView:(id)arg1 withPriority:(double)arg2;
- (void)removeDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setStateAuto;
- (void)setStateForcedOffline;
- (void)shutdownService;
- (void)startServiceIfEnabled;
- (union { unsigned int x1; struct { unsigned char x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; unsigned char x_2_1_4; } x2; })state;
- (void)unregisterMapView:(id)arg1;

@end
