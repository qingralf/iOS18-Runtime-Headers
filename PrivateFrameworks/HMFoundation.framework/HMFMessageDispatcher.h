/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation
 */

@interface HMFMessageDispatcher : HMFObject <HMFLogging, HMFMessageTransportDelegate> {
    NSCache * _bindingsCache;
    NSSet * _filterClasses;
    NSMutableOrderedSet * _handlers;
    struct hmf_unfair_data_lock_s { 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } lock; 
    }  _lock;
    NSCache * _receiverCache;
    id /* block */  _resolveHook;
    HMFMessageTransport * _transport;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, readonly) NSCache *bindingsCache;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (copy) NSSet *filterClasses;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSCache *receiverCache;
@property (nonatomic, copy) id /* block */ resolveHook;
@property (readonly) Class superclass;
@property (nonatomic, readonly) HMFMessageTransport *transport;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (id)bindingsCache;
- (void)deregisterForMessage:(id)arg1 receiver:(id)arg2;
- (void)deregisterReceiver:(id)arg1;
- (void)dispatchMessage:(id)arg1;
- (id)filterClasses;
- (void)flushReceiverFromCache:(id)arg1;
- (id)handlersForMessage:(id)arg1;
- (id)init;
- (id)initWithTransport:(id)arg1;
- (id)messageBindingsForReceiver:(id)arg1;
- (id)messageHandlerWithReceiver:(id)arg1 name:(id)arg2 policies:(id)arg3 selector:(SEL)arg4;
- (void)messageTransport:(id)arg1 didReceiveMessage:(id)arg2;
- (id)receiverCache;
- (id)receiverForTarget:(id)arg1;
- (void)registerForMessage:(id)arg1 receiver:(id)arg2 policies:(id)arg3 selector:(SEL)arg4;
- (void)registerForMessage:(id)arg1 receiver:(id)arg2 selector:(SEL)arg3;
- (id /* block */)resolveHook;
- (void)sendMessage:(id)arg1;
- (void)sendMessage:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)sendMessage:(id)arg1 target:(id)arg2;
- (void)sendMessage:(id)arg1 target:(id)arg2 andInvokeCompletionHandler:(id /* block */)arg3;
- (void)sendMessage:(id)arg1 target:(id)arg2 responseQueue:(id)arg3 responseHandler:(id /* block */)arg4;
- (void)sendMessage:(id)arg1 target:(id)arg2 responseQueue:(id)arg3 responseHandler:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (id)sendMessageExpectingResponse:(id)arg1;
- (void)setFilterClasses:(id)arg1;
- (void)setResolveHook:(id /* block */)arg1;
- (id)synthesizeHandlerForMessage:(id)arg1;
- (id)transport;
- (id)workQueue;

@end
