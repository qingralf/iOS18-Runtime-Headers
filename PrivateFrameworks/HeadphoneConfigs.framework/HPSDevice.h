/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HeadphoneConfigs.framework/HeadphoneConfigs
 */

@interface HPSDevice : NSObject <BluetoothDeviceProtocol> {
    BTSDevice * _btsDevice;
    bool  _ffValue;
    HPMHeadphoneDevice * _headphoneDevice;
    bool  ctkdDevice;
    bool  managedByAliroWallet;
    bool  managedByWallet;
    bool  supportsBackgroundNI;
}

@property (nonatomic, retain) BTSDevice *btsDevice;
@property (getter=isCTKDDevice, nonatomic) bool ctkdDevice;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HPMHeadphoneDevice *headphoneDevice;
@property (getter=isManagedByAliroWallet, nonatomic) bool managedByAliroWallet;
@property (getter=isManagedByWallet, nonatomic) bool managedByWallet;
@property (readonly) Class superclass;
@property (getter=doesSupportBackgroundNI, nonatomic) bool supportsBackgroundNI;

+ (id)deviceKey;

- (void).cxx_destruct;
- (unsigned int)SendSetupCommand:(unsigned char)arg1;
- (void)_logExpectationFormatStringForUsecase:(id)arg1 btsDeviceValue:(id)arg2 headphoneDeviceValue:(id)arg3;
- (void)_logExpectationFormatStringForUsecase:(id)arg1 queryValue:(id)arg2 btsDeviceValue:(id)arg3 headphoneDeviceValue:(id)arg4;
- (void)_logSetterExpectationFormatStringForUsecase:(id)arg1 inputValue:(id)arg2 existingValue:(id)arg3 readBackValue:(id)arg4;
- (id)accessoryInfo;
- (int)accessorySettingFeatureBitMask;
- (id)address;
- (bool)ancsAuthorized;
- (int)autoAnswerMode;
- (bool)batteryStatus:(struct { unsigned char x1; unsigned int x2; unsigned char x3; unsigned int x4; unsigned char x5; unsigned int x6; unsigned char x7; unsigned int x8; unsigned char x9; unsigned int x10; }*)arg1;
- (id)btsDevice;
- (id)classicDevice;
- (unsigned int)clickHoldMode:(int*)arg1 rightAction:(int*)arg2;
- (unsigned int)clickHoldModes:(struct { int x1; int x2; int x3; int x4; }*)arg1;
- (bool)cloudPaired;
- (bool)connected;
- (int)crownRotationDirection;
- (id)debugDescription;
- (void)disconnect;
- (bool)doesSupportBackgroundNI;
- (unsigned int)doubleTapAction;
- (unsigned int)doubleTapActionEx:(unsigned int*)arg1 rightAction:(unsigned int*)arg2;
- (unsigned int)doubleTapCapability;
- (bool)featureCapability:(int)arg1;
- (bool)getAACPCapabilityBit:(int)arg1;
- (unsigned char)getAdaptiveVolumeMode;
- (bool)getAdaptiveVolumeSupport;
- (bool)getAutoANCSupport;
- (struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; })getCallManagementConfig;
- (unsigned char)getConversationDetectMode;
- (bool)getConversationDetectSupport;
- (unsigned char)getDeviceAdaptiveVolumeMode;
- (int)getDeviceColor:(unsigned int*)arg1;
- (bool)getDeviceSoundProfileAllowed;
- (bool)getHexDeviceAddress:(struct { unsigned char x1[6]; }*)arg1;
- (int)getLowSecurityStatus;
- (id)getServiceSetting:(unsigned int)arg1 key:(id)arg2;
- (unsigned char)getSpatialAudioPlatformSupport;
- (int)getUserSelectedDeviceType;
- (id)headphoneDevice;
- (id)healthDeviceType;
- (bool)hearingAidEnabled;
- (bool)hearingAidEnrolled;
- (bool)hearingAidSupport;
- (bool)hearingTestSupport;
- (id)identifier;
- (bool)inEarDetectEnabled;
- (bool)inEarStatusPrimary:(int*)arg1 secondary:(int*)arg2;
- (id)initWithHeadphoneDevice:(id)arg1 btsDevice:(id)arg2;
- (bool)isAppleAudioDevice;
- (bool)isCTKDDevice;
- (bool)isFirmwareUpdateRequiredDevice;
- (bool)isGenuineAirPods;
- (bool)isGuestPairingMode;
- (bool)isLimitedConnectivityDevice;
- (bool)isManagedByAliroWallet;
- (bool)isManagedByWallet;
- (bool)isServiceSupported:(unsigned int)arg1;
- (bool)isTemporaryPaired;
- (unsigned int)listeningMode;
- (unsigned int)listeningModeConfigs;
- (bool)magicPaired;
- (unsigned int)micMode;
- (id)name;
- (bool)paired;
- (unsigned int)productId;
- (id)productName;
- (void)setANCSAuthorization:(bool)arg1;
- (void)setAdaptiveVolumeMode:(int)arg1;
- (bool)setAutoAnswerMode:(int)arg1;
- (void)setBtsDevice:(id)arg1;
- (bool)setCallConfig:(struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; })arg1;
- (bool)setClickHoldMode:(int)arg1 rightMode:(int)arg2;
- (bool)setClickHoldModes:(struct { int x1; int x2; int x3; int x4; })arg1;
- (void)setConversationDetectMode:(int)arg1;
- (bool)setCrownRotationDirection:(int)arg1;
- (void)setCtkdDevice:(bool)arg1;
- (void)setDeviceAdaptiveVolumeMode:(int)arg1;
- (void)setDeviceSoundProfileAllowed:(bool)arg1;
- (bool)setDoubleTapAction:(unsigned int)arg1;
- (bool)setDoubleTapActionEx:(unsigned int)arg1 rightAction:(unsigned int)arg2;
- (void)setGuestPairingMode:(bool)arg1;
- (void)setHeadphoneDevice:(id)arg1;
- (void)setHearingAidEnabled:(bool)arg1;
- (void)setHearingAidEnrolled:(bool)arg1;
- (bool)setInEarDetectEnabled:(bool)arg1;
- (bool)setListeningMode:(unsigned int)arg1;
- (bool)setListeningModeConfigs:(unsigned int)arg1;
- (void)setManagedByAliroWallet:(bool)arg1;
- (void)setManagedByWallet:(bool)arg1;
- (bool)setMicMode:(unsigned int)arg1;
- (void)setServiceSetting:(unsigned int)arg1 key:(id)arg2 value:(id)arg3;
- (bool)setSmartRouteMode:(unsigned char)arg1;
- (void)setSupportsBackgroundNI:(bool)arg1;
- (void)setSyncGroup:(int)arg1 enabled:(bool)arg2;
- (void)setSyncSettings:(struct { bool x1; bool x2; bool x3; bool x4; bool x5; })arg1;
- (bool)setUserName:(id)arg1;
- (bool)setUserSelectedDeviceType:(int)arg1;
- (void)setUserSelectedHealthDataSyncConfig:(unsigned char)arg1;
- (unsigned char)smartRouteMode;
- (bool)smartRouteSupport;
- (bool)supportsANCS;
- (id)syncGroups;
- (struct { bool x1; bool x2; bool x3; bool x4; bool x5; })syncSettings;
- (void)unpair;
- (unsigned char)userSelectedHealthDataSyncConfig;
- (unsigned int)vendorId;

@end
