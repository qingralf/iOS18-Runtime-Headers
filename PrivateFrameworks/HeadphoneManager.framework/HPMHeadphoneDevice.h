/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HeadphoneManager.framework/HeadphoneManager
 */

@interface HPMHeadphoneDevice : NSObject {
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _adaptiveVolume;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _audioAccessoryDevice;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _batteryCharging;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _batteryLevelCase;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _batteryLevelLeft;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _batteryLevelMain;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _batteryLevelRight;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _batteryStateCase;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _batteryStateLeft;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _batteryStateMain;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _batteryStateRight;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _caseSound;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _clickHoldModeLeft;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _clickHoldModeRight;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _conversationDetect;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _crownRotationDirection;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _doubleTapActionLeft;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _doubleTapActionRight;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _endCallGesture;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _findMyNetworkEnable;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _hearingRecord;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _inEarDetection;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _isCaseSoundSupported;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _isSettingCaseSoundValue;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _isSettingFindMyNetworkValue;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _listeningMode;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _microphoneMode;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _muteControlGesture;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _name;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _pressHoldAuto;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _pressHoldNoiseCancel;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _pressHoldOff;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _pressHoldTransparency;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _selectiveSpeechListening;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _smartRoutingMode;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _spatialProfileExists;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _volumeControlToggle;
    void aaDevice;
    void accessorySettingFeatureBitMask;
    void airPodsServiceClient;
    void btAddress;
    void cbDevice;
    void deviceColor;
    void deviceDelegate;
    void findMyNetworkSession;
    void findMyNetworkSupport;
    void findMyNetworkValueUpdated;
    void icon;
    void isAirpods;
    void isResettingCaseSoundOnError;
    void isResettingFindMyNetworkOnError;
    void isUpdatingDeviceConfig;
    void listeningModeConfigs;
    void productInfo;
    void serialNumbers;
    void volumeControlView;
}

@property (nonatomic, retain) AudioAccessoryDevice *aaDevice;
@property (nonatomic) unsigned int accessorySettingFeatureBitMask;
@property (nonatomic) bool adaptiveVolume;
@property (nonatomic, retain) BTAirPodsControlServiceClient *airPodsServiceClient;
@property (nonatomic) bool batteryCharging;
@property (nonatomic) float batteryLevelCase;
@property (nonatomic) float batteryLevelLeft;
@property (nonatomic) float batteryLevelMain;
@property (nonatomic) float batteryLevelRight;
@property (nonatomic) unsigned char batteryStateCase;
@property (nonatomic) unsigned char batteryStateLeft;
@property (nonatomic) unsigned char batteryStateMain;
@property (nonatomic) unsigned char batteryStateRight;
@property (nonatomic, readonly) NSString *btAddress;
@property (nonatomic) bool caseSound;
@property (nonatomic, retain) CBDevice *cbDevice;
@property (nonatomic) unsigned char clickHoldModeLeft;
@property (nonatomic) unsigned char clickHoldModeRight;
@property (nonatomic) bool conversationDetect;
@property (nonatomic) unsigned char crownRotationDirection;
@property (nonatomic) unsigned int deviceColor;
@property (nonatomic) BOOL doubleTapActionLeft;
@property (nonatomic) BOOL doubleTapActionRight;
@property (nonatomic) unsigned char endCallGesture;
@property (nonatomic) bool findMyNetworkEnable;
@property (nonatomic, retain) <SPOwnerSessionProtocol> *findMyNetworkSession;
@property (nonatomic) bool findMyNetworkSupport;
@property (nonatomic) bool findMyNetworkValueUpdated;
@property (nonatomic) bool hasBackend;
@property (nonatomic, readonly) UIImage *icon;
@property (nonatomic) bool inEarDetection;
@property (nonatomic) bool isAirpods;
@property (nonatomic) bool isCaseSoundSupported;
@property (nonatomic) bool isResettingCaseSoundOnError;
@property (nonatomic) bool isResettingFindMyNetworkOnError;
@property (nonatomic) bool isSettingCaseSoundValue;
@property (nonatomic) bool isSettingFindMyNetworkValue;
@property (nonatomic) bool isUpdatingDeviceConfig;
@property (nonatomic) int listeningMode;
@property (nonatomic) unsigned int listeningModeConfigs;
@property (nonatomic) BOOL microphoneMode;
@property (nonatomic) unsigned char muteControlGesture;
@property (nonatomic, copy) NSString *name;
@property (nonatomic) bool pressHoldAuto;
@property (nonatomic) bool pressHoldNoiseCancel;
@property (nonatomic) bool pressHoldOff;
@property (nonatomic) bool pressHoldTransparency;
@property (nonatomic, retain) CBProductInfo *productInfo;
@property (nonatomic) bool selectiveSpeechListening;
@property (nonatomic, copy) NSDictionary *serialNumbers;
@property (nonatomic) BOOL smartRoutingMode;
@property (nonatomic) bool spatialProfileExists;
@property (nonatomic) bool volumeControlToggle;
@property (nonatomic) bool volumeControlView;

// Image: /System/Library/PrivateFrameworks/HeadphoneManager.framework/HeadphoneManager

- (void).cxx_destruct;
- (id)aaDevice;
- (unsigned int)accessorySettingFeatureBitMask;
- (bool)adaptiveVolume;
- (id)airPodsServiceClient;
- (bool)batteryCharging;
- (float)batteryLevelCase;
- (float)batteryLevelLeft;
- (float)batteryLevelMain;
- (float)batteryLevelRight;
- (unsigned char)batteryStateCase;
- (unsigned char)batteryStateLeft;
- (unsigned char)batteryStateMain;
- (unsigned char)batteryStateRight;
- (id)btAddress;
- (bool)caseSound;
- (id)cbDevice;
- (unsigned char)clickHoldModeLeft;
- (unsigned char)clickHoldModeRight;
- (bool)conversationDetect;
- (unsigned char)crownRotationDirection;
- (unsigned int)deviceColor;
- (BOOL)doubleTapActionLeft;
- (BOOL)doubleTapActionRight;
- (unsigned char)endCallGesture;
- (void)featureUpdateListenerWithCbDevice:(id)arg1;
- (void)featureUpdateListenerWith_aaDevice:(id)arg1 cbDevice:(id)arg2;
- (bool)findMyNetworkEnable;
- (id)findMyNetworkSession;
- (bool)findMyNetworkSupport;
- (bool)findMyNetworkValueUpdated;
- (void)getCaseSilentMode;
- (id)getFindMyUrlWithHpDevice:(id)arg1;
- (id)getModelName;
- (id)icon;
- (bool)inEarDetection;
- (id)init;
- (id)initWithCbDevice:(id)arg1 delegate:(id)arg2;
- (id)initWith_aaDevice:(id)arg1 cbDevice:(id)arg2 delegate:(id)arg3;
- (bool)isAirpods;
- (bool)isCaseSoundSupported;
- (bool)isResettingCaseSoundOnError;
- (bool)isResettingFindMyNetworkOnError;
- (bool)isServiceSupported:(unsigned int)arg1;
- (bool)isSettingCaseSoundValue;
- (bool)isSettingFindMyNetworkValue;
- (void)isSpatialProfileRecordPresent;
- (bool)isUpdatingDeviceConfig;
- (bool)isiCloudSignedIn;
- (int)listeningMode;
- (unsigned int)listeningModeConfigs;
- (BOOL)microphoneMode;
- (unsigned char)muteControlGesture;
- (id)name;
- (void)populateSerialNumbers;
- (bool)pressHoldAuto;
- (bool)pressHoldNoiseCancel;
- (bool)pressHoldOff;
- (bool)pressHoldTransparency;
- (id)productInfo;
- (void)removeSpatialProfileRecord;
- (void)resetToggle;
- (bool)selectiveSpeechListening;
- (id)serialNumbers;
- (void)setAaDevice:(id)arg1;
- (void)setAccessorySettingFeatureBitMask:(unsigned int)arg1;
- (void)setAdaptiveVolume:(bool)arg1;
- (void)setAirPodsServiceClient:(id)arg1;
- (void)setBatteryCharging:(bool)arg1;
- (void)setBatteryLevelCase:(float)arg1;
- (void)setBatteryLevelLeft:(float)arg1;
- (void)setBatteryLevelMain:(float)arg1;
- (void)setBatteryLevelRight:(float)arg1;
- (void)setBatteryStateCase:(unsigned char)arg1;
- (void)setBatteryStateLeft:(unsigned char)arg1;
- (void)setBatteryStateMain:(unsigned char)arg1;
- (void)setBatteryStateRight:(unsigned char)arg1;
- (void)setCaseSilentMode;
- (void)setCaseSound:(bool)arg1;
- (void)setCbDevice:(id)arg1;
- (void)setClickHoldModeLeft:(unsigned char)arg1;
- (void)setClickHoldModeRight:(unsigned char)arg1;
- (void)setConversationDetect:(bool)arg1;
- (void)setCrownRotationDirection:(unsigned char)arg1;
- (void)setDeviceColor:(unsigned int)arg1;
- (void)setDoubleTapActionLeft:(BOOL)arg1;
- (void)setDoubleTapActionRight:(BOOL)arg1;
- (void)setEndCallGesture:(unsigned char)arg1;
- (void)setFindMyNetworkEnable:(bool)arg1;
- (void)setFindMyNetworkSession:(id)arg1;
- (void)setFindMyNetworkSupport:(bool)arg1;
- (void)setFindMyNetworkValueUpdated:(bool)arg1;
- (void)setFindMyStatus;
- (void)setInEarDetection:(bool)arg1;
- (void)setIsAirpods:(bool)arg1;
- (void)setIsCaseSoundSupported:(bool)arg1;
- (void)setIsResettingCaseSoundOnError:(bool)arg1;
- (void)setIsResettingFindMyNetworkOnError:(bool)arg1;
- (void)setIsSettingCaseSoundValue:(bool)arg1;
- (void)setIsSettingFindMyNetworkValue:(bool)arg1;
- (void)setIsUpdatingDeviceConfig:(bool)arg1;
- (void)setListeningMode:(int)arg1;
- (void)setListeningModeConfigs:(unsigned int)arg1;
- (void)setMicrophoneMode:(BOOL)arg1;
- (void)setMuteControlGesture:(unsigned char)arg1;
- (void)setName:(id)arg1;
- (void)setPressHoldAuto:(bool)arg1;
- (void)setPressHoldDefaults;
- (void)setPressHoldNoiseCancel:(bool)arg1;
- (void)setPressHoldOff:(bool)arg1;
- (void)setPressHoldTransparency:(bool)arg1;
- (void)setProductInfo:(id)arg1;
- (void)setSelectiveSpeechListening:(bool)arg1;
- (void)setSerialNumbers:(id)arg1;
- (void)setSmartRoutingMode:(BOOL)arg1;
- (void)setSpatialProfileExists:(bool)arg1;
- (void)setVolumeControlToggle:(bool)arg1;
- (void)setVolumeControlView:(bool)arg1;
- (bool)shouldShowFindMyNetworkAlert;
- (BOOL)smartRoutingMode;
- (bool)spatialProfileExists;
- (bool)supportsFeatureWithFeature:(long long)arg1;
- (void)updateFeatureValuesWithFeature:(long long)arg1;
- (bool)validatePressHoldCombination;
- (bool)volumeControlToggle;
- (bool)volumeControlView;

// Image: /System/Library/PrivateFrameworks/HeadphoneConfigs.framework/HeadphoneConfigs

- (bool)hasBackend;
- (void)setHasBackend:(bool)arg1;

@end
