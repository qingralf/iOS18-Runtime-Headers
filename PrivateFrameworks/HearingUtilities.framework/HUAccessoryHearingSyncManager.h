/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HearingUtilities.framework/HearingUtilities
 */

@interface HUAccessoryHearingSyncManager : NSObject {
    NSMutableDictionary * _cachedEnabled;
    int  _contentProtectionNotifyToken;
    NSMutableDictionary * _deviceListeningState;
    NSMutableDictionary * _deviceType;
    bool  _isHeadphoneStreamSelected;
    AXDispatchTimer * _messageTimer;
    NSMutableDictionary * _nearbyDevicesListeningState;
    bool  _noiseDisabled;
    NSDictionary * _persistentDeviceListeningState;
}

@property (nonatomic, retain) NSMutableDictionary *cachedEnabled;
@property (nonatomic, retain) NSMutableDictionary *deviceListeningState;
@property (nonatomic, retain) NSMutableDictionary *deviceType;
@property (nonatomic) bool isHeadphoneStreamSelected;
@property (nonatomic, retain) AXDispatchTimer *messageTimer;
@property (nonatomic, retain) NSMutableDictionary *nearbyDevicesListeningState;
@property (nonatomic) bool noiseDisabled;
@property (nonatomic, retain) NSDictionary *persistentDeviceListeningState;

+ (id)adaptiveTransparencySupportedDevices;
+ (id)sharedInstance;
+ (id)syncableSupportedDevices;

- (void).cxx_destruct;
- (void)_cleanupNearbyDeviceStateDuplicatesForDevice:(id)arg1;
- (void)_initCachedEnabled;
- (void)_registerForAccessoryHearingSettingsUpdate;
- (void)_registerForAccessoryManagerUpdate;
- (void)_registerForNearbyControllerUpdate;
- (void)_registerForNoiseEnabledPreferenceChange;
- (void)_sendIDSMessageIfNeededForListeningModes:(id)arg1 addresses:(id)arg2 force:(bool)arg3;
- (void)addNoiseMeasurementsDisabledToMessage:(id)arg1 forDevices:(id)arg2;
- (void)bluetoothPairingStatusChanged:(id)arg1;
- (id)cachedEnabled;
- (id)deviceListeningState;
- (struct { long long x1; long long x2; })deviceState;
- (id)deviceType;
- (long long)deviceTypeForAddress:(id)arg1;
- (id)deviceTypeForProductCode:(id)arg1;
- (id)deviceTypesForAvailableAddresses:(id)arg1;
- (void)getDeviceTypesWithCompletion:(id /* block */)arg1;
- (bool)hasPairedDeviceWithHearingProtectionEnabled;
- (bool)hasPairedDevicesWithListeningModes;
- (id)init;
- (bool)isHeadphoneStreamSelected;
- (void)listeningModeDidChange:(id)arg1;
- (long long)listeningStateForAddress:(id)arg1 andStoredState:(id)arg2;
- (id)messageTimer;
- (id)nearbyDevicesListeningState;
- (bool)noiseDisabled;
- (id)persistentDeviceListeningState;
- (void)processNoiseMeasurementsDisabledMessage:(id)arg1 fromDevice:(id)arg2;
- (void)readHearingProtectionState;
- (void)routesDidChange:(id)arg1;
- (void)sendIDSMessageIfNeededForNewListeningModes:(id)arg1 addresses:(id)arg2 force:(bool)arg3;
- (void)sendListeningModesIDSMessageIfNeeded;
- (void)sendNoiseMeasurementsDisabledIfNeeded;
- (void)sendUpdateToAccessory;
- (void)setCachedEnabled:(id)arg1;
- (void)setDeviceListeningState:(id)arg1;
- (void)setDeviceType:(id)arg1;
- (void)setIsHeadphoneStreamSelected:(bool)arg1;
- (void)setMessageTimer:(id)arg1;
- (void)setNearbyDevicesListeningState:(id)arg1;
- (void)setNoiseDisabled:(bool)arg1;
- (void)setPersistentDeviceListeningState:(id)arg1;
- (bool)shouldUpdateWatchesWithListeningModes:(id)arg1;

@end
