/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HearingUtilities.framework/HearingUtilities
 */

@interface HUNearbyHearingAidController : HUDeviceController <HUSessionManagerDelegate> {
    NSMutableDictionary * _collectedPropertyUpdates;
    <HUNearbyHearingAidControllerDelegate> * _delegate;
    unsigned long long  _deviceMessagePriority;
    long long  _handoffReason;
    AXDispatchTimer * _handoffTimer;
    bool  _hasStarted;
    bool  _holdingMediaForConnection;
    bool  _holdingPhoneForConnection;
    unsigned long long  _idsMessagesCount;
    NSTimer * _idsMessagesTimer;
    NSDictionary * _lastSentPropertyUpdates;
    AXRemoteHearingAidDevice * _localDevice;
    NSObject<OS_dispatch_queue> * _mediaQueue;
    AXDispatchTimer * _messagesPriorityTimer;
    AXDispatchTimer * _peerTimer;
    long long  _processingHandoff;
    id /* block */  _relinquishCompleted;
    AXDispatchTimer * _sendConnectionToCompanionTimer;
    AXDispatchTimer * _sendPropertyUpdatesLowTimer;
    HUSessionManager * _sessionManager;
    long long  _state;
}

@property (nonatomic, retain) NSMutableDictionary *collectedPropertyUpdates;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <HUNearbyHearingAidControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property unsigned long long deviceMessagePriority;
@property long long handoffReason;
@property (nonatomic, retain) AXDispatchTimer *handoffTimer;
@property bool hasStarted;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool holdingMediaForConnection;
@property (nonatomic) bool holdingPhoneForConnection;
@property (nonatomic) unsigned long long idsMessagesCount;
@property (nonatomic, retain) NSTimer *idsMessagesTimer;
@property (nonatomic, retain) NSDictionary *lastSentPropertyUpdates;
@property (nonatomic, retain) AXRemoteHearingAidDevice *localDevice;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *mediaQueue;
@property (nonatomic, retain) AXDispatchTimer *messagesPriorityTimer;
@property (nonatomic, retain) AXDispatchTimer *peerTimer;
@property long long processingHandoff;
@property (nonatomic, copy) id /* block */ relinquishCompleted;
@property (nonatomic, retain) AXDispatchTimer *sendConnectionToCompanionTimer;
@property (nonatomic, retain) AXDispatchTimer *sendPropertyUpdatesLowTimer;
@property (nonatomic, retain) HUSessionManager *sessionManager;
@property (nonatomic, readonly) bool shouldConnect;
@property (nonatomic, readonly) bool shouldDisconnect;
@property (nonatomic, readonly) long long state;
@property (readonly) Class superclass;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (id)availableDevices;
- (void)callStatusDidChange:(id)arg1;
- (void)checkConnectionRequestedForMediaAfterTimeout;
- (void)checkHandoffAfterTimeout;
- (void)checkPeerStateAfterTimout;
- (void)collectPropertyUpdatesFromPayload:(id)arg1;
- (id)collectedPropertyUpdates;
- (id)connectedPeer;
- (void)connectedPeerWithCompletion:(id /* block */)arg1;
- (id)connectingPeer;
- (long long)connectionStateForDevice:(id)arg1;
- (id)defaultDevicesFromDevices:(id)arg1;
- (id)delegate;
- (id)descriptionForCurrentMessagePriority;
- (id)descriptionForCurrentState;
- (id)descriptionForHandoffReason:(long long)arg1;
- (id)descriptionForHandoffState;
- (id)descriptionForState:(long long)arg1;
- (id)device:(id)arg1 didReceiveMessage:(id)arg2;
- (unsigned long long)deviceMessagePriority;
- (id)devicesFromDevices:(id)arg1 withMessagePriority:(unsigned long long)arg2;
- (void)disconnectFromPairedDevice;
- (void)finishHandoff;
- (void)handleSessionMessage:(long long)arg1 completion:(id /* block */)arg2;
- (long long)handoffReason;
- (id)handoffTimer;
- (bool)hasStarted;
- (id)hearingAidForDeviceID:(id)arg1;
- (id)hearingDevice;
- (bool)holdingMediaForConnection;
- (bool)holdingPhoneForConnection;
- (unsigned long long)idsMessagesCount;
- (id)idsMessagesTimer;
- (id)init;
- (bool)isPeerConnectedToHearingDevice;
- (id)lastSentPropertyUpdates;
- (id)localDevice;
- (void)logAvailableDevicesWithTitle:(id)arg1;
- (void)logDevices:(id)arg1 withTitle:(id)arg2 fullInfo:(bool)arg3;
- (void)mediaPlaybackDidChange:(id)arg1;
- (id)mediaQueue;
- (void)mediaServerDied;
- (unsigned long long)messagePriorityForDevice:(id)arg1;
- (id)messagesPriorityTimer;
- (id)peerTimer;
- (id)peerWithState:(long long)arg1;
- (void)processHandoffMessageFromPeer:(id)arg1 state:(id)arg2;
- (void)processReadMessageFromPeerDevice:(id)arg1 value:(id)arg2;
- (void)processReadProperty:(id)arg1 fromPeerDevice:(id)arg2;
- (bool)processStateMessageFromPeer:(id)arg1 state:(id)arg2;
- (void)processWriteMessageWithValue:(id)arg1;
- (long long)processingHandoff;
- (void)registerMediaNotifications;
- (id /* block */)relinquishCompleted;
- (void)relinquishConnection;
- (bool)relinquishConnectionForReason:(long long)arg1 toDevice:(id)arg2;
- (void)relinquishConnectionWithCompletion:(id /* block */)arg1;
- (bool)representsLocalDevices;
- (void)requestConnection;
- (void)requestConnectionForMedia;
- (void)requestConnectionForReason:(long long)arg1;
- (bool)requestHandoff:(long long)arg1 reason:(long long)arg2;
- (void)resetHandoff;
- (void)resetHandoffOnDeviceQueue;
- (void)routesDidChange:(id)arg1;
- (void)sendConnectionToCompanionIfPossible;
- (void)sendConnectionToCompanionIfPossible:(bool)arg1;
- (id)sendConnectionToCompanionTimer;
- (void)sendConnectionUpdateToPeers;
- (void)sendMessage:(id)arg1 toDevices:(id)arg2;
- (void)sendMessage:(id)arg1 toDevices:(id)arg2 messagePriority:(unsigned long long)arg3;
- (void)sendMessageToAllDevices:(id)arg1 messagePriority:(unsigned long long)arg2;
- (void)sendMessagesPriority:(unsigned long long)arg1;
- (void)sendMessagesPriorityDefault;
- (void)sendMessagesPriorityHigh;
- (id)sendPropertyUpdatesLowTimer;
- (void)sendStateMessage:(id)arg1 toDevices:(id)arg2 isUrgent:(bool)arg3;
- (void)sendStateMessageToAllDevices:(id)arg1 isUrgent:(bool)arg2;
- (void)sendWrite:(id)arg1 toDevices:(id)arg2;
- (void)sendWriteToAllDevices:(id)arg1;
- (id)sessionManager;
- (void)setCollectedPropertyUpdates:(id)arg1;
- (void)setConnectionState:(long long)arg1 forDevice:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDeviceMessagePriority:(unsigned long long)arg1;
- (void)setHandoffReason:(long long)arg1;
- (void)setHandoffTimer:(id)arg1;
- (void)setHasStarted:(bool)arg1;
- (void)setHoldingMediaForConnection:(bool)arg1;
- (void)setHoldingPhoneForConnection:(bool)arg1;
- (void)setIdsMessagesCount:(unsigned long long)arg1;
- (void)setIdsMessagesTimer:(id)arg1;
- (void)setLastSentPropertyUpdates:(id)arg1;
- (void)setLocalDevice:(id)arg1;
- (void)setMediaQueue:(id)arg1;
- (void)setMessagePriority:(unsigned long long)arg1 forDevice:(id)arg2;
- (void)setMessagesPriorityTimer:(id)arg1;
- (void)setPeerTimer:(id)arg1;
- (void)setProcessingHandoff:(long long)arg1;
- (void)setRelinquishCompleted:(id /* block */)arg1;
- (void)setSendConnectionToCompanionTimer:(id)arg1;
- (void)setSendPropertyUpdatesLowTimer:(id)arg1;
- (void)setSessionManager:(id)arg1;
- (void)setState:(long long)arg1;
- (bool)shouldConnect;
- (bool)shouldDisconnect;
- (bool)shouldRelinquishConnectionForReason:(long long)arg1;
- (void)shouldRequestAudioConnectionForCall:(bool)arg1 withCompletion:(id /* block */)arg2;
- (bool)shouldRoute:(bool)arg1;
- (void)start;
- (long long)state;
- (void)stop;
- (id)timeStamp;
- (void)unregisterMediaNotifications;
- (void)updateProperty:(unsigned long long)arg1 forDeviceID:(id)arg2;
- (void)updateResponse:(id)arg1 withState:(long long)arg2;
- (void)updateState;
- (bool)updateStateOnDeviceQueue;
- (id)urgentDevicesFromDevices:(id)arg1;
- (void)validateResponse:(id)arg1;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 andDeviceID:(id)arg3;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 andDeviceID:(id)arg3 toDevices:(id)arg4;

@end
