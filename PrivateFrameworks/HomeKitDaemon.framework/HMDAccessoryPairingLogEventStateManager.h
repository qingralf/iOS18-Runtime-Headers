/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy
 */

@interface HMDAccessoryPairingLogEventStateManager : NSObject <HMFLogging> {
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _accessoryPairingProgressStateTrackerLock;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _accessoryPairingRetryMapLock;
    NSDate * _lastPairingEndTime;
    <HMMLogEventSubmitting> * _logEventSubmitter;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _matterAccessoryPairingMetricLock;
    NSNotificationCenter * _notificationCenter;
    HMDAccessoryPairingEvent * _pairingEvent;
    NSMutableDictionary * _pairingProgressStateTracker;
    unsigned long long  _pairingUIState;
    unsigned long long  _previousRecoveryType;
    unsigned long long  _recoveryType;
    NSMutableDictionary * _retryCountMap;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (getter=isConfigured, nonatomic, readonly) bool configured;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDate *lastPairingEndTime;
@property (nonatomic, retain) <HMMLogEventSubmitting> *logEventSubmitter;
@property (nonatomic, readonly) NSNotificationCenter *notificationCenter;
@property (nonatomic) HMDAccessoryPairingEvent *pairingEvent;
@property (nonatomic, readonly) NSMutableDictionary *pairingProgressStateTracker;
@property (nonatomic) unsigned long long pairingUIState;
@property (nonatomic) unsigned long long previousRecoveryType;
@property (nonatomic) unsigned long long recoveryType;
@property (nonatomic, readonly) NSMutableDictionary *retryCountMap;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;
+ (id)sharedManager;

- (void).cxx_destruct;
- (void)_handleMatterAccessoryUpdatePairingMetricNotification:(id)arg1 pairingEvent:(id)arg2 logEventSubmitter:(id)arg3;
- (void)_handlePairingStateProgressNotification:(id)arg1;
- (void)_updateStateOnPairingProgress:(long long)arg1;
- (void)clearPairingProgressStateTrackerForIdentifier:(id)arg1;
- (void)clearRetryCountMap;
- (void)configureWithPairingEvent:(id)arg1 workQueue:(id)arg2 logEventSubmitter:(id)arg3;
- (void)fillUnknownErrorIfMissingErrorForPairingEvent:(id)arg1;
- (id)getLastProgressStateForAccessory:(id)arg1;
- (id)getLongestProgressStateForAccessory:(id)arg1;
- (double)getTimeDurationForLongestProgressStateForAccessory:(id)arg1;
- (double)getTimeDurationForProgressStateForIdentifier:(id)arg1 state:(id)arg2;
- (void)handleMatterAccessoryUpdatePairingMetricNotification:(id)arg1;
- (void)incrementRetryCount:(id)arg1;
- (id)initWithNotificationCenter:(id)arg1;
- (bool)isConfigured;
- (id)lastPairingEndTime;
- (id)logEventSubmitter;
- (id)notificationCenter;
- (id)pairingEvent;
- (id)pairingProgressStateTracker;
- (unsigned long long)pairingUIState;
- (unsigned long long)previousRecoveryType;
- (unsigned long long)recoveryType;
- (void)resetStatesForNewAddOperation;
- (unsigned long long)retryCountForIdentifier:(id)arg1;
- (id)retryCountMap;
- (void)setLastPairingEndTime:(id)arg1;
- (void)setLogEventSubmitter:(id)arg1;
- (void)setPairingEvent:(id)arg1;
- (void)setPairingUIState:(unsigned long long)arg1;
- (void)setPreviousRecoveryType:(unsigned long long)arg1;
- (void)setRecoveryType:(unsigned long long)arg1;
- (void)setWorkQueue:(id)arg1;
- (void)startProgressStateTrackerWithDate:(id)arg1 identifier:(id)arg2;
- (void)updateLastPairingProgressStateEventForIdentifier:(id)arg1 withDate:(id)arg2;
- (void)updatePairingProgressState:(id)arg1;
- (void)updateStatesOnResult:(bool)arg1;
- (id)workQueue;

@end
