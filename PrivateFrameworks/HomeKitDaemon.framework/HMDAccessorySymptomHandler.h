/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy
 */

@interface HMDAccessorySymptomHandler : HMFObject <HMDAccessorySymptomsDelegate, HMDActiveXPCClientConnectionsManagerDelegate, HMFLogging, HMFMessageReceiver> {
    HMDAccessory * _accessory;
    NSUUID * _accessoryUUID;
    HMDActiveXPCClientConnectionsManager * _activeClientConnectionsManager;
    NSString * _logIdentifier;
    HMFMessageDispatcher * _msgDispatcher;
    NSUUID * _sfDeviceIdentifier;
    HMDSymptomManager * _symptomManager;
    NSSet * _symptoms;
    NSUUID * _uuid;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, readonly) HMDAccessory *accessory;
@property (nonatomic, readonly, copy) NSUUID *accessoryUUID;
@property (readonly) HMDActiveXPCClientConnectionsManager *activeClientConnectionsManager;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSString *logIdentifier;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue; /* unknown property attribute: ? */
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (nonatomic, readonly) HMFMessageDispatcher *msgDispatcher;
@property (nonatomic, retain) NSUUID *sfDeviceIdentifier;
@property (readonly) Class superclass;
@property (readonly) HMDSymptomManager *symptomManager;
@property (nonatomic, copy) NSSet *symptoms;
@property (nonatomic, readonly) NSUUID *uuid;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (id)_filteredSymptomsForSymptoms:(id)arg1;
- (void)_handleInitiateFixMessage:(id)arg1;
- (void)_handleSubscribeMessage:(id)arg1;
- (void)_handleUnsubscribeMessage:(id)arg1;
- (void)_notifyAllSubscribedClientConnections;
- (void)_notifySubscribedClientConnection:(id)arg1;
- (void)_notifySubscribedClientConnections:(id)arg1;
- (void)_registerMessages;
- (bool)_shouldFilterWiFiMismatchSymptomForAccessory:(id)arg1;
- (void)_updateSFDeviceIdentifier:(id)arg1;
- (id)accessory;
- (id)accessoryUUID;
- (id)activeClientConnectionsManager;
- (void)clientConnectionsManager:(id)arg1 didHandleActivationForClientConnection:(id)arg2;
- (void)clientConnectionsManager:(id)arg1 didHandleDeactivationForClientConnection:(id)arg2;
- (void)configure;
- (void)handleAccessoryDeviceUpdated;
- (id)initWithAccessory:(id)arg1;
- (id)initWithAccessory:(id)arg1 logIdentifier:(id)arg2 symptomManager:(id)arg3 activeClientConnectionsManager:(id)arg4;
- (id)logIdentifier;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)msgDispatcher;
- (void)setSfDeviceIdentifier:(id)arg1;
- (void)setSymptoms:(id)arg1;
- (id)sfDeviceIdentifier;
- (id)symptomManager;
- (void)symptomManager:(id)arg1 didChangeSFDeviceIdentifier:(id)arg2;
- (void)symptomManager:(id)arg1 didChangeSymptoms:(id)arg2;
- (id)symptoms;
- (void)updateSymptoms:(id)arg1;
- (id)uuid;
- (id)workQueue;

@end
