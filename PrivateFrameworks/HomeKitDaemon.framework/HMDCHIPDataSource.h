/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy
 */

@interface HMDCHIPDataSource : HMFObject <HMDCHIPThreadNetworkEventListenerDelegate, HMFLogging, HMFTimerDelegate, HMMTRAccessoryServerBrowserDelegate, HMMTRResidentStateManagerDataSource, HMMTRStorageDataSource, HMMTRThreadRadioControllerDelegate, HMMTRUIDialogPresenterDelegate, HMMTRVendorMetadataStoreDelegate> {
    HMDHome * _activeThreadHome;
    HMFTimer * _attestationDataRefreshTimer;
    HMMTRAttestationDataStore * _attestationDataStore;
    HMMTRResidentStateManager * _chipResidentStateManager;
    HMMTRStorage * _chipStorage;
    HMDUIDialogPresenter * _dialogPresenter;
    <HMDFileManager> * _fileManager;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _geo_lock;
    HMDHomeManager * _homeManager;
    long long  _locationAuthorization;
    HMMTRAccessoryServerBrowser * _matterAccessoryServerBrowser;
    HMMTRThreadRadioManager * _matterThreadRadioManager;
    unsigned long long  _networkChangedLastUpdatedTime;
    NSNotificationCenter * _notificationCenter;
    bool  _pendingRadioStateChangeNotification;
    HMDHome * _pendingThreadHome;
    bool  _pnExistsOnCurrentNetwork;
    bool  _startThreadOnWakeEnabled;
    bool  _threadNetworkShouldRestartOnNetworkChange;
    NSNumber * _threadPairingFabricID;
    bool  _threadPairingOverride;
    HMMTRUIDialogPresenter * _uiDialogPresenter;
    HMDCHIPThreadNetworkEventListener * _userPreferredThreadNetworkEventListener;
    HMFTimer * _vendorMetadataRefreshTimer;
    <HMMTRVendorMetadataStore> * _vendorMetadataStore;
}

@property (retain) HMDHome *activeThreadHome;
@property (nonatomic, readonly, copy) NSSet *allFabricIDs;
@property (nonatomic, readonly, copy) NSSet *allPairedHAPServerIdentifiers;
@property (nonatomic, readonly, copy) NSSet *allTargetFabricUUIDs;
@property (readonly) HMFTimer *attestationDataRefreshTimer;
@property (retain) HMMTRAttestationDataStore *attestationDataStore;
@property (retain) HMMTRResidentStateManager *chipResidentStateManager;
@property (retain) HMMTRStorage *chipStorage;
@property (getter=isCurrentDevicePrimaryResident, readonly) bool currentDevicePrimaryResident;
@property (readonly, copy) NSNumber *currentFabricID;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) HMDUIDialogPresenter *dialogPresenter;
@property (retain) <HMDFileManager> *fileManager;
@property (readonly) unsigned long long hash;
@property HMDHomeManager *homeManager;
@property (nonatomic) long long locationAuthorization;
@property HMMTRAccessoryServerBrowser *matterAccessoryServerBrowser;
@property HMMTRThreadRadioManager *matterThreadRadioManager;
@property (nonatomic) unsigned long long networkChangedLastUpdatedTime;
@property (readonly) NSNotificationCenter *notificationCenter;
@property bool pendingRadioStateChangeNotification;
@property (retain) HMDHome *pendingThreadHome;
@property bool pnExistsOnCurrentNetwork;
@property bool startThreadOnWakeEnabled;
@property (readonly) Class superclass;
@property (nonatomic) bool threadNetworkShouldRestartOnNetworkChange;
@property (retain) NSNumber *threadPairingFabricID;
@property bool threadPairingOverride;
@property (retain) HMMTRUIDialogPresenter *uiDialogPresenter;
@property (retain) HMDCHIPThreadNetworkEventListener *userPreferredThreadNetworkEventListener;
@property (readonly) HMFTimer *vendorMetadataRefreshTimer;
@property (retain) <HMMTRVendorMetadataStore> *vendorMetadataStore;

+ (id)logCategory;

- (void).cxx_destruct;
- (bool)_getLocationAuthorized;
- (void)_getPreferredNetworkExistsWithCompletion:(id /* block */)arg1;
- (void)_scheduleThreadNetworkRestart;
- (void)_startNetworkListenerForUserPreferredNetwork:(bool)arg1;
- (void)_stopNetworkListenerForUserPreferredNetwork;
- (id)activeThreadHome;
- (id)allFabricIDs;
- (id)allPairedHAPServerIdentifiers;
- (id)allTargetFabricUUIDs;
- (id)appleHomeFabricWithID:(id)arg1;
- (id)appleHomeFabricWithUUID:(id)arg1;
- (id)appleHomeTargetFabricUUIDWithID:(id)arg1;
- (id)attestationDataRefreshTimer;
- (id)attestationDataStore;
- (void)browser:(id)arg1 didRemoveAccessoryPairingWithNodeID:(id)arg2;
- (long long)checkPresenceForHome:(id)arg1;
- (id)chipResidentStateManager;
- (id)chipStorage;
- (void)configureWithAccessoryServerBrowser:(id)arg1;
- (void)configureWithAttestationDataStore:(id)arg1;
- (void)configureWithResidentStateManager:(id)arg1;
- (void)configureWithStorage:(id)arg1;
- (void)configureWithThreadRadioManager:(id)arg1;
- (void)configureWithUIDialogPresenter:(id)arg1;
- (void)configureWithVendorMetadataStore:(id)arg1;
- (void)connectToAccessoryForUserPreferredNetworkWithExtendedMACAddress:(id)arg1 completion:(id /* block */)arg2;
- (void)connectToAccessoryWithExtendedMACAddress:(id)arg1 withFabricID:(id)arg2 completion:(id /* block */)arg3;
- (id)currentFabricID;
- (id)dialogPresenter;
- (id)fileManager;
- (void)forAllPairedMatterServersFetchVidPid:(id /* block */)arg1;
- (void)forAllStorageDataSourcesDo:(id /* block */)arg1;
- (id)getDefaultThreadNetworkMetadataStore;
- (id)getSharedThreadResidentCommissioner;
- (long long)getThreadNetworkConnectionStateWithFabricID:(id)arg1;
- (long long)getThreadNetworkNodeTypeWithFabricID:(id)arg1;
- (long long)getUserPreferredThreadNetworkConnectionStateWithError:(id*)arg1;
- (long long)getUserPreferredThreadNetworkNodeTypeWithError:(id*)arg1;
- (void)handleAccessoryCHIPStorageChangedNotification:(id)arg1;
- (void)handleCurrentWiFiNetworkChangedNotification:(id)arg1;
- (void)handleHomeCHIPStorageChangedNotification:(id)arg1;
- (void)handleHomeDidArriveHomeNotification:(id)arg1;
- (void)handleHomeDidLeaveHomeNotification:(id)arg1;
- (void)handleHomeRemovedNotification:(id)arg1;
- (void)handleLocationAuthorizationChangedNotification:(id)arg1;
- (void)handleNetworkStateChange;
- (void)handlePrimaryResidentUpdatedNotification:(id)arg1;
- (void)handleResidentReachabilityNotification:(id)arg1;
- (void)handleThreadBTCallStateChange:(bool)arg1;
- (void)handleThreadNetworkPeripheralDeviceNodeTypeChangedNotification:(id)arg1;
- (void)handleThreadNetworkStateChangedNotification:(id)arg1;
- (void)handleThreadNetworkWakeOnConnectionStateChangedNotification:(id)arg1;
- (void)handleUpdatedDataWithIsLocalChange:(bool)arg1;
- (bool)hasMatterThreadAccessoryInHomeWithFabricID:(id)arg1;
- (void)hasValidGeoOrPreferredNetworkForHome:(id)arg1 completion:(id /* block */)arg2;
- (id)home;
- (id)homeManager;
- (id)homeWithCHIPFabric:(id)arg1;
- (id)initWithHomeManager:(id)arg1;
- (id)initWithHomeManager:(id)arg1 notificationCenter:(id)arg2 vendorMetadataRefreshTimer:(id)arg3 attestationDataRefreshTimer:(id)arg4 dialogPresenter:(id)arg5;
- (bool)isCurrentDevicePrimaryResident;
- (long long)locationAuthorization;
- (id)matterAccessoryServerBrowser;
- (id)matterThreadRadioManager;
- (unsigned long long)networkChangedLastUpdatedTime;
- (id)notificationCenter;
- (void)overrideLocationCheckForPairingForFabricID:(id)arg1;
- (bool)pendingRadioStateChangeNotification;
- (id)pendingThreadHome;
- (bool)pnExistsOnCurrentNetwork;
- (void)registerForArrivalNotifications:(id)arg1;
- (void)registerForLeaveNotifications:(id)arg1;
- (void)requestUserPermissionForBridgeAccessory:(id)arg1 withContext:(id)arg2 queue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)requestUserPermissionForUnauthenticatedAccessory:(id)arg1 withContext:(id)arg2 queue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)setActiveThreadHome:(id)arg1;
- (void)setAttestationDataStore:(id)arg1;
- (void)setChipResidentStateManager:(id)arg1;
- (void)setChipStorage:(id)arg1;
- (void)setFileManager:(id)arg1;
- (void)setHomeManager:(id)arg1;
- (void)setLocationAuthorization:(long long)arg1;
- (void)setMatterAccessoryServerBrowser:(id)arg1;
- (void)setMatterThreadRadioManager:(id)arg1;
- (void)setNetworkChangedLastUpdatedTime:(unsigned long long)arg1;
- (void)setPendingRadioStateChangeNotification:(bool)arg1;
- (void)setPendingThreadHome:(id)arg1;
- (void)setPnExistsOnCurrentNetwork:(bool)arg1;
- (void)setStartThreadOnWakeEnabled:(bool)arg1;
- (void)setThreadNetworkShouldRestartOnNetworkChange:(bool)arg1;
- (void)setThreadPairingFabricID:(id)arg1;
- (void)setThreadPairingOverride:(bool)arg1;
- (void)setUiDialogPresenter:(id)arg1;
- (void)setUserPreferredThreadNetworkEventListener:(id)arg1;
- (void)setVendorMetadataStore:(id)arg1;
- (void)startAccessoryFirmwareUpdateWithExtendedMACAddress:(id)arg1 fabricID:(id)arg2 isWedDevice:(bool)arg3 completion:(id /* block */)arg4;
- (void)startAccessoryPairingWithExtendedMACAddress:(id)arg1 fabricID:(id)arg2 isWedDevice:(bool)arg3 completion:(id /* block */)arg4;
- (bool)startThreadOnWakeEnabled;
- (void)startThreadRadioForHomeWithFabricID:(id)arg1;
- (void)startThreadRadioForUserPreferredNetwork;
- (void)startThreadRadioForUserPreferredNetworkWithGeoAndBorderRouterCheck;
- (void)stopAccessoryFirmwareUpdateWithFabricID:(id)arg1 completion:(id /* block */)arg2;
- (void)stopAccessoryPairingWithFabricID:(id)arg1 completion:(id /* block */)arg2;
- (void)stopThreadRadioForHomeWithFabricID:(id)arg1;
- (void)stopThreadRadioForUserPreferredNetwork;
- (void)stopThreadRadioOnDeviceLock;
- (id)storageDataSourceForFabricWithID:(id)arg1;
- (bool)threadNetworkShouldRestartOnNetworkChange;
- (id)threadPairingFabricID;
- (bool)threadPairingOverride;
- (void)timerDidFire:(id)arg1;
- (id)uiDialogPresenter;
- (void)unprotectedRegisterForArrivalNotifications:(id)arg1;
- (void)unprotectedRegisterForLeaveNotifications:(id)arg1;
- (void)unregisterForArrivalNotifications:(id)arg1;
- (void)unregisterForLeaveNotifications:(id)arg1;
- (void)unregisterPresenceNotificationsForHome:(id)arg1;
- (void)updateNotificationsEnabled:(bool)arg1 forHome:(id)arg2 keepAliveOnly:(bool)arg3;
- (id)userPreferredThreadNetworkEventListener;
- (id)vendorMetadataRefreshTimer;
- (id)vendorMetadataStore;

@end
