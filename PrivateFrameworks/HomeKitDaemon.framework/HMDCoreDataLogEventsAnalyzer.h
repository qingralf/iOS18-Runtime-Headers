/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDCoreDataLogEventsAnalyzer : HMDLogEventAnalyzer <HMDAggregationAnalysisEventContributing, HMDLogEventDailyTaskRunner> {
    HMDEventCounterGroup * _aggregationEventGroup;
    HMDCounterThresholdTTRTrigger * _cloudKitExportCountTTRTrigger;
    HMDCounterThresholdTTRTrigger * _cloudKitImportCountTTRTrigger;
    HMDEventCounterGroup * _cloudStoreReasonsEventGroup;
    HMDEventCountersManager * _countersManager;
    <HMMLogEventSubmitting> * _logEventSubmitter;
    HMDCounterThresholdTTRTrigger * _workingStoreCommitTTRTrigger;
}

@property (nonatomic, readonly) HMDEventCounterGroup *aggregationEventGroup;
@property (nonatomic, readonly) HMDCounterThresholdTTRTrigger *cloudKitExportCountTTRTrigger;
@property (nonatomic, readonly) HMDCounterThresholdTTRTrigger *cloudKitImportCountTTRTrigger;
@property (nonatomic, readonly) HMDEventCounterGroup *cloudStoreReasonsEventGroup;
@property (nonatomic, readonly) HMDEventCountersManager *countersManager;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <HMMLogEventSubmitting> *logEventSubmitter;
@property (readonly) Class superclass;
@property (nonatomic, readonly) HMDCounterThresholdTTRTrigger *workingStoreCommitTTRTrigger;

+ (id)managedEventCounterRequestGroups;

- (void).cxx_destruct;
- (id)addTTRThresholdTrigger:(id)arg1 atThreshold:(long long)arg2 displayReason:(id)arg3 forEventName:(id)arg4;
- (id)aggregationEventGroup;
- (id)cloudKitExportCountTTRTrigger;
- (id)cloudKitImportCountTTRTrigger;
- (id)cloudStoreReasonsEventGroup;
- (id)countersManager;
- (void)didReceiveEventFromDispatcher:(id)arg1;
- (void)handleCloudKitOperationEvent:(id)arg1;
- (void)handleCloudStoreTransactionEvent:(id)arg1;
- (void)handleWorkingStoreTransactionEvent:(id)arg1;
- (id)initWithDataSource:(id)arg1;
- (id)logEventSubmitter;
- (void)populateAggregationAnalysisLogEvent:(id)arg1 forDate:(id)arg2;
- (void)resetAggregationAnalysisContext;
- (void)runDailyTask;
- (id)workingStoreCommitTTRTrigger;

@end
