/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDMatterXPCListener : HMFObject <HMFLogging, MTRPluginClientConnectionDelegate, MTRPluginServerDelegate, NSXPCListenerDelegate> {
    NSObject<OS_dispatch_queue> * _delegateQueue;
    HMDHomeManager * _homeManager;
    NSXPCListener * _listener;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSMutableSet * _mutableConnections;
    HMDProcessMonitor * _processMonitor;
    NSObject<OS_dispatch_queue> * _processMonitorQueue;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HMDHomeManager *homeManager;
@property (readonly) NSXPCListener *listener;
@property (nonatomic, readonly) NSMutableSet *mutableConnections;
@property (nonatomic, readonly) HMDProcessMonitor *processMonitor;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *processMonitorQueue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (id)_homeForUUID:(id)arg1;
- (bool)connection:(id)arg1 allowsOperationWithHome:(id)arg2 operationType:(long long)arg3 nodeId:(id)arg4 commandId:(id)arg5 endpointId:(id)arg6 clusterId:(id)arg7 attributeId:(id)arg8;
- (bool)connection:(id)arg1 sendMessagePayloadToPrimaryResident:(id)arg2 responseHandler:(id /* block */)arg3 error:(id*)arg4;
- (id)delegateQueue;
- (id)homeManager;
- (id)initWithHomeManager:(id)arg1;
- (id)listener;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)mutableConnections;
- (id)processMonitor;
- (id)processMonitorQueue;
- (bool)sendMessage:(id)arg1 homeUUID:(id)arg2 error:(id*)arg3;
- (void)start;
- (void)stop;
- (id)workQueue;

@end
