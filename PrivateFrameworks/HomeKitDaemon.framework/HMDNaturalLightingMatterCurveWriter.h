/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDNaturalLightingMatterCurveWriter : HMFObject <HMFLogging, HMFTimerDelegate> {
    HMDHAPAccessory * _accessory;
    <HMDLightProfileDataSource> * _dataSource;
    HMDLightProfile * _lightProfile;
    bool  _naturalLightingAllowed;
    HMDNaturalLightingCurve * _naturalLightingCurve;
    NSNotificationCenter * _notificationCenter;
    HMFTimer * _periodicWriteTimer;
    id /* block */  _timerFactory;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property HMDHAPAccessory *accessory;
@property (readonly) <HMDLightProfileDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (getter=isDemoMode, readonly) bool demoMode;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property HMDLightProfile *lightProfile;
@property bool naturalLightingAllowed;
@property (copy) HMDNaturalLightingCurve *naturalLightingCurve;
@property (readonly) NSNotificationCenter *notificationCenter;
@property (retain) HMFTimer *periodicWriteTimer;
@property (readonly) NSNumber *regularTransitionTime;
@property (readonly) Class superclass;
@property (readonly) id /* block */ timerFactory;
@property (getter=isTimerRunning, readonly) bool timerRunning;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (id)accessory;
- (void)checkIfNaturalLightingAllowed;
- (void)configurePostNaturalLightingContext;
- (void)configurePreNaturalLightingContext;
- (void)configureWithLightProfile:(id)arg1;
- (id)dataSource;
- (void)disableNaturalLightingCurveWithCompletion:(id /* block */)arg1;
- (void)disableNaturalLightingWithReason:(id)arg1 message:(id)arg2;
- (void)enableNaturalLightingWithReason:(id)arg1;
- (void)enableNaturalLightingWithReason:(id)arg1 message:(id)arg2;
- (void)enableOrUpdateNaturalLightingCurveWithColorMode:(id)arg1 accessoryColorTemp:(id)arg2 completion:(id /* block */)arg3;
- (void)enableOrUpdateNaturalLightingCurveWithCompletion:(id /* block */)arg1;
- (void)getDemoModeTransitionTime:(id*)arg1 newColorTemp:(id*)arg2 accessoryColorTemp:(id)arg3 colorMode:(id)arg4;
- (unsigned short)getShortTransitionTimeForAccessoryColorTemp:(id)arg1 curveColorTemp:(id)arg2;
- (void)getTransitionTime:(id*)arg1 newColorTemp:(id*)arg2 accessoryColorTemp:(id)arg3 colorMode:(id)arg4;
- (void)handleAccessoryConnected:(id)arg1;
- (void)handleAccessoryFirmwareVersionChangedNotification:(id)arg1;
- (void)handleColorControlAttributeReport:(id)arg1;
- (void)handleColorTemperatureAttributes:(id)arg1;
- (void)handleHomeNaturalLightingContextUpdated:(id)arg1;
- (void)handleMobileAssetsUpdatedNotification:(id)arg1;
- (void)handlePrimaryResidentUpdateNotification:(id)arg1;
- (void)handleSetNaturalLightingEnabledMessage:(id)arg1 lightProfile:(id)arg2;
- (id)initWithWorkQueue:(id)arg1 accessory:(id)arg2;
- (id)initWithWorkQueue:(id)arg1 accessory:(id)arg2 dataSource:(id)arg3 notificationCenter:(id)arg4 timerFactory:(id /* block */)arg5;
- (bool)isAccessoryColorTemp:(id)arg1 closeToCurveColorTemp:(id)arg2;
- (bool)isDemoMode;
- (id)isNaturalLightingAllowed;
- (bool)isTimerRunning;
- (id)lightProfile;
- (id)logIdentifier;
- (bool)naturalLightingAllowed;
- (id)naturalLightingCurve;
- (id)notificationCenter;
- (id)periodicWriteTimer;
- (id)regularTransitionTime;
- (void)setAccessory:(id)arg1;
- (void)setLightProfile:(id)arg1;
- (void)setNaturalLightingAllowed:(bool)arg1;
- (void)setNaturalLightingCurve:(id)arg1;
- (id)setNaturalLightingEnabled:(bool)arg1;
- (void)setNaturalLightingEnabled:(bool)arg1 completion:(id /* block */)arg2;
- (void)setPeriodicWriteTimer:(id)arg1;
- (void)setStartUpColorTemperature;
- (void)startPeriodicWriteTimerWithInterval:(id)arg1;
- (void)stopPeriodicWriteTimer;
- (void)timerDidFire:(id)arg1;
- (id /* block */)timerFactory;
- (void)updateNaturalLightingEnabledFromAttributes;
- (void)updateSettingsIfNaturalLightingSupportedByAccessory;
- (id)workQueue;

@end
