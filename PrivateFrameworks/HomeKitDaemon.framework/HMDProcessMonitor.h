/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy
 */

@interface HMDProcessMonitor : HMFObject <HMFLogging, HMFTimerDelegate> {
    bool  _activeHomeKitApps;
    RBSProcessMonitor * _internal;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSMutableSet * _pendingTerminatedApplications;
    NSMutableSet * _processes;
    NSObject<OS_dispatch_queue> * _queue;
    HMFTimer * _spiClientTerminationDelayTimer;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSArray *foregroundProcesses;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSMutableSet *pendingTerminatedApplications;
@property (readonly, copy) NSArray *processes;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) HMFTimer *spiClientTerminationDelayTimer;
@property (readonly) Class superclass;

+ (unsigned long long)applicationStateForProcessInfo:(id)arg1 rbsProcessState:(id)arg2;
+ (unsigned long long)applicationStateFromRBSProcessState:(id)arg1;
+ (id)foregroundAssertionReasonForProcessState:(id)arg1;
+ (id)logCategory;
+ (bool)shouldUpgradeFromBackgroundToForegroundForProcessInfo:(id)arg1 processState:(id)arg2;

- (void).cxx_destruct;
- (void)_processAppStateChange:(id)arg1;
- (void)_removeProcess:(id)arg1;
- (void)dealloc;
- (id)foregroundProcesses;
- (id)initWithQueue:(id)arg1;
- (id)pendingTerminatedApplications;
- (id)processInfoForPID:(int)arg1;
- (id)processInfoForXPCConnection:(id)arg1;
- (id)processes;
- (id)queue;
- (void)removeFromPendingTerminated:(id)arg1;
- (void)removeProcess:(id)arg1;
- (void)setSpiClientTerminationDelayTimer:(id)arg1;
- (id)spiClientTerminationDelayTimer;
- (void)timerDidFire:(id)arg1;
- (void)updateApplicationMonitor;
- (void)updateProcessInfo:(id)arg1 withProcessState:(id)arg2;
- (void)updateProcessInfoForRBSProcessHandle:(id)arg1 usingUpdate:(id)arg2;

@end
