/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy
 */

@interface HMDThreadRadioClient : HMFObject <HMDThreadRadioClient, HMFLogging> {
    HMDThreadCommandTimer * _deferredCommandTimer;
    bool  _isGeoAvailable;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSHashTable * _observers;
    CtrClient * _threadClient;
    NSObject<OS_dispatch_queue> * _threadEventQueue;
    long long  _threadLayerInformedResidentState;
    bool  _threadNetworkUp;
    NSObject<OS_dispatch_queue> * _threadStateCaptureQueue;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic, retain) HMDThreadCommandTimer *deferredCommandTimer;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isGeoAvailable;
@property (readonly) NSHashTable *observers;
@property (readonly) Class superclass;
@property (nonatomic, retain) CtrClient *threadClient;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *threadEventQueue;
@property (nonatomic) long long threadLayerInformedResidentState;
@property (nonatomic, readonly) bool threadNetworkUp;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *threadStateCaptureQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (long long)_WEDConnectionStateFromStatus:(id)arg1 disconnectReason:(id)arg2;
- (id)_WEDStateChangeEventFromThreadEvent:(struct shared_ptr<CtrXPC::Event> { struct Event {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (long long)_connectionStateFromString:(id)arg1;
- (long long)_nodeTypeFromString:(id)arg1;
- (void)_notifyObserversOfCallStateChangedEvent:(id)arg1;
- (void)_notifyObserversOfPeripheralDeviceNodeTypeEvent:(id)arg1;
- (void)_notifyObserversOfThreadNetworkEvent:(id)arg1;
- (void)_notifyObserversOfThreadPreferredNetworkUpdatedEvent:(id)arg1;
- (void)_notifyObserversOfThreadWakeOnDeviceConnectionStateEvent:(id)arg1;
- (void)_registerForThreadNetworkEvents;
- (void)_reportCurrentThreadState:(id)arg1;
- (void)_unregisterForThreadNetworkEvents;
- (void)_updateThreadMessageReliabilityParametersWithUserDefinedValues:(bool)arg1;
- (void)connectToExtendedMACAddress:(id)arg1 completion:(id /* block */)arg2;
- (id)deferredCommandTimer;
- (void)informThreadLayerOfResidentChange:(bool)arg1 primaryResidentIsThreadCapable:(bool)arg2;
- (id)init;
- (bool)isGeoAvailable;
- (bool)isThreadNetworkUp;
- (id)observers;
- (void)registerForThreadNetworkEvents:(id)arg1;
- (void)setDeferredCommandTimer:(id)arg1;
- (void)setIsGeoAvailable:(bool)arg1;
- (void)setThreadClient:(id)arg1;
- (void)setThreadLayerInformedResidentState:(long long)arg1;
- (void)setThreadMessageReliabilityParameters:(id)arg1 activeRetransmitMs:(id)arg2 activeThresholdMs:(id)arg3 additionalRetransmitDelayMs:(id)arg4;
- (bool)shouldInformThreadOfResidentChange:(bool)arg1 primaryResidentIsThreadCapable:(bool)arg2;
- (void)startFirmwareUpdateWithExtendedMACAddress:(id)arg1 isWedDevice:(bool)arg2 completion:(id /* block */)arg3;
- (void)startThreadNetwork:(id)arg1 completion:(id /* block */)arg2;
- (void)startThreadNetworkWithOperationalDataset:(id)arg1 isOwnerUser:(bool)arg2 completion:(id /* block */)arg3;
- (void)startThreadPairingWithExtendedMACAddress:(id)arg1 isWedDevice:(bool)arg2 completion:(id /* block */)arg3;
- (void)stopFirmwareUpdateWithCompletion:(id /* block */)arg1;
- (void)stopThreadNetworkWithCompletion:(id /* block */)arg1;
- (void)stopThreadPairingWithCompletion:(id /* block */)arg1;
- (id)threadClient;
- (id)threadEventQueue;
- (long long)threadLayerInformedResidentState;
- (bool)threadNetworkUp;
- (id)threadStateCaptureQueue;
- (void)triggerThreadNetworkStateCaptureForAccessories:(id)arg1 isSessionFailure:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)triggerThreadNetworkStateCaptureWithCompletion:(id /* block */)arg1;
- (void)unregisterForThreadNetworkEvents:(id)arg1;

@end
