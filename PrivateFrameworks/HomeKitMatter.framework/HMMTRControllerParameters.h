/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitMatter.framework/HomeKitMatter
 */

@interface HMMTRControllerParameters : HMFObject <NSCopying> {
    NSArray * _certificationDeclarationCertificates;
    NSNumber * _fabricID;
    NSData * _intermediateCertificate;
    NSData * _ipk;
    NSData * _operationalCertificate;
    <MTROperationalCertificateIssuer> * _operationalCertificateIssuer;
    NSObject<OS_dispatch_queue> * _operationalCertificateIssuerQueue;
    <MTRKeypair> * _operationalKeypair;
    <MTROTAProviderDelegate> * _otaProviderDelegate;
    NSObject<OS_dispatch_queue> * _otaProviderDelegateQueue;
    NSArray * _productAttestationAuthorityCertificates;
    NSData * _rootCertificate;
    bool  _shouldAdvertiseOperational;
    bool  _startSuspended;
    <MTRDeviceControllerStorageDelegate> * _storageDelegate;
    NSObject<OS_dispatch_queue> * _storageDelegateQueue;
    NSUUID * _uniqueIdentifier;
    NSNumber * _vendorID;
}

@property (nonatomic, copy) NSArray *certificationDeclarationCertificates;
@property (nonatomic, copy) NSNumber *fabricID;
@property (nonatomic, copy) NSData *intermediateCertificate;
@property (nonatomic, copy) NSData *ipk;
@property (nonatomic, copy) NSData *operationalCertificate;
@property (nonatomic, retain) <MTROperationalCertificateIssuer> *operationalCertificateIssuer;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *operationalCertificateIssuerQueue;
@property (nonatomic, retain) <MTRKeypair> *operationalKeypair;
@property (nonatomic, retain) <MTROTAProviderDelegate> *otaProviderDelegate;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *otaProviderDelegateQueue;
@property (nonatomic, copy) NSArray *productAttestationAuthorityCertificates;
@property (nonatomic, copy) NSData *rootCertificate;
@property (nonatomic) bool shouldAdvertiseOperational;
@property (nonatomic) bool startSuspended;
@property (nonatomic, retain) <MTRDeviceControllerStorageDelegate> *storageDelegate;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *storageDelegateQueue;
@property (nonatomic, copy) NSUUID *uniqueIdentifier;
@property (nonatomic, copy) NSNumber *vendorID;

- (void).cxx_destruct;
- (id)certificationDeclarationCertificates;
- (id)controllerParams;
- (id)controllerParams2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)fabricID;
- (id)initWithIPK:(id)arg1 operationalKeypair:(id)arg2 operationalCertificate:(id)arg3 intermediateCertificate:(id)arg4 rootCertificate:(id)arg5;
- (id)initWithStorageDelegate:(id)arg1 storageDelegateQueue:(id)arg2 uniqueIdentifier:(id)arg3 ipk:(id)arg4 vendorID:(id)arg5 operationalKeypair:(id)arg6 operationalCertificate:(id)arg7 intermediateCertificate:(id)arg8 rootCertificate:(id)arg9;
- (id)intermediateCertificate;
- (id)ipk;
- (id)operationalCertificate;
- (id)operationalCertificateIssuer;
- (id)operationalCertificateIssuerQueue;
- (id)operationalKeypair;
- (id)otaProviderDelegate;
- (id)otaProviderDelegateQueue;
- (id)productAttestationAuthorityCertificates;
- (id)rootCertificate;
- (void)setCertificationDeclarationCertificates:(id)arg1;
- (void)setFabricID:(id)arg1;
- (void)setIntermediateCertificate:(id)arg1;
- (void)setIpk:(id)arg1;
- (void)setOperationalCertificate:(id)arg1;
- (void)setOperationalCertificateIssuer:(id)arg1;
- (void)setOperationalCertificateIssuerQueue:(id)arg1;
- (void)setOperationalKeypair:(id)arg1;
- (void)setOtaProviderDelegate:(id)arg1;
- (void)setOtaProviderDelegateQueue:(id)arg1;
- (void)setProductAttestationAuthorityCertificates:(id)arg1;
- (void)setRootCertificate:(id)arg1;
- (void)setShouldAdvertiseOperational:(bool)arg1;
- (void)setStartSuspended:(bool)arg1;
- (void)setStorageDelegate:(id)arg1;
- (void)setStorageDelegateQueue:(id)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (void)setVendorID:(id)arg1;
- (bool)shouldAdvertiseOperational;
- (bool)startSuspended;
- (id)storageDelegate;
- (id)storageDelegateQueue;
- (id)uniqueIdentifier;
- (bool)usesCommonStorageDelegate;
- (id)vendorID;

@end
