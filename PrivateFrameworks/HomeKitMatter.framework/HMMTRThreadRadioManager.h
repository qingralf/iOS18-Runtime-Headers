/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitMatter.framework/HomeKitMatter
 */

@interface HMMTRThreadRadioManager : HMFObject <HMFLogging, HMFTimerDelegate> {
    HMMTRAccessoryServerBrowser * _browser;
    <HMMTRThreadRadioControllerDelegate> * _delegate;
    bool  _deviceIsLockedAndPendingStopThread;
    bool  _deviceSupportsThreadService;
    HMFTimer * _disconnectTimer;
    NSString * _eMACAddressOfFWUpdatesAccessory;
    NSString * _eMACAddressOfWEDAccessory;
    NSNumber * _fabricIDOfActiveThreadNetwork;
    NSNumber * _fabricIDOfPendingStartPairingBlock;
    bool  _firmwareUpdateActive;
    bool  _isWEDConnectionRetryActive;
    long long  _lastKnownThreadNetworkConnectionState;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    HMMTRAccessoryServer * _pairingAccessoryServer;
    bool  _pairingActive;
    id /* block */  _pendingStartPairingBlock;
    bool  _pendingThreadStart;
    bool  _preventDisconnect;
    id /* block */  _retryCompletionHandler;
    bool  _threadNetworkActivatedForSystemCommissionerFabric;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic) HMMTRAccessoryServerBrowser *browser;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property <HMMTRThreadRadioControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property bool deviceIsLockedAndPendingStopThread;
@property (nonatomic) bool deviceSupportsThreadService;
@property (nonatomic, readonly) HMFTimer *disconnectTimer;
@property (nonatomic, retain) NSString *eMACAddressOfFWUpdatesAccessory;
@property (nonatomic, retain) NSString *eMACAddressOfWEDAccessory;
@property (nonatomic, retain) NSNumber *fabricIDOfActiveThreadNetwork;
@property (nonatomic, retain) NSNumber *fabricIDOfPendingStartPairingBlock;
@property (getter=isFirmwareUpdateActive, nonatomic) bool firmwareUpdateActive;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isWEDConnectionRetryActive;
@property (nonatomic) long long lastKnownThreadNetworkConnectionState;
@property (nonatomic) HMMTRAccessoryServer *pairingAccessoryServer;
@property (getter=isPairingActive, nonatomic) bool pairingActive;
@property (copy) id /* block */ pendingStartPairingBlock;
@property (nonatomic) bool pendingThreadStart;
@property (nonatomic) bool preventDisconnect;
@property (nonatomic, copy) id /* block */ retryCompletionHandler;
@property (readonly) Class superclass;
@property (nonatomic) bool threadNetworkActivatedForSystemCommissionerFabric;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)__startAccessoryPairingWithExtendedMACAddress:(id)arg1 isWedDevice:(bool)arg2 accessoryServer:(id)arg3 completion:(id /* block */)arg4;
- (void)_allowDisconnect;
- (double)_computeRetryDelayForError:(id)arg1;
- (id)_connectionStateValueToString:(long long)arg1;
- (id)_nodeTypeValueToString:(long long)arg1;
- (void)_notifyThreadRadioStateChanged:(long long)arg1 nodeType:(long long)arg2 fabricID:(id)arg3;
- (void)_notifyWakeOnDeviceConnectionChanged:(long long)arg1 eMACAddress:(id)arg2;
- (void)_retryWEDConnectionToAccessoryWithDelayInMs:(double)arg1;
- (bool)_shouldRetryWEDConnectionToAccessory;
- (void)_startAccessoryFirmwareUpdateWithExtendedMACAddress:(id)arg1 isWedDevice:(bool)arg2 completion:(id /* block */)arg3;
- (void)_startAccessoryPairingWithExtendedMACAddress:(id)arg1 isWedDevice:(bool)arg2 accessoryServer:(id)arg3 completion:(id /* block */)arg4;
- (void)_startThreadRadioForHomeWithFabricID:(id)arg1 preventDisconnect:(bool)arg2;
- (void)_startThreadRadioForSystemCommissionerFabricID:(id)arg1;
- (void)_stopAccessoryFirmwareUpdateWithCompletion:(id /* block */)arg1;
- (void)_stopAccessoryPairingWithCompletion:(id /* block */)arg1;
- (void)_stopThreadRadioForHomeWithFabricID:(id)arg1;
- (void)_stopThreadRadioForSystemCommissionerFabricID:(id)arg1;
- (void)_updateFabricIDOfActiveThreadNetwork:(id)arg1 isFabricIDOfSystemCommissioner:(bool)arg2;
- (void)allowDisconnect;
- (id)browser;
- (void)connectToAccessoryWithExtendedMACAddress:(id)arg1 completion:(id /* block */)arg2;
- (void)connectToAccessoryWithExtendedMACAddress:(id)arg1 forRetry:(bool)arg2 completion:(id /* block */)arg3;
- (id)delegate;
- (bool)deviceIsLockedAndPendingStopThread;
- (bool)deviceSupportsThreadService;
- (id)disconnectTimer;
- (void)dispatchAfter:(unsigned long long)arg1 block:(id /* block */)arg2;
- (void)dispatchBlock:(id /* block */)arg1;
- (id)eMACAddressOfFWUpdatesAccessory;
- (id)eMACAddressOfWEDAccessory;
- (id)fabricIDOfActiveThreadNetwork;
- (id)fabricIDOfPendingStartPairingBlock;
- (void)handleDeviceLockStateChange:(bool)arg1;
- (bool)hasMatterThreadAccessoryInHomeWithFabricID:(id)arg1;
- (id)initWithBrowser:(id)arg1;
- (bool)isFirmwareUpdateActive;
- (bool)isPairingActive;
- (bool)isReadyToEstablishWEDConnection;
- (bool)isReadyToTransitionToFullRouterModeForFirmwareUpdate;
- (bool)isThreadNetworkConnected;
- (bool)isWEDConnectionRetryActive;
- (long long)lastKnownThreadNetworkConnectionState;
- (void)notifyPeripheralDeviceNodeTypeChanged:(long long)arg1;
- (void)notifyThreadRadioStateChanged:(long long)arg1 nodeType:(long long)arg2 fabricID:(id)arg3;
- (void)notifyWakeOnDeviceConnectionChanged:(long long)arg1 eMACAddress:(id)arg2;
- (void)overrideLocationCheckForPairingForFabricID:(id)arg1;
- (id)pairingAccessoryServer;
- (id /* block */)pendingStartPairingBlock;
- (bool)pendingThreadStart;
- (void)postNotification:(id)arg1 userInfo:(id)arg2;
- (bool)preventDisconnect;
- (id /* block */)retryCompletionHandler;
- (void)setBrowser:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceIsLockedAndPendingStopThread:(bool)arg1;
- (void)setDeviceSupportsThreadService:(bool)arg1;
- (void)setEMACAddressOfFWUpdatesAccessory:(id)arg1;
- (void)setEMACAddressOfWEDAccessory:(id)arg1;
- (void)setFabricIDOfActiveThreadNetwork:(id)arg1;
- (void)setFabricIDOfPendingStartPairingBlock:(id)arg1;
- (void)setFirmwareUpdateActive:(bool)arg1;
- (void)setIsWEDConnectionRetryActive:(bool)arg1;
- (void)setLastKnownThreadNetworkConnectionState:(long long)arg1;
- (void)setPairingAccessoryServer:(id)arg1;
- (void)setPairingActive:(bool)arg1;
- (void)setPendingStartPairingBlock:(id /* block */)arg1;
- (void)setPendingThreadStart:(bool)arg1;
- (void)setPreventDisconnect:(bool)arg1;
- (void)setRetryCompletionHandler:(id /* block */)arg1;
- (void)setThreadNetworkActivatedForSystemCommissionerFabric:(bool)arg1;
- (void)setWorkQueue:(id)arg1;
- (void)startAccessoryFirmwareUpdateWithExtendedMACAddress:(id)arg1 isWedDevice:(bool)arg2 completion:(id /* block */)arg3;
- (void)startAccessoryPairingWithExtendedMACAddress:(id)arg1 isWedDevice:(bool)arg2 accessoryServer:(id)arg3 completion:(id /* block */)arg4;
- (void)startThreadRadioForHomeWithFabricID:(id)arg1;
- (void)startThreadRadioForHomeWithFabricID:(id)arg1 preventDisconnect:(bool)arg2;
- (void)startThreadRadioForSystemCommissionerFabricID:(id)arg1;
- (void)stopAccessoryFirmwareUpdateWithCompletion:(id /* block */)arg1;
- (void)stopAccessoryPairingWithCompletion:(id /* block */)arg1;
- (void)stopThreadOnDeviceLockTimeout;
- (void)stopThreadRadioForHomeWithFabricID:(id)arg1;
- (void)stopThreadRadioForSystemCommissionerFabricID:(id)arg1;
- (bool)threadNetworkActivatedForSystemCommissionerFabric;
- (void)timerDidFire:(id)arg1;
- (id)workQueue;

@end
