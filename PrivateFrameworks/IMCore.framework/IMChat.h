/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IMCore.framework/IMCore
 */

@interface IMChat : IMItemsController <IMMomentSharePresentationCacheDelegate, IMPhotoLibraryPersistenceManagerListener, IMReasonTrackingUpdaterDelegate, IMSendProgressDelegate, IMStateLoggable, INSpeakable> {
    IMAccount * _account;
    bool  _allowedByScreenTime;
    NSArray * _attachments;
    long long  _autoDonationBehavior;
    NSDictionary * _bizIntent;
    IMHandle * _cachedEUHandle;
    long long  _cachedShouldShowReportSpam;
    long long  _cachedShouldShowSpam;
    NSNumber * _cachedStewieSharingChat;
    <IMChatItemRules> * _chatItemRules;
    IMReasonTrackingUpdater * _chatItemsUpdater;
    NSMutableDictionary * _chatProperties;
    void * _context;
    NSNumber * _countOfAttachmentsNotCachedLocally;
    NSNumber * _countOfMessagesMarkedAsSpam;
    NSString * _currentLocationGUID;
    NSString * _currentUnreadHistoryQuery;
    unsigned long long  _dbFailedCount;
    unsigned long long  _dbUnreadCount;
    bool  _deletingIncomingMessages;
    bool  _didSendAFinishedMessage;
    NSString * _displayName;
    BOOL  _downgradeState;
    IMScheduledUpdater * _downgradeStateUpdater;
    bool  _downloadingPendingSatelliteMessages;
    NSDate * _earliestCachedMessageDate;
    NSDate * _earliestRecoverableMessageDeletionDate;
    NSData * _engramID;
    bool  _forceMMS;
    NSArray * _frequentReplies;
    NSString * _groupChatIdentifierUppercase;
    NSString * _groupID;
    NSString * _guid;
    NSMutableSet * _guids;
    bool  _hasBeenConfigured;
    bool  _hasCancellableScheduledMessage;
    bool  _hasEarlierMessagesToLoad;
    bool  _hasHadSuccessfulQuery;
    long long  _hasKnownParticipantsCacheStatus;
    bool  _hasMoreRecentMessagesToLoad;
    bool  _hasQueriedForSiblingChats;
    bool  _hasRefreshedServiceForSending;
    bool  _hasSurfRequest;
    long long  _hybridGroupState;
    NSString * _identifier;
    bool  _ignoreDowngradeStatusUpdates;
    IMInlineReplyController * _inlineReplyController;
    NSString * _interworkingService;
    long long  _interworkingState;
    IMMessage * _invitationForPendingParticipants;
    bool  _isCurrentlyDownloadingPurgedAssets;
    long long  _isFiltered;
    bool  _isFirstMessageInvitation;
    bool  _isSubscriptionSwitchParticipantAddTypeFound;
    bool  _isUpdatingChatItems;
    long long  _joinState;
    unsigned long long  _ktStatus;
    NSString * _lastAddressedHandleID;
    NSString * _lastAddressedSIMID;
    NSDate * _lastCompletedServiceReachabilityRequestStartTime;
    unsigned long long  _lastKTStatus;
    long long  _lastMessageTimeStampOnLoad;
    NSDate * _lastSatelliteFetchDate;
    NSString * _lastUndeliveredMessageGUIDForForcedQuery;
    bool  _lastUsedSatelliteStatus;
    bool  _lastUsedShowTextEmergencyServicesStatus;
    bool  _lastUsedShowTextRoadsideProviderStatus;
    NSDate * _latestRecoverableMessageDeletionDate;
    double  _latestTypingIndicatorTimeInterval;
    NSString * _localUserIsComposing;
    NSSet * _mergedPinningIdentifiers;
    NSMutableArray * _messagesPendingJoin;
    IMMomentShareCache * _momentShareCache;
    IMMomentSharePresentationCache * _momentSharePresentationCache;
    IMOrderingTools * _orderingTools;
    NSString * _originalGroupID;
    bool  _oscarChat;
    NSMutableDictionary * _participantProperties;
    NSMutableDictionary * _participantStates;
    NSArray * _participants;
    unsigned long long  _pendingIncomingSatelliteMessageCount;
    NSString * _personCentricID;
    NSDictionary * _proofreadingInfo;
    unsigned long long  _recoverableMessagesCount;
    bool  _recovered;
    NSArray * _replySuggestions;
    NSString * _roomName;
    NSString * _roomNameWithoutSuffix;
    IMSendProgress * _sendProgress;
    unsigned long long  _senderBlackholeWarningStatus;
    bool  _serviceSwitchRequested;
    NSMutableArray * _showingEditHistoryForChatItemGUIDs;
    long long  _smsCategory;
    unsigned char  _style;
    IMParticipantChangeChatItem * _subscriptionSwitchParticipantAddChatItem;
    NSString * _suggestedRepliesData;
    IMTimingCollection * _timingCollection;
    unsigned long long  _totalSatelliteMessageCount;
    NSString * _typingGUID;
    unsigned long long  _unreadRecoverableMessagesCount;
    bool  _unregistered;
    long long  _wasDetectedAsSMSSpamCacheStatus;
    bool  _wasInvitationHandled;
}

@property (setter=_setGUIDs:, nonatomic, retain) NSMutableSet *_guids;
@property (nonatomic, readonly) IMMessageItem *_messageToReportJunk;
@property (nonatomic, readonly) bool _shouldRegisterChat;
@property (nonatomic, readonly) bool _suppressesMutationsFromLocalDevice;
@property (nonatomic, readonly) IMAccount *account;
@property (nonatomic, readonly) bool accountMatchesLastFinishedMessageItem;
@property (nonatomic, readonly) bool allParticipantsBlocked;
@property (nonatomic, readonly) bool allRecipientsFollowingLocation;
@property (nonatomic, readonly) bool allRecipientsSharingLocation;
@property (nonatomic, readonly) NSSet *allSiblingFMFHandles;
@property (nonatomic, readonly) NSSet *allSiblingFindMyHandles;
@property (nonatomic) bool allowedByScreenTime;
@property (nonatomic, readonly) NSArray *alternativeSpeakableMatches;
@property (nonatomic, readonly, copy) NSArray *attachments;
@property (nonatomic, retain) NSArray *attachments;
@property (getter=isAutoDonatingMessages, nonatomic, readonly) bool autoDonateMessages;
@property (nonatomic) long long autoDonationBehavior;
@property (nonatomic, readonly) NSDate *availabilityStatusPublishedDate;
@property (nonatomic, copy) NSDictionary *bizIntent;
@property (nonatomic, readonly) IMBrand *brand;
@property (nonatomic, readonly) IMHandle *businessHandle;
@property (nonatomic, readonly) NSString *cachedBusinessName;
@property (nonatomic, retain) IMHandle *cachedEUHandle;
@property (nonatomic) long long cachedShouldShowReportSpam;
@property (nonatomic) long long cachedShouldShowSpam;
@property (nonatomic, retain) NSNumber *cachedStewieSharingChat;
@property (nonatomic, readonly) bool canHaveMultipleParticipants;
@property (nonatomic, readonly) bool canLeaveChat;
@property (nonatomic, readonly) bool canSend;
@property (nonatomic, readonly) bool canSendInlineReply;
@property (nonatomic, readonly) unsigned long long capabilities;
@property (nonatomic, readonly) NSString *chatIdentifier;
@property (nonatomic, retain) <IMChatItemRules> *chatItemRules;
@property (nonatomic, readonly, copy) NSArray *chatItems;
@property (nonatomic, retain) IMReasonTrackingUpdater *chatItemsUpdater;
@property (nonatomic, retain) NSMutableDictionary *chatProperties;
@property (nonatomic, readonly) IMChatScrutinyController *chatScrutinyController;
@property (nonatomic, readonly) unsigned char chatStyle;
@property (nonatomic, readonly) bool containsActiveBIASession;
@property (nonatomic) void*contextInfo;
@property (nonatomic, readonly, copy) NSNumber *countOfAttachmentsNotCachedLocally;
@property (nonatomic, retain) NSNumber *countOfAttachmentsNotCachedLocally;
@property (nonatomic, retain) NSNumber *countOfMessagesMarkedAsSpam;
@property (nonatomic, retain) NSString *currentLocationGUID;
@property (nonatomic, retain) NSString *currentUnreadHistoryQuery;
@property (nonatomic, readonly) IMDaemonController<IMDaemonProtocol> *daemonController;
@property (nonatomic) unsigned long long dbFailedCount;
@property (nonatomic) unsigned long long dbUnreadCount;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (getter=isDeletingIncomingMessages, nonatomic) bool deletingIncomingMessages;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *deviceIndependentID;
@property (nonatomic) bool didSendAFinishedMessage;
@property (nonatomic, retain) NSString *displayName;
@property (nonatomic) BOOL downgradeState;
@property (nonatomic, readonly) NSString *downgradeStateForDebugMenu;
@property (nonatomic, retain) IMScheduledUpdater *downgradeStateUpdater;
@property (getter=isDownloadingPendingSatelliteMessages, nonatomic, readonly) bool downloadingPendingSatelliteMessages;
@property (nonatomic, retain) NSDate *earliestCachedMessageDate;
@property (nonatomic, retain) NSDate *earliestRecoverableMessageDeletionDate;
@property (nonatomic, readonly) IMHandle *emergencyUserHandle;
@property (nonatomic, readonly) IMSharedEmergencyInfo *emergencyUserInfo;
@property (nonatomic, readonly) NSData *engramID;
@property (nonatomic, readonly) long long filterCategory;
@property (nonatomic, readonly) long long filterSubCategory;
@property (nonatomic, readonly) NSSet *findMyHandles;
@property (nonatomic, readonly) IMMessage *firstMessage;
@property (nonatomic, readonly) IMMessageItem *firstUnreadMessageItem;
@property (nonatomic, readonly) NSSet *fmfHandles;
@property (nonatomic) bool forceMMS;
@property (nonatomic, retain) NSArray *frequentReplies;
@property (getter=isGroupChat, nonatomic, readonly) bool groupChat;
@property (nonatomic, retain) NSString *groupChatIdentifierUppercase;
@property (nonatomic, retain) NSString *groupID;
@property (nonatomic, readonly) NSString *guid;
@property (nonatomic) bool hasBeenConfigured;
@property (nonatomic) bool hasCancellableScheduledMessage;
@property (nonatomic, readonly) bool hasCommSafetySensitiveMessage;
@property (nonatomic, readonly) bool hasCommSafetySensitiveMessageFromSomeoneElse;
@property (nonatomic) bool hasEarlierMessagesToLoad;
@property (nonatomic) bool hasHadSuccessfulQuery;
@property (nonatomic) long long hasKnownParticipantsCacheStatus;
@property (nonatomic, readonly) bool hasLeftGroup;
@property (nonatomic, readonly) bool hasMessageFromMe;
@property (nonatomic, readonly) bool hasMoreMessagesToLoad;
@property (nonatomic, readonly) bool hasMoreRecentMessagesToLoad;
@property (nonatomic) bool hasMoreRecentMessagesToLoad;
@property (nonatomic) bool hasQueriedForSiblingChats;
@property (nonatomic, readonly) bool hasRecipientsFollowingLocation;
@property (nonatomic, readonly) bool hasRecipientsSharingLocation;
@property (nonatomic) bool hasRefreshedServiceForSending;
@property (nonatomic, readonly) bool hasSentMessageToBusiness;
@property (nonatomic, readonly) bool hasSiblingRecipientsSharingLocation;
@property (nonatomic) bool hasSurfRequest;
@property (nonatomic, readonly) bool hasUnhandledInvitation;
@property (nonatomic, readonly) bool hasVerifiedBusiness;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long hybridGroupState;
@property (nonatomic, readonly) NSString *identifier; /* unknown property attribute: ? */
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, readonly) NSString *identityHash;
@property (nonatomic) bool ignoreDowngradeStatusUpdates;
@property (nonatomic, readonly) IMInlineReplyController *inlineReplyController;
@property (nonatomic, readonly) NSSet *internalGUIDsForDebugMenu;
@property (getter=isInterworking, nonatomic, readonly) bool interworking;
@property (nonatomic, retain) NSString *interworkingService;
@property (nonatomic) long long interworkingState;
@property (nonatomic, retain) IMMessage *invitationForPendingParticipants;
@property (nonatomic, readonly) bool isAppleChat;
@property (nonatomic, readonly) bool isBusinessChat;
@property (nonatomic, readonly) bool isChatBot;
@property (nonatomic, readonly) bool isCommSafetySensitiveMessageRecent;
@property (nonatomic) bool isCurrentlyDownloadingPurgedAssets;
@property (nonatomic, readonly) bool isCurrentlyDownloadingPurgedAttachments;
@property (nonatomic) long long isFiltered;
@property (nonatomic) bool isFirstMessageInvitation;
@property (nonatomic, readonly) bool isLastIncomingFinishedMessageNotiMessage;
@property (nonatomic, readonly) bool isLastMessageTypingIndicator;
@property (nonatomic, readonly) bool isMakoChat;
@property (nonatomic, readonly) bool isMapKitBusinessChat;
@property (nonatomic, readonly) bool isMemberOfChat;
@property (nonatomic, readonly) bool isPinned;
@property (nonatomic, readonly) bool isReplyEnabled;
@property (nonatomic) bool isSubscriptionSwitchParticipantAddTypeFound;
@property (nonatomic) bool isUpdatingChatItems;
@property (nonatomic, readonly) long long joinState;
@property (nonatomic, readonly) unsigned long long ktStatus;
@property (nonatomic, retain) NSString *lastAddressedHandleID;
@property (nonatomic, retain) NSString *lastAddressedSIMID;
@property (nonatomic, retain) NSDate *lastCompletedServiceReachabilityRequestStartTime;
@property (nonatomic, readonly) IMChatItem *lastDeletableChatItem;
@property (nonatomic, readonly) IMMessage *lastFinishedMessage;
@property (nonatomic, readonly) NSDate *lastFinishedMessageDate;
@property (nonatomic, readonly) long long lastFinishedMessageID;
@property (nonatomic, readonly) IMMessageItem *lastFinishedMessageItem;
@property (nonatomic, readonly) IMMessage *lastIncomingFinishedMessage;
@property (nonatomic, readonly) IMMessage *lastIncomingFinishedMessageWithTextContent;
@property (nonatomic, readonly) IMMessage *lastIncomingMessage;
@property (nonatomic, readonly) IMMessage *lastIncomingReplyableMessage;
@property (nonatomic) unsigned long long lastKTStatus;
@property (nonatomic, readonly) IMMessage *lastMessage;
@property (nonatomic, readonly) bool lastMessageExists;
@property (nonatomic) long long lastMessageTimeStampOnLoad;
@property (nonatomic, readonly) IMMessage *lastPendingSatelliteSendMessage;
@property (nonatomic, retain) NSDate *lastSatelliteFetchDate;
@property (nonatomic, retain) NSDate *lastScheduledMessageCreatedDate;
@property (nonatomic, readonly) NSString *lastSeenMessageGuid;
@property (nonatomic, readonly) IMMessage *lastSentMessage;
@property (nonatomic, readonly) NSDate *lastSentMessageDate;
@property (nonatomic, retain) NSDate *lastTUConversationCreatedDate;
@property (nonatomic, readonly) IMMessagePartChatItem *lastTapbackableChatItemNotFromMe;
@property (nonatomic, retain) NSString *lastUndeliveredMessageGUIDForForcedQuery;
@property (nonatomic) bool lastUsedSatelliteStatus;
@property (nonatomic) bool lastUsedShowTextEmergencyServicesStatus;
@property (nonatomic) bool lastUsedShowTextRoadsideProviderStatus;
@property (nonatomic, retain) NSDate *latestRecoverableMessageDeletionDate;
@property (nonatomic) double latestTypingIndicatorTimeInterval;
@property (nonatomic, readonly) NSString *localTypingMessageGUID;
@property (nonatomic, retain) NSString *localUserIsComposing;
@property (nonatomic) bool localUserIsRecording;
@property (nonatomic) bool localUserIsTyping;
@property (nonatomic, retain) NSSet *mergedPinningIdentifiers;
@property (nonatomic, readonly) unsigned long long messageCount;
@property (nonatomic, readonly) unsigned long long messageFailureCount;
@property (nonatomic, retain) NSMutableArray *messagesPendingJoin;
@property (nonatomic, readonly) IMMomentSharePresentationCache *momentSharePresentationCache;
@property (nonatomic) unsigned long long numberOfMessagesToKeepLoaded;
@property (nonatomic, retain) IMOrderingTools *orderingTools;
@property (nonatomic, retain) NSString *originalGroupID;
@property (getter=isOscarChat, nonatomic) bool oscarChat;
@property (nonatomic, readonly) unsigned long long overallChatStatus;
@property (nonatomic, readonly) NSArray *participantDNDContactHandles;
@property (nonatomic, retain) NSMutableDictionary *participantProperties;
@property (nonatomic, retain) NSMutableDictionary *participantStates;
@property (nonatomic, retain) NSArray *participants;
@property (nonatomic) unsigned long long pendingIncomingSatelliteMessageCount;
@property (nonatomic, readonly) NSString *persistentID;
@property (nonatomic, retain) NSString *personCentricID;
@property (nonatomic, readonly) NSString *pinningIdentifier;
@property (nonatomic) bool prefersTextResponseToIncomingAudioMessages;
@property (nonatomic, readonly) NSString *pronunciationHint;
@property (nonatomic, copy) NSDictionary *proofreadingInfo;
@property (getter=isReadOnly, nonatomic, readonly) bool readOnly;
@property (nonatomic, retain) IMHandle *recipient;
@property (nonatomic) unsigned long long recoverableMessagesCount;
@property (getter=isRecovered, nonatomic) bool recovered;
@property (nonatomic, retain) NSArray *replySuggestions;
@property (nonatomic, readonly) NSString *roomName;
@property (nonatomic, retain) NSString *roomNameWithoutSuffix;
@property (getter=isSatelliteMessagingCompatible, nonatomic, readonly) bool satelliteMessagingCompatible;
@property (nonatomic, retain) IMSendProgress *sendProgress;
@property (nonatomic) bool serviceSwitchRequested;
@property (nonatomic, readonly) bool shouldDisplayOffGridModeStatus;
@property (nonatomic, readonly) bool shouldDisplayUnavailabilityIndicator;
@property (nonatomic, readonly) bool shouldForceServerStatusRefresh;
@property (nonatomic, readonly) bool shouldIgnoreiMessageSiblingGroupIdentityUpdates;
@property (nonatomic) bool shouldShowAudioButtonInEntryView;
@property (nonatomic, readonly) bool shouldShowAutoDonationAction;
@property (nonatomic, retain) NSMutableArray *showingEditHistoryForChatItemGUIDs;
@property (nonatomic) long long smsCategory;
@property (nonatomic, readonly) NSString *spokenPhrase;
@property (getter=isStewieChat, nonatomic, readonly) bool stewieChat;
@property (getter=isStewieEmergencyChat, nonatomic, readonly) bool stewieEmergencyChat;
@property (getter=isStewieRoadsideChat, nonatomic, readonly) bool stewieRoadsideChat;
@property (getter=isStewieSharingChat, nonatomic, readonly) bool stewieSharingChat;
@property (nonatomic, readonly) NSString *stewieSharingSuggestedName;
@property (nonatomic, retain) IMParticipantChangeChatItem *subscriptionSwitchParticipantAddChatItem;
@property (nonatomic, retain) NSString *suggestedRepliesData;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsFilteringExtensions;
@property (nonatomic, readonly) bool supportsSendingReadReceipts;
@property (nonatomic, readonly) bool supportsSendingTypingIndicators;
@property (nonatomic, retain) IMTimingCollection *timingCollection;
@property (nonatomic) unsigned long long totalSatelliteMessageCount;
@property (nonatomic, retain) NSString *typingGUID;
@property (nonatomic, readonly) unsigned long long unreadMessageCount;
@property (nonatomic) unsigned long long unreadRecoverableMessagesCount;
@property (getter=isUnregistered, nonatomic) bool unregistered;
@property (nonatomic, readonly) NSString *vocabularyIdentifier;
@property (nonatomic, readonly) bool wantsSenderBlackholeWarning;
@property (nonatomic, readonly) bool wasDetectedAsSMSSpam;
@property (nonatomic) long long wasDetectedAsSMSSpamCacheStatus;
@property (nonatomic) bool wasInvitationHandled;
@property (nonatomic, readonly, copy) NSDate *watermarkDate;
@property (nonatomic, readonly) long long watermarkMessageID;

// Image: /System/Library/PrivateFrameworks/IMCore.framework/IMCore

+ (Class)_NPSManagerClass;
+ (void)_initializeFindMyController;
+ (id)_participantsWorkQueue;
+ (Class)chatItemRulesClass;
+ (id)chatItemUpdaterLogHandle;
+ (void)cleanWatermarkCache;
+ (bool)isGUIDInAttemptingListInScrutinyMode:(id)arg1;
+ (id)pendingChatForHandle:(id)arg1;
+ (void)removeGUIDInAttemptingListInScrutinyMode:(id)arg1;
+ (void)setChatItemRulesClass:(Class)arg1;
+ (id)stateCaptureRecents;
+ (void)storeGUIDInAttemptingListInScrutinyMode:(id)arg1;
+ (id /* block */)watermarkComparator;

- (void).cxx_destruct;
- (void)__clearReadMessageCache;
- (void)_accountControllerUpdated:(id)arg1;
- (bool)_accountIsOperational:(id)arg1 forService:(id)arg2;
- (void)_accountLoggedOut:(id)arg1;
- (void)_addParticipants:(id)arg1 withState:(unsigned long long)arg2;
- (id)_archivedItemsToReplace:(id)arg1 isReplacingItems:(bool)arg2;
- (void)_automation_markAsRead:(bool)arg1 messageGUID:(id)arg2 forChatGUID:(id)arg3 fromMe:(bool)arg4;
- (void)_calculateDowngradeState;
- (void)_calculateDowngradeStateTimerFired;
- (bool)_canLeaveChatIgnoringParticipantCount:(bool)arg1;
- (bool)_canPossiblyBecomeHybrid;
- (bool)_canShareStatus;
- (bool)_chatStyleSupportsTypingAndCancelTypingIndicators;
- (void)_clearCachedIdentifier;
- (void)_clearDowngradeMarkers;
- (void)_clearPendingMessages;
- (void)_clearUnreadCount;
- (void)_closeSession:(bool)arg1;
- (long long)_compareChat:(id)arg1 withDate:(id)arg2 withDate:(id)arg3;
- (void)_configureLocationShareItem:(id)arg1;
- (id)_consecutiveDowngradeAttemptsViaManualDowngrades:(bool)arg1;
- (void)_daemonAlive:(id)arg1;
- (void)_daemonDied:(id)arg1;
- (void)_delayedInvalidateDowngradeState;
- (void)_deleteTransfersWithGUIDs:(id)arg1 fromChatItems:(id)arg2;
- (void)_endTiming;
- (void)_engroupParticipantsUpdated;
- (id)_existingMessageFromMessagePartGUID:(id)arg1;
- (id)_fetchMessagesBeforeAndAfterGUID:(id)arg1 numberOfMessagesToLoadBeforeGUID:(unsigned long long)arg2 numberOfMessagesToLoadAfterGUID:(unsigned long long)arg3 threadIdentifier:(id)arg4 synchronous:(bool)arg5 completion:(id /* block */)arg6;
- (id)_fetchMessagesUpToGUID:(id)arg1 limit:(unsigned long long)arg2 synchronous:(bool)arg3 completion:(id /* block */)arg4;
- (id)_fetchMessagesUpToLimit:(unsigned long long)arg1 synchronous:(bool)arg2 completion:(id /* block */)arg3;
- (void)_fixItemForSendingMessageTime:(id)arg1;
- (void)_fixSendingItemDateAndSortID:(id)arg1;
- (unsigned long long)_flagsForCancelTypingIndicatorMessage;
- (unsigned long long)_flagsForTypingIndicatorMessage:(bool)arg1;
- (id)_generatePersonCentricID;
- (id)_getCurrentLocale;
- (id)_getDeleteChatItemMap:(id)arg1;
- (id)_getMessageChatItemMap:(id)arg1 withDeleteMap:(id)arg2 andAllChatItems:(id)arg3;
- (id)_guids;
- (void)_handleAddressBookChangeForRecipientUID:(id)arg1;
- (void)_handleBalloonPluginAttributionChanged;
- (void)_handleHandleStatusChanged:(id)arg1;
- (bool)_handleIncomingItem:(id)arg1;
- (bool)_handleIncomingItem:(id)arg1 updateRecipient:(bool)arg2;
- (bool)_handleIncomingItem:(id)arg1 updateRecipient:(bool)arg2 suppressNotification:(bool)arg3;
- (bool)_handleIncomingItem:(id)arg1 updateRecipient:(bool)arg2 suppressNotification:(bool)arg3 updateReplyCounts:(bool)arg4;
- (void)_handleItem:(id)arg1;
- (void)_handleItem:(id)arg1 forChatStyle:(unsigned char)arg2;
- (void)_handleItem:(id)arg1 forChatStyle:(unsigned char)arg2 keepExistingIndex:(bool)arg3;
- (void)_handleItem:(id)arg1 forChatStyle:(unsigned char)arg2 updateReplyCounts:(bool)arg3;
- (void)_handleItem:(id)arg1 forChatStyle:(unsigned char)arg2 updateReplyCounts:(bool)arg3 keepExistingIndex:(bool)arg4;
- (void)_handleItem:(id)arg1 keepExistingIndex:(bool)arg2;
- (void)_handleMessageGUIDDeletions:(id)arg1;
- (bool)_hasCommunicatedOnService:(id)arg1;
- (bool)_hasJustSentAMessage;
- (bool)_idsQueryResultsHaveMixedIDSStatus:(id)arg1;
- (id)_initWithDictionaryRepresentation:(id)arg1 items:(id)arg2 participantsHint:(id)arg3 accountHint:(id)arg4;
- (id)_initWithGUID:(id)arg1 account:(id)arg2 style:(unsigned char)arg3 roomName:(id)arg4 displayName:(id)arg5 lastAddressedHandle:(id)arg6 lastAddressedSIMID:(id)arg7 items:(id)arg8 participants:(id)arg9 isFiltered:(long long)arg10 hasHadSuccessfulQuery:(bool)arg11 isRecovered:(bool)arg12 isDeletingIncomingMessages:(bool)arg13;
- (id)_initWithItems:(id)arg1;
- (void)_initialize;
- (void)_insertHistoricalMessages:(id)arg1 queryID:(id)arg2 isRefresh:(bool)arg3 isHistoryQuery:(bool)arg4;
- (void)_insertHistoricalMessages:(id)arg1 queryID:(id)arg2 isRefresh:(bool)arg3 isHistoryQuery:(bool)arg4 isReplacingItems:(bool)arg5 limit:(unsigned long long)arg6 hasMessagesBefore:(bool)arg7 hasMessagesAfter:(bool)arg8;
- (void)_insertHistoricalMessages:(id)arg1 queryID:(id)arg2 isRefresh:(bool)arg3 isHistoryQuery:(bool)arg4 limit:(unsigned long long)arg5;
- (void)_invalidateDowngradeState;
- (bool)_isBlackHoled;
- (bool)_isDuplicate:(id)arg1;
- (bool)_isHybridGroup;
- (bool)_isHybridGroupEligibleByCarrier;
- (bool)_isRCSService;
- (bool)_isReplicatingService;
- (bool)_isSMSSatelliteService;
- (bool)_isSMSService;
- (bool)_isSatelliteServiceActive;
- (bool)_isSendToMakoAllowed;
- (bool)_isiMessageLiteServiceOrInCompatibleMode;
- (bool)_isiMessageService;
- (bool)_itemsAreRelayItemsFromMeWithServiceSwitch:(id)arg1 otherItem:(id)arg2;
- (void)_itemsDidChange:(id)arg1;
- (id)_keyTransparencyVerifier;
- (id)_ktQueue;
- (id)_lastChatItemMatchingCriteria:(id /* block */)arg1;
- (id)_lastFinishedMessageDateForChat:(id)arg1;
- (id)_lastKTVerifierResultForParticipant:(id)arg1;
- (bool)_lastKnownHybridState;
- (void)_markItemAsPlayed:(id)arg1;
- (id)_mergeParticipantIDs;
- (id)_messageToReportJunk;
- (void)_momentShareCacheDidChange:(id)arg1;
- (void)_participant:(id)arg1 statusChanged:(int)arg2;
- (void)_participant:(id)arg1 statusChanged:(int)arg2 postNotification:(bool)arg3;
- (id)_participantListStringForNames:(id)arg1 visibleNameCount:(long long)arg2;
- (void)_participants:(id)arg1 statusChanged:(int)arg2;
- (void)_participants:(id)arg1 statusChanged:(int)arg2 postNotification:(bool)arg3;
- (id)_pendingParticipants;
- (id)_performQueryWithKey:(id)arg1 loadImmediately:(bool)arg2 block:(id /* block */)arg3;
- (id)_performQueryWithKey:(id)arg1 loadImmediately:(bool)arg2 block:(id /* block */)arg3 completion:(id /* block */)arg4;
- (void)_persistSortIDFromReplacedItem:(id)arg1 toItem:(id)arg2;
- (void)_postIMChatItemsDidChangeNotificationWithInserted:(id)arg1 removed:(id)arg2 reload:(id)arg3 regenerate:(id)arg4 oldChatItems:(id)arg5 newChatItems:(id)arg6;
- (void)_postNotification:(id)arg1 userInfo:(id)arg2;
- (id)_previousAccountForService:(id)arg1;
- (id)_privateInitWithAccount:(id)arg1 style:(unsigned char)arg2 roomName:(id)arg3 messages:(id)arg4 participants:(id)arg5 isFiltered:(long long)arg6 hasHadSuccessfulQuery:(bool)arg7 isRecovered:(bool)arg8 isDeletingIncomingMessages:(bool)arg9;
- (bool)_processSupportsHistory;
- (bool)_reachabilityResultHasMixedStatus:(id)arg1;
- (void)_recalculateIsInterworking;
- (bool)_recipientIsPhoneNumber;
- (void)_recomputeOverallChatStatusQuietly:(bool)arg1;
- (void)_refreshServiceForSendingIfNeededWithMessage:(id)arg1;
- (void)_refreshServiceForSendingWithDaemon;
- (void)_refreshServiceForSendingWithLegacyPath;
- (void)_reloadChatItemsForHandleAvailabilityChange;
- (void)_reloadChatItemsForJunkStateChange;
- (void)_reloadChatItemsForKeyTransparencyStatusChange;
- (void)_reloadChatItemsForSatelliteStateChangeIfRequired:(id)arg1;
- (void)_reloadChatItemsForServiceChange;
- (void)_removeItem:(id)arg1;
- (void)_removeItemsForGuids:(id)arg1;
- (id)_renderingDataDictionary;
- (void)_replaceItems:(id)arg1;
- (void)_replaceStaleChatItems;
- (void)_resetForceServerStatusRefresh;
- (bool)_sanityCheckAccounts;
- (void)_sendMessage:(id)arg1 adjustingSender:(bool)arg2 shouldQueue:(bool)arg3;
- (void)_sendMessage:(id)arg1 withAccount:(id)arg2 adjustingSender:(bool)arg3 shouldQueue:(bool)arg4;
- (bool)_serverBagPreventsScrutinyMode;
- (bool)_serviceCapabilityEnabled:(id)arg1;
- (id)_serviceForCapabilityCheck;
- (bool)_serviceSupportsCapability:(id)arg1;
- (void)_setAccount:(id)arg1;
- (void)_setAccount:(id)arg1 locally:(bool)arg2;
- (void)_setAndIncrementDowngradeMarkersForManual:(bool)arg1;
- (void)_setAttachments:(id)arg1;
- (void)_setChatProperties:(id)arg1;
- (void)_setCountOfAttachmentsNotCachedLocally:(id)arg1;
- (void)_setCountOfMessagesMarkedAsSpam:(id)arg1;
- (void)_setDBFailedCount:(unsigned long long)arg1;
- (void)_setDBUnreadCount:(unsigned long long)arg1;
- (void)_setDBUnreadCount:(unsigned long long)arg1 postNotification:(bool)arg2;
- (void)_setDisplayName:(id)arg1;
- (void)_setGUIDs:(id)arg1;
- (void)_setIsDownloadingPendingSatelliteMessages:(bool)arg1 postNotification:(bool)arg2;
- (void)_setIsDownloadingPurgedAssets:(bool)arg1;
- (void)_setJoinState:(long long)arg1;
- (void)_setJoinState:(long long)arg1 quietly:(bool)arg2;
- (void)_setLocalUserIsComposing:(id)arg1 suppliedGUID:(id)arg2;
- (void)_setLocalUserIsComposing:(id)arg1 suppliedGUID:(id)arg2 typingIndicatorData:(id)arg3;
- (void)_setParticipantState:(unsigned long long)arg1 forHandle:(id)arg2 postNotification:(bool)arg3;
- (void)_setParticipantState:(unsigned long long)arg1 forHandles:(id)arg2 postNotification:(bool)arg3;
- (void)_setPendingIncomingSatelliteMessageCount:(unsigned long long)arg1 postNotification:(bool)arg2;
- (void)_setPreviousAccount:(id)arg1 forService:(id)arg2;
- (void)_setRenderingDataDictionary:(id)arg1;
- (void)_setStartSendProgressImmediatelyIfNecessary;
- (void)_setTimerForReadMessageCache;
- (void)_setupObservation;
- (bool)_shouldRegisterChat;
- (bool)_shouldSendCancelTypingIndicator;
- (void)_showErrorMessage:(id)arg1;
- (void)_startTiming:(id)arg1;
- (id)_storedWatermarkMessageID;
- (bool)_supportsAlternativeCommunicationActions;
- (bool)_supportsAttachments;
- (bool)_supportsAudioMessages;
- (bool)_supportsDeleteAndBlockGroup;
- (bool)_supportsDeliveryReceipts;
- (bool)_supportsEditMessage;
- (bool)_supportsExpressiveText;
- (bool)_supportsFaceTime;
- (bool)_supportsFocusMode;
- (bool)_supportsGroupIdentity;
- (bool)_supportsGroupMutability;
- (bool)_supportsInlineAdaptiveImageGlyphs;
- (bool)_supportsInlineReply;
- (bool)_supportsMentions;
- (bool)_supportsMessageEffects;
- (bool)_supportsMultiPart;
- (bool)_supportsNameAndPhoto;
- (bool)_supportsSendLater;
- (bool)_supportsSendMenu;
- (bool)_supportsShareLocation;
- (bool)_supportsSimSwitch;
- (bool)_supportsStickers;
- (bool)_supportsTapbacks;
- (bool)_supportsUndoSend;
- (bool)_suppressesMutationsFromLocalDevice;
- (void)_targetToService:(id)arg1 newComposition:(bool)arg2;
- (bool)_uncachedHybridGroupStatus;
- (bool)_uncachedHybridGroupStatusWithIDSQueryResults:(id)arg1;
- (bool)_uncachedHybridGroupStatusWithReachabilityResult:(id)arg1;
- (long long)_uncachedInterworkingState;
- (void)_updateBizIntentForMessageIfNeeded:(id)arg1;
- (void)_updateChatItemsWithDataDetectorResultsForReason:(id)arg1;
- (void)_updateChatItemsWithReason:(id)arg1 block:(id /* block */)arg2;
- (void)_updateChatItemsWithReason:(id)arg1 block:(id /* block */)arg2 shouldPost:(bool)arg3;
- (void)_updateDisplayName:(id)arg1;
- (void)_updateDisplayName:(id)arg1 sender:(id)arg2;
- (void)_updateDowngradeState:(BOOL)arg1 checkAgainInterval:(double)arg2;
- (void)_updateEngramID:(id)arg1;
- (void)_updateExistingMessageWithSyndicationAction:(id)arg1;
- (void)_updateFileAttachmentGUIDsForMessageIfNeeded:(id)arg1 withPayloadAttachments:(id)arg2;
- (void)_updateHybridGroupStateWithPerParticipantIDSStatus:(id)arg1;
- (void)_updateHybridGroupStateWithReachabilityResult:(id)arg1;
- (bool)_updateJoinStateWithMessageIfNeeded:(id)arg1;
- (void)_updateLastAddressedHandleID:(id)arg1;
- (void)_updateLastAddressedSIMID:(id)arg1;
- (bool)_updateLastKnownHybridState:(bool)arg1;
- (void)_updateLocaleForMessageIfNeeded:(id)arg1;
- (void)_updateLocationShareItemsForSender:(id)arg1;
- (void)_updateMessageItemStewieIfNeeded:(id)arg1;
- (void)_updateMessageItemTimeIfNeeded:(id)arg1;
- (void)_updatePayloadForMessageIfNeeded:(id)arg1;
- (void)_updateRepliesIfNecessaryWithItem:(id)arg1;
- (void)_updateRepliesIfNecessaryWithRemovedItems:(id)arg1 threadIdentifiersOfRemovedParts:(id)arg2;
- (void)_updateScheduledMessageTimeOffsetIfNeeded:(id)arg1;
- (void)_updateSenderForMessageIfNeeded:(id)arg1 adjustingSender:(bool)arg2;
- (void)_updateSenderForMessageIfNeeded:(id)arg1 adjustingSender:(bool)arg2 withAccount:(id)arg3;
- (void)_updateTypingGUIDForMessageIfNeeded:(id)arg1;
- (void)_updateWalletBreadcrumbingAssociationForMessageIfNeeded:(id)arg1;
- (void)_validateChatRegistrationWithRegistry;
- (void)acceptInvitation;
- (id)account;
- (bool)accountMatchesLastFinishedMessageItem;
- (id)activeParticipantsForTUConversation;
- (void)addHandlesToGroupFaceTimeChatIfRegistered:(id)arg1;
- (void)addPendingParticipants:(id)arg1;
- (id)allChatProperties;
- (id)allMessagesToReportAsSpam;
- (bool)allParticipantsAreContacts;
- (bool)allParticipantsBlocked;
- (id)allPropertiesOfParticipant:(id)arg1;
- (bool)allRecipientsFollowingLocation;
- (bool)allRecipientsSharingLocation;
- (id)allSiblingFMFHandles;
- (id)allSiblingFindMyHandles;
- (bool)allowedByScreenTime;
- (bool)allowedToShowConversation;
- (bool)allowedToShowConversationSync;
- (id)alternativeSpeakableMatches;
- (id)associatedBusinessID;
- (id)attachments;
- (bool)authorizationToSendCurrentLocationMessageDenied;
- (bool)authorizationToSendCurrentLocationMessageDetermined;
- (bool)authorizedToSendCurrentLocationMessage;
- (long long)autoDonationBehavior;
- (void)autoInviteToViewAvailabilityIfNeeded;
- (void)autoInviteToViewOffGridModeIfNeeded;
- (void)autoReportSpam;
- (id)availabilityStatusPublishedDate;
- (void)beginHoldingChatItemsUpdatesForReason:(id)arg1;
- (void)beginListeningToAttributionChanges;
- (id)beginObservingHandleStatuses;
- (void)beginShowingEditHistoryForChatItemGUID:(id)arg1;
- (id)bizIntent;
- (id)brand;
- (id)businessHandle;
- (id)cachedBusinessName;
- (id)cachedEUHandle;
- (long long)cachedShouldShowReportSpam;
- (long long)cachedShouldShowSpam;
- (id)cachedStewieSharingChat;
- (id)callDurationStringForTuCall;
- (bool)canAddParticipant:(id)arg1;
- (bool)canAddParticipants:(id)arg1;
- (bool)canHaveMultipleParticipants;
- (bool)canLeaveChat;
- (bool)canRemoveParticipants:(id)arg1;
- (bool)canSend;
- (bool)canSendCurrentLocationMessage;
- (bool)canSendInlineReply;
- (bool)canSendMessage:(id)arg1;
- (bool)canSendTransfer:(id)arg1;
- (void)canShareFocusStatusWithCompletion:(id /* block */)arg1;
- (void)cancelMessage:(id)arg1;
- (void)cancelScheduledMessageItem:(id)arg1 atPartIndex:(long long)arg2 shouldRetractSubject:(bool)arg3;
- (void)cancelScheduledMessageItem:(id)arg1 cancelType:(unsigned long long)arg2;
- (void)cancelScheduledMessageWithGUID:(id)arg1 destinations:(id)arg2 cancelType:(unsigned long long)arg3;
- (unsigned long long)capabilities;
- (id)chatIdentifier;
- (id)chatItemRules;
- (id)chatItemUpdaterLogHandle;
- (id)chatItems;
- (id)chatItemsForItems:(id)arg1;
- (id)chatItemsUpdater;
- (id)chatProperties;
- (long long)chatPropertyValueFor:(long long)arg1;
- (id)chatRegistry;
- (id)chatScrutinyController;
- (unsigned char)chatStyle;
- (id)chatSummary;
- (id)chatSummaryMessageGUID;
- (void)cleanupChatItems;
- (void)clear;
- (void)clearSMSCategory;
- (void)clearScrutinyMode;
- (void)closeSession;
- (long long)compareChatByDate:(id)arg1;
- (long long)compareChatByLastFinishedMessageDate:(id)arg1;
- (void)consumeSummaryIfNeeded;
- (id)contacts;
- (bool)containsActiveBIASession;
- (bool)containsMessageFromContactOrMe;
- (void*)contextInfo;
- (id)conversation;
- (id)conversationContext;
- (unsigned long long)conversationKTUIStatus;
- (id)conversationWithUUID:(id)arg1;
- (id)countOfAttachmentsNotCachedLocally;
- (id)countOfMessagesMarkedAsSpam;
- (void)createIMChatItemForTransientAttachmentWithAssetUUID:(id)arg1 parentChatItemGUID:(id)arg2;
- (id)currentLocationGUID;
- (id)currentTUCall;
- (id)currentUnreadHistoryQuery;
- (id)daemonController;
- (unsigned long long)dbFailedCount;
- (unsigned long long)dbUnreadCount;
- (void)dealloc;
- (void)declineInvitation;
- (bool)deleteAllHistory;
- (void)deleteChatItems:(id)arg1;
- (void)deleteChatItems:(id)arg1 fromChatItems:(id)arg2;
- (void)deleteChatItemsWithTransferGUIDs:(id)arg1 fromMessageItem:(id)arg2;
- (void)deleteExtensionPayloadData;
- (void)deleteIMMessageItems:(id)arg1;
- (void)deleteTransfers:(id)arg1;
- (id)description;
- (id)deviceIndependentID;
- (bool)didSendAFinishedMessage;
- (void)didUnregisterFromRegistry:(id)arg1;
- (void)dismissInlineReplies;
- (id)displayName;
- (id)displayNameWithDescriptor:(struct IMChatDisplayNameDescriptor { bool x1; bool x2; bool x3; long long x4; })arg1;
- (id)displayNameWithRawAddress:(bool)arg1 isSpamFilteringEnabled:(bool)arg2;
- (void)downgradeMessage:(id)arg1 manualDowngrade:(bool)arg2;
- (void)downgradeMessage:(id)arg1 manualDowngrade:(bool)arg2 downgradeChat:(bool)arg3;
- (BOOL)downgradeState;
- (id)downgradeStateForDebugMenu;
- (id)downgradeStateUpdater;
- (void)downloadPurgedAttachments;
- (id)earliestCachedMessageDate;
- (id)earliestRecoverableMessageDeletionDate;
- (void)editMessageItem:(id)arg1 atPartIndex:(long long)arg2 withNewPartText:(id)arg3 backwardCompatabilityText:(id)arg4;
- (void)editScheduledMessageItem:(id)arg1 atPartIndex:(long long)arg2 withNewPartText:(id)arg3;
- (void)editScheduledMessageItem:(id)arg1 scheduleType:(unsigned long long)arg2 deliveryTime:(id)arg3;
- (void)editScheduledMessageItems:(id)arg1 scheduleType:(unsigned long long)arg2 deliveryTime:(id)arg3;
- (id)emergencyUserHandle;
- (id)emergencyUserInfo;
- (void)endAllHoldsOnChatItemsUpdatesForReason:(id)arg1;
- (void)endHoldingChatItemsUpdatesForAllReasons;
- (void)endHoldingChatItemsUpdatesForReason:(id)arg1;
- (void)endListeningToAttributionChanges;
- (void)endShowingEditHistoryForAllChatItems;
- (void)endShowingEditHistoryForChatItemGUID:(id)arg1;
- (id)engramID;
- (void)fetchIncomingPendingMessagesOverSatellite;
- (void)fetchIsCurrentlyDownloadingPurgedAttachments:(id /* block */)arg1;
- (void)fetchKTStatus;
- (void)fetchMessageHistoryForDateInterval:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchMessagesBeforeAndAfterGUID:(id)arg1 numberOfMessagesToLoadBeforeGUID:(unsigned long long)arg2 numberOfMessagesToLoadAfterGUID:(unsigned long long)arg3 threadIdentifier:(id)arg4 completion:(id /* block */)arg5;
- (void)fetchMessagesUpToGUID:(id)arg1 limit:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)fetchMessagesUpToLimit:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)fetchOldestMessageDateWithCompletion:(id /* block */)arg1;
- (long long)filterCategory;
- (long long)filterSubCategory;
- (id)findMyHandles;
- (id)firstMessage;
- (id)firstUnreadMessageItem;
- (id)fmfHandles;
- (void)forceCancelTypingIndicator;
- (bool)forceMMS;
- (id)frequentReplies;
- (unsigned long long)getKTDisplayStatusAndRelatedPeerHandles:(id*)arg1;
- (id)getParticipantsWithKTUIStatus:(unsigned long long)arg1;
- (id)groupChatIdentifierUppercase;
- (id)groupID;
- (id)guid;
- (bool)hasBeenConfigured;
- (bool)hasCancellableScheduledMessage;
- (bool)hasCommSafetySensitiveMessage;
- (bool)hasCommSafetySensitiveMessageFromSomeoneElse;
- (bool)hasEarlierMessagesToLoad;
- (bool)hasHadSuccessfulQuery;
- (bool)hasKnownParticipants;
- (bool)hasKnownParticipantsCache;
- (long long)hasKnownParticipantsCacheStatus;
- (bool)hasLeftGroup;
- (bool)hasMessageFromMe;
- (bool)hasMessageFromService:(id)arg1;
- (bool)hasMessageWithServiceCapability:(id)arg1;
- (bool)hasMoreMessagesToLoad;
- (bool)hasMoreRecentMessagesToLoad;
- (bool)hasQueriedForSiblingChats;
- (bool)hasRecipientsFollowingLocation;
- (bool)hasRecipientsSharingLocation;
- (bool)hasRefreshedServiceForSending;
- (bool)hasSentMessageToBusiness;
- (bool)hasSiblingRecipientsSharingLocation;
- (bool)hasStoredMessageWithGUID:(id)arg1;
- (bool)hasSurfRequest;
- (bool)hasSurfRequestForPaymentType:(unsigned long long)arg1;
- (bool)hasSurfRequestNotFromMe:(id)arg1;
- (bool)hasUnhandledInvitation;
- (bool)hasVerifiedBusiness;
- (id)hashOfParticipantIDs;
- (long long)hybridGroupState;
- (id)identifier;
- (id)identityHash;
- (bool)ignoreDowngradeStatusUpdates;
- (void)ignoreKTFailure;
- (id)init;
- (void)initiateTUConversationWithScreenShareType:(unsigned long long)arg1;
- (void)initiateTUConversationWithVideoEnabled:(bool)arg1;
- (void)initiateTUDialRequestWithVideoEnabled:(bool)arg1;
- (id)inlineReplyController;
- (id)internalGUIDsForDebugMenu;
- (id)interworkingService;
- (long long)interworkingState;
- (void)invalidateHasKnownParticipantsCache;
- (void)invalidateSpamIndicatorCachedValues;
- (void)invalidateSpamIndicatorCachedValuesIfNeeded;
- (id)invitationForPendingParticipants;
- (void)inviteParticipants:(id)arg1 reason:(id)arg2;
- (bool)isAppleChat;
- (bool)isAutoDonatingMessages;
- (bool)isBusinessChat;
- (bool)isCategorized;
- (bool)isChatBot;
- (bool)isCommSafetySensitiveMessageRecent;
- (bool)isCurrentlyDownloadingPurgedAssets;
- (bool)isCurrentlyDownloadingPurgedAttachments;
- (bool)isDeletingIncomingMessages;
- (bool)isDowngraded;
- (bool)isDownloadingPendingSatelliteMessages;
- (bool)isEmergencyChat;
- (long long)isFiltered;
- (bool)isFirstMessageInvitation;
- (bool)isGroupChat;
- (bool)isHoldingChatItemsUpdatesForReason:(id)arg1;
- (bool)isInScrutinyMode;
- (bool)isInterworking;
- (void)isInvitedToViewMyFocusStatusWithCompletion:(id /* block */)arg1;
- (bool)isLastIncomingFinishedMessageNotiMessage;
- (bool)isLastMessageTypingIndicator;
- (bool)isMakoChat;
- (bool)isMapKitBusinessChat;
- (bool)isMessagesAuthorizedToAccessFocusStatus;
- (bool)isMuted;
- (bool)isOscarChat;
- (bool)isPinned;
- (bool)isRCS;
- (bool)isReadOnly;
- (bool)isRecipientAbleToDowngradeToSMS;
- (bool)isRecovered;
- (bool)isReplyEnabled;
- (bool)isSMS;
- (bool)isSatelliteMessagingCompatible;
- (bool)isShowingEditHistoryForAnyChatItem;
- (bool)isShowingEditHistoryForChatItemGUID:(id)arg1;
- (bool)isStewieChat;
- (bool)isStewieEmergencyChat;
- (bool)isStewieRoadsideChat;
- (bool)isStewieSharingChat;
- (bool)isSubscriptionSwitchParticipantAddTypeFound;
- (bool)isUnregistered;
- (bool)isUpdatingChatItems;
- (void)join;
- (void)joinExistingConversation:(id)arg1;
- (void)joinExistingTUConversation;
- (void)joinExistingTUConversationWithUUID:(id)arg1;
- (long long)joinState;
- (unsigned long long)keyTransparencyStatusForAffectedHandles:(id*)arg1;
- (unsigned long long)ktStatus;
- (id)lastAddressedHandleID;
- (id)lastAddressedSIMID;
- (id)lastCompletedServiceReachabilityRequestStartTime;
- (id)lastDeletableChatItem;
- (id)lastFinishedMessage;
- (id)lastFinishedMessageDate;
- (long long)lastFinishedMessageID;
- (id)lastFinishedMessageItem;
- (id)lastIncomingFinishedMessage;
- (id)lastIncomingFinishedMessageWithTextContent;
- (id)lastIncomingMessage;
- (id)lastIncomingReplyableChatItem;
- (id)lastIncomingReplyableMessage;
- (unsigned long long)lastKTStatus;
- (id)lastMessage;
- (bool)lastMessageExists;
- (long long)lastMessageTimeStampOnLoad;
- (id)lastPendingSatelliteSendMessage;
- (id)lastRelatedIncomingFinishedMessageTextContentWithLimit:(long long)arg1;
- (id)lastSatelliteFetchDate;
- (id)lastScheduledMessageCreatedDate;
- (id)lastSeenMessageGuid;
- (id)lastSentMessage;
- (id)lastSentMessageDate;
- (id)lastTUConversationCreatedDate;
- (id)lastTapbackableChatItemNotFromMe;
- (id)lastTranslatableMessageGUIDWithLanguageCode:(id)arg1;
- (id)lastUndeliveredMessageGUIDForForcedQuery;
- (bool)lastUsedSatelliteStatus;
- (bool)lastUsedShowTextEmergencyServicesStatus;
- (bool)lastUsedShowTextRoadsideProviderStatus;
- (id)latestRecoverableMessageDeletionDate;
- (double)latestTypingIndicatorTimeInterval;
- (void)leave;
- (void)leaveConversation;
- (void)leaveCurrentTUCall;
- (void)loadAttachments:(id /* block */)arg1;
- (id)loadFrequentRepliesLimit:(unsigned long long)arg1 loadImmediately:(bool)arg2;
- (void)loadInlineRepliesForThreadIdentifier:(id)arg1 threadOriginator:(id)arg2 messageGuid:(id)arg3;
- (id)loadMessagesBeforeAndAfterGUID:(id)arg1 numberOfMessagesToLoadBeforeGUID:(unsigned long long)arg2 numberOfMessagesToLoadAfterGUID:(unsigned long long)arg3 loadImmediately:(bool)arg4 threadIdentifier:(id)arg5;
- (id)loadMessagesBeforeDate:(id)arg1 limit:(unsigned long long)arg2;
- (id)loadMessagesBeforeDate:(id)arg1 limit:(unsigned long long)arg2 loadImmediately:(bool)arg3;
- (id)loadMessagesUpToGUID:(id)arg1 date:(id)arg2 limit:(unsigned long long)arg3 loadImmediately:(bool)arg4;
- (id)loadMessagesUpToGUID:(id)arg1 limit:(unsigned long long)arg2;
- (void)loadParticipantContactsIfNecessary;
- (id)loadUnreadMessagesWithLimit:(unsigned long long)arg1 fallbackToMessagesUpToGUID:(id)arg2;
- (id)loadUnreadMessagesWithLimit:(unsigned long long)arg1 fallbackToMessagesUpToGUID:(id)arg2 loadImmediately:(bool)arg3;
- (id)localTypingMessageGUID;
- (id)localUserIsComposing;
- (bool)localUserIsRecording;
- (bool)localUserIsTyping;
- (id)localizedUnreadShortcutTitle;
- (bool)mapsToTUConversation:(id)arg1;
- (void)markAllLocationShareItemsAsUnactionable;
- (void)markAllMessagesAsRead;
- (void)markAsAutoSpamReported;
- (void)markAsHasBeenBlockContact;
- (unsigned long long)markAsSpam:(unsigned long long)arg1;
- (unsigned long long)markAsSpam:(unsigned long long)arg1 isJunkReportedToCarrier:(bool)arg2;
- (void)markBusinessChatAsSpam:(unsigned long long)arg1;
- (void)markChatItemAsNotifyRecipient:(id)arg1;
- (void)markChatItemAsPlayed:(id)arg1;
- (void)markChatItemAsPlayedExpressiveSend:(id)arg1;
- (void)markChatItemAsSaved:(id)arg1;
- (void)markKTFailureSeen;
- (void)markLastMessageAsUnread;
- (void)markMessageAsRead:(id)arg1;
- (void)markMessagesAsRead:(id)arg1;
- (void)markRepliedForMessageGUID:(id)arg1;
- (id)mergedPinningIdentifiers;
- (unsigned long long)messageCount;
- (unsigned long long)messageFailureCount;
- (id)messageForGUID:(id)arg1;
- (id)messageGuidsForMyUnreadMentions;
- (id)messageItemForGUID:(id)arg1;
- (id)messagesForScheduledMessageSectionWithTranscriptItem:(id)arg1;
- (id)messagesPendingJoin;
- (id)messagesToReportAsSpamFromChatItems:(id)arg1;
- (id)momentShareCache;
- (id)momentSharePresentationCache;
- (void)momentSharePresentationCacheDidChange:(id)arg1;
- (id)muteUntilDate;
- (unsigned long long)numberOfMessagesToKeepLoaded;
- (long long)numberOfTimesRespondedToThread;
- (id)orderingTools;
- (id)originalGroupID;
- (unsigned long long)overallChatStatus;
- (id)participantDNDContactHandles;
- (id)participantHandleIDs;
- (id)participantProperties;
- (id)participantStates;
- (id)participants;
- (id)participantsWithState:(unsigned long long)arg1;
- (unsigned long long)paymentTypeForMessage:(id)arg1;
- (unsigned long long)pendingIncomingSatelliteMessageCount;
- (id)persistentID;
- (id)persistentMenu;
- (id)personCentricID;
- (void)photoLibraryPersistedSyndicatedAssetSetDidChange;
- (id)pinningIdentifier;
- (bool)prefersTextResponseToIncomingAudioMessages;
- (id)pronunciationHint;
- (id)proofreadingInfo;
- (void)reasonTrackingUpdater:(id)arg1 didBeginHoldingUpdatesWithInitialReason:(id)arg2;
- (void)reasonTrackingUpdater:(id)arg1 didEndHoldingUpdatesWithFinalReason:(id)arg2;
- (void)reasonTrackingUpdater:(id)arg1 needsUpdateForReasons:(id)arg2 followingHoldForReason:(id)arg3;
- (bool)receivedResponseForChat;
- (id)recentIncomingMessagesWithTextContentForReplySuggestions;
- (id)recentOugoingMessagesWithTextContentForReplySuggestions;
- (id)recipient;
- (void)recoverFromJunk;
- (unsigned long long)recoverableMessagesCount;
- (void)refreshServiceForSending;
- (void)reloadChatItemsForSuggestedRepliesChange;
- (id)remoteMembersForTUConversation;
- (void)remove;
- (void)removeMentionMessageGUID:(id)arg1;
- (void)removeParticipants:(id)arg1 reason:(id)arg2;
- (void)replaceItemWhenReplied:(id)arg1;
- (bool)repliedToChat;
- (id)replySuggestions;
- (id)replySuggestions;
- (void)reportJunkToCarrier;
- (void)reportLazuliSpam:(unsigned long long)arg1 isBot:(bool)arg2;
- (void)repositionSticker:(id)arg1 associatedChatItem:(id)arg2;
- (void)resendEditedMessageItem:(id)arg1 forPartIndex:(long long)arg2 withBackwardCompatabilityText:(id)arg3;
- (void)resendGroupPhoto;
- (void)resortMessages;
- (void)retractMessagePart:(id)arg1;
- (void)retractScheduledMessagePartIndexes:(id)arg1 fromChatItem:(id)arg2;
- (void)retryGroupPhotoUploadIfNecessary;
- (id)roomName;
- (id)roomNameWithoutSuffix;
- (void)saveWatermark;
- (unsigned long long)scrutinyModeAttemptCount;
- (void)sendAutoDonationUpdate:(bool)arg1;
- (void)sendCurrentLocationMessage;
- (void)sendGroupPhotoUpdate:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)sendMessage:(id)arg1 onAccount:(id)arg2;
- (void)sendMessage:(id)arg1 onService:(id)arg2;
- (void)sendPendingSatelliteMessages;
- (id)sendProgress;
- (void)sendProgress:(id)arg1 progressDidChange:(float)arg2 sendingMessages:(id)arg3 sendCount:(unsigned long long)arg4 totalCount:(unsigned long long)arg5 finished:(bool)arg6;
- (id)sendProgressDelegate;
- (void)sendSyndicationAction:(unsigned char)arg1 forMessagePartGUID:(id)arg2 syndicatedMessagePartRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (void)sendUpdatedCollaborationMetadata:(id)arg1 forMessageGUID:(id)arg2;
- (bool)serviceSwitchRequested;
- (void)setAllowedByScreenTime:(bool)arg1;
- (void)setAttachments:(id)arg1;
- (void)setAutoDonationBehavior:(long long)arg1;
- (void)setBizIntent:(id)arg1;
- (void)setCachedEUHandle:(id)arg1;
- (void)setCachedShouldShowReportSpam:(long long)arg1;
- (void)setCachedShouldShowSpam:(long long)arg1;
- (void)setCachedStewieSharingChat:(id)arg1;
- (void)setChatItemRules:(id)arg1;
- (void)setChatItemsUpdater:(id)arg1;
- (void)setChatProperties:(id)arg1;
- (void)setContextInfo:(void*)arg1;
- (void)setCountOfAttachmentsNotCachedLocally:(id)arg1;
- (void)setCountOfMessagesMarkedAsSpam:(id)arg1;
- (void)setCurrentLocationGUID:(id)arg1;
- (void)setCurrentUnreadHistoryQuery:(id)arg1;
- (void)setDbFailedCount:(unsigned long long)arg1;
- (void)setDbUnreadCount:(unsigned long long)arg1;
- (void)setDeletingIncomingMessages:(bool)arg1;
- (void)setDidSendAFinishedMessage:(bool)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setDowngradeState:(BOOL)arg1;
- (void)setDowngradeStateUpdater:(id)arg1;
- (void)setEarliestCachedMessageDate:(id)arg1;
- (void)setEarliestRecoverableMessageDeletionDate:(id)arg1;
- (void)setForceMMS:(bool)arg1;
- (void)setFrequentReplies:(id)arg1;
- (void)setGroupChatIdentifierUppercase:(id)arg1;
- (void)setGroupID:(id)arg1;
- (void)setHasBeenConfigured:(bool)arg1;
- (void)setHasCancellableScheduledMessage:(bool)arg1;
- (void)setHasEarlierMessagesToLoad:(bool)arg1;
- (void)setHasHadSuccessfulQuery:(bool)arg1;
- (void)setHasKnownParticipantsCache:(bool)arg1;
- (void)setHasKnownParticipantsCacheStatus:(long long)arg1;
- (void)setHasMoreRecentMessagesToLoad:(bool)arg1;
- (void)setHasQueriedForSiblingChats:(bool)arg1;
- (void)setHasRefreshedServiceForSending:(bool)arg1;
- (void)setHasSurfRequest:(bool)arg1;
- (void)setHybridGroupState:(long long)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIgnoreDowngradeStatusUpdates:(bool)arg1;
- (void)setInterworkingService:(id)arg1;
- (void)setInterworkingState:(long long)arg1;
- (void)setInvitationForPendingParticipants:(id)arg1;
- (void)setIsCurrentlyDownloadingPurgedAssets:(bool)arg1;
- (void)setIsFiltered:(long long)arg1;
- (void)setIsFirstMessageInvitation:(bool)arg1;
- (void)setIsSubscriptionSwitchParticipantAddTypeFound:(bool)arg1;
- (void)setIsUpdatingChatItems:(bool)arg1;
- (void)setKeyTransparencyURIToUUIDMapping:(id)arg1;
- (void)setLastAddressedHandleID:(id)arg1;
- (void)setLastAddressedSIMID:(id)arg1;
- (void)setLastCompletedServiceReachabilityRequestStartTime:(id)arg1;
- (void)setLastKTStatus:(unsigned long long)arg1;
- (void)setLastMessageTimeStampOnLoad:(long long)arg1;
- (void)setLastSatelliteFetchDate:(id)arg1;
- (void)setLastScheduledMessageCreatedDate:(id)arg1;
- (void)setLastTUConversationCreatedDate:(id)arg1;
- (void)setLastUndeliveredMessageGUIDForForcedQuery:(id)arg1;
- (void)setLastUsedSatelliteStatus:(bool)arg1;
- (void)setLastUsedShowTextEmergencyServicesStatus:(bool)arg1;
- (void)setLastUsedShowTextRoadsideProviderStatus:(bool)arg1;
- (void)setLatestRecoverableMessageDeletionDate:(id)arg1;
- (void)setLatestTypingIndicatorTimeInterval:(double)arg1;
- (void)setLocalUserIsComposing:(id)arg1;
- (void)setLocalUserIsComposing:(id)arg1 typingIndicatorData:(id)arg2;
- (void)setLocalUserIsRecording:(bool)arg1;
- (void)setLocalUserIsTyping:(bool)arg1;
- (void)setMergedPinningIdentifiers:(id)arg1;
- (void)setMessagesPendingJoin:(id)arg1;
- (void)setMuteUntilDate:(id)arg1;
- (void)setNumberOfMessagesToKeepLoaded:(unsigned long long)arg1;
- (void)setOrderingTools:(id)arg1;
- (void)setOriginalGroupID:(id)arg1;
- (void)setOscarChat:(bool)arg1;
- (void)setParticipantProperties:(id)arg1;
- (void)setParticipantStates:(id)arg1;
- (void)setParticipants:(id)arg1;
- (void)setPendingIncomingSatelliteMessageCount:(unsigned long long)arg1;
- (void)setPersonCentricID:(id)arg1;
- (void)setPrefersTextResponseToIncomingAudioMessages:(bool)arg1;
- (void)setProofreadingInfo:(id)arg1;
- (void)setRecipient:(id)arg1;
- (void)setRecipient:(id)arg1 locally:(bool)arg2;
- (void)setRecoverableMessagesCount:(unsigned long long)arg1;
- (void)setRecovered:(bool)arg1;
- (void)setReplySuggestions:(id)arg1;
- (void)setRoomName:(id)arg1;
- (void)setRoomNameWithoutSuffix:(id)arg1;
- (void)setSelectedIndexOnCarouselChatItem:(id)arg1 selectedIndex:(long long)arg2;
- (void)setSendProgress:(id)arg1;
- (void)setSendProgressDelegate:(id)arg1;
- (void)setServiceSwitchRequested:(bool)arg1;
- (void)setShouldShowAudioButtonInEntryView:(bool)arg1;
- (void)setShowingEditHistoryForChatItemGUIDs:(id)arg1;
- (void)setSmsCategory:(long long)arg1;
- (void)setSubscriptionSwitchParticipantAddChatItem:(id)arg1;
- (void)setSuggestedRepliesData:(id)arg1;
- (void)setTimingCollection:(id)arg1;
- (void)setTotalSatelliteMessageCount:(unsigned long long)arg1;
- (void)setTypingGUID:(id)arg1;
- (void)setUnreadRecoverableMessagesCount:(unsigned long long)arg1;
- (void)setUnregistered:(bool)arg1;
- (void)setValue:(id)arg1 forChatProperty:(id)arg2;
- (void)setValue:(id)arg1 forProperty:(id)arg2 ofParticipant:(id)arg3;
- (void)setWasDetectedAsSMSSpamCacheStatus:(long long)arg1;
- (void)setWasInvitationHandled:(bool)arg1;
- (void)shareLocationWithDuration:(long long)arg1;
- (bool)shouldBeAllowListed;
- (bool)shouldDisplayOffGridModeStatus;
- (bool)shouldDisplayUnavailabilityIndicator;
- (bool)shouldForceServerStatusRefresh;
- (bool)shouldForceToSMS;
- (bool)shouldIgnoreiMessageSiblingGroupIdentityUpdates;
- (bool)shouldShowAudioButtonInEntryView;
- (bool)shouldShowAutoDonationAction;
- (id)showingEditHistoryForChatItemGUIDs;
- (long long)smsCategory;
- (id)spokenPhrase;
- (void)startTrackingParticipantLocations;
- (id)stateDictionaryForDiagnosticsRequest;
- (unsigned long long)stateForParticipant:(id)arg1;
- (id)stewieSharingSuggestedName;
- (void)stickerRepositionedForAssociatedChatItem:(id)arg1;
- (void)stopSharingLocation;
- (void)stopTrackingParticipantLocations;
- (void)stopTranscriptSharingWithChat;
- (id)subscriptionSwitchParticipantAddChatItem;
- (id)suggestedRepliesData;
- (bool)supportsCapabilities:(unsigned long long)arg1;
- (bool)supportsFilteringExtensions;
- (bool)supportsSendingReadReceipts;
- (bool)supportsSendingTypingIndicators;
- (id)testChatItems;
- (id)timingCollection;
- (unsigned long long)totalSatelliteMessageCount;
- (long long)transcriptSharingState;
- (id)typingGUID;
- (unsigned long long)unreadMessageCount;
- (unsigned long long)unreadRecoverableMessagesCount;
- (void)updateAssociatedBusinessID:(id)arg1;
- (void)updateChatItemsSynchronouslyIfAsyncUpdateIsPending;
- (void)updateCommSafety:(long long)arg1 forChatItem:(id)arg2;
- (void)updateCommSafety:(long long)arg1 forChatItems:(id)arg2;
- (void)updateCommSafety:(long long)arg1 forChatItems:(id)arg2 parentChatItem:(id)arg3;
- (void)updateIsBlackholed:(bool)arg1;
- (void)updateIsEmergencyChat:(bool)arg1;
- (void)updateIsFiltered:(long long)arg1;
- (void)updateLastMessageGUID:(id)arg1 forLanguageCode:(id)arg2;
- (void)updateLineSwitchedTo:(id)arg1;
- (void)updateMessage:(id)arg1 withIndexesOfDeletedItems:(id)arg2 withIndexToRangeMapOfDeletedItems:(id)arg3 deleteDate:(id)arg4;
- (void)updateReplySuggestions;
- (void)updateSMSCategory:(long long)arg1 subCategory:(long long)arg2;
- (void)updateShouldForceToSMS:(bool)arg1;
- (void)updateTranscriptSharingState:(long long)arg1;
- (void)updateWatermarks;
- (void)userToggledReadReceiptSwitch:(bool)arg1;
- (id)valueForChatProperty:(id)arg1;
- (id)valueForProperty:(id)arg1 ofParticipant:(id)arg2;
- (void)verifyFiltering;
- (id)vocabularyIdentifier;
- (bool)wantsSenderBlackholeWarning;
- (bool)wasDetectedAsSMSSpam;
- (long long)wasDetectedAsSMSSpamCacheStatus;
- (bool)wasInvitationHandled;
- (id)watermarkDate;
- (void)watermarkInForScrutinyMode;
- (long long)watermarkMessageID;
- (void)watermarkOutForScrutinyMode;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

+ (unsigned char)associatedMessageContentTypeFromCKMediaType:(int)arg1;
+ (id)configureMessageSummaryInfoForChatItem:(id)arg1;
+ (id)waterMarkMessageIDCache;
+ (id)waterMarkTimeCache;

- (void)__ck_saveWatermark;
- (bool)__ck_sendReadReceipts;
- (void)__ck_setSendReadReceipts:(bool)arg1;
- (void)__ck_updateWatermarkToMessageID:(long long)arg1 date:(id)arg2;
- (id)__ck_watermarkDate;
- (long long)__ck_watermarkMessageID;
- (id)_relevantLanguageIdentifierForLocalization;
- (void)beginHoldingUpdatesForStickerMoveAnimation;
- (void)endAllHoldsOnChatItemsUpdatesForStickerMoveAnimation;
- (void)sendMessageAcknowledgment:(long long)arg1 forChatItem:(id)arg2;
- (void)sendMessageAcknowledgment:(long long)arg1 forChatItem:(id)arg2 languageIdentifier:(id)arg3;
- (void)sendMessageAcknowledgment:(long long)arg1 forChatItem:(id)arg2 withGuid:(id)arg3;
- (void)sendTapback:(id)arg1 forChatItem:(id)arg2;
- (void)sendTapback:(id)arg1 forChatItem:(id)arg2 languageIdentifier:(id)arg3;

// Image: /System/Library/PrivateFrameworks/IMAssistantCore.framework/IMAssistantCore

- (bool)isMemberOfChat;

@end
