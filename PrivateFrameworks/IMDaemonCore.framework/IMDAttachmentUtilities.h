/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore
 */

@interface IMDAttachmentUtilities : NSObject

+ (bool)_doesWRMRecommendDisablingLQM;
+ (id)_fetchSizeLimitsForTransfer:(id)arg1 mode:(unsigned long long)arg2;
+ (void)_fetchStandardSizeLimit:(unsigned long long*)arg1 highQualitySizeLimit:(unsigned long long*)arg2 forTransfer:(id)arg3;
+ (void)_fileTransferSizeForAAVideoFromServerBag:(unsigned long long*)arg1 smallSize:(unsigned long long*)arg2 serverBag:(id)arg3;
+ (void)_fileTransferSizeForAuxVideoFromServerBag:(unsigned long long*)arg1 smallSize:(unsigned long long*)arg2 serverBag:(id)arg3;
+ (unsigned long long)_fileTransferSizeForSpatialImageFromServerBag:(id)arg1;
+ (unsigned long long)_maxAllowedSpatialImageSize;
+ (unsigned long long)_maxAllowedStereoVideoSize;
+ (unsigned long long)_minSizeForLargeAuxVideo;
+ (unsigned long long)_smallerImageFileSize;
+ (bool)commonCapabilitiesSupportHighQualityPhotos:(id)arg1;
+ (bool)didLQMSettingChanged;
+ (id)fetchSizeLimitsForTransfer:(id)arg1;
+ (id)fetchSizeLimitsForTransfer:(id)arg1 mode:(unsigned long long)arg2;
+ (unsigned long long)freeSpaceInHomeDirectory;
+ (bool)isPreviewAttachmentSizeEnabled;
+ (long long)largeFileSizeFor:(id)arg1 allowedLargerRepresentation:(bool*)arg2;
+ (unsigned long long)maxTransferAudioFileSizeForWifi:(unsigned long long*)arg1 cell:(unsigned long long*)arg2;
+ (void)maxTransferFileSizeForWifi:(unsigned long long*)arg1 cell:(unsigned long long*)arg2;
+ (unsigned long long)maxTransferVideoFileSizeForWifi:(unsigned long long*)arg1 cell:(unsigned long long*)arg2;
+ (id)messageAttachmentSendableUTIs;
+ (id)messageAttachmentSendableUTIsForResourcePath:(id)arg1;
+ (unsigned long long)minimumFreeSpace;
+ (unsigned long long)mmcsTargetReportSizeForHighQualityPhotoSize:(unsigned long long)arg1 commonCapabilities:(id)arg2;
+ (unsigned long long)modernHighQualityPhotoSizeLimit;
+ (bool)shouldAllowBackwardsCompatibilitySizeOverride;
+ (bool)shouldAllowHighQualityPhotoUploadForNetworkConditions;
+ (bool)shouldEnablePreviewTranscodingQualityForTransfer:(id)arg1 isSending:(bool)arg2;
+ (bool)shouldSendLowResolutionOnly;
+ (unsigned long long)tinyImageQualitySizeLimit;
+ (bool)updateAndReturnLQMStateAfterPreviewAttachmentSizeEnabled;

@end
