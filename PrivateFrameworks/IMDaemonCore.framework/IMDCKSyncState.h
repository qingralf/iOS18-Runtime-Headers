/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore
 */

@interface IMDCKSyncState : NSObject <IMKeyValueCollectionDelegate, SyncStateManaging> {
    <IMDCKSyncStateDelegate> * _delegate;
    IMKeyValueCollection * _storage;
    NSDictionary * _syncStatistics;
}

@property (nonatomic) long long accountStatus;
@property (nonatomic, copy) NSDictionary *analyticSyncDatesDictionary;
@property (nonatomic) bool createdChatZone;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <IMDCKSyncStateDelegate> *delegate;
@property (nonatomic) bool deletedZones;
@property (readonly, copy) NSString *description;
@property (getter=isDisablingDevices, nonatomic) bool disablingDevices;
@property (getter=isEligibleForTruthZone, nonatomic) bool eligibleForTruthZone;
@property (nonatomic, copy) NSDate *exitDate;
@property (getter=isFeatureEnabled, nonatomic) bool featureEnabled;
@property (nonatomic) bool hasAvailableRecordsToDownload;
@property (readonly) unsigned long long hash;
@property (getter=isInExitState, nonatomic) bool inExitState;
@property (nonatomic, readonly) IMKeyValueCollection *keyValueCollection;
@property (nonatomic) double lastDownloadProgress;
@property (nonatomic, copy) NSDate *lastSyncDate;
@property (nonatomic, copy) NSString *micDeviceIdentifier;
@property (getter=isRemovedFromBackup, nonatomic) bool removedFromBackup;
@property (getter=isStartingEnabledSettingChange, nonatomic) bool startingEnabledSettingChange;
@property (getter=isStartingInitialSyncSetByCloudKitHooks, nonatomic) bool startingInitialSyncSetByCloudKitHooks;
@property (getter=isStartingPeriodicSyncSetByCloudKitHooks, nonatomic) bool startingPeriodicSyncSetByCloudKitHooks;
@property (readonly) Class superclass;
@property (nonatomic) bool syncCancelled;
@property (nonatomic) long long syncControllerRecordType;
@property (nonatomic) unsigned long long syncControllerSyncState;
@property (nonatomic) long long syncControllerSyncType;
@property (nonatomic, readonly) NSArray *syncErrors;
@property (nonatomic, readonly) unsigned long long syncJobState;
@property (nonatomic, copy) NSString *syncSessionID;
@property (nonatomic, copy) NSDictionary *syncStatistics;
@property (nonatomic) unsigned long long syncStatus;
@property (nonatomic, readonly) unsigned long long syncType;
@property (getter=isSyncing, nonatomic) bool syncing;
@property (getter=isSyncingEnabled, nonatomic) bool syncingEnabled;
@property (getter=isSyncingPaused, nonatomic) bool syncingPaused;

+ (id)logHandle;
+ (void)removeBuildObjectsFromDict:(id)arg1;

- (void).cxx_destruct;
- (id)_describeErrors:(id)arg1;
- (void)_finishBatchChange;
- (void)_removeObjectForKey:(id)arg1 forDictionary:(id)arg2;
- (void)_setObject:(id)arg1 forKey:(id)arg2 forDictionary:(id)arg3 shouldSetBuild:(bool)arg4;
- (void)_setStartingSync;
- (bool)_shouldReportNewUserIfCreatedChatZones:(bool)arg1 deletedZones:(bool)arg2;
- (void)_startBatchChange;
- (long long)accountStatus;
- (void)addSyncError:(id)arg1;
- (id)analyticSyncDatesDictionary;
- (void)appendError:(id)arg1;
- (void)broadcastSyncState;
- (void)clearLocalCloudKitSyncState;
- (void)clearSyncErrors;
- (void)clearSyncStateForAllRecordTypes;
- (void)commitChanges;
- (bool)createdChatZone;
- (id)delegate;
- (void)deleteAllCloudKitData;
- (bool)deletedZones;
- (id)describeErrors;
- (id)describeRecordCounts;
- (id)description;
- (id)exitDate;
- (id)getAnalyticSyncDatesObjectForKey:(id)arg1;
- (bool)hasAvailableRecordsToDownload;
- (id)init;
- (id)initWithKeyValueCollection:(id)arg1;
- (bool)isDisablingDevices;
- (bool)isEligibleForTruthZone;
- (bool)isFeatureEnabled;
- (bool)isInExitState;
- (bool)isRemovedFromBackup;
- (bool)isStartingEnabledSettingChange;
- (bool)isStartingInitialSyncSetByCloudKitHooks;
- (bool)isStartingPeriodicSyncSetByCloudKitHooks;
- (bool)isSyncing;
- (bool)isSyncingEnabled;
- (bool)isSyncingPaused;
- (id)keyValueCollection;
- (void)keyValueCollection:(id)arg1 didUpdateValues:(id)arg2;
- (void)keyValueCollection:(id)arg1 willUpdateValues:(id)arg2;
- (double)lastDownloadProgress;
- (id)lastSyncDate;
- (id)logHandle;
- (id)micDeviceIdentifier;
- (void)removeObjectFromAnalyticSyncDatesDictionaryForKey:(id)arg1;
- (void)sendBroadcastToClient;
- (id)serializedRepresentation;
- (void)setAccountStatus:(long long)arg1;
- (void)setAnalyticSyncDatesDictionary:(id)arg1;
- (void)setAnalyticSyncDatesDictionaryObject:(id)arg1 forKey:(id)arg2 shouldOverrideIfExists:(bool)arg3;
- (void)setCloudKitHasAvailableRecordsToDownload:(bool)arg1;
- (void)setCloudKitSyncStatistics:(id)arg1;
- (void)setCreatedChatZone:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeletedZones:(bool)arg1;
- (void)setDisablingDevices:(bool)arg1;
- (void)setEligibleForTruthZone:(bool)arg1;
- (void)setErrorToAccountNeedsRepair;
- (void)setErrorToKeyRollingError;
- (void)setExitDate:(id)arg1;
- (void)setFeatureEnabled:(bool)arg1;
- (void)setHasAvailableRecordsToDownload:(bool)arg1;
- (void)setInExitState:(bool)arg1;
- (void)setLastDownloadProgress:(double)arg1;
- (void)setLastSyncDate:(id)arg1;
- (void)setLastSyncDownloadProgress:(double)arg1;
- (void)setMiCDeviceIdentifier:(id)arg1;
- (void)setRemovedFromBackup:(bool)arg1;
- (void)setStartingEnabledSettingChange:(bool)arg1;
- (void)setStartingInitialSyncSetByCloudKitHooks:(bool)arg1;
- (void)setStartingInitialSyncWithRecordType:(long long)arg1;
- (void)setStartingPeriodicSyncSetByCloudKitHooks:(bool)arg1;
- (void)setStartingPeriodicSyncWithRecordType:(long long)arg1;
- (void)setSyncCancelled:(bool)arg1;
- (void)setSyncControllerRecordType:(long long)arg1;
- (void)setSyncControllerSyncState:(unsigned long long)arg1;
- (void)setSyncControllerSyncState:(unsigned long long)arg1 withRecordType:(long long)arg2;
- (void)setSyncControllerSyncType:(long long)arg1;
- (void)setSyncDate:(id)arg1 forKey:(id)arg2 shouldOverride:(bool)arg3;
- (void)setSyncJobState:(unsigned long long)arg1;
- (void)setSyncJobStateWithState:(unsigned long long)arg1;
- (void)setSyncPhaseType:(unsigned long long)arg1;
- (void)setSyncSessionID:(id)arg1;
- (void)setSyncStarted;
- (void)setSyncStatistics:(id)arg1;
- (void)setSyncStatus:(unsigned long long)arg1;
- (void)setSyncStopped;
- (void)setSyncType:(unsigned long long)arg1;
- (void)setSyncing:(bool)arg1;
- (void)setSyncingEnabled:(bool)arg1;
- (void)setSyncingFinished;
- (void)setSyncingPaused:(bool)arg1;
- (void)startChanges;
- (bool)syncCancelled;
- (long long)syncControllerRecordType;
- (unsigned long long)syncControllerSyncState;
- (long long)syncControllerSyncType;
- (id)syncErrors;
- (unsigned long long)syncJobState;
- (id)syncReportDictionary;
- (id)syncReportDictionaryForAttempt:(unsigned long long)arg1 withSuccess:(bool)arg2 duration:(double)arg3;
- (void)syncReportDictionaryForAttempt:(unsigned long long)arg1 withSuccess:(bool)arg2 duration:(double)arg3 completion:(id /* block */)arg4;
- (id)syncSessionID;
- (id)syncStatistics;
- (unsigned long long)syncStatus;
- (unsigned long long)syncType;
- (id)syncUserType;
- (void)updateLastDownloadProgress:(double)arg1;
- (void)updateSyncJobState:(unsigned long long)arg1;
- (void)updateSyncStatus:(unsigned long long)arg1;
- (void)updateSyncType:(unsigned long long)arg1;

@end
