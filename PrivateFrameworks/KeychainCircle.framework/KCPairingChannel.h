/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
 */

@interface KCPairingChannel : NSObject {
    unsigned int  _acceptorInitialSyncCredentialsFlags;
    bool  _acceptorWillSendInitialSyncCredentials;
    bool  _acceptorWillSendPCSData;
    NSNumber * _ackNumber;
    NSArray * _allPCSItems;
    NSString * _altDSID;
    NSXPCConnection * _connection;
    OTControlArguments * _controlArguments;
    NSNumber * _countOfReceivedItems;
    NSNumber * _countOfSentItems;
    unsigned int  _counter;
    NSString * _dsidForTest;
    bool  _grabbedLockAssertion;
    bool  _initiator;
    bool  _initiatorExpectPCSData;
    unsigned long long  _itemIndex;
    OTJoiningConfiguration * _joiningConfiguration;
    bool  _needInitialSync;
    id /* block */  _nextOctagonState;
    id /* block */  _nextState;
    OTControl * _otControl;
    KCPairingChannelContext * _peerVersionContext;
    bool  _sessionSupportsOctagon;
    bool  _sessionSupportsSOS;
    NSNumber * _sizeOfPacket;
    bool  _testFailOctagon;
    bool  _testFailSOS;
}

@property unsigned int acceptorInitialSyncCredentialsFlags;
@property bool acceptorWillSendInitialSyncCredentials;
@property bool acceptorWillSendPCSData;
@property (nonatomic, retain) NSNumber *ackNumber;
@property (nonatomic, retain) NSArray *allPCSItems;
@property (nonatomic, copy) NSString *altDSID;
@property (retain) NSXPCConnection *connection;
@property (nonatomic, retain) OTControlArguments *controlArguments;
@property (nonatomic, retain) NSNumber *countOfReceivedItems;
@property (nonatomic, retain) NSNumber *countOfSentItems;
@property unsigned int counter;
@property (nonatomic, retain) NSString *dsidForTest;
@property (nonatomic) bool grabbedLockAssertion;
@property bool initiator;
@property bool initiatorExpectPCSData;
@property (nonatomic) unsigned long long itemIndex;
@property (nonatomic, retain) OTJoiningConfiguration *joiningConfiguration;
@property (readonly) bool needInitialSync;
@property (copy) id /* block */ nextOctagonState;
@property (copy) id /* block */ nextState;
@property (retain) OTControl *otControl;
@property (nonatomic, retain) KCPairingChannelContext *peerVersionContext;
@property bool sessionSupportsOctagon;
@property bool sessionSupportsSOS;
@property (nonatomic, retain) NSNumber *sizeOfPacket;
@property (nonatomic) bool testFailOctagon;
@property (nonatomic) bool testFailSOS;

+ (bool)_isRetryableNSURLError:(id)arg1;
+ (bool)isSupportedPlatform;
+ (id)pairingChannelAcceptor:(id)arg1;
+ (id)pairingChannelCompressData:(id)arg1;
+ (id)pairingChannelDecompressData:(id)arg1;
+ (id)pairingChannelInitiator:(id)arg1;
+ (bool)retryable:(id)arg1;

- (void).cxx_destruct;
- (void)acceptorFirstOctagonPacket:(id)arg1 reply:(id)arg2 complete:(id /* block */)arg3;
- (void)acceptorFirstPacket:(id)arg1 complete:(id /* block */)arg2;
- (unsigned int)acceptorInitialSyncCredentialsFlags;
- (void)acceptorPCSDataPacket:(id)arg1 complete:(id /* block */)arg2;
- (void)acceptorSecondOctagonPacket:(id)arg1 reply:(id)arg2 complete:(id /* block */)arg3;
- (void)acceptorSecondPacket:(id)arg1 complete:(id /* block */)arg2;
- (void)acceptorThirdPacket:(id)arg1 complete:(id /* block */)arg2;
- (void)acceptorWaitForAck:(id)arg1 complete:(id /* block */)arg2;
- (bool)acceptorWillSendInitialSyncCredentials;
- (bool)acceptorWillSendPCSData;
- (id)ackNumber;
- (id)allPCSItems;
- (id)altDSID;
- (id)connection;
- (id)controlArguments;
- (id)copySubsetFrom:(id)arg1 begin:(unsigned long long)arg2 end:(unsigned long long)arg3;
- (id)countOfReceivedItems;
- (id)countOfSentItems;
- (unsigned int)counter;
- (id)createPacket:(id)arg1 results:(id)arg2 endSession:(bool)arg3;
- (id)createTempPacket:(id)arg1 pcsItem:(id)arg2 octagonData:(id)arg3 keyForItem:(id)arg4;
- (bool)createTempPacketAndCheckSize:(id)arg1 pcsItem:(id)arg2 octagonData:(id)arg3 keyForItem:(id)arg4 error:(id*)arg5;
- (id)dsidForTest;
- (bool)ensureControlChannel;
- (id)evaluateResults:(void*)arg1;
- (void)exchangePacket:(id)arg1 complete:(id /* block */)arg2;
- (id)exchangePacket:(id)arg1 complete:(bool*)arg2 error:(id*)arg3;
- (bool)fetchAcceptorWillSendPCSData;
- (int)fetchCountOfReceivedItemsForTesting;
- (int)fetchCountOfSentItemsForTesting;
- (bool)fetchEpoch:(id)arg1 error:(id*)arg2;
- (unsigned long long)fetchNumberOfPCSKeychainItems;
- (int)fetchPCSItems:(const void**)arg1;
- (bool)fetchPrepare:(id*)arg1 application:(id)arg2 error:(id*)arg3;
- (unsigned long long)fetchSizeOfPacketForTesting;
- (bool)fetchVoucher:(id)arg1 prepare:(id)arg2 eventS:(id)arg3 finishedPairing:(bool*)arg4 maxCapability:(id)arg5 error:(id*)arg6;
- (id)formNextPacket;
- (bool)grabbedLockAssertion;
- (id)initAsInitiator:(bool)arg1 version:(id)arg2;
- (bool)initiator;
- (void)initiatorCompleteSecondPacketOctagon:(id)arg1 application:(id)arg2 complete:(id /* block */)arg3;
- (void)initiatorCompleteSecondPacketWithSOS:(id)arg1 complete:(id /* block */)arg2;
- (bool)initiatorExpectPCSData;
- (void)initiatorFirstPacket:(id)arg1 complete:(id /* block */)arg2;
- (void)initiatorFourthPacket:(id)arg1 complete:(id /* block */)arg2;
- (void)initiatorPCSDataPacket:(id)arg1 complete:(id /* block */)arg2;
- (void)initiatorSecondPacket:(id)arg1 complete:(id /* block */)arg2;
- (void)initiatorThirdPacket:(id)arg1 complete:(id /* block */)arg2;
- (bool)isPacketSizeAcceptable:(id)arg1 error:(id*)arg2;
- (unsigned long long)itemIndex;
- (bool)join:(id*)arg1 voucher:(id)arg2 eventS:(id)arg3 setupPairingChannelSignPost:(struct octagon_signpost_s { unsigned long long x1; unsigned long long x2; })arg4 finishPairing:(bool*)arg5 error:(id*)arg6;
- (id)joiningConfiguration;
- (bool)needInitialSync;
- (id /* block */)nextOctagonState;
- (id /* block */)nextState;
- (void)oneStepTooMany:(id)arg1 complete:(id /* block */)arg2;
- (id)otControl;
- (id)peerVersionContext;
- (bool)populateKeychainForTestingWithNumberOfKeychainItems:(int)arg1;
- (bool)populateKeychainWithLargeItemsForTestingWithCount:(int)arg1;
- (bool)populateKeychainWithMixedLargeItemsForTestingWithCount:(int)arg1;
- (bool)populateKeychainWithTooLargeItemsForTestingWithCount:(int)arg1;
- (bool)sessionSupportsOctagon;
- (bool)sessionSupportsSOS;
- (void)setAcceptorInitialSyncCredentialsFlags:(unsigned int)arg1;
- (void)setAcceptorWillSendInitialSyncCredentials:(bool)arg1;
- (void)setAcceptorWillSendPCSData:(bool)arg1;
- (void)setAckNumber:(id)arg1;
- (void)setAllPCSItems:(id)arg1;
- (void)setAltDSID:(id)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setConnection:(id)arg1;
- (void)setControlArguments:(id)arg1;
- (void)setControlObject:(id)arg1;
- (void)setCountOfReceivedItems:(id)arg1;
- (void)setCountOfSentItems:(id)arg1;
- (void)setCounter:(unsigned int)arg1;
- (void)setDSIDForTest:(id)arg1;
- (void)setDsidForTest:(id)arg1;
- (void)setGrabbedLockAssertion:(bool)arg1;
- (void)setInitiator:(bool)arg1;
- (void)setInitiatorExpectPCSData:(bool)arg1;
- (void)setItemIndex:(unsigned long long)arg1;
- (void)setJoiningConfiguration:(id)arg1;
- (void)setNextOctagonState:(id /* block */)arg1;
- (void)setNextState:(id /* block */)arg1;
- (void)setNextStateError:(id)arg1 complete:(id /* block */)arg2;
- (void)setOctagonMessageFailForTesting:(bool)arg1;
- (void)setOtControl:(id)arg1;
- (void)setPeerVersionContext:(id)arg1;
- (void)setSOSMessageFailForTesting:(bool)arg1;
- (void)setSessionControlArguments:(id)arg1;
- (void)setSessionSupportsOctagon:(bool)arg1;
- (void)setSessionSupportsOctagonForTesting:(bool)arg1;
- (void)setSessionSupportsSOS:(bool)arg1;
- (void)setSizeOfPacket:(id)arg1;
- (void)setTestFailOctagon:(bool)arg1;
- (void)setTestFailSOS:(bool)arg1;
- (void)setXPCConnectionObject:(id)arg1;
- (id)sizeOfPacket;
- (bool)testFailOctagon;
- (bool)testFailSOS;
- (id)updateItem:(id)arg1;
- (void)validateStart:(id /* block */)arg1;
- (void)waitForOctagonUpgrade;

@end
