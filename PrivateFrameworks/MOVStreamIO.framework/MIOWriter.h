/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MOVStreamIO.framework/MOVStreamIO
 */

@interface MIOWriter : NSObject {
    AVAssetWriter * _avWriter;
    int  _baseMediaTimeScale;
    int  _bufferCacheMode;
    NSArray * _customMOVMetadata;
    double  _defaultFrameRate;
    NSObject<OS_dispatch_queue> * _defaultNotificationQueue;
    bool  _drainWritingThreads;
    bool  _enableAVEHighPerformanceProfile;
    id /* block */  _failHandler;
    NSString * _filePath;
    double  _finishStepDefaultTimeout;
    bool  _forceFinishWritingThreads;
    bool  _inProcessRecording;
    MIOOrderedKeysMutableMap * _inputs;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _movieFragmentInterval;
    MIOMovieMetadataUtility * _movieMetadataUtility;
    bool  _preferCustomCompression;
    bool  _preserveSessionStartTime;
    bool  _realTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _sessionStartTime;
    bool  _sessionStarted;
    bool  _shouldOptimizeForNetworkUse;
    unsigned int  _status;
    NSObject<OS_dispatch_queue> * _statusQueue;
    NSString * _timeRangeMetadataKeyHint;
    id /* block */  _warningHandler;
    NSArray * _writingThreads;
    NSObject<OS_dispatch_group> * _writingThreadsGroup;
}

@property (retain) AVAssetWriter *avWriter;
@property (nonatomic) int baseMediaTimeScale;
@property (nonatomic) int bufferCacheMode;
@property (readonly) bool canWrite;
@property (nonatomic, retain) NSArray *customMOVMetadata;
@property (nonatomic) double defaultFrameRate;
@property (retain) NSObject<OS_dispatch_queue> *defaultNotificationQueue;
@property bool drainWritingThreads;
@property (nonatomic) bool enableAVEHighPerformanceProfile;
@property (readonly) NSString *filePath;
@property bool forceFinishWritingThreads;
@property (nonatomic) bool inProcessRecording;
@property (readonly) MIOOrderedKeysMutableMap *inputs;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } movieFragmentInterval;
@property (readonly) MIOMovieMetadataUtility *movieMetadataUtility;
@property (nonatomic) bool preferCustomCompression;
@property (nonatomic) bool preserveSessionStartTime;
@property (nonatomic) bool realTime;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } sessionStartTime;
@property (nonatomic) bool shouldOptimizeForNetworkUse;
@property unsigned int status;
@property (nonatomic, retain) NSString *timeRangeMetadataKeyHint;

- (void).cxx_destruct;
- (bool)addInput:(id)arg1;
- (bool)addInput:(id)arg1 error:(id*)arg2;
- (void)addMetadataTrack:(id)arg1;
- (void)addTrackForStreamWithIdentifier:(id)arg1 formatDescription:(struct opaqueCMFormatDescription { }*)arg2 recordingConfiguration:(id)arg3;
- (void)appendMetadata:(id)arg1 withTimeStamp:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toStream:(id)arg3;
- (void)appendPixelBuffer:(struct __CVBuffer { }*)arg1 presentationTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toStreamId:(id)arg3;
- (id)avWriter;
- (int)baseMediaTimeScale;
- (int)bufferCacheMode;
- (bool)canWrite;
- (void)cancelRecordingWithCompletionHandler:(id /* block */)arg1;
- (bool)checkStatus:(unsigned int)arg1;
- (id)customMOVMetadata;
- (void)dealloc;
- (double)defaultFrameRate;
- (id)defaultNotificationQueue;
- (id)description;
- (bool)drainWritingThreads;
- (bool)enableAVEHighPerformanceProfile;
- (void)fail;
- (id)filePath;
- (void)finishRecording;
- (void)finishWithCompletionHandler:(id /* block */)arg1;
- (void)finishWithEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 completionHandler:(id /* block */)arg2;
- (void)finishWithTimeout:(double)arg1 completionHandler:(id /* block */)arg2;
- (void)finishWithTimeout:(double)arg1 endTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 completionHandler:(id /* block */)arg3;
- (bool)forceFinishWritingThreads;
- (id /* block */)getFailHandler;
- (id /* block */)getWarningHandler;
- (bool)inProcessRecording;
- (id)initWithFilePath:(id)arg1 error:(id*)arg2;
- (id)initWithURL:(id)arg1 andExpectedFrameRate:(double)arg2;
- (id)inputs;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })movieFragmentInterval;
- (id)movieMetadataUtility;
- (id)newWritingThreadWithName:(id)arg1;
- (bool)preferCustomCompression;
- (void)prepareToRecordWithMovieMetadata:(id)arg1;
- (void)prepareWriterWithCompletionHandler:(id /* block */)arg1;
- (bool)preserveSessionStartTime;
- (void)proposeSessionStartTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (bool)realTime;
- (void)reportError:(id)arg1;
- (void)reportWarning:(id)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })sessionStartTime;
- (void)setAvWriter:(id)arg1;
- (void)setBaseMediaTimeScale:(int)arg1;
- (void)setBufferCacheMode:(int)arg1;
- (void)setCustomMOVMetadata:(id)arg1;
- (void)setDefaultFrameRate:(double)arg1;
- (void)setDefaultNotificationQueue:(id)arg1;
- (void)setDrainWritingThreads:(bool)arg1;
- (void)setEnableAVEHighPerformanceProfile:(bool)arg1;
- (void)setFailHandler:(id /* block */)arg1;
- (void)setFifoBufferCapacity:(unsigned long long)arg1;
- (void)setForceFinishWritingThreads:(bool)arg1;
- (void)setInProcessRecording:(bool)arg1;
- (void)setMovieFragmentInterval:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setPreferCustomCompression:(bool)arg1;
- (void)setPreserveSessionStartTime:(bool)arg1;
- (void)setRealTime:(bool)arg1;
- (void)setSessionStartTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setShouldOptimizeForNetworkUse:(bool)arg1;
- (void)setStatus:(unsigned int)arg1;
- (void)setTimeRangeMetadataKeyHint:(id)arg1;
- (bool)setTrackMetadata:(id)arg1 forMetadataStream:(id)arg2 error:(id*)arg3;
- (bool)setTrackMetadata:(id)arg1 forStream:(id)arg2 error:(id*)arg3;
- (bool)setVideoTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1 forStream:(id)arg2;
- (void)setWarningHandler:(id /* block */)arg1;
- (bool)shouldOptimizeForNetworkUse;
- (void)signalWritingThreadsProceed;
- (void)simulateFailure;
- (bool)startSession;
- (bool)startWriting;
- (unsigned int)status;
- (id)timeRangeMetadataKeyHint;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })timeWithSeconds:(double)arg1;
- (id)writerInputs;
- (id)writerInputsWithMediaType:(long long)arg1;
- (id)writerInputsWithMediaType:(long long)arg1 streamId:(id)arg2;

@end
