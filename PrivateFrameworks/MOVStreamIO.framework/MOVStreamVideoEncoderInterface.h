/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MOVStreamIO.framework/MOVStreamIO
 */

@interface MOVStreamVideoEncoderInterface : NSObject <EncoderConfigDelegate, MIOVideoEncoderControllerDelegate> {
    bool  _customEncoderConfig;
    MIOVideoEncoderController * _encoderCtrl;
    long long  _encodingQueueDepth;
    unsigned int  _lastEncodingInfoFlags;
    unsigned int  _lastEncodingStatus;
    long long  _pendingFrames;
    bool  _useLegacyVTController;
    MOVStreamEncoderConfig * m_config;
    bool  m_convertL016toL010;
    <VideoEncoderInterfaceDelegate> * m_delegate;
    bool  m_enableAVEHighPerformanceProfile;
    struct MOVStreamHEVCLosslessEncoder { bool x1; bool x2; id x3; int x4; int x5; double x6; struct OpaqueVTCompressionSession {} *x7; struct EncoderConfig { int x_8_1_1; int x_8_1_2; int x_8_1_3; int x_8_1_4; double x_8_1_5; bool x_8_1_6; bool x_8_1_7; bool x_8_1_8; bool x_8_1_9; } x8; struct { long long x_9_1_1; int x_9_1_2; unsigned int x_9_1_3; long long x_9_1_4; } x9; unsigned int x10; unsigned int x11; unsigned int x12; bool x13; bool x14; } * m_encoder;
    bool  m_encoderInitialized;
    NSObject<OS_dispatch_queue> * m_encodingQueue;
    double  m_expectedFrameRate;
    bool  m_failedState;
    struct opaqueCMFormatDescription { } * m_preSetupFormatDescription;
    NSString * m_stream;
}

@property bool customEncoderConfig;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property long long encodingQueueDepth;
@property (readonly) bool frameReorderingEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned int lastEncodingInfoFlags;
@property (readonly) unsigned int lastEncodingStatus;
@property long long pendingFrames;
@property (readonly) Class superclass;
@property bool useLegacyVTController;

+ (struct __CVBuffer { }*)createHEVCCompatiblePixelBuffer:(struct __CVBuffer { }*)arg1;

- (void).cxx_destruct;
- (void)awaitEncoderClosed;
- (void)closeEncoder;
- (void)closeEncoderInDispatchGroup:(id)arg1;
- (unsigned int)codecTypeOverride;
- (bool)configureSessionOverride:(struct OpaqueVTCompressionSession { }*)arg1;
- (bool)customEncoderConfig;
- (void)dealloc;
- (void)encodeFrame:(struct __CVBuffer { }*)arg1 pts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 frameProperties:(struct __CFDictionary { }*)arg3 metadata:(id)arg4;
- (long long)encodingQueueDepth;
- (bool)formatDescriptionHasChanged:(struct opaqueCMFormatDescription { }*)arg1;
- (bool)frameReorderingEnabled;
- (id)init;
- (id)initForStream:(id)arg1 configuration:(id)arg2 delegate:(id)arg3;
- (id)initWithExpectedFrameRate:(double)arg1 forStream:(id)arg2 delegate:(id)arg3 enableAVEHighPerformanceProfile:(bool)arg4;
- (unsigned int)lastEncodingInfoFlags;
- (unsigned int)lastEncodingStatus;
- (id)overrideVideoEncoderSpecification;
- (long long)pendingFrames;
- (bool)preSetupWithFormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
- (bool)processFrame:(struct __CVBuffer { }*)arg1 pts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 frameProperties:(struct __CFDictionary { }*)arg3 metadata:(id)arg4;
- (void)setCustomEncoderConfig:(bool)arg1;
- (void)setEncodingQueueDepth:(long long)arg1;
- (void)setPendingFrames:(long long)arg1;
- (void)setUseLegacyVTController:(bool)arg1;
- (void)setupEncoderWithWidth:(int)arg1 andHeight:(int)arg2 imageFormat:(int)arg3 formatDescription:(struct opaqueCMFormatDescription { }*)arg4 andFramerate:(double)arg5;
- (bool)shouldEnableInProcessEncoding;
- (void)skipFrameWithStatus:(int)arg1 andFlags:(unsigned int)arg2;
- (bool)useLegacyVTController;
- (void)writeSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 pts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 metadata:(id)arg3 withStatus:(int)arg4 andFlags:(unsigned int)arg5;

@end
