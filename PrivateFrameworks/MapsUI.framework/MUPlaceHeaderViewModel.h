/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MapsUI.framework/MapsUI
 */

@interface MUPlaceHeaderViewModel : NSObject <MUPlaceHeaderViewModel> {
    GEOComposedString * _composedString;
    GEOApplicationAuditToken * _developerPlaceCardAuditToken;
    MKMapItem * _enclosingMapItem;
    NSString * _enclosingPlaceString;
    MULabeledTokenViewModel * _enclosingPlaceViewModel;
    MKAppImageManager * _imageManager;
    bool  _isDeveloperPlaceCard;
    NSString * _labelString;
    MKMapItem * _mapItem;
}

@property (nonatomic, readonly) NSAttributedString *addressDescriptionForContact;
@property (getter=isClaimed, nonatomic, readonly) bool claimed;
@property (nonatomic, readonly) UIColor *coverPhotoBackgroundColor;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) MKMapItemIdentifier *enclosingMapItemIdentifier;
@property (nonatomic, readonly) MULabeledTokenViewModel *enclosingPlaceViewModel;
@property (nonatomic, readonly) bool hasEnclosingPlace;
@property (nonatomic, readonly) bool hasHeroImage;
@property (nonatomic, readonly) bool hasInitialData;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) MKAppImageManager *imageManager;
@property (nonatomic, readonly) UIColor *logoBackgroundColor;
@property (nonatomic, readonly) NSString *placeName;
@property (nonatomic, readonly) NSString *placeSecondaryName;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsContactAddressDescription;
@property (nonatomic, readonly) bool supportsEnhancedBusinessHeader;
@property (nonatomic, readonly) bool supportsLogo;
@property (nonatomic, readonly) NSArray *transitLabelItems;
@property (getter=isVerified, nonatomic, readonly) bool verified;

- (void).cxx_destruct;
- (void)_buildEnclosingPlace;
- (id)_categoryAndAppleRatingsAttributedStringWithFont:(id)arg1 labelColor:(id)arg2;
- (id)addressDescriptionForContact;
- (id)coverPhotoBackgroundColor;
- (id)enclosingMapItemIdentifier;
- (id)enclosingPlaceAttributedStringWithFont:(id)arg1 labelColor:(id)arg2 tokenColor:(id)arg3;
- (id)enclosingPlaceViewModel;
- (id)getReplacementResultFromEnclosingPlace;
- (bool)hasEnclosingPlace;
- (bool)hasHeroImage;
- (bool)hasInitialData;
- (id)imageManager;
- (id)initWithMapItem:(id)arg1;
- (id)initWithMapItem:(id)arg1 imageManager:(id)arg2;
- (id)initWithMapItem:(id)arg1 imageManager:(id)arg2 isDeveloperPlaceCard:(bool)arg3 developerPlaceCardAuditToken:(id)arg4;
- (id)initWithMapItem:(id)arg1 isDeveloperPlaceCard:(bool)arg2 developerPlaceCardAuditToken:(id)arg3;
- (bool)isClaimed;
- (bool)isVerified;
- (void)loadCoverPhotoWithFrameSize:(struct CGSize { double x1; double x2; })arg1 displayScale:(double)arg2 completion:(id /* block */)arg3;
- (void)loadHeroImageWithFrameSize:(struct CGSize { double x1; double x2; })arg1 displayScale:(double)arg2 completion:(id /* block */)arg3;
- (void)loadVerifiedLogoImageWithFrameSize:(struct CGSize { double x1; double x2; })arg1 displayScale:(double)arg2 completion:(id /* block */)arg3;
- (id)logoBackgroundColor;
- (id)placeName;
- (id)placeSecondaryName;
- (void)refineEnclosingMapItemWithCompletion:(id /* block */)arg1;
- (bool)supportsContactAddressDescription;
- (bool)supportsEnhancedBusinessHeader;
- (bool)supportsLogo;
- (id)transitLabelItems;

@end
