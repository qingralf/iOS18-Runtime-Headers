/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MatterPlugin.framework/MatterPlugin
 */

@interface MTRPluginClient : NSObject <MTRXPCServerProtocol> {
    MTRPluginClientXPCProxy * _clientProxy;
    NSMutableDictionary * _context;
    NSDictionary * _controllerConfiguration;
    NSMutableDictionary * _delegateProxies;
    NSUUID * _homeUUID;
    MTRPluginLocalClient * _localClient;
    NSMutableSet * _registeredNodeIDs;
    MTRPluginRemoteClient * _remoteClient;
    NSUUID * _sessionID;
    NSMutableSet * _subscribedMTRDevices;
    NSObject<OS_dispatch_source> * _updateControllerConfigurationTimer;
    NSObject<OS_dispatch_queue> * _workQueue;
    NSXPCConnection * _xpcConnection;
}

@property (retain) MTRPluginClientXPCProxy *clientProxy;
@property (retain) NSMutableDictionary *context;
@property (retain) NSDictionary *controllerConfiguration;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (retain) NSMutableDictionary *delegateProxies;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NSUUID *homeUUID;
@property (getter=isInRemoteMode, readonly) bool inRemoteMode;
@property (retain) MTRPluginLocalClient *localClient;
@property (retain) NSMutableSet *registeredNodeIDs;
@property (retain) MTRPluginRemoteClient *remoteClient;
@property (retain) NSUUID *sessionID;
@property (retain) NSMutableSet *subscribedMTRDevices;
@property (readonly) Class superclass;
@property (retain) NSObject<OS_dispatch_source> *updateControllerConfigurationTimer;
@property (retain) NSObject<OS_dispatch_queue> *workQueue;
@property (retain) NSXPCConnection *xpcConnection;

- (void).cxx_destruct;
- (id)_currentTarget;
- (id)_localTarget;
- (id)_remoteTarget;
- (id)clientProxy;
- (id)context;
- (id)controllerConfiguration;
- (void)dealloc;
- (id)delegateProxies;
- (id)description;
- (oneway void)deviceController:(id)arg1 controllerNodeIDWithReply:(id /* block */)arg2;
- (oneway void)deviceController:(id)arg1 getIsRunningWithReply:(id /* block */)arg2;
- (oneway void)deviceController:(id)arg1 getUniqueIdentifierWithReply:(id /* block */)arg2;
- (oneway void)deviceController:(id)arg1 nodeID:(id)arg2 downloadLogOfType:(long long)arg3 timeout:(double)arg4 completion:(id /* block */)arg5;
- (oneway void)deviceController:(id)arg1 nodeID:(id)arg2 getDeviceCachePrimedWithReply:(id /* block */)arg3;
- (oneway void)deviceController:(id)arg1 nodeID:(id)arg2 getEstimatedStartTimeWithReply:(id /* block */)arg3;
- (oneway void)deviceController:(id)arg1 nodeID:(id)arg2 getEstimatedSubscriptionLatencyWithReply:(id /* block */)arg3;
- (oneway void)deviceController:(id)arg1 nodeID:(id)arg2 getStateWithReply:(id /* block */)arg3;
- (oneway void)deviceController:(id)arg1 nodeID:(id)arg2 invokeCommandWithEndpointID:(id)arg3 clusterID:(id)arg4 commandID:(id)arg5 commandFields:(id)arg6 expectedValues:(id)arg7 expectedValueInterval:(id)arg8 timedInvokeTimeout:(id)arg9 serverSideProcessingTimeout:(id)arg10 completion:(id /* block */)arg11;
- (oneway void)deviceController:(id)arg1 nodeID:(id)arg2 readAttributePaths:(id)arg3 withReply:(id /* block */)arg4;
- (oneway void)deviceController:(id)arg1 nodeID:(id)arg2 readAttributeWithEndpointID:(id)arg3 clusterID:(id)arg4 attributeID:(id)arg5 params:(id)arg6 withReply:(id /* block */)arg7;
- (oneway void)deviceController:(id)arg1 nodeID:(id)arg2 writeAttributeWithEndpointID:(id)arg3 clusterID:(id)arg4 attributeID:(id)arg5 value:(id)arg6 expectedValueInterval:(id)arg7 timedWriteTimeout:(id)arg8;
- (oneway void)deviceController:(id)arg1 updateControllerConfiguration:(id)arg2;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)homeUUID;
- (id)initWithXPCConnection:(id)arg1 sessionID:(id)arg2 queue:(id)arg3;
- (void)invalidate;
- (bool)isInRemoteMode;
- (id)localClient;
- (id)registeredNodeIDs;
- (id)remoteClient;
- (bool)respondsToSelector:(SEL)arg1;
- (id)sessionID;
- (void)setClientProxy:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setControllerConfiguration:(id)arg1;
- (void)setDelegateProxies:(id)arg1;
- (void)setHomeUUID:(id)arg1;
- (void)setLocalClient:(id)arg1;
- (void)setRegisteredNodeIDs:(id)arg1;
- (void)setRemoteClient:(id)arg1;
- (void)setSessionID:(id)arg1;
- (void)setSubscribedMTRDevices:(id)arg1;
- (void)setUpdateControllerConfigurationTimer:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (void)setXpcConnection:(id)arg1;
- (id)subscribedMTRDevices;
- (id)updateControllerConfigurationTimer;
- (id)workQueue;
- (id)xpcConnection;

@end
