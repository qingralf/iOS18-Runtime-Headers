/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaAnalysis.framework/MediaAnalysis
 */

@interface VCPVideoCaptionAnalyzer : VCPVideoAnalyzer {
    NSMutableArray * _activeFrameIndices;
    VCPVideoCaptionEncoder * _backbone;
    CSUVideoCaptioner * _captioner;
    bool  _enoughFrames;
    int  _frameIndex;
    float * _inputData;
    VCPEspressoV2Data * _inputDataMUB;
    int  _inputHeight;
    int  _inputNumFrames;
    int  _inputWidth;
    long long  _modelType;
    int  _mubbSampleScale;
    NSString * _resConfig;
    int  _skipNumFramesBothEnds;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _timeEnd;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _timeLastDetection;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _timeLastProcess;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _timeStart;
    VCPTransforms * _transformImage;
    int  _validFrames;
    CVNLPVideoCaptioningModel * _videoCaptionDecoder;
    NSURL * _videoCaptionEncoder;
    MAAsset * _videoCaptionEncoderAsset;
    NSMutableArray * _videoCaptionResult;
    NSMutableArray * _videoSegmentCaptionResult;
    VCPVideoTransformerBackbone * _videoTransformerBackbone;
}

+ (long long)mode;
+ (id)sharedCVNLPCaptionDecoderWithOptions:(id)arg1 identifier:(id)arg2;
+ (id)sharedCaptionerWithConfig:(id)arg1 identifier:(id)arg2;

- (void).cxx_destruct;
- (int)analyzeFrame:(struct __CVBuffer { }*)arg1 withTimestamp:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 andDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 flags:(unsigned long long*)arg4;
- (int)configInputBasedOnDevice;
- (int)configVideoCaptionModels;
- (int)copyImage:(struct __CVBuffer { }*)arg1 withChannels:(int)arg2;
- (int)copyMUBBImage:(struct __CVBuffer { }*)arg1 withChannels:(int)arg2;
- (void)dealloc;
- (int)finishAnalysisPass:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (int)generateCaptionWithEmbedding:(id)arg1 startTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 duration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (int)inference:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 duration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)initWithModelType:(long long)arg1 frameNumber:(unsigned long long)arg2;
- (id)initWithModelType:(long long)arg1 frameRate:(float)arg2 timeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg3;
- (id)results;
- (id)segmentCaptionResults;

@end
