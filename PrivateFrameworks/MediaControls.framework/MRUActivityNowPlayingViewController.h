/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls
 */

@interface MRUActivityNowPlayingViewController : UIViewController <MPVolumeControllerDelegate, MRUNowPlayingControllerObserver, MRUNowPlayingTransportControlsViewDelegate, SBUISystemApertureElement, SBUISystemApertureElementProviding> {
    long long  _activeLayoutMode;
    NSString * _associatedAppBundleIdentifier;
    MRUNowPlayingController * _controller;
    MRUHapticViewController * _hapticViewController;
    <BSInvalidatable> * _hardwareVolumeControlAssertion;
    MSVTimer * _inactiveTransitionTimer;
    NSDate * _lastLeftButtonTapDate;
    UITapGestureRecognizer * _launchNowPlayingGestureRecognizer;
    long long  _maximumLayoutMode;
    MPMediaControls * _mediaControls;
    long long  _preferredLayoutMode;
    MPVolumeController * _volumeController;
    bool  _wasPlayingDuringLastPreferredLayoutUpdate;
    MRUWaveformController * _waveformController;
    MRUWaveformViewController * _waveformViewController;
}

@property (nonatomic) long long activeLayoutMode;
@property (nonatomic, readonly, copy) NSString *associatedAppBundleIdentifier; /* unknown property attribute: ? */
@property (nonatomic, readonly, copy) NSString *associatedScenePersistenceIdentifier; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool attachedMinimalViewRequiresZeroPadding; /* unknown property attribute: ? */
@property (nonatomic, readonly, copy) NSSet *backgroundActivitiesToSuppress; /* unknown property attribute: ? */
@property (nonatomic) bool canRequestAlertingAssertion; /* unknown property attribute: ? */
@property (nonatomic, readonly) long long contentRole;
@property (nonatomic, retain) MRUNowPlayingController *controller;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *detachedMinimalView; /* unknown property attribute: ? */
@property (nonatomic, readonly, copy) NSString *elementIdentifier; /* unknown property attribute: ? */
@property (nonatomic, retain) MRUHapticViewController *hapticViewController;
@property (nonatomic, retain) <BSInvalidatable> *hardwareVolumeControlAssertion;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MSVTimer *inactiveTransitionTimer;
@property (nonatomic, readonly, copy) UIColor *keyColor; /* unknown property attribute: ? */
@property (nonatomic, retain) NSDate *lastLeftButtonTapDate;
@property (nonatomic, readonly) BSAction *launchAction; /* unknown property attribute: ? */
@property (nonatomic, retain) UITapGestureRecognizer *launchNowPlayingGestureRecognizer;
@property (nonatomic, readonly, copy) NSURL *launchURL; /* unknown property attribute: ? */
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *leadingView; /* unknown property attribute: ? */
@property (nonatomic, readonly) long long maximumLayoutMode;
@property (nonatomic, retain) MPMediaControls *mediaControls;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *minimalView; /* unknown property attribute: ? */
@property (nonatomic) unsigned long long minimalViewLayoutAxis; /* unknown property attribute: ? */
@property (nonatomic, readonly) long long minimumLayoutMode; /* unknown property attribute: ? */
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } preferredCustomAspectRatio; /* unknown property attribute: ? */
@property (nonatomic, readonly) long long preferredCustomLayout; /* unknown property attribute: ? */
@property (nonatomic, readonly) double preferredHeightForBottomSafeArea; /* unknown property attribute: ? */
@property (nonatomic, readonly) long long preferredLayoutMode;
@property (nonatomic, readonly) bool prefersFixedPortraitOrientation; /* unknown property attribute: ? */
@property (nonatomic, readonly) unsigned long long presentationBehaviors; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool preventsAutomaticDismissal; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool preventsInteractiveDismissal; /* unknown property attribute: ? */
@property (nonatomic, readonly) unsigned long long statusBarStyleOverridesToSuppress; /* unknown property attribute: ? */
@property (readonly) Class superclass;
@property (nonatomic, readonly) <SBUISystemApertureElement> *systemApertureElement; /* unknown property attribute: ? */
@property (nonatomic, readonly) UIViewController<SBUISystemApertureElement> *systemApertureElementViewController;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *trailingView; /* unknown property attribute: ? */
@property (nonatomic, retain) MRUActivityNowPlayingView *view;
@property (nonatomic, retain) MRUActivityNowPlayingView *viewIfLoaded;
@property (nonatomic, retain) MPVolumeController *volumeController;
@property (nonatomic) bool wasPlayingDuringLastPreferredLayoutUpdate;
@property (nonatomic, retain) MRUWaveformController *waveformController;
@property (nonatomic, retain) MRUWaveformViewController *waveformViewController;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (long long)activeLayoutMode;
- (long long)artworkTransitionDirection;
- (id)associatedAppBundleIdentifier;
- (id)backgroundActivitiesToSuppress;
- (long long)contentRole;
- (id)controller;
- (void)createHapticViewController;
- (void)createWaveformViewController;
- (id)detachedMinimalView;
- (void)didSelectArtworkView:(id)arg1;
- (void)didSelectLabelView:(id)arg1;
- (void)didSelectLaunchNowPlaying:(id)arg1;
- (void)didTapTransportButton:(id)arg1;
- (id)elementIdentifier;
- (void)handleHapticEnabledStatusChangedNotification:(id)arg1;
- (id)hapticViewController;
- (id)hardwareVolumeControlAssertion;
- (id)inactiveTransitionTimer;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isExpanded;
- (bool)isOnScreen;
- (id)lastLeftButtonTapDate;
- (id)launchNowPlayingGestureRecognizer;
- (id)launchURL;
- (id)leadingView;
- (void)loadView;
- (long long)maximumLayoutMode;
- (id)mediaControls;
- (id)minimalView;
- (void)nowPlayingController:(id)arg1 endpointController:(id)arg2 didChangeRoute:(id)arg3;
- (void)nowPlayingController:(id)arg1 metadataController:(id)arg2 didChangeArtwork:(id)arg3;
- (void)nowPlayingController:(id)arg1 metadataController:(id)arg2 didChangeBundleID:(id)arg3;
- (void)nowPlayingController:(id)arg1 metadataController:(id)arg2 didChangeNowPlayingInfo:(id)arg3;
- (void)nowPlayingController:(id)arg1 metadataController:(id)arg2 didChangeTimeControls:(id)arg3;
- (void)nowPlayingController:(id)arg1 metadataController:(id)arg2 didChangeTransportControls:(id)arg3;
- (void)nowPlayingController:(id)arg1 tvRemoteController:(id)arg2 didChangeShowTVRemote:(bool)arg3;
- (bool)nowPlayingControllerShouldAutomaticallyUpdateResponse:(id)arg1;
- (double)preferredHeightForBottomSafeArea;
- (long long)preferredLayoutMode;
- (unsigned long long)presentationBehaviors;
- (void)registerHapticObserver;
- (void)setActiveLayoutMode:(long long)arg1;
- (void)setController:(id)arg1;
- (void)setHapticViewController:(id)arg1;
- (void)setHardwareVolumeControlAssertion:(id)arg1;
- (void)setInactiveTransitionTimer:(id)arg1;
- (void)setLastLeftButtonTapDate:(id)arg1;
- (void)setLaunchNowPlayingGestureRecognizer:(id)arg1;
- (void)setMediaControls:(id)arg1;
- (void)setVolumeController:(id)arg1;
- (void)setWasPlayingDuringLastPreferredLayoutUpdate:(bool)arg1;
- (void)setWaveformController:(id)arg1;
- (void)setWaveformViewController:(id)arg1;
- (id)systemApertureElementViewController;
- (id)trailingView;
- (void)transportControlsView:(id)arg1 didSelectRoutingButton:(id)arg2;
- (void)transportControlsView:(id)arg1 didSelectTVRemoteButton:(id)arg2;
- (void)updateArtwork;
- (void)updateBundleID;
- (void)updateEverything;
- (void)updateLayout;
- (void)updateLayoutModesPreferringImmediateTransition:(bool)arg1 deferInCustomLayout:(bool)arg2 reason:(id)arg3;
- (void)updateNowPlayingInfo;
- (void)updateRouteLabel;
- (void)updateRoutingButton;
- (void)updateTimeControls;
- (void)updateTransportControls;
- (void)updateVolumeControls;
- (void)updateWaveformVisibility;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)volumeController;
- (void)volumeController:(id)arg1 volumeControlCapabilitiesDidChange:(unsigned int)arg2;
- (bool)wasPlayingDuringLastPreferredLayoutUpdate;
- (id)waveformController;
- (id)waveformViewController;

@end
