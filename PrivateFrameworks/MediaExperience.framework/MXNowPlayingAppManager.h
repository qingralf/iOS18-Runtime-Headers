/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience
 */

@interface MXNowPlayingAppManager : NSObject {
    bool  _ignoreNowPlayingAppUpdates;
    NSString * _nowPlayingAppDisplayID;
    int  _nowPlayingAppPID;
    NSDate * _nowPlayingAppStopTime;
    NSObject<OS_dispatch_source> * _writeNowPlayingAppToDiskTimer;
    NSLock * mLock;
    NSMutableArray * mNowPlayingAppDisplayIDStack;
    NSMutableDictionary * mNowPlayingAppHostProcessAttributionBundleID;
}

@property bool ignoreNowPlayingAppUpdates;
@property (retain) NSString *nowPlayingAppDisplayID;
@property int nowPlayingAppPID;
@property (retain) NSDate *nowPlayingAppStopTime;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *writeNowPlayingAppToDiskTimer;

+ (void)actuallyWriteNowPlayingAppDisplayIDToDisk:(id)arg1;
+ (id)getNowPlayingAppUpdateReasonString:(unsigned int)arg1;
+ (void)processNowPlayingAppPIDChangeIfNeeded:(bool)arg1;
+ (id)sharedInstance;

- (void)clearNowPlayingAppStack;
- (id)copyTopOfNowPlayingAppStack;
- (void)dealloc;
- (bool)doesNowPlayingAppStackContain:(id)arg1;
- (void)dumpNowPlayingAppInfo;
- (bool)ignoreNowPlayingAppUpdates;
- (id)init;
- (id)nowPlayingAppDisplayID;
- (int)nowPlayingAppPID;
- (unsigned long long)nowPlayingAppStackSize;
- (id)nowPlayingAppStopTime;
- (void)popNowPlayingAppStack;
- (void)popNowPlayingAppStackOldestDisplayID;
- (void)populateNowPlayingAppStack:(id)arg1 hostProcessAttributionBundleID:(id)arg2;
- (void)pushToNowPlayingAppStack:(id)arg1 hostProcessAttributionBundleID:(id)arg2;
- (void)removeFromNowPlayingAppStack:(id)arg1;
- (void)resetNowPlayingApp:(id)arg1;
- (bool)resetNowPlayingAppIfNeeded:(unsigned int)arg1 allowedToBeNowPlaying:(bool)arg2 canBeNowPlayingApp:(bool)arg3;
- (void)resetNowPlayingAppToDefaultMusicApp;
- (void)saveNowPlayingAppStackToDisk;
- (void)setIgnoreNowPlayingAppUpdates:(bool)arg1;
- (bool)setIsNowPlayingApp:(int)arg1;
- (void)setNowPlayingAppDisplayID:(id)arg1;
- (void)setNowPlayingAppPID:(int)arg1;
- (void)setNowPlayingAppStopTime:(id)arg1;
- (void)setWriteNowPlayingAppToDiskTimer:(id)arg1;
- (void)updateNowPlayingApp:(int)arg1 session:(id)arg2 reasonForUpdate:(unsigned int)arg3;
- (void)updateNowPlayingAppStackFromDisk;
- (void)writeNowPlayingAppInfoToDisk;
- (id)writeNowPlayingAppToDiskTimer;

@end
