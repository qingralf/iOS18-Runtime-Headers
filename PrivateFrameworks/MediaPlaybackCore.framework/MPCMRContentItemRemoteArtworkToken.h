/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
 */

@interface MPCMRContentItemRemoteArtworkToken : NSObject <MPArtworkDataSourceVisualIdenticality> {
    NSString * _artworkIdentifier;
    NSString * _identifier;
    NSDictionary * _remoteArtworks;
    MPArtworkCatalog * _storeArtworkCatalog;
    NSArray * _supportedRemoteArtworkFormats;
}

@property (nonatomic, readonly) NSString *artworkIdentifier;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, readonly) NSDictionary *remoteArtworks;
@property (nonatomic, retain) MPArtworkCatalog *storeArtworkCatalog;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSArray *supportedRemoteArtworkFormats;

- (void).cxx_destruct;
- (id)artworkIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)identifier;
- (id)initWithIdentifier:(id)arg1 artworkIdentifier:(id)arg2 supportedRemoteArtworkFormats:(id)arg3 remoteArtworks:(id)arg4;
- (bool)isEqual:(id)arg1;
- (id)remoteArtworks;
- (void)setDestinationScale:(double)arg1;
- (void)setFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setStoreArtworkCatalog:(id)arg1;
- (id)storeArtworkCatalog;
- (id)stringRepresentation;
- (id)supportedRemoteArtworkFormats;

@end
