/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

@interface MRApplicationConnection : NSObject {
    MRApplicationConnectionContext * _context;
    id /* block */  _incomingMessageHandler;
    id /* block */  _invalidationHandler;
    bool  _isIncomingConnection;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSObject<OS_dispatch_queue> * _messageQueue;
    NSMutableArray * _pendingReceivedMessages;
    NSObject<OS_dispatch_queue> * _queue;
    MRApplicationConnectionRequestInfo * _requestInfo;
    long long  _state;
}

@property (nonatomic, readonly) MRApplicationConnectionContext *context;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, copy) id /* block */ incomingMessageHandler;
@property (nonatomic, copy) id /* block */ invalidationHandler;
@property (nonatomic) bool isIncomingConnection;
@property (nonatomic, readonly) struct os_unfair_lock_s { unsigned int x1; } lock;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageQueue;
@property (nonatomic, retain) NSMutableArray *pendingReceivedMessages;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) MRApplicationConnectionRequestInfo *requestInfo;
@property (nonatomic, readonly) NSString *serviceName;
@property (nonatomic) long long state;

- (void).cxx_destruct;
- (void)activate;
- (void)close;
- (id)context;
- (void)dealloc;
- (id)description;
- (id)destinationPlayerPath;
- (void)handleMediaRemoteServiceInvalidatedNotification:(id)arg1;
- (void)handleMessage:(id)arg1;
- (unsigned long long)hash;
- (id)identifier;
- (id /* block */)incomingMessageHandler;
- (id)initWithContext:(id)arg1 requestInfo:(id)arg2;
- (id)initWithServiceName:(id)arg1 playerPath:(id)arg2;
- (void)invalidate:(id)arg1;
- (id /* block */)invalidationHandler;
- (bool)isEqual:(id)arg1;
- (bool)isIncomingConnection;
- (struct os_unfair_lock_s { unsigned int x1; })lock;
- (id)messageQueue;
- (id)pendingReceivedMessages;
- (id)queue;
- (id)requestInfo;
- (void)sendMessage:(id)arg1;
- (id)serviceName;
- (void)setIncomingMessageHandler:(id /* block */)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;
- (void)setIsIncomingConnection:(bool)arg1;
- (void)setPendingReceivedMessages:(id)arg1;
- (void)setState:(long long)arg1;
- (long long)state;

@end
