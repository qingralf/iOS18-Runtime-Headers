/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

@interface MRPlaybackQueueRequest : NSObject <NSCopying, NSSecureCoding> {
    double  _artworkHeight;
    double  _artworkWidth;
    unsigned int  _cachingPolicy;
    NSArray * _contentItemIdentifiers;
    bool  _hasArtworkHeight;
    bool  _hasArtworkWidth;
    bool  _hasCachingPolicy;
    bool  _hasIncludeAlignments;
    bool  _hasIncludeAvailableArtworkFormats;
    bool  _hasIncludeInfo;
    bool  _hasIncludeLanguageOptions;
    bool  _hasIncludeLyrics;
    bool  _hasIncludeMetadata;
    bool  _hasIncludeSections;
    bool  _hasLegacyNowPlayingInfoRequest;
    bool  _hasLength;
    bool  _hasLocation;
    bool  _includeAlignments;
    bool  _includeAvailableArtworkFormats;
    bool  _includeInfo;
    bool  _includeLanguageOptions;
    bool  _includeLyrics;
    bool  _includeMetadata;
    bool  _includeSections;
    NSString * _label;
    bool  _legacyNowPlayingInfoRequest;
    long long  _length;
    long long  _location;
    MRPlayerPath * _playerPath;
    NSString * _requestIdentifier;
    NSArray * _requestedArtworkFormats;
    NSArray * _requestedRemoteArtworkFormats;
}

@property (nonatomic) double artworkHeight;
@property (nonatomic) double artworkWidth;
@property (nonatomic) unsigned int cachingPolicy;
@property (nonatomic, readonly) bool containsNonDefaultAssets;
@property (nonatomic, copy) NSArray *contentItemIdentifiers;
@property (nonatomic, readonly) NSData *data;
@property (nonatomic, readonly, copy) NSDictionary *dictionaryRepresentation;
@property (nonatomic) bool hasArtworkHeight;
@property (nonatomic) bool hasArtworkWidth;
@property (nonatomic) bool hasCachingPolicy;
@property (nonatomic) bool hasIncludeAlignments;
@property (nonatomic) bool hasIncludeAvailableArtworkFormats;
@property (nonatomic) bool hasIncludeInfo;
@property (nonatomic) bool hasIncludeLanguageOptions;
@property (nonatomic) bool hasIncludeLyrics;
@property (nonatomic) bool hasIncludeMetadata;
@property (nonatomic) bool hasIncludeSections;
@property (nonatomic) bool hasLegacyNowPlayingInfoRequest;
@property (nonatomic) bool hasLength;
@property (nonatomic) bool hasLocation;
@property (nonatomic, readonly) bool hasRange;
@property (nonatomic) bool includeAlignments;
@property (nonatomic, readonly) bool includeArtwork;
@property (nonatomic) bool includeAvailableArtworkFormats;
@property (nonatomic) bool includeInfo;
@property (nonatomic) bool includeLanguageOptions;
@property (nonatomic) bool includeLyrics;
@property (nonatomic) bool includeMetadata;
@property (nonatomic, readonly) bool includeRemoteArtwork;
@property (nonatomic) bool includeSections;
@property (nonatomic, copy) NSString *label;
@property (getter=isLegacyNowPlayingInfoRequest, nonatomic) bool legacyNowPlayingInfoRequest;
@property (nonatomic) long long length;
@property (nonatomic) long long location;
@property (nonatomic, retain) MRPlayerPath *playerPath;
@property (nonatomic, readonly) _MRPlaybackQueueRequestProtobuf *protobuf;
@property (nonatomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } range;
@property (nonatomic, readonly) bool rangeContainsNowPlayingItem;
@property (nonatomic, copy) NSString *requestIdentifier;
@property (nonatomic, readonly, copy) NSString *requestProperties;
@property (nonatomic, copy) NSArray *requestedArtworkFormats;
@property (nonatomic, copy) NSArray *requestedRemoteArtworkFormats;
@property (nonatomic, readonly) bool shouldRequestItem;
@property (nonatomic, readonly) bool shouldRequestItemNotConsideringMetadata;
@property (nonatomic, readonly) MRPlaybackQueueRequest *skeleton;

+ (double)defaultArtworkHeight;
+ (double)defaultArtworkWidth;
+ (id)defaultPlaybackQueueRequest;
+ (id)defaultPlaybackQueueRequestWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
+ (id)requestWithCurrentState:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (double)artworkHeight;
- (double)artworkWidth;
- (unsigned int)cachingPolicy;
- (bool)containsNonDefaultAssets;
- (id)contentItemIdentifiers;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)data;
- (id)description;
- (id)dictionaryRepresentation;
- (void)encodeWithCoder:(id)arg1;
- (bool)exactMatch:(id)arg1;
- (bool)hasArtworkHeight;
- (bool)hasArtworkWidth;
- (bool)hasCachingPolicy;
- (bool)hasIncludeAlignments;
- (bool)hasIncludeAvailableArtworkFormats;
- (bool)hasIncludeInfo;
- (bool)hasIncludeLanguageOptions;
- (bool)hasIncludeLyrics;
- (bool)hasIncludeMetadata;
- (bool)hasIncludeSections;
- (bool)hasLegacyNowPlayingInfoRequest;
- (bool)hasLength;
- (bool)hasLocation;
- (bool)hasRange;
- (bool)includeAlignments;
- (bool)includeArtwork;
- (bool)includeAvailableArtworkFormats;
- (bool)includeInfo;
- (bool)includeLanguageOptions;
- (bool)includeLyrics;
- (bool)includeMetadata;
- (bool)includeRemoteArtwork;
- (bool)includeSections;
- (id)initFromTransactionName:(unsigned long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithIdentifiers:(id)arg1;
- (id)initWithIdentifiers:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)initWithProtobuf:(id)arg1;
- (id)initWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (bool)isEqual:(id)arg1;
- (bool)isLegacyNowPlayingInfoRequest;
- (id)label;
- (long long)length;
- (long long)location;
- (bool)match:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (void)performRequestForDestination:(id)arg1 completion:(id /* block */)arg2;
- (id)playerPath;
- (id)protobuf;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })range;
- (bool)rangeContainsNowPlayingItem;
- (id)requestByRemovingArtwork;
- (id)requestIdentifier;
- (id)requestProperties;
- (id)requestedArtworkFormats;
- (id)requestedRemoteArtworkFormats;
- (void)setArtworkHeight:(double)arg1;
- (void)setArtworkWidth:(double)arg1;
- (void)setCachingPolicy:(unsigned int)arg1;
- (void)setContentItemIdentifiers:(id)arg1;
- (void)setHasArtworkHeight:(bool)arg1;
- (void)setHasArtworkWidth:(bool)arg1;
- (void)setHasCachingPolicy:(bool)arg1;
- (void)setHasIncludeAlignments:(bool)arg1;
- (void)setHasIncludeAvailableArtworkFormats:(bool)arg1;
- (void)setHasIncludeInfo:(bool)arg1;
- (void)setHasIncludeLanguageOptions:(bool)arg1;
- (void)setHasIncludeLyrics:(bool)arg1;
- (void)setHasIncludeMetadata:(bool)arg1;
- (void)setHasIncludeSections:(bool)arg1;
- (void)setHasLegacyNowPlayingInfoRequest:(bool)arg1;
- (void)setHasLength:(bool)arg1;
- (void)setHasLocation:(bool)arg1;
- (void)setIncludeAlignments:(bool)arg1;
- (void)setIncludeAvailableArtworkFormats:(bool)arg1;
- (void)setIncludeInfo:(bool)arg1;
- (void)setIncludeLanguageOptions:(bool)arg1;
- (void)setIncludeLyrics:(bool)arg1;
- (void)setIncludeMetadata:(bool)arg1;
- (void)setIncludeSections:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)setLegacyNowPlayingInfoRequest:(bool)arg1;
- (void)setLength:(long long)arg1;
- (void)setLocation:(long long)arg1;
- (void)setPlayerPath:(id)arg1;
- (void)setRequestIdentifier:(id)arg1;
- (void)setRequestedArtworkFormats:(id)arg1;
- (void)setRequestedRemoteArtworkFormats:(id)arg1;
- (bool)shouldRequestItem;
- (bool)shouldRequestItemNotConsideringMetadata;
- (id)skeleton;

@end
