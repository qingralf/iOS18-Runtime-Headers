/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MicroLocationDaemon.framework/MicroLocationDaemon
 */

@interface ULPersistenceManager : NSObject {
    ULDataContainer * _dataContainer;
    NSManagedObjectModel * _managedObjectModel;
    NSURL * _modelsDirectory;
    ULPersistenceStore * _persistenceStore;
    NSPersistentStoreCoordinator * _persistentStoreCoordinator;
    NSObject<OS_dispatch_queue> * _queue;
    NSURL * _storesDirectory;
    bool  _useWal;
}

@property (nonatomic, retain) ULDataContainer *dataContainer;
@property (nonatomic, retain) NSManagedObjectModel *managedObjectModel;
@property (nonatomic, retain) NSURL *modelsDirectory;
@property (nonatomic, retain) ULPersistenceStore *persistenceStore;
@property (nonatomic, retain) NSPersistentStoreCoordinator *persistentStoreCoordinator;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSURL *storesDirectory;
@property (nonatomic) bool useWal;

+ (id)defaultLocalStoreFilename;
+ (id)defaultModelsDirectory;

- (void).cxx_destruct;
- (void)_deleteDatabaseFilesAtPath:(id)arg1;
- (bool)_destroyStore;
- (bool)_disconnectFromStore;
- (void)_enableConcurrencyDebug;
- (bool)_excludeDirectoryFromTimeMachineBackup:(id)arg1;
- (void)_exitProcessWithFailureCode;
- (id)_getDefaultStoresDirectory;
- (id)_getDefaultStoresDirectoryPathForCurrentPlatform;
- (id)_getLocalStoreURL;
- (void)_handleCorruptedDatabase:(id)arg1;
- (void)_handleDatabaseError:(id)arg1;
- (bool)_isMainDatabase;
- (bool)_isStoreConnected;
- (bool)connectToStore;
- (id)createManagedObjectContext;
- (id)dataContainer;
- (bool)destroyStore;
- (bool)disconnectFromStore;
- (id)getLocalStoreURL;
- (void)handleDatabaseError:(id)arg1;
- (id)init;
- (id)initWithModelsDirectory:(id)arg1 storesDirectory:(id)arg2 managedObjectModel:(id)arg3 useWal:(bool)arg4;
- (id)initWithModelsDirectory:(id)arg1 storesDirectory:(id)arg2 useWal:(bool)arg3;
- (bool)isMainDatabase;
- (bool)isStoreConnected;
- (id)managedObjectModel;
- (id)modelsDirectory;
- (id)persistenceStore;
- (id)persistentStoreCoordinator;
- (id)queue;
- (void)setDataContainer:(id)arg1;
- (void)setManagedObjectModel:(id)arg1;
- (void)setModelsDirectory:(id)arg1;
- (void)setPersistenceStore:(id)arg1;
- (void)setPersistentStoreCoordinator:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setStoresDirectory:(id)arg1;
- (void)setUseWal:(bool)arg1;
- (id)storesDirectory;
- (bool)useWal;

@end
