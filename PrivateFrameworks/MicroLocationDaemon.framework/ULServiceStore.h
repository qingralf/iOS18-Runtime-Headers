/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MicroLocationDaemon.framework/MicroLocationDaemon
 */

@interface ULServiceStore : ULStore <ULStoreProtocol>

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (Class)MOClass;
+ (id)defaultSortProperty;
+ (unsigned int)maxEntriesInTable;

- (struct vector<CLMiLoServiceTable::Entry, std::allocator<CLMiLoServiceTable::Entry>> { struct Entry {} *x1; struct Entry {} *x2; struct __compressed_pair<CLMiLoServiceTable::Entry *, std::allocator<CLMiLoServiceTable::Entry>> { struct Entry {} *x_3_1_1; } x3; })_fetchServicesByAndPredicates:(id)arg1 sortDescriptors:(id)arg2 andLimit:(unsigned long long)arg3;
- (bool)deleteAllServicesWithExceptions:(const void*)arg1;
- (bool)deleteAllServicesWithUUIDs:(struct vector<boost::uuids::uuid, std::allocator<boost::uuids::uuid>> { struct uuid {} *x1; struct uuid {} *x2; struct __compressed_pair<boost::uuids::uuid *, std::allocator<boost::uuids::uuid>> { struct uuid {} *x_3_1_1; } x3; })arg1;
- (bool)deleteOldestsServicesPerClientAboveMaxCount;
- (bool)deleteServiceForUUID:(struct uuid { unsigned char x1[16]; })arg1;
- (struct vector<CLMiLoServiceTable::Entry, std::allocator<CLMiLoServiceTable::Entry>> { struct Entry {} *x1; struct Entry {} *x2; struct __compressed_pair<CLMiLoServiceTable::Entry *, std::allocator<CLMiLoServiceTable::Entry>> { struct Entry {} *x_3_1_1; } x3; })fetchAllRecordsWithLimit:(unsigned int)arg1;
- (struct vector<CLMiLoServiceTable::Entry, std::allocator<CLMiLoServiceTable::Entry>> { struct Entry {} *x1; struct Entry {} *x2; struct __compressed_pair<CLMiLoServiceTable::Entry *, std::allocator<CLMiLoServiceTable::Entry>> { struct Entry {} *x_3_1_1; } x3; })fetchAllServicesForClientId:(const void*)arg1 andUserId:(const void*)arg2;
- (struct vector<CLMiLoServiceTable::Entry, std::allocator<CLMiLoServiceTable::Entry>> { struct Entry {} *x1; struct Entry {} *x2; struct __compressed_pair<CLMiLoServiceTable::Entry *, std::allocator<CLMiLoServiceTable::Entry>> { struct Entry {} *x_3_1_1; } x3; })fetchAllServicesForServiceType:(unsigned long long)arg1;
- (struct optional<CLMiLoServiceTable::Entry> { union { BOOL x_1_1_1; struct Entry { unsigned long long x_2_2_1; struct uuid { unsigned char x_2_3_1[16]; } x_2_2_2; struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long doublex_1_4_1; } x_3_3_1; } x_2_2_3; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_7_1[23]; unsigned char x_1_7_2[0]; unsigned int x_1_7_3 : 7; unsigned int x_1_7_4 : 1; } x_1_6_1; struct __long { char *x_2_7_1; unsigned long long x_2_7_2; unsigned int x_2_7_3 : 63; unsigned int x_2_7_4 : 1; } x_1_6_2; struct __raw { unsigned long long x_3_7_1[3]; } x_1_6_3; } x_1_5_1; } x_1_4_1; } x_4_3_1; } x_2_2_4; unsigned long long x_2_2_5; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_7_1[23]; unsigned char x_1_7_2[0]; unsigned int x_1_7_3 : 7; unsigned int x_1_7_4 : 1; } x_1_6_1; struct __long { char *x_2_7_1; unsigned long long x_2_7_2; unsigned int x_2_7_3 : 63; unsigned int x_2_7_4 : 1; } x_1_6_2; struct __raw { unsigned long long x_3_7_1[3]; } x_1_6_3; } x_1_5_1; } x_1_4_1; } x_6_3_1; } x_2_2_6; } x_1_1_2; } x1; })fetchServiceByUUID:(struct uuid { unsigned char x1[16]; })arg1;
- (id)getAllServiceUUIDs:(unsigned long long)arg1;
- (id)getServiceUUIDsWithServiceType:(unsigned int)arg1;
- (bool)insertEntries:(const void*)arg1;
- (bool)updateAllServicesWithMatchingClientId:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_4_1[23]; unsigned char x_1_4_2[0]; unsigned int x_1_4_3 : 7; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __long { char *x_2_4_1; unsigned long long x_2_4_2; unsigned int x_2_4_3 : 63; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })arg1 withNewClientId:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_4_1[23]; unsigned char x_1_4_2[0]; unsigned int x_1_4_3 : 7; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __long { char *x_2_4_1; unsigned long long x_2_4_2; unsigned int x_2_4_3 : 63; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })arg2;
- (bool)updateAllServicesWithMatchingServiceUUID:(struct uuid { unsigned char x1[16]; })arg1 withNewServiceUUID:(struct uuid { unsigned char x1[16]; })arg2;
- (bool)updateLastActiveTime:(struct time_point<cl::chrono::CFAbsoluteTimeClock, std::chrono::duration<long double>> { struct duration<long double, std::ratio<1>> { long doublex_1_1_1; } x1; })arg1 forService:(struct uuid { unsigned char x1[16]; })arg2;
- (bool)updateServiceLocationTypes:(struct uuid { unsigned char x1[16]; })arg1 withLocationTypes:(unsigned long long)arg2;

@end
