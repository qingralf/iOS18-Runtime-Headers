/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MobileInBoxUpdate.framework/MobileInBoxUpdate
 */

@interface MIBUDeviceNFC : MIBUDeviceBase {
    NSData * _apNonce;
    NSNumber * _boardID;
    NSString * _buildVersion;
    NSNumber * _chipID;
    NSNumber * _ecid;
    MIBUNFCReaderSession * _mibureaderSession;
    MIBUNetworkInfo * _networkInfo;
    NSObject<NFSession> * _nfSession;
    NSString * _osVersion;
    bool  _productionMode;
    NSNumber * _protocolVersion;
    NFReaderSession * _readerSession;
    NSNumber * _securityDomain;
    bool  _securityMode;
    NSData * _sepNonce;
    NSString * _serialNumber;
    NSNumber * _sikaFuse;
    bool  _sikaFuseExists;
    MIBUDeviceStatus * _status;
    bool  _uidMode;
}

@property (nonatomic, retain) MIBUNFCReaderSession *mibureaderSession;
@property (nonatomic, retain) MIBUNetworkInfo *networkInfo;
@property (nonatomic, retain) NSObject<NFSession> *nfSession;
@property (nonatomic, retain) NFReaderSession *readerSession;
@property (nonatomic, retain) MIBUDeviceStatus *status;

- (void).cxx_destruct;
- (id)apNonce;
- (id)boardID;
- (id)buildVersion;
- (id)chipID;
- (id)ecid;
- (bool)endSession;
- (void)getDeviceInfo:(id*)arg1;
- (id)init;
- (id)mibureaderSession;
- (id)networkInfo;
- (id)nfSession;
- (id)osVersion;
- (bool)productionMode;
- (id)protocolVersion;
- (id)readerSession;
- (id)securityDomain;
- (bool)securityMode;
- (id)sepNonce;
- (id)serialNumber;
- (void)setApNonce:(id)arg1;
- (void)setBoardID:(id)arg1;
- (void)setChipID:(id)arg1;
- (void)setEcid:(id)arg1;
- (void)setMibureaderSession:(id)arg1;
- (void)setNetworkInfo:(id)arg1;
- (void)setNfSession:(id)arg1;
- (void)setProductionMode:(bool)arg1;
- (void)setReaderSession:(id)arg1;
- (void)setSecurityDomain:(id)arg1;
- (void)setSecurityMode:(bool)arg1;
- (void)setSepNonce:(id)arg1;
- (void)setSikaFuse:(id)arg1;
- (void)setSikaFuseExists:(bool)arg1;
- (void)setStatus:(id)arg1;
- (void)setUidMode:(bool)arg1;
- (bool)shutdown:(id*)arg1;
- (id)sikaFuse;
- (bool)sikaFuseExists;
- (bool)startDiag:(id*)arg1;
- (bool)startSession;
- (id)status;
- (bool)uidMode;

@end
