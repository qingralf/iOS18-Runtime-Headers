/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari
 */

@interface MobileSafari.QuickTabSwitcher : _TtGC12MobileSafari14CollectionViewCCS_16QuickTabSwitcher6Layout_ <UIGestureRecognizerDelegate> {
    void $__lazy_storage_$_contentInsetsVisibilityForPinchingItem;
    void $__lazy_storage_$_cornerRadiusForPinchingItem;
    void $__lazy_storage_$_heightPercentageForPinchingItem;
    void $__lazy_storage_$_neighboringItemVisibilityDuringGesture;
    void $__lazy_storage_$_panGestureRecognizer;
    void $__lazy_storage_$_panGestureRecognizerForTrackingPinchTranslationVelocity;
    void $__lazy_storage_$_pinchGestureRecognizer;
    void allowsPinchGesture;
    void borrowedCapsuleRegistrations;
    void borrowedContentViewManager;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  borrowedContentViewRegistration;
    void browserContentInsets;
    void didInjectPanGestureVelocity;
    void gestureHandlers;
    void isSelectingInteractivelyInsertedItem;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  itemHiddenInOtherViews;
    void itemHiddenInOtherViewsCount;
    void itemsHidingForGestureAction;
    void metrics;
    void presentationGestureAnimationAssertion;
    void selectionHandler;
    void tabSnapshotPool;
    void visibilityAssertion;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (void)didReceivePanGesture:(id)arg1;
- (void)didReceivePinchGesture:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

@end
