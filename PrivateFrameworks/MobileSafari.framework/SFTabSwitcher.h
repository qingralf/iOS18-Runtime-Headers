/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari
 */

@interface SFTabSwitcher : UIViewController {
    void wrapped;
}

@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } browserContentInsets;
@property (nonatomic, readonly) bool canBecomeFirstResponder;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } capsuleReferenceFrame;
@property (nonatomic, readonly) bool isSelectingInteractivelyInsertedItem;
@property (nonatomic, readonly) bool isVisible;
@property (nonatomic) double linkedPanGesturePageWidth;
@property (nonatomic, readonly) UIPanGestureRecognizer *panGestureRecognizer;
@property (nonatomic, readonly) UIPanGestureRecognizer *panGestureRecognizerForTrackingPinchTranslationVelocity;
@property (nonatomic, readonly) UIPinchGestureRecognizer *pinchGestureRecognizer;
@property (nonatomic) <SFTabSwitcherPresentationObserving> *presentationObserver;
@property (nonatomic, readonly) long long presentationState;
@property (nonatomic, readonly) double quickTabSwitcherPageWidth;
@property (nonatomic) bool showsSidebarToggle;
@property (nonatomic, readonly) UIBarButtonItem *sidebarToggleBarButtonItem;
@property (nonatomic, readonly) NSArray *sortedSelectedItems;
@property (nonatomic, readonly) SFTabOverviewDisplayItem *tabOverviewDisplayItem;
@property (nonatomic, readonly) bool tabOverviewIsVisible;
@property (nonatomic, retain) UIView *transitionViewForReducedMotion;
@property (nonatomic, readonly) SFTabSwitcherPage *visiblePage;

- (void).cxx_destruct;
- (void)animateSwitchingToItem:(id)arg1;
- (void)applyConfiguration:(id)arg1;
- (void)applyContent:(id)arg1;
- (void)applyContent:(id)arg1 animated:(bool)arg2;
- (bool)becomeFirstResponder;
- (void)beginAnimatedSizeTransition;
- (void)beginRetitlingVisiblePage;
- (void)beginSearching;
- (void)beginSearchingWithQuery:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })browserContentInsets;
- (bool)canBecomeFirstResponder;
- (void)cancelRetitlingVisiblePage;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })capsuleReferenceFrame;
- (void)clearHighlightedCapsule;
- (void)detachBorrowedCapsuleForItem:(id)arg1;
- (void)didReceivePanGesture:(id)arg1;
- (void)dismissToItem:(id)arg1;
- (void)endAnimatedSizeTransition;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForLinkedPanningItemWithIdentifier:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithTabIconPool:(id)arg1 tabSnapshotPool:(id)arg2;
- (bool)isSelectingInteractivelyInsertedItem;
- (bool)isVisible;
- (double)linkedPanGesturePageWidth;
- (void)loadView;
- (id)panGestureRecognizer;
- (id)panGestureRecognizerForTrackingPinchTranslationVelocity;
- (void)performTransaction:(id)arg1 withUpdates:(id /* block */)arg2;
- (id)pinchGestureRecognizer;
- (void)present;
- (id)presentationObserver;
- (long long)presentationState;
- (double)quickTabSwitcherPageWidth;
- (void)scrollToNextPage;
- (void)scrollToPage:(id)arg1;
- (void)scrollToPreviousPage;
- (void)scrollVisiblePageToTopWithoutAnimation;
- (void)setBorrowedContentSize:(struct CGSize { double x1; double x2; })arg1 obscuredInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (void)setBrowserContentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setCapsuleReferenceFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setLinkedPanGesturePageWidth:(double)arg1;
- (void)setPresentationObserver:(id)arg1;
- (void)setShowsSidebarToggle:(bool)arg1;
- (void)setTransitionViewForReducedMotion:(id)arg1;
- (bool)showsSidebarToggle;
- (id)sidebarToggleBarButtonItem;
- (id)sortedSelectedItems;
- (id)tabOverviewDisplayItem;
- (bool)tabOverviewIsVisible;
- (id)transitionViewForReducedMotion;
- (id)visiblePage;
- (long long)visibleSnapshotLimitForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 traitCollection:(id)arg2;

@end
