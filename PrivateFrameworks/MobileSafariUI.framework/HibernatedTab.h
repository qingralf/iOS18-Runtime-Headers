/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MobileSafariUI.framework/MobileSafariUI
 */

@interface HibernatedTab : NSObject <CollectionViewTab, WBSSiriIntelligenceDonorTabDataProviding> {
    NSArray * _URLStringComponents;
    NSString * _URLStringForLastSearch;
    NSArray * _ancestorUUIDs;
    BrowserController * _browserController;
    SFNavigationBarItem * _cachedNavigationBarItem;
    NSURL * _cachedURLForIconUpdate;
    bool  _closed;
    id  _faviconToken;
    bool  _hasDeferredNavigation;
    double  _idForWebExtensions;
    NSString * _lastSearchTerm;
    double  _lastViewedTime;
    bool  _matchedLastSearch;
    bool  _pinned;
    NSString * _pinnedTitle;
    NSURL * _pinnedURL;
    WBSWebExtensionTabPosition * _previousWebExtensionTabPosition;
    NSArray * _shareParticipants;
    bool  _shouldSelectOriginatingTabWhenClosed;
    bool  _showingErrorPage;
    bool  _skipLocalAttributesUpdates;
    bool  _skipSyncableTabUpdates;
    bool  _suppressWebExtensionEvents;
    TabBarItem * _tabBarItem;
    TabDocumentCollectionItem * _tabCollectionItem;
    TabOverviewItem * _tabOverviewItem;
    UIColor * _themeColor;
    NSString * _title;
    NSString * _titleForLastSearch;
    NSArray * _titleWords;
    UnifiedTabBarItem * _unifiedTabBarItem;
    bool  _unread;
    NSTimer * _updateFaviconTimer;
    NSURL * _url;
    NSUUID * _uuid;
    WBTab * _wbTab;
}

@property (nonatomic, readonly) NSString *URLString;
@property (nonatomic, copy) NSArray *URLStringComponents;
@property (nonatomic, copy) NSString *URLStringForLastSearch;
@property (getter=isActive, nonatomic, readonly) bool active;
@property (nonatomic, readonly, copy) NSString *addressForNewBookmark;
@property (nonatomic, readonly, copy) NSArray *ancestorTabIdentifiers;
@property (nonatomic, readonly) NSArray *ancestorUUIDs;
@property (nonatomic, readonly) NSString *appEntityUUIDString;
@property (nonatomic) BrowserController *browserController;
@property (nonatomic, readonly) SFNavigationBarItem *cachedNavigationBarItem;
@property (nonatomic, readonly) bool canSetPinned;
@property (nonatomic) unsigned long long changedPropertiesForOnUpdatedWebExtensionEvent;
@property (getter=isClosed, nonatomic) bool closed;
@property (nonatomic, readonly) WBSCloudTab *cloudTab;
@property (nonatomic, readonly) NSURL *committedURL;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSURL *expectedOrCurrentURL;
@property (nonatomic, readonly) NSURL *expectedOrCurrentURLOrLastActiveURLIfCrashed;
@property (nonatomic) bool hasBeenInserted;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double idForWebExtensions;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) bool isArticle;
@property (nonatomic, readonly) bool isAudible;
@property (nonatomic, readonly) bool isBlank;
@property (nonatomic, readonly) bool isFrontmost;
@property (nonatomic, readonly) bool isInReaderMode;
@property (nonatomic, readonly) bool isLoadingComplete;
@property (nonatomic, readonly) bool isMuted;
@property (nonatomic, readonly) bool isPinnedTab;
@property (nonatomic, readonly) bool isPrivate;
@property (nonatomic, readonly) double lastActivationTime;
@property (nonatomic, copy) NSString *lastSearchTerm;
@property (nonatomic) double lastViewedTime;
@property (nonatomic, readonly) LPLinkMetadata *linkMetadataForSharing;
@property (getter=isLoading, nonatomic, readonly) bool loading;
@property (nonatomic) bool matchedLastSearch;
@property (nonatomic, readonly) SFNavigationBarItem *navigationBarItem;
@property (nonatomic, readonly) long long pageStatus;
@property (nonatomic, readonly) NSURL *pendingURLForWebExtensions;
@property (getter=isPinned, nonatomic) bool pinned;
@property (nonatomic, copy) NSString *pinnedTitle;
@property (nonatomic, copy) NSURL *pinnedURL;
@property (nonatomic, retain) WBSWebExtensionTabPosition *previousWebExtensionTabPosition;
@property (getter=isPrivateBrowsingEnabled, nonatomic, readonly) bool privateBrowsingEnabled;
@property (nonatomic, readonly) WBProfile *profile;
@property (nonatomic, copy) NSArray *shareParticipants;
@property (nonatomic, readonly) bool shouldSelectOriginatingTabWhenClosed;
@property (getter=isShowingSystemStartPage, nonatomic, readonly) bool showingSystemStartPage;
@property (readonly) Class superclass;
@property (nonatomic) bool suppressWebExtensionEvents;
@property (nonatomic, readonly) TabBarItem *tabBarItem;
@property (nonatomic, readonly) TabDocumentCollectionItem *tabCollectionItem;
@property (nonatomic, readonly) NSArray *tabCollectionItems;
@property (nonatomic, readonly) WBSSiriIntelligenceDonorTabData *tabDataForSpotlightDonation;
@property (nonatomic, readonly) TabOverviewItem *tabOverviewItem;
@property (nonatomic, readonly) SFTabStateData *tabStateData;
@property (nonatomic, readonly, copy) NSString *tabTitle;
@property (nonatomic, readonly, copy) id /* block */ tabUpdateBlock;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } tabViewSize;
@property (nonatomic, readonly, copy) NSString *title;
@property (nonatomic, copy) NSString *titleForLastSearch;
@property (nonatomic, readonly, copy) NSString *titleForNewBookmark;
@property (nonatomic, copy) NSArray *titleWords;
@property (nonatomic, readonly) WBSTranslationContext *translationContext;
@property (nonatomic, readonly) UnifiedTabBarItem *unifiedTabBarItem;
@property (getter=isUnread, nonatomic) bool unread;
@property (nonatomic, readonly, copy) NSURL *url;
@property (nonatomic, readonly) NSURL *urlForExtensions;
@property (nonatomic, readonly, copy) NSURL *urlForSharing;
@property (nonatomic, readonly, copy) NSUUID *uuid;
@property (nonatomic, readonly, copy) NSString *uuidString;
@property (setter=setWBTab:, nonatomic, retain) WBTab *wbTab;
@property (nonatomic, readonly) NSUUID *webClipID;
@property (nonatomic, readonly) <WBSWebExtensionWindow> *webExtensionWindow;
@property (nonatomic, readonly) SFWebExtensionsController *webExtensionsController;
@property (nonatomic, readonly) WKWebView *webViewForExtensions;
@property (nonatomic, readonly, copy) NSString *windowIdentifier;
@property (nonatomic) double zoomFactor;

- (void).cxx_destruct;
- (id)URLString;
- (id)URLStringComponents;
- (id)URLStringForLastSearch;
- (void)_cancelFaviconUpdate;
- (id)_localAttributes;
- (void)_notifyDidUpdateTabCollectionItem;
- (void)_searchEngineControllerDidFinishPopulating:(id)arg1;
- (void)_setIcon:(id)arg1 isMonogram:(bool)arg2;
- (id)_titleAllowURLStringFallback:(bool)arg1 allowUntitled:(bool)arg2;
- (id)_titleForStatePersistingForTabGroupTab;
- (id)_titleForStatePersistingForTabStateData;
- (void)_updateNavigationBarItem;
- (void)activateForWebExtensionContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)addressForNewBookmark;
- (id)ancestorTabIdentifiers;
- (id)ancestorUUIDs;
- (id)appEntityUUIDString;
- (id)browserController;
- (id)cachedNavigationBarItem;
- (bool)canSetPinned;
- (unsigned long long)changedPropertiesForOnUpdatedWebExtensionEvent;
- (void)clearBackForwardList;
- (void)clearBrowserController;
- (void)close;
- (void)closeForWebExtensionContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)cloudTab;
- (id)committedURL;
- (id)currentUnifiedTabBarItem;
- (void)dealloc;
- (void)detectWebpageLocaleForWebExtensionContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)expectedOrCurrentURL;
- (id)expectedOrCurrentURLOrLastActiveURLIfCrashed;
- (void)goBack;
- (void)goBackForWebExtensionContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)goForward;
- (void)goForwardForWebExtensionContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)hasBeenInserted;
- (double)idForWebExtensions;
- (id)identifier;
- (unsigned long long)indexInWindowForWebExtensionContext:(id)arg1;
- (id)initWithTabDocument:(id)arg1;
- (id)initWithWBTab:(id)arg1 browserController:(id)arg2;
- (bool)isActive;
- (bool)isArticle;
- (bool)isAudible;
- (bool)isAudibleForWebExtensionContext:(id)arg1;
- (bool)isBlank;
- (bool)isClosed;
- (bool)isFrontmost;
- (bool)isInReaderMode;
- (bool)isLoading;
- (bool)isLoadingComplete;
- (bool)isLoadingCompleteForWebExtensionContext:(id)arg1;
- (bool)isMuted;
- (bool)isMutedForWebExtensionContext:(id)arg1;
- (bool)isPinned;
- (bool)isPinnedForWebExtensionContext:(id)arg1;
- (bool)isPinnedTab;
- (bool)isPlayingAudioForWebExtensionContext:(id)arg1;
- (bool)isPrivate;
- (bool)isPrivateBrowsingEnabled;
- (bool)isReaderModeActiveForWebExtensionContext:(id)arg1;
- (bool)isReaderModeAvailableForWebExtensionContext:(id)arg1;
- (bool)isReaderModeShowingForWebExtensionContext:(id)arg1;
- (bool)isReusableForURL:(id)arg1 webClipURL:(id)arg2;
- (bool)isSelectedForWebExtensionContext:(id)arg1;
- (bool)isShowingSystemStartPage;
- (bool)isUnread;
- (id)itemForTabCollectionView:(id)arg1;
- (double)lastActivationTime;
- (id)lastSearchTerm;
- (double)lastViewedTime;
- (id)linkMetadataForSharing;
- (void)loadURL:(id)arg1;
- (void)loadURL:(id)arg1 forWebExtensionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)loadURL:(id)arg1 title:(id)arg2 skipSyncableTabUpdates:(bool)arg3;
- (bool)matchedLastSearch;
- (void)mute;
- (id)navigationBarItem;
- (long long)pageStatus;
- (id)parentTabForWebExtensionContext:(id)arg1;
- (double)parentTabIDForWebExtensions;
- (id)pendingURLForWebExtensionContext:(id)arg1;
- (id)pendingURLForWebExtensions;
- (id)pinnedTitle;
- (id)pinnedURL;
- (id)previousWebExtensionTabPosition;
- (id)profile;
- (id)readingListAddress;
- (void)reload;
- (void)reloadFromOrigin;
- (void)reloadFromOrigin:(bool)arg1 forWebExtensionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)resetTabViewItems;
- (void)restoreStateFromTab:(id)arg1;
- (void)select;
- (void)setBrowserController:(id)arg1;
- (void)setChangedPropertiesForOnUpdatedWebExtensionEvent:(unsigned long long)arg1;
- (void)setClosed:(bool)arg1;
- (void)setHasBeenInserted:(bool)arg1;
- (void)setLastSearchTerm:(id)arg1;
- (void)setLastViewedTime:(double)arg1;
- (void)setMatchedLastSearch:(bool)arg1;
- (void)setMuted:(bool)arg1 forWebExtensionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setNeedsNewTabSnapshot;
- (void)setPinned:(bool)arg1;
- (void)setPinned:(bool)arg1 forWebExtensionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setPinnedTitle:(id)arg1;
- (void)setPinnedURL:(id)arg1;
- (void)setPreviousWebExtensionTabPosition:(id)arg1;
- (void)setReaderModeActive:(bool)arg1 forWebExtensionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setReaderModeShowing:(bool)arg1 forWebExtensionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setSelected:(bool)arg1 forWebExtensionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setShareParticipants:(id)arg1;
- (void)setSuppressWebExtensionEvents:(bool)arg1;
- (void)setTitleForLastSearch:(id)arg1;
- (void)setTitleWords:(id)arg1;
- (void)setURLStringComponents:(id)arg1;
- (void)setURLStringForLastSearch:(id)arg1;
- (void)setUnread:(bool)arg1;
- (void)setWBTab:(id)arg1;
- (void)setZoomFactor:(double)arg1;
- (void)setZoomFactor:(double)arg1 forWebExtensionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)shareParticipants;
- (bool)shouldSelectOriginatingTabWhenClosed;
- (struct CGSize { double x1; double x2; })sizeForWebExtensionContext:(id)arg1;
- (bool)suppressWebExtensionEvents;
- (id)tabBarItem;
- (id)tabCollectionItem;
- (id)tabCollectionItems;
- (id)tabDataForSpotlightDonation;
- (id)tabOverviewItem;
- (id)tabStateData;
- (id)tabTitle;
- (id /* block */)tabUpdateBlock;
- (struct CGSize { double x1; double x2; })tabViewSize;
- (id)title;
- (id)titleForCloudTab;
- (id)titleForLastSearch;
- (id)titleForNewBookmark;
- (id)titleForSharing;
- (id)titleForTabCollection;
- (id)titleForWebExtensionContext:(id)arg1;
- (id)titleWords;
- (void)toggleReader;
- (id)topBarThemeForTabOverviewShowingThemeColor:(bool)arg1;
- (id)translationContext;
- (id)unifiedTabBarItem;
- (void)unmute;
- (void)updateAncestryWithParentTab:(id)arg1;
- (void)updateTabIcon;
- (void)updateTabIconWithDelay:(double)arg1;
- (void)updateTabTitle;
- (void)updateUsesDarkTheme;
- (id)url;
- (id)urlForCloudTab;
- (id)urlForExtensions;
- (id)urlForSharing;
- (id)urlForStatePersisting;
- (id)urlForWebExtensionContext:(id)arg1;
- (id)urlString;
- (id)uuid;
- (id)uuidString;
- (id)wbTab;
- (id)webClipID;
- (id)webExtensionWindow;
- (id)webExtensionsController;
- (id)webViewForExtensions;
- (id)webViewForWebExtensionContext:(id)arg1;
- (id)webViewsThatCanReceiveMessages;
- (void)willClose;
- (id)windowForWebExtensionContext:(id)arg1;
- (id)windowIdentifier;
- (double)zoomFactor;
- (double)zoomFactorForWebExtensionContext:(id)arg1;

@end
