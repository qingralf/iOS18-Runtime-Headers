/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MobileSafariUI.framework/MobileSafariUI
 */

@interface SFTabOverviewItemContentView : UIView {
    bool  _allowsBorrowedContentTopBackdropUnderlap;
    bool  _allowsSnapshotTopBackdropUnderlap;
    UIView * _attachedView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _attachedViewReferenceRect;
    UIView * _borrowedContentView;
    TabThumbnailCloseButton * _closeButton;
    bool  _contentSizeIsAccessibilityCategory;
    double  _cornerRadius;
    <SFTabOverviewItemContentViewDelegate> * _delegate;
    UIView * _dimmingView;
    bool  _enableDelegateLayoutNotification;
    UIView * _headerBackgroundView;
    unsigned long long  _mediaStateIcon;
    bool  _minYMatchesTopBarMaxYWhenZoomed;
    UIView * _participantsBackgroundView;
    SFAvatarStackView * _participantsView;
    UIView * _placeholderView;
    long long  _preferredHeaderMode;
    bool  _recording;
    TabThumbnailRecordingIndicator * _recordingIndicatorView;
    double  _shadowOpacity;
    UIView * _snapshotClipperView;
    TabSnapshotImageView * _snapshotView;
    double  _titleHeight;
    double  _titleRevealPercent;
    TabIconAndTitleView * _titleView;
    _SFBarTheme * _topBarTheme;
    double  _visibleTopBackdropHeight;
}

@property (nonatomic) bool allowsBorrowedContentTopBackdropUnderlap;
@property (nonatomic) bool allowsSnapshotTopBackdropUnderlap;
@property (nonatomic, retain) UIView *attachedView;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } attachedViewReferenceRect;
@property (nonatomic, retain) UIView *borrowedContentView;
@property (nonatomic, readonly) UIButton *closeButton;
@property (nonatomic) double cornerRadius;
@property (nonatomic) <SFTabOverviewItemContentViewDelegate> *delegate;
@property (nonatomic, retain) UIView *dimmingView;
@property (nonatomic) bool enableDelegateLayoutNotification;
@property (nonatomic, readonly) UIView *headerBackgroundView;
@property (nonatomic, retain) UIImage *icon;
@property (nonatomic) unsigned long long mediaStateIcon;
@property (nonatomic) bool minYMatchesTopBarMaxYWhenZoomed;
@property (nonatomic, readonly) UIView *participantsBackgroundView;
@property (nonatomic, readonly) UIView *placeholderView;
@property (getter=isRecording, nonatomic) bool recording;
@property (nonatomic, readonly) UIView *recordingIndicatorView;
@property (nonatomic) double shadowOpacity;
@property (nonatomic, copy) NSArray *shareParticipants;
@property (nonatomic, readonly) UIView *snapshotClipperView;
@property (nonatomic, retain) UIImage *snapshotImage;
@property (nonatomic, retain) TabSnapshotImageView *snapshotView;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, readonly) double titleHeight;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } titlePadding;
@property (nonatomic) double titleRevealPercent;
@property (nonatomic, readonly) TabIconAndTitleView *titleView;
@property (nonatomic, retain) _SFBarTheme *topBarTheme;
@property (getter=isUnread, nonatomic) bool unread;
@property (nonatomic) double visibleTopBackdropHeight;

+ (void)initialize;

- (void).cxx_destruct;
- (id)_headerBackgroundColor;
- (void)_updateContentSizeCategory;
- (bool)allowsBorrowedContentTopBackdropUnderlap;
- (bool)allowsSnapshotTopBackdropUnderlap;
- (id)attachedView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })attachedViewReferenceRect;
- (id)borrowedContentView;
- (bool)canBecomeFocused;
- (id)closeButton;
- (double)cornerRadius;
- (id)delegate;
- (id)dimmingView;
- (long long)effectiveHeaderMode;
- (bool)enableDelegateLayoutNotification;
- (id)focusEffect;
- (id)headerBackgroundView;
- (id)icon;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isRecording;
- (bool)isUnread;
- (void)layoutSubviews;
- (unsigned long long)mediaStateIcon;
- (bool)minYMatchesTopBarMaxYWhenZoomed;
- (id)participantsBackgroundView;
- (id)placeholderView;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)recordingIndicatorView;
- (void)setAllowsBorrowedContentTopBackdropUnderlap:(bool)arg1;
- (void)setAllowsSnapshotTopBackdropUnderlap:(bool)arg1;
- (void)setAttachedView:(id)arg1;
- (void)setAttachedViewReferenceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setBorrowedContentView:(id)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDimmingView:(id)arg1;
- (void)setEnableDelegateLayoutNotification:(bool)arg1;
- (void)setIcon:(id)arg1;
- (void)setMediaStateIcon:(unsigned long long)arg1;
- (void)setMinYMatchesTopBarMaxYWhenZoomed:(bool)arg1;
- (void)setRecording:(bool)arg1;
- (void)setShadowOpacity:(double)arg1;
- (void)setShareParticipants:(id)arg1;
- (void)setSnapshotImage:(id)arg1;
- (void)setSnapshotView:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleRevealPercent:(double)arg1;
- (void)setTopBarTheme:(id)arg1;
- (void)setUnread:(bool)arg1;
- (void)setVisibleTopBackdropHeight:(double)arg1;
- (double)shadowOpacity;
- (id)shareParticipants;
- (id)snapshotClipperView;
- (id)snapshotImage;
- (id)snapshotView;
- (id)title;
- (double)titleHeight;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })titlePadding;
- (double)titleRevealPercent;
- (id)titleView;
- (id)topBarTheme;
- (double)visibleTopBackdropHeight;

@end
