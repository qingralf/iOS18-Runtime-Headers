/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MobileSafariUI.framework/MobileSafariUI
 */

@interface TabCollectionViewManager : NSObject <SFTabHoverPreviewControllerDelegate, TabBarDelegate, TabBarManagerObserving, TabCollectionViewProviding, TabDocumentRenderingProgressEventObserving, TabDragDropDataSource, TabGroupSwitcherViewControllerDelegate, TabOverviewDelegate, TabSnapshotCacheDelegate> {
    BrowserController * _browserController;
    <TabCollectionViewManagerDataSource> * _dataSource;
    bool  _flushPendingSnapshots;
    NSArray * _flushPendingSnapshotsCompletions;
    NSMutableSet * _hiddenTabUUIDs;
    SFTabIconPool * _iconPool;
    NSString * _lastSearchTerm;
    <TabCollectionItem> * _placeholderItem;
    unsigned long long  _placeholderItemIndex;
    bool  _placeholderItemIsPrivate;
    id /* block */  _postponedSnapshotInvalidationBlock;
    id /* block */  _postponedSnapshotInvalidationCondition;
    bool  _privateBrowsingEnabled;
    NSArray * _searchTermWords;
    bool  _shouldDeferSnapshotRequest;
    bool  _shouldUpdateSnapshotsTemporarily;
    TabSnapshotCache * _snapshotCache;
    bool  _snapshotInvalidationIsPostponed;
    SFTabSnapshotPool * _snapshotPool;
    bool  _snapshotsEnabled;
    bool  _suppressTabBarAnimation;
    TabBar * _tabBar;
    unsigned long long  _tabBarItemsFixed;
    TabBarManager * _tabBarManager;
    TabDragDropInteractionController * _tabDragDropController;
    TabGroupSwitcherViewController * _tabGroupSwitcherViewController;
    TabOverview * _tabOverview;
    unsigned long long  _tabOverviewItemsFixed;
    bool  _tabOverviewVisible;
    <CollectionViewTab> * _tabShowingPreview;
    TabSwitcherViewController * _tabSwitcherViewController;
    long long  _tabThumbnailCollectionViewStyle;
    bool  _tabThumbnailViewVisible;
}

@property (nonatomic, readonly, copy) NSSet *allSnapshotIdentifiers;
@property (nonatomic) BrowserController *browserController;
@property (nonatomic) <TabCollectionViewManagerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasTabBar;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) SFTabIconPool *iconPool;
@property (nonatomic, copy) id /* block */ postponedSnapshotInvalidationCondition;
@property (nonatomic, readonly) bool privateBrowsingEnabled;
@property (nonatomic) bool shouldDeferSnapshotRequest;
@property (getter=isShowingTabView, nonatomic, readonly) bool showingTabView;
@property (nonatomic, readonly) TabSnapshotCache *snapshotCache;
@property (nonatomic) bool snapshotInvalidationIsPostponed;
@property (nonatomic, readonly) SFTabSnapshotPool *snapshotPool;
@property (getter=areSnapshotsEnabled, nonatomic) bool snapshotsEnabled;
@property (readonly) Class superclass;
@property (nonatomic) bool suppressTabBarAnimation;
@property (nonatomic) TabBar *tabBar;
@property (nonatomic, readonly) bool tabBarItemsFixed;
@property (nonatomic) TabBarManager *tabBarManager;
@property (nonatomic, readonly, copy) NSArray *tabCollectionViews;
@property (nonatomic, readonly) TabDragDropInteractionController *tabDragDropController;
@property (nonatomic, readonly) TabGroupSwitcherViewController *tabGroupSwitcherViewController;
@property (nonatomic, readonly) <TabMenuProviderDataSource> *tabMenuProviderDataSource;
@property (nonatomic, readonly) TabOverview *tabOverview;
@property (getter=isTabOverviewVisible, nonatomic) bool tabOverviewVisible;
@property (nonatomic, readonly) TabSwitcherViewController *tabSwitcherViewController;
@property (nonatomic, readonly) <TabThumbnailCollectionView> *tabThumbnailCollectionView;
@property (nonatomic) long long tabThumbnailCollectionViewStyle;
@property (getter=isTabThumbnailViewVisible, nonatomic) bool tabThumbnailViewVisible;
@property (nonatomic, readonly) UIView<TabContainerView> *tabViewContainerView;
@property (nonatomic) bool tabViewDefersActivation;
@property (nonatomic, readonly) long long visibleTabCollectionViewType;

- (void).cxx_destruct;
- (id)_blankSnapshotGroupIdentifierForTabGroup:(id)arg1;
- (bool)_canUpdateClassicBar;
- (bool)_canUpdateUnifiedBar;
- (id)_contentForSnapshotWithIdentifier:(id)arg1;
- (void)_didReceiveMemoryWarning:(id)arg1;
- (void)_enumerateTabsOrderedByVisibility:(id /* block */)arg1;
- (id)_extensionIconForTabWithURL:(id)arg1 UUID:(id)arg2;
- (id)_hiddenCollectionViewTabs;
- (id)_iconForTabWithUUID:(id)arg1;
- (unsigned long long)_indexToInsertPlaceholderAtTabItem:(id)arg1;
- (bool)_isPrivateBrowsingAndLocked;
- (bool)_isTabHiddenWithUUID:(id)arg1;
- (void)_movePlaceholder:(id)arg1 toIndex:(unsigned long long)arg2;
- (id)_openNewTabInteraction;
- (void)_openTabFromNewTabButton;
- (id)_recentlyClosedTabsMenu;
- (void)_setTabsForDragItems:(id)arg1 hidden:(bool)arg2;
- (void)_setUpTabOverview;
- (void)_setUpTabSwitcherViewController;
- (bool)_shouldShowExplanationView;
- (bool)_shouldUpdateSnapshotsForTabHoverPreview;
- (unsigned long long)_snapshotCacheCapacity;
- (unsigned long long)_snapshotCacheCapacityWithSnapshotsEnabled:(bool)arg1;
- (id)_tabCollectionItemsRemovingHiddenItems:(bool)arg1 outHiddenItems:(id)arg2 outIsDragging:(bool*)arg3 itemRetriever:(id /* block */)arg4;
- (void)_temporarilyUpdateSnapshotsForTabDocument:(id)arg1;
- (void)_updateAddTabMenuProvider;
- (void)_updateClassicTabBarAnimated:(bool)arg1 keepingTabVisibleForItem:(id)arg2;
- (void)_updateSnapshotCacheStateWithCapacity:(unsigned long long)arg1;
- (void)_updateTabBarAnimated:(bool)arg1 keepingTabVisibleForItem:(id)arg2;
- (void)_updateTabSnapshotsAnimated:(bool)arg1;
- (void)_updateTabSnapshotsWithIdentifier:(id)arg1 animated:(bool)arg2;
- (void)_updateUnifiedTabBarAnimated:(bool)arg1 keepingTabVisibleForItem:(id)arg2;
- (id)_urlForTabWithUUID:(id)arg1;
- (void)addSnapshotCacheObserver:(id)arg1;
- (id)allSnapshotIdentifiers;
- (bool)areSnapshotsEnabled;
- (void)beginFixingTabBarItems;
- (void)beginFixingTabOverviewItems;
- (id)browserController;
- (id)cachedContentImageForTabWithUUID:(id)arg1 allowScaledImage:(bool)arg2;
- (unsigned long long)capacityForTabSnapshotCache:(id)arg1;
- (void)clearSnapshotCache;
- (void)closeAllTabsForTabGroupSwitcher:(id)arg1;
- (id)currentItemForTabOverview:(id)arg1;
- (id)dataSource;
- (void)dealloc;
- (void)didBeginTrackingSession:(id)arg1;
- (void)didEndTrackingSession:(id)arg1;
- (void)dismissTabGroupSwitcher:(id)arg1;
- (void)dismissTabHoverPreview;
- (id)dragItemForTab:(id)arg1 tabItem:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })effectiveSafeAreaInsetsForTabCollectionView:(id)arg1;
- (void)endFixingTabBarItems;
- (void)endFixingTabOverviewItems;
- (void)flushPendingSnapshotsWithCompletion:(id /* block */)arg1;
- (bool)hasTabBar;
- (void)hideTabsForDragItems:(id)arg1;
- (id)iconPool;
- (id)init;
- (id)insertPlaceholderAfterTabItem:(id)arg1;
- (void)invalidateSnapshotForTab:(id)arg1;
- (bool)isPlaceholderItemValid:(id)arg1;
- (bool)isShowingTabView;
- (bool)isTabOverviewVisible;
- (bool)isTabThumbnailViewVisible;
- (void)movePlaceholder:(id)arg1 overTabItem:(id)arg2;
- (void)movePlaceholderToEndOfPinnedTabs:(id)arg1;
- (void)openNewTabForTabGroupSwitcher:(id)arg1;
- (void)performBatchUpdatesWithBlock:(id /* block */)arg1;
- (id /* block */)postponedSnapshotInvalidationCondition;
- (void)presentTabGroupSheetForTabGroupSwitcher:(id)arg1;
- (bool)privateBrowsingEnabled;
- (void)removePlaceholderItem:(id)arg1;
- (void)removeSnapshotCacheObserver:(id)arg1;
- (void)removeSnapshotForTabWithUUID:(id)arg1;
- (id)replacePlaceholderItem:(id)arg1 withTabsForDropSession:(id)arg2 dragItems:(id)arg3;
- (void)requestSnapshotForTabDocument:(id)arg1 completion:(id /* block */)arg2;
- (void)setBrowserController:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setPostponedSnapshotInvalidationCondition:(id /* block */)arg1;
- (void)setPrivateBrowsingEnabled:(bool)arg1 animated:(bool)arg2;
- (void)setShouldDeferSnapshotRequest:(bool)arg1;
- (void)setSnapshotInvalidationIsPostponed:(bool)arg1;
- (void)setSnapshotsEnabled:(bool)arg1;
- (void)setSuppressTabBarAnimation:(bool)arg1;
- (void)setTabBar:(id)arg1;
- (void)setTabBarManager:(id)arg1;
- (void)setTabOverviewVisible:(bool)arg1;
- (void)setTabThumbnailCollectionViewStyle:(long long)arg1;
- (void)setTabThumbnailViewVisible:(bool)arg1;
- (void)setTabViewDefersActivation:(bool)arg1;
- (bool)shouldDeferSnapshotRequest;
- (id)snapshotCache;
- (bool)snapshotInvalidationIsPostponed;
- (id)snapshotPool;
- (id)snapshotsToPersistOnDiskForTabSnapshotCache:(id)arg1;
- (bool)suppressTabBarAnimation;
- (id)tabBar;
- (bool)tabBar:(id)arg1 canMoveItem:(id)arg2;
- (void)tabBar:(id)arg1 toggleMediaStateMutedForItem:(id)arg2;
- (bool)tabBarItemsFixed;
- (id)tabBarManager;
- (void)tabBarManager:(id)arg1 didCreateTabBar:(id)arg2;
- (id)tabCollectionView:(id)arg1 borrowContentViewControllerForItem:(id)arg2;
- (id)tabCollectionView:(id)arg1 borrowContentViewForItem:(id)arg2 withTopBackdropView:(id*)arg3 ofHeight:(double)arg4;
- (bool)tabCollectionView:(id)arg1 canCloseItem:(id)arg2;
- (void)tabCollectionView:(id)arg1 closeCloudTab:(id)arg2 onDevice:(id)arg3;
- (void)tabCollectionView:(id)arg1 closeItem:(id)arg2;
- (void)tabCollectionView:(id)arg1 didSelectItem:(id)arg2;
- (bool)tabCollectionView:(id)arg1 includesHeaderInSnapshotForItems:(id)arg2;
- (void)tabCollectionView:(id)arg1 item:(id)arg2 didProduceNavigationIntent:(id)arg3;
- (bool)tabCollectionView:(id)arg1 item:(id)arg2 matchesSearchText:(id)arg3;
- (void)tabCollectionView:(id)arg1 relinquishBorrowedContentView:(id)arg2 forItem:(id)arg3;
- (void)tabCollectionView:(id)arg1 relinquishBorrowedContentViewController:(id)arg2 forItem:(id)arg3;
- (id)tabCollectionView:(id)arg1 snapshotForItem:(id)arg2;
- (bool)tabCollectionView:(id)arg1 validSnapshotExistsForItem:(id)arg2;
- (void)tabCollectionViewBeginIgnoringUserInteraction:(id)arg1 reason:(id)arg2;
- (bool)tabCollectionViewCanDismiss:(id)arg1;
- (void)tabCollectionViewDidCancelDismissal:(id)arg1;
- (void)tabCollectionViewDidDismiss:(id)arg1;
- (void)tabCollectionViewDidPresent:(id)arg1;
- (void)tabCollectionViewDidUpdateItemVisibilityOrder:(id)arg1;
- (void)tabCollectionViewEndIgnoringUserInteraction:(id)arg1 reason:(id)arg2;
- (id)tabCollectionViewForItem:(id)arg1;
- (double)tabCollectionViewItemHeaderHeight:(id)arg1;
- (double)tabCollectionViewItemHeaderHeightIncludedInSnapshot:(id)arg1;
- (void)tabCollectionViewWillDismiss:(id)arg1;
- (void)tabCollectionViewWillPresent:(id)arg1;
- (id)tabCollectionViews;
- (id)tabDragDropController;
- (bool)tabGroupSwitcherCanShowProfileInToolbar:(id)arg1;
- (id)tabGroupSwitcherViewController;
- (void)tabHoverPreviewController:(id)arg1 showPreviewForItem:(id)arg2;
- (void)tabHoverPreviewControllerDismissPreview:(id)arg1;
- (void)tabHoverPreviewControllerNeedsSnapshotUpdate:(id)arg1;
- (bool)tabItem:(id)arg1 matchesSearchText:(id)arg2;
- (id)tabMenuProviderDataSource;
- (id)tabOverview;
- (void)tabOverview:(id)arg1 closeItems:(id)arg2;
- (void)tabOverview:(id)arg1 willInteractivelyCloseItem:(id)arg2;
- (void)tabOverviewDidChangeAllowsInteractivePresentation:(id)arg1;
- (void)tabOverviewWillUpdateInteractivePresentation:(id)arg1;
- (void)tabSnapshotCache:(id)arg1 didCacheSnapshotWithIdentifier:(id)arg2;
- (void)tabSnapshotCache:(id)arg1 didEvictSnapshotWithIdentifier:(id)arg2;
- (void)tabSnapshotCache:(id)arg1 requestSnapshotWithIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)tabSnapshotCacheDidFinishUpdating:(id)arg1;
- (bool)tabSnapshotCacheShouldDeferNextSnapshotRequest:(id)arg1;
- (id)tabSwitcherViewController;
- (id)tabThumbnailCollectionView;
- (long long)tabThumbnailCollectionViewStyle;
- (id)tabViewContainerView;
- (bool)tabViewDefersActivation;
- (id)tabWithUUID:(id)arg1;
- (id)undoManagerForTabCollectionView:(id)arg1;
- (void)unhideTabsForDragItems:(id)arg1;
- (void)updateExplanationViewVisibilityAnimated:(bool)arg1;
- (void)updateSnapshotCacheAndSnapshotActiveTab;
- (void)updateSnapshotCacheState;
- (void)updateSnapshotCacheStateSwitchingFromTabDocument:(id)arg1;
- (void)updateSnapshotIdentifiers;
- (void)updateSnapshotsForTabHoverPreviewIfNeeded;
- (void)updateStartPageSnapshotIfNeededForTabDocument:(id)arg1 currentSnapshotSize:(struct CGSize { double x1; double x2; })arg2;
- (void)updateTabBarAnimated:(bool)arg1;
- (void)updateTabBarAnimated:(bool)arg1 keepingTabVisible:(id)arg2;
- (void)updateTabOverviewItems;
- (void)updateTabViewsAnimatingTabBar:(bool)arg1;
- (long long)visibleTabCollectionViewType;
- (void)webViewDidFirstMeaningfulPaintForTabDocument:(id)arg1;
- (void)willBeginDragSession:(id)arg1;
- (void)willEndDragSession:(id)arg1;

@end
