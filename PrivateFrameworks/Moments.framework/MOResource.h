/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Moments.framework/Moments
 */

@interface MOResource : NSObject <NSCopying, NSSecureCoding> {
    NSString * _assets;
    NSData * _data;
    NSUUID * _identifier;
    NSString * _name;
    unsigned long long  _photoAssetMediaType;
    NSDate * _photoCreationDate;
    NSNumber * _photoCurationScore;
    unsigned long long  _photoFaceCount;
    float  _photoOverallAestheticScore;
    double  _priorityScore;
    long long  _sourceEventAccessType;
    NSUUID * _sourceEventIdentifier;
    unsigned long long  _type;
    double  _value;
}

@property (nonatomic, readonly, retain) NSString *assets;
@property (nonatomic, readonly, retain) NSData *data;
@property (nonatomic, readonly) NSUUID *identifier;
@property (nonatomic, readonly, retain) NSString *name;
@property (nonatomic) unsigned long long photoAssetMediaType;
@property (nonatomic, readonly) NSDate *photoCreationDate;
@property (nonatomic, readonly) NSNumber *photoCurationScore;
@property (nonatomic) unsigned long long photoFaceCount;
@property (nonatomic) float photoOverallAestheticScore;
@property (nonatomic, readonly) double priorityScore;
@property (nonatomic) long long sourceEventAccessType;
@property (nonatomic, copy) NSUUID *sourceEventIdentifier;
@property (nonatomic, readonly) unsigned long long type;
@property (nonatomic, readonly) double value;

+ (id)describeType:(unsigned long long)arg1;
+ (unsigned long long)evergreenTypeFromEvergreenTypeString:(id)arg1;
+ (id)evergreenTypeStringFromEvergreenType:(unsigned long long)arg1;
+ (id)getDedupeKeyForResourceData:(id)arg1 type:(unsigned long long)arg2 error:(id*)arg3;
+ (id)getDictionaryForData:(id)arg1 error:(id*)arg2;
+ (id)getStringTypeForResources:(unsigned long long)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)assets;
- (id)bundleSourceType;
- (id)cityName;
- (id)contactIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)data;
- (unsigned long long)dataAccessTypeFromResourceType:(unsigned long long)arg1;
- (id)describeType;
- (id)description;
- (id)enclosingArea;
- (void)encodeWithCoder:(id)arg1;
- (double)endDate;
- (unsigned long long)evergreenType;
- (id)evergreenTypeName;
- (id)getDedupeKeyError:(id*)arg1;
- (id)getDictionary;
- (unsigned long long)hash;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithEvergreenTypeName:(id)arg1 promptIndex:(unsigned long long)arg2;
- (id)initWithEvergreenTypeName:(id)arg1 promptIndexes:(id)arg2;
- (id)initWithIdentifier:(id)arg1;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2 type:(unsigned long long)arg3 assets:(id)arg4 data:(id)arg5 value:(double)arg6 priorityScore:(double)arg7 photoCurationScore:(id)arg8 photoFaceCount:(unsigned long long)arg9 photoAssetMediaType:(unsigned long long)arg10;
- (id)initWithName:(id)arg1 mapItemHandle:(id)arg2 priorityScore:(double)arg3;
- (id)initWithName:(id)arg1 type:(unsigned long long)arg2;
- (id)initWithName:(id)arg1 type:(unsigned long long)arg2 assets:(id)arg3;
- (id)initWithName:(id)arg1 type:(unsigned long long)arg2 dict:(id)arg3 value:(double)arg4;
- (id)initWithName:(id)arg1 value:(double)arg2;
- (id)initWithPerson:(id)arg1;
- (id)initWithPlace:(id)arg1 startDate:(id)arg2 endDate:(id)arg3;
- (id)initWithWeather:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)location;
- (id)mapItemHandle;
- (id)metaData;
- (id)metaData;
- (id)name;
- (id)personName;
- (unsigned long long)photoAssetMediaType;
- (id)photoCreationDate;
- (id)photoCurationScore;
- (unsigned long long)photoFaceCount;
- (id)photoLocalDate;
- (float)photoOverallAestheticScore;
- (id)placeName;
- (double)placeNameConfidence;
- (unsigned long long)placeType;
- (unsigned long long)placeUserType;
- (id)poiCategory;
- (double)priorityScore;
- (unsigned long long)promptCount;
- (unsigned long long)promptIndex;
- (id)promptIndexes;
- (void)setAssets:(id)arg1;
- (void)setPhotoAssetMediaType:(unsigned long long)arg1;
- (void)setPhotoCreationDate:(id)arg1;
- (void)setPhotoCurationScore:(id)arg1;
- (void)setPhotoFaceCount:(unsigned long long)arg1;
- (void)setPhotoOverallAestheticScore:(float)arg1;
- (void)setPriorityScore:(double)arg1;
- (void)setSourceEventAccessType:(long long)arg1;
- (void)setSourceEventIdentifier:(id)arg1;
- (id)sourceAppBundleIds;
- (long long)sourceEventAccessType;
- (id)sourceEventIdentifier;
- (double)startDate;
- (id)temperature;
- (unsigned long long)type;
- (double)value;
- (id)weatherSummary;
- (id)weatherSymbolName;
- (id)windSpeed;

@end
