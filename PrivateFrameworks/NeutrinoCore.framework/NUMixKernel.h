/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore
 */

@interface NUMixKernel : NUComputeKernel {
    struct { 
        unsigned long long x; 
        unsigned long long y; 
        unsigned long long z; 
    }  _destinationOffset;
    float  _factor;
    struct { 
        struct { 
            unsigned long long x; 
            unsigned long long y; 
            unsigned long long z; 
        } origin; 
        struct { 
            unsigned long long width; 
            unsigned long long height; 
            unsigned long long depth; 
        } size; 
    }  _sourceRegion1;
    struct { 
        struct { 
            unsigned long long x; 
            unsigned long long y; 
            unsigned long long z; 
        } origin; 
        struct { 
            unsigned long long width; 
            unsigned long long height; 
            unsigned long long depth; 
        } size; 
    }  _sourceRegion2;
    <MTLTexture> * _sourceTexture1;
    <MTLTexture> * _sourceTexture2;
}

@property (nonatomic) struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; } destinationOffset;
@property (nonatomic) float factor;
@property (nonatomic) struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; } sourceRegion1;
@property (nonatomic) struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; } sourceRegion2;
@property (nonatomic, retain) <MTLTexture> *sourceTexture1;
@property (nonatomic, retain) <MTLTexture> *sourceTexture2;

+ (void)mixTexture:(id)arg1 region:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg2 withTexture:(id)arg3 region:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg4 factor:(float)arg5 intoTexture:(id)arg6 atPoint:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg7 withCommandBuffer:(id)arg8;
+ (void)mixTexture:(id)arg1 withTexture:(id)arg2 factor:(float)arg3 intoTexture:(id)arg4 withCommandBuffer:(id)arg5;

- (void).cxx_destruct;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })destinationOffset;
- (void)encodeToCommandBuffer:(id)arg1 destinationTexture:(id)arg2;
- (float)factor;
- (void)setDestinationOffset:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
- (void)setFactor:(float)arg1;
- (void)setSourceRegion1:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1;
- (void)setSourceRegion2:(struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })arg1;
- (void)setSourceTexture1:(id)arg1;
- (void)setSourceTexture2:(id)arg1;
- (struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })sourceRegion1;
- (struct { struct { unsigned long long x_1_1_1; unsigned long long x_1_1_2; unsigned long long x_1_1_3; } x1; struct { unsigned long long x_2_1_1; unsigned long long x_2_1_2; unsigned long long x_2_1_3; } x2; })sourceRegion2;
- (id)sourceTexture1;
- (id)sourceTexture2;

@end
