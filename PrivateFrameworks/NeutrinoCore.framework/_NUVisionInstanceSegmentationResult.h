/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore
 */

@interface _NUVisionInstanceSegmentationResult : _NURenderResult <NUVisionInstanceSegmentationResult> {
    NSIndexSet * _gatedInstances;
    VNInstanceMaskObservation * _observation;
    long long  _observationOrientation;
    struct CGSize { 
        double width; 
        double height; 
    }  _observationScale;
    NSDictionary * _perInstanceProperties;
    bool  _usingTargetPoints;
}

@property (nonatomic, readonly) NSIndexSet *backgroundInstances;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSIndexSet *foregroundInstances;
@property (nonatomic, readonly) NSIndexSet *gatedInstances;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSIndexSet *instances;
@property (nonatomic, readonly) VNInstanceMaskObservation *observation;
@property (nonatomic) long long observationOrientation;
@property (nonatomic) struct CGSize { double x1; double x2; } observationScale;
@property (nonatomic, readonly, copy) NSDictionary *perInstanceProperties;
@property (readonly) <NURenderStatistics> *statistics;
@property (readonly) Class superclass;
@property (nonatomic) bool usingTargetPoints;

- (void).cxx_destruct;
- (id)backgroundInstances;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)foregroundInstances;
- (struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })fullExtentForInstance:(unsigned long long)arg1;
- (struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })fullExtentForInstances:(id)arg1;
- (id)gatedInstances;
- (id)initWithObservation:(id)arg1 usingTargetPoints:(bool)arg2 observationOrientation:(long long)arg3 observationScale:(struct CGSize { double x1; double x2; })arg4 perInstanceProperties:(id)arg5;
- (id)instances;
- (id)instancesForCategory:(id)arg1;
- (id)newMaskForInstance:(unsigned long long)arg1 error:(out id*)arg2;
- (id)newMaskForInstances:(id)arg1 error:(out id*)arg2;
- (id)observation;
- (long long)observationOrientation;
- (struct CGSize { double x1; double x2; })observationScale;
- (id)perInstanceProperties;
- (void)setObservationOrientation:(long long)arg1;
- (void)setObservationScale:(struct CGSize { double x1; double x2; })arg1;
- (void)setUsingTargetPoints:(bool)arg1;
- (struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })tightBoundsForInstance:(unsigned long long)arg1;
- (struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })tightBoundsForInstances:(id)arg1;
- (bool)usingTargetPoints;

@end
