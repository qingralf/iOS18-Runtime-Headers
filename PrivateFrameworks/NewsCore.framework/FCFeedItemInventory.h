/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
 */

@interface FCFeedItemInventory : NSObject <FCFeedItemInventoryType, FCOperationThrottlerDelegate, FCReadingHistoryObserving> {
    NSMutableSet * _articleIDsToRescore;
    NFUnfairLock * _articleIDsToRescoreLock;
    FCCloudContext * _context;
    <FCFeedItemServiceType> * _feedItemService;
    FCAsyncSerialQueue * _feedItemsRefreshSerialQueue;
    NSString * _filePath;
    FCPBFeedItemInventory * _latestInventory;
    FCOnce * _loadFromCacheOnce;
    NSString * _loggingKey;
    double  _refreshInterval;
    <FCOperationThrottler> * _targetedRescoreThrottler;
    unsigned int  _version;
}

@property (nonatomic, readonly) NSArray *allFeedItems;
@property (nonatomic, readonly) NSMutableSet *articleIDsToRescore;
@property (nonatomic, readonly) NFUnfairLock *articleIDsToRescoreLock;
@property (nonatomic, readonly) FCCloudContext *context;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <FCFeedItemServiceType> *feedItemService;
@property (nonatomic, readonly) FCAsyncSerialQueue *feedItemsRefreshSerialQueue;
@property (nonatomic, readonly) NSString *filePath;
@property (readonly) unsigned long long hash;
@property (retain) FCPBFeedItemInventory *latestInventory;
@property (nonatomic, readonly) FCOnce *loadFromCacheOnce;
@property (nonatomic, readonly) NSString *loggingKey;
@property (nonatomic, readonly) double refreshInterval;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <FCOperationThrottler> *targetedRescoreThrottler;
@property (nonatomic, readonly) unsigned int version;

- (void).cxx_destruct;
- (void)_adoptInventory:(id)arg1;
- (bool)_isRefreshNeeded;
- (id)_loadInventoryFromCache;
- (void)_populateScoreProfilesForFeedItems:(id)arg1;
- (void)_populateScoreProfilesForFeedItems:(id)arg1 configurationSet:(long long)arg2;
- (void)_prepareForUse;
- (id)_refreshIfNeeded;
- (void)_rescoreInventoryIfNeeded:(id)arg1 forScoringVersion:(unsigned long long)arg2;
- (id)allFeedItemScoreProfilesForConfigurationSet:(long long)arg1 scoringVersion:(unsigned long long)arg2;
- (id)allFeedItems;
- (id)allFeedItemsWithTopic:(id)arg1;
- (id)articleIDsToRescore;
- (id)articleIDsToRescoreLock;
- (id)context;
- (id)feedItemService;
- (id)feedItemsRefreshSerialQueue;
- (id)filePath;
- (id)init;
- (id)initWithContext:(id)arg1 feedItemService:(id)arg2 readingHistory:(id)arg3 filePath:(id)arg4 version:(unsigned int)arg5 refreshInterval:(double)arg6 loggingKey:(id)arg7;
- (id)latestInventory;
- (id)loadFromCacheOnce;
- (id)loggingKey;
- (void)operationThrottler:(id)arg1 performAsyncOperationWithCompletion:(id /* block */)arg2;
- (void)readingHistory:(id)arg1 didChangeFeaturesForArticles:(id)arg2;
- (void)refreshIfNeededWithCompletion:(id /* block */)arg1;
- (double)refreshInterval;
- (void)setLatestInventory:(id)arg1;
- (id)targetedRescoreThrottler;
- (unsigned int)version;

@end
