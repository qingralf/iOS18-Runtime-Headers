/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
 */

@interface FCPuzzle : NSObject <FCContentArchivable, FCPuzzleProviding> {
    NSArray * _allowedStorefrontIDs;
    NSArray * _authors;
    unsigned long long  _behaviorFlags;
    NSArray * _blockedStorefrontIDs;
    NSString * _dataResourceID;
    bool  _deprecated;
    long long  _difficulty;
    NSString * _difficultyDescription;
    bool  _draft;
    NSString * _identifier;
    bool  _ignoreFromStatsAndStreaks;
    FCInterestToken * _interestToken;
    NSString * _language;
    NSDate * _lastModifiedDate;
    NSDate * _loadDate;
    long long  _minimumNewsVersion;
    bool  _paid;
    NSDate * _publishDate;
    NSString * _puzzleDescription;
    NTPBPuzzleRecord * _puzzleRecord;
    <FCPuzzleTypeProviding> * _puzzleType;
    NSArray * _relatedPuzzleIDs;
    bool  _showInfoModalOnFirstPlay;
    NSString * _subtitle;
    NSString * _teaserAnswer;
    NSString * _teaserClue;
    NSString * _teaserDirection;
    NSString * _teaserInfo;
    NSString * _teaserNumber;
    FCAssetHandle * _thumbnailLargeImageAssetHandle;
    FCAssetHandle * _thumbnailSmallImageAssetHandle;
    NSString * _title;
}

@property (nonatomic, readonly, copy) NSArray *allowedStorefrontIDs;
@property (nonatomic, readonly, copy) NSArray *authors;
@property (nonatomic, readonly) unsigned long long behaviorFlags;
@property (nonatomic, readonly, copy) NSArray *blockedStorefrontIDs;
@property (nonatomic, readonly) FCContentArchive *contentArchive;
@property (nonatomic, readonly) FCContentManifest *contentManifest;
@property (nonatomic, readonly, copy) NSString *dataResourceID;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (getter=isDeprecated, nonatomic, readonly) bool deprecated;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long difficulty;
@property (nonatomic, readonly, copy) NSString *difficultyDescription;
@property (getter=isDraft, nonatomic, readonly) bool draft;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) bool ignoreFromStatsAndStreaks;
@property (nonatomic, readonly) FCInterestToken *interestToken;
@property (nonatomic, readonly, copy) NSString *language;
@property (nonatomic, readonly) NSDate *lastModifiedDate;
@property (nonatomic, readonly) NSDate *loadDate;
@property (nonatomic, readonly) long long minimumNewsVersion;
@property (getter=isPaid, nonatomic, readonly) bool paid;
@property (nonatomic, readonly, copy) NSDate *publishDate;
@property (nonatomic, readonly, copy) NSString *publishDateString;
@property (nonatomic, readonly, copy) NSString *puzzleDescription;
@property (nonatomic, readonly) NTPBPuzzleRecord *puzzleRecord;
@property (nonatomic, readonly, retain) <FCPuzzleTypeProviding> *puzzleType;
@property (nonatomic, readonly, copy) NSArray *relatedPuzzleIDs;
@property (nonatomic, readonly) bool showInfoModalOnFirstPlay;
@property (nonatomic, readonly, copy) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSString *teaserAnswer;
@property (nonatomic, readonly) NSString *teaserClue;
@property (nonatomic, readonly) NSString *teaserDirection;
@property (nonatomic, readonly) NSString *teaserInfo;
@property (nonatomic, readonly) NSString *teaserNumber;
@property (nonatomic, readonly) FCAssetHandle *thumbnailLargeImageAssetHandle;
@property (nonatomic, readonly) FCAssetHandle *thumbnailSmallImageAssetHandle;
@property (nonatomic, readonly, copy) NSString *title;

- (void).cxx_destruct;
- (id)allowedStorefrontIDs;
- (id)authors;
- (unsigned long long)behaviorFlags;
- (id)blockedStorefrontIDs;
- (id)contentArchive;
- (id)contentManifest;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dataResourceID;
- (long long)difficulty;
- (id)difficultyDescription;
- (id)identifier;
- (bool)ignoreFromStatsAndStreaks;
- (id)initWithIdentifier:(id)arg1 title:(id)arg2 subtitle:(id)arg3 puzzleDescription:(id)arg4 puzzleType:(id)arg5 dataResourceID:(id)arg6 authors:(id)arg7 publishDate:(id)arg8 isPaid:(bool)arg9 difficulty:(long long)arg10 difficultyDescription:(id)arg11 relatedPuzzleIDs:(id)arg12 thumbnailSmallImageAssetHandle:(id)arg13 thumbnailLargeImageAssetHandle:(id)arg14 loadDate:(id)arg15 teaserClue:(id)arg16 teaserAnswer:(id)arg17 teaserInfo:(id)arg18 teaserDirection:(id)arg19 teaserNumber:(id)arg20 language:(id)arg21 blockedStorefrontIDs:(id)arg22 allowedStorefrontIDs:(id)arg23 minimumNewsVersion:(long long)arg24 showInfoModalOnFirstPlay:(bool)arg25 ignoreFromStatsAndStreaks:(bool)arg26 isDeprecated:(bool)arg27 isDraft:(bool)arg28 lastModifiedDate:(id)arg29;
- (id)initWithPuzzle:(id)arg1 overrides:(id)arg2;
- (id)initWithPuzzleRecord:(id)arg1 puzzleType:(id)arg2 assetManager:(id)arg3 interestToken:(id)arg4 difficultyDescriptions:(id)arg5;
- (id)interestToken;
- (bool)isDeprecated;
- (bool)isDraft;
- (bool)isPaid;
- (id)language;
- (id)lastModifiedDate;
- (id)loadDate;
- (long long)minimumNewsVersion;
- (id)publishDate;
- (id)publishDateString;
- (id)puzzleDescription;
- (id)puzzleRecord;
- (id)puzzleType;
- (id)relatedPuzzleIDs;
- (bool)showInfoModalOnFirstPlay;
- (id)subtitle;
- (id)teaserAnswer;
- (id)teaserClue;
- (id)teaserDirection;
- (id)teaserInfo;
- (id)teaserNumber;
- (id)thumbnailLargeImageAssetHandle;
- (id)thumbnailSmallImageAssetHandle;
- (id)title;

@end
