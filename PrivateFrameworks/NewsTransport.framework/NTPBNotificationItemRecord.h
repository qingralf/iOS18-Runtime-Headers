/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport
 */

@interface NTPBNotificationItemRecord : PBCodable <NSCopying> {
    NSString * _articleID;
    NTPBRecordBase * _base;
    NSString * _body;
    NSString * _clusterID;
    struct { 
        unsigned int targetMinNewsVersion : 1; 
        unsigned int targetDeviceTypes : 1; 
    }  _has;
    COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScores * _notabilityScores;
    NSString * _notificationID;
    NSMutableArray * _suppressIfFollowingTagIDs;
    unsigned int  _targetDeviceTypes;
    long long  _targetMinNewsVersion;
}

@property (nonatomic, retain) NSString *articleID;
@property (nonatomic, retain) NTPBRecordBase *base;
@property (nonatomic, retain) NSString *body;
@property (nonatomic, retain) NSString *clusterID;
@property (nonatomic, readonly) bool hasArticleID;
@property (nonatomic, readonly) bool hasBase;
@property (nonatomic, readonly) bool hasBody;
@property (nonatomic, readonly) bool hasClusterID;
@property (nonatomic, readonly) bool hasNotabilityScores;
@property (nonatomic, readonly) bool hasNotificationID;
@property (nonatomic) bool hasTargetDeviceTypes;
@property (nonatomic) bool hasTargetMinNewsVersion;
@property (nonatomic, retain) COMAPPLEFELDSPARPROTOCOLLIVERPOOLNotabilityScores *notabilityScores;
@property (nonatomic, retain) NSString *notificationID;
@property (nonatomic, retain) NSMutableArray *suppressIfFollowingTagIDs;
@property (nonatomic) unsigned int targetDeviceTypes;
@property (nonatomic) long long targetMinNewsVersion;

+ (Class)suppressIfFollowingTagIDsType;

- (void)addSuppressIfFollowingTagIDs:(id)arg1;
- (id)articleID;
- (id)base;
- (id)body;
- (void)clearSuppressIfFollowingTagIDs;
- (id)clusterID;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasArticleID;
- (bool)hasBase;
- (bool)hasBody;
- (bool)hasClusterID;
- (bool)hasNotabilityScores;
- (bool)hasNotificationID;
- (bool)hasTargetDeviceTypes;
- (bool)hasTargetMinNewsVersion;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)notabilityScores;
- (id)notificationID;
- (bool)readFrom:(id)arg1;
- (void)setArticleID:(id)arg1;
- (void)setBase:(id)arg1;
- (void)setBody:(id)arg1;
- (void)setClusterID:(id)arg1;
- (void)setHasTargetDeviceTypes:(bool)arg1;
- (void)setHasTargetMinNewsVersion:(bool)arg1;
- (void)setNotabilityScores:(id)arg1;
- (void)setNotificationID:(id)arg1;
- (void)setSuppressIfFollowingTagIDs:(id)arg1;
- (void)setTargetDeviceTypes:(unsigned int)arg1;
- (void)setTargetMinNewsVersion:(long long)arg1;
- (id)suppressIfFollowingTagIDs;
- (id)suppressIfFollowingTagIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)suppressIfFollowingTagIDsCount;
- (unsigned int)targetDeviceTypes;
- (long long)targetMinNewsVersion;
- (void)writeTo:(id)arg1;

@end
