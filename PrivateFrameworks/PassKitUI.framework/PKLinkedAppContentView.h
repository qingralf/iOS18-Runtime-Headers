/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI
 */

@interface PKLinkedAppContentView : UIView <ASCLockupViewDelegate, PKLinkedApplicationObserver> {
    UIActivityIndicatorView * _activityIndicator;
    <PKLinkedAppViewDelegate> * _delegate;
    PKLinkedApplication * _linkedApplication;
    UILabel * _loadingLabel;
    ASCLockupView * _lockupView;
    struct CGSize { 
        double width; 
        double height; 
    }  _previousIntrinsicContentSize;
    bool  _wasInstalledWhenLastConfigured;
}

@property (nonatomic, copy) NSURL *appLaunchURL;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <PKLinkedAppViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PKLinkedApplication *linkedApplication;
@property (nonatomic, copy) NSArray *storeIDs;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_cleanupViews;
- (void)_configureAppLockUpIfNecessary;
- (void)_layoutLoadingView;
- (void)_layoutLockupView;
- (void)_layoutNotAvailableView;
- (id)_presentingViewController;
- (id)appLaunchURL;
- (void)appLockupViewTapped;
- (void)dealloc;
- (id)delegate;
- (void)didMoveToWindow;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithLinkedApplication:(id)arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)layoutSubviews;
- (id)linkedApplication;
- (void)linkedApplicationDidChangeState:(id)arg1;
- (void)lockupView:(id)arg1 didFailRequestWithError:(id)arg2;
- (void)lockupViewDidFinishRequest:(id)arg1;
- (void)lockupViewDidInvalidateIntrinsicContentSize:(id)arg1;
- (id)presentingViewControllerForLockupView:(id)arg1;
- (void)reloadApplicationStateIfNecessary;
- (void)setAppLaunchURL:(id)arg1;
- (void)setCustomProductPageIdentifier:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLoadingText:(id)arg1;
- (void)setStoreIDs:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)storeIDs;

@end
