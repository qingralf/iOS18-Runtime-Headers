/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PencilPairingUI.framework/PencilPairingUI
 */

@interface PNPSqueezeController : PNPWelcomeController <PKToolPickerObserver> {
    PKCanvasView * _canvasView;
    struct CGPoint { 
        double x; 
        double y; 
    }  _paletteHoverLocation;
    CALayer * _pencilLayer;
    bool  _pencilLayerHiddenByInteraction;
    PKToolPicker * _toolPicker;
}

@property (nonatomic, retain) PKCanvasView *canvasView;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct CGPoint { double x1; double x2; } paletteHoverLocation;
@property (nonatomic, retain) CALayer *pencilLayer;
@property (nonatomic) bool pencilLayerHiddenByInteraction;
@property (readonly) Class superclass;
@property (nonatomic, retain) PKToolPicker *toolPicker;

+ (id)_controllerWithType:(long long)arg1 buttonType:(long long)arg2 deviceType:(long long)arg3 delegate:(id)arg4;

- (void).cxx_destruct;
- (id)canvasView;
- (void)dealloc;
- (void)loadSqueezeAnimationLayer;
- (id)loadSqueezeAnimationPackage;
- (struct CGPoint { double x1; double x2; })paletteHoverLocation;
- (id)pencilLayer;
- (bool)pencilLayerHiddenByInteraction;
- (void)setCanvasView:(id)arg1;
- (void)setPaletteHoverLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPencilLayer:(id)arg1;
- (void)setPencilLayerHiddenByInteraction:(bool)arg1;
- (void)setToolPicker:(id)arg1;
- (id)toolPicker;
- (void)toolPickerSelectedToolDidChange:(id)arg1;
- (void)toolPickerVisibilityDidChange:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end
