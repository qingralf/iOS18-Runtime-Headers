/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@interface PLSocialGroup : PLGraphNodeContainer <PLCloudDeletable, PLSyncableObject>

@property (nonatomic, copy) NSNumber *automaticOrder;
@property (nonatomic) short cloudDeleteState;
@property (readonly) long long cloudDeletionType;
@property (nonatomic) short cloudLocalState;
@property (readonly, copy) NSString *cloudUUIDForDeletion;
@property (nonatomic, copy) NSString *customTitle;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PLManagedAsset *keyAsset;
@property (nonatomic, readonly) bool keyAssetIsNeeded;
@property (nonatomic, readonly) long long keyAssetPickSource;
@property (nonatomic, readonly, retain) id localID;
@property (nonatomic, copy) NSNumber *manualOrder;
@property (nonatomic, readonly) NSSet *members;
@property (nonatomic, readonly) short socialGroupVerifiedType;
@property (readonly) Class superclass;

+ (void)_deleteUserAndGraphGroupsFromDuplicateGroupNodes:(id)arg1 inContext:(id)arg2;
+ (id)_fetchDuplicateSocialGroupNodes:(id)arg1 error:(id*)arg2;
+ (id)_memberIDsByNodeIDFromEdgeDictionaries:(id)arg1;
+ (id)_personsFromEdges:(id)arg1;
+ (id)_primaryLabelPredicateWithContext:(id)arg1;
+ (id)_socialGroupsNodesContainingMember:(id)arg1;
+ (id)_sortableKeyPaths;
+ (id)_syncablePredicate;
+ (bool)_verifiedTypeChangeFromRejectedToUserWithSourceNode:(id)arg1;
+ (id)changeFlagsKeysByNodeContainerKey;
+ (long long)cloudDeletionTypeForTombstone:(id)arg1;
+ (id)cloudUUIDKeyForDeletion;
+ (id)defaultValueForRequiredNodeValueKey:(id)arg1 forNode:(id)arg2;
+ (bool)deleteDuplicateGraphAndUnverifiedGroupsInContext:(id)arg1 error:(id*)arg2;
+ (bool)deleteDuplicateGroupsAfterInsertionOfGroup:(id)arg1 error:(id*)arg2;
+ (bool)deleteSocialGroupsHavingMember:(id)arg1;
+ (void)didSaveWithNode:(id)arg1;
+ (id)fetchAssetIDsHavingAssetPersonEdgesToPersonID:(id)arg1 inManagedObjectContext:(id)arg2 error:(id*)arg3;
+ (id)fetchDuplicateSocialGroupIDsWithMemberIDs:(id)arg1 inContext:(id)arg2 error:(id*)arg3;
+ (id)keyAssetUUIDOfSocialGroupWithPersonUUIDs:(id)arg1 candidateAssetUUIDs:(id)arg2 inLibrary:(id)arg3 error:(id*)arg4;
+ (id)newNodeContainerWithManagedObjectContext:(id)arg1;
+ (id)predicateForAllSocialGroupsInContext:(id)arg1;
+ (id)predicateForAllVerifiedSocialGroupsInContext:(id)arg1;
+ (id)predicateForUserVerifiedSocialGroupsInContext:(id)arg1;
+ (void)prepareForDeletionWithNode:(id)arg1;
+ (bool)rejectSocialGroupsHavingMember:(id)arg1;
+ (id)requiredNodeValueKeys;
+ (bool)resetAllInContext:(id)arg1 error:(id*)arg2;
+ (id)resetAllInLibrary:(id)arg1 completion:(id /* block */)arg2;
+ (bool)runAssetContainmentOnAllSocialGroupsInContext:(id)arg1 error:(id*)arg2;
+ (id)socialGroupsToUploadInManagedObjectContext:(id)arg1 limit:(long long)arg2;
+ (id)sortableKeys;
+ (void)updateKeyAssetOfSocialGroupsWithUUIDs:(id)arg1 inLibrary:(id)arg2;
+ (void)willSaveWithNode:(id)arg1;

- (id)_exclusiveAssetEdgesOut;
- (id)_exclusiveAssetEdgesOutFetch;
- (bool)_existingExclusiveAssetEdgeOut;
- (id)_existingMemberEdgeForPerson:(id)arg1 success:(bool*)arg2 error:(id*)arg3;
- (void)_fetchEdgesOut;
- (id)_inclusiveAssetEdgesOutForSpecificAssetIDs:(id)arg1 prefetchEdgeLabels:(bool)arg2;
- (id)_insertGraphEdgeForAsset:(id)arg1 exclusiveLabel:(id)arg2;
- (id)_insertMemberEdgeForPerson:(id)arg1;
- (id)_keyAssetEdgeWithSuccess:(bool*)arg1 error:(id*)arg2;
- (id)_personEdgesOutWithError:(id*)arg1;
- (void)_resetExistingKeyAssetEdge:(id)arg1 keyAssetLabel:(id)arg2;
- (bool)_updateAssetEdgesWithAssetContainmentResult:(id)arg1 assetIDsToUpdate:(id)arg2 error:(id*)arg3;
- (bool)addMember:(id)arg1 error:(id*)arg2;
- (id)automaticOrder;
- (long long)cloudDeletionType;
- (id)cloudUUIDForDeletion;
- (id)cplFullRecord;
- (id)cplSocialGroupChange;
- (id)customTitle;
- (id)exclusiveAssetIDs;
- (id)inclusiveAssetIDs;
- (id)initWithNode:(id)arg1;
- (bool)isSyncableChange;
- (id)keyAsset;
- (bool)keyAssetIsNeeded;
- (long long)keyAssetPickSource;
- (id)localID;
- (id)manualOrder;
- (id)members;
- (bool)removeMember:(id)arg1 error:(id*)arg2;
- (bool)resetCustomDataWithError:(id*)arg1;
- (id)runAssetContainmentWithCompletion:(id /* block */)arg1;
- (bool)runAssetContainmentWithError:(id*)arg1 assetIDsToUpdate:(id)arg2;
- (id)scopeIdentifier;
- (id)scopedIdentifier;
- (void)setAutomaticOrder:(id)arg1;
- (void)setCustomTitle:(id)arg1;
- (bool)setKeyAsset:(id)arg1 error:(id*)arg2;
- (bool)setKeyAssetPickSource:(long long)arg1 error:(id*)arg2;
- (void)setManualOrder:(id)arg1;
- (bool)setMembers:(id)arg1 error:(id*)arg2;
- (bool)setSocialGroupVerifiedType:(short)arg1 error:(id*)arg2;
- (short)socialGroupVerifiedType;
- (bool)supportsCloudUpload;
- (void)updateSocialGroupwithCPLSocialGroupChange:(id)arg1 inPhotoLibrary:(id)arg2;

@end
