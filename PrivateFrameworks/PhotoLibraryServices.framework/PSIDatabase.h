/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@interface PSIDatabase : NSObject <PSIGroupCacheDelegate, PSIQueryDelegate, PSITableDelegate> {
    PSIStatement * _assetUUIDByAssetIdWithAssetIdsStatement;
    PSIStatement * _collectionResultByCollectionIdWithCollectionIdsStatement;
    bool  _databaseIsValid;
    NSObject<OS_dispatch_queue> * _groupResultsQueue;
    PSIStatement * _inqAssetIdsByGroupIdForAssetIdsStatement;
    PSIStatement * _inqCollectionIdsByGroupIdForCollectionIdsStatement;
    struct sqlite3 { } * _inqDatabase;
    struct __CFDictionary { } * _inqGroupObjectsById;
    PSIStatement * _inqIdsOfAllGroupsInPrefixStatement;
    PSIStatement * _inqIdsOfAllGroupsStatement;
    PSIStatement * _inqNumberOfAssetsByGroupIdMatchingGroupsWithIdsStatement;
    PSIStatement * _inqNumberOfAssetsMatchingGroupWithIdStatement;
    PSIStatement * _inqNumberOfCollectionsByGroupIdMatchingGroupsWithIdsStatement;
    PSIStatement * _inqNumberOfCollectionsMatchingGroupWithIdStatement;
    struct __CFDictionary { } * _inqPreparedStatements;
    NSDictionary * _inqSearchMetadata;
    PLSearchMetadataStore * _inqSearchMetadataStore;
    PSIIntArray * _matchingIds;
    long long  _options;
    NSString * _path;
    PLPhotoLibraryPathManager * _pathManager;
    NSObject<OS_dispatch_queue> * _searchQueue;
    NSObject<OS_dispatch_queue> * _serialQueue;
    PSITokenizer * _tokenizer;
    NSMutableArray * _tokenizerOutputNormalizedTokens;
    struct { 
        long long location; 
        long long length; 
    }  _tokenizerOutputRanges;
    NSMutableString * _tokenizerOutputString;
    NSMutableArray * _tokenizerOutputTokens;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) NSObject<OS_dispatch_queue> *groupResultsQueue;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long options;
@property (nonatomic, readonly, copy) NSString *path;
@property (nonatomic, readonly) PLPhotoLibraryPathManager *pathManager;
@property (readonly) Class superclass;
@property (readonly) PSITokenizer *tokenizer;

+ (void)_dropDatabase:(struct sqlite3 { }*)arg1 withCompletion:(id /* block */)arg2;
+ (bool)_integrityCheckDatabase:(struct sqlite3 { }*)arg1;
+ (struct sqlite3 { }*)_openDatabaseAtPath:(id)arg1 options:(long long)arg2;
+ (void)dropDatabaseAtPath:(id)arg1 withCompletion:(id /* block */)arg2;
+ (id)searchDatabaseLog;

- (void).cxx_destruct;
- (void)_clearInitialSuggestions;
- (void)_executeQuery:(id)arg1 disableWildcardMatchesForUserControlledCategories:(bool)arg2 resultsHandler:(id /* block */)arg3;
- (void)_executeQueryV2:(id)arg1 resultsHandler:(id /* block */)arg2;
- (void)_finalizeEverything;
- (void)_inSearchQueueAsync:(id /* block */)arg1;
- (void)_ingRebuildPrefixTableIfNeeded;
- (unsigned long long)_inqAssetIdForUUID:(id)arg1;
- (unsigned long long)_inqAssetIdForUUID:(id)arg1 uuid_0:(unsigned long long*)arg2 uuid_1:(unsigned long long*)arg3;
- (unsigned long long)_inqAssetIdWithAsset:(id)arg1;
- (id)_inqAssetIdsByGroupIdForAssetIds:(id)arg1;
- (id)_inqAssetUUIDByAssetIdWithAssetIds:(id)arg1;
- (id)_inqAssetUUIDsForAssetIds:(struct __CFSet { }*)arg1;
- (id)_inqAssetUUIDsForAssetIds:(struct __CFArray { }*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 creationDateSorted:(bool)arg3;
- (id)_inqAssetUUIDsForGroupID:(unsigned long long)arg1;
- (void)_inqAsync:(id /* block */)arg1;
- (unsigned long long)_inqCollectionIdForUUID:(id)arg1;
- (unsigned long long)_inqCollectionIdForUUID:(id)arg1 uuid_0:(unsigned long long*)arg2 uuid_1:(unsigned long long*)arg3;
- (unsigned long long)_inqCollectionIdWithCollection:(id)arg1;
- (id)_inqCollectionIdsByGroupIdForCollectionIds:(id)arg1;
- (id)_inqCollectionResultByCollectionIdWithCollectionIds:(id)arg1;
- (id)_inqCollectionResultsForCollectionIds:(struct __CFArray { }*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)_inqCollectionUUIDsForCollectionIds:(struct __CFArray { }*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)_inqCollectionUUIDsForGroupID:(unsigned long long)arg1;
- (id)_inqContentStringForGroupId:(unsigned long long)arg1;
- (void)_inqDeleteGroupsWithGraphCollectionsForPersonUUID:(id)arg1;
- (id)_inqDequeueGroupObjectWithId:(unsigned long long)arg1 isCachedGroup:(bool*)arg2;
- (void)_inqExecutePreparedStatement:(struct sqlite3_stmt { }*)arg1 allowError:(int)arg2 withStatementBlock:(id /* block */)arg3;
- (void)_inqExecutePreparedStatement:(struct sqlite3_stmt { }*)arg1 withCancelableStatementBlock:(id /* block */)arg2;
- (void)_inqExecutePreparedStatement:(struct sqlite3_stmt { }*)arg1 withStatementBlock:(id /* block */)arg2;
- (id)_inqFilenameGroupsWithMatchingGroupIds:(struct __CFSet { }*)arg1 dateFilter:(id)arg2 searchResultTypes:(unsigned long long)arg3 matchingPredicateBlock:(id /* block */)arg4;
- (id)_inqGenerateGroupsInfoDictionaryFromText:(const char *)arg1 identifier:(const char *)arg2 category:(short)arg3 score:(double)arg4 groupId:(unsigned long long)arg5 includeUUIDs:(bool)arg6;
- (void)_inqGetTokensFromString:(id)arg1 category:(short)arg2 tokenOutput:(struct tokenOutput_t { id x1; id x2; id x3; struct { /* ? */ } *x4; long long x5; long long x6; struct { /* ? */ } *x7; long long x8; long long x9; }*)arg3;
- (id)_inqGroupArraysFromGroupIdSets:(id)arg1 dateFilter:(id)arg2 searchResultTypes:(unsigned long long)arg3 progressBlock:(id /* block */)arg4;
- (unsigned long long)_inqGroupIdForCategory:(short)arg1 contentString:(id)arg2;
- (unsigned long long)_inqGroupIdForCategory:(short)arg1 contentString:(id)arg2 identifier:(id)arg3 outOwningGroupId:(unsigned long long*)arg4 outScore:(double*)arg5;
- (unsigned long long)_inqGroupIdForCategory:(short)arg1 identifier:(id)arg2 outOwningGroupId:(unsigned long long*)arg3 outScore:(double*)arg4;
- (unsigned long long)_inqGroupIdForCategory:(short)arg1 normalizedString:(id)arg2 identifier:(id)arg3 outOwningGroupId:(unsigned long long*)arg4 outScore:(double*)arg5;
- (unsigned long long)_inqGroupIdForCategory:(short)arg1 owningGroupId:(unsigned long long)arg2 contentString:(id)arg3 normalizedString:(id)arg4 identifier:(id)arg5 rankingScore:(double)arg6 insertIfNeeded:(bool)arg7 tokenOutput:(const struct tokenOutput_t { id x1; id x2; id x3; struct { /* ? */ } *x4; long long x5; long long x6; struct { /* ? */ } *x7; long long x8; long long x9; }*)arg8 shouldUpdateOwningGroupId:(bool)arg9 shouldUpdateRankingScore:(bool)arg10;
- (void)_inqGroupIdsForAssetOrCollectionIds:(struct __CFArray { }*)arg1 resultType:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (id)_inqGroupResultWithDateFilter:(id)arg1 datedTokens:(id)arg2;
- (id)_inqGroupWithFilenameStatement:(struct sqlite3_stmt { }*)arg1 dateFilter:(id)arg2 excludingGroupId:(unsigned long long)arg3 searchResultTypes:(unsigned long long)arg4;
- (id)_inqGroupWithMatchingGroupId:(unsigned long long)arg1 dateFilter:(id)arg2 searchResultTypes:(unsigned long long)arg3;
- (id)_inqGroupWithStatement:(struct sqlite3_stmt { }*)arg1 dateFilter:(id)arg2 includeObjects:(bool)arg3 isFilenameStatement:(bool)arg4 excludingGroupId:(unsigned long long)arg5 searchResultTypes:(unsigned long long)arg6;
- (id)_inqGroupWithStatement:(struct sqlite3_stmt { }*)arg1 dateFilter:(id)arg2 includeObjects:(bool)arg3 searchResultTypes:(unsigned long long)arg4;
- (id)_inqGroupsWithMatchingGroupIds:(struct __CFSet { }*)arg1 dateFilter:(id)arg2 includeObjects:(bool)arg3 searchResultTypes:(unsigned long long)arg4 matchingPredicateBlock:(id /* block */)arg5;
- (struct __CFArray { }*)_inqNewAssetIdsForGroupId:(unsigned long long)arg1 dateFilter:(id)arg2;
- (struct __CFArray { }*)_inqNewAssetIdsWithDateFilter:(id)arg1;
- (struct __CFArray { }*)_inqNewCollectionIdsForGroupId:(unsigned long long)arg1 dateFilter:(id)arg2;
- (struct __CFArray { }*)_inqNewCollectionIdsWithDateFilter:(id)arg1;
- (struct __CFSet { }*)_inqNewGroupIdsForAssetId:(unsigned long long)arg1;
- (struct __CFSet { }*)_inqNewGroupIdsForAssetIds:(struct __CFSet { }*)arg1;
- (struct __CFSet { }*)_inqNewGroupIdsForCollectionId:(unsigned long long)arg1;
- (struct __CFSet { }*)_inqNewGroupIdsForCollectionIds:(struct __CFSet { }*)arg1;
- (struct __CFSet { }*)_inqNewGroupIdsMatchingString:(id)arg1 categories:(id)arg2 textIsSearchable:(bool)arg3;
- (struct __CFSet { }*)_inqNewGroupIdsMatchingString:(id)arg1 textIsSearchable:(bool)arg2;
- (struct __CFSet { }*)_inqNewGroupIdsWithCategories:(id)arg1;
- (id)_inqNewSynonymTextsByOwningGroupIdWithGroupIds:(struct __CFSet { }*)arg1;
- (id)_inqNonFilenameGroupsWithMatchingGroupIds:(struct __CFSet { }*)arg1 dateFilter:(id)arg2 includeObjects:(bool)arg3 searchResultTypes:(unsigned long long)arg4 matchingPredicateBlock:(id /* block */)arg5;
- (id)_inqNumberOfAssetsByGroupIdMatchingGroupsWithIds:(id)arg1;
- (unsigned long long)_inqNumberOfAssetsMatchingGroupWithId:(unsigned long long)arg1;
- (id)_inqNumberOfCollectionsByGroupIdMatchingGroupsWithIds:(id)arg1;
- (unsigned long long)_inqNumberOfCollectionsMatchingGroupWithId:(unsigned long long)arg1;
- (id)_inqOwningContentStringForGroupResult:(id)arg1;
- (void)_inqPerformBatch:(id /* block */)arg1;
- (void)_inqPrepareAndExecuteStatement:(const char *)arg1;
- (struct sqlite3_stmt { }*)_inqPrepareStatement:(const char *)arg1;
- (struct __CFDictionary { }*)_inqPrepareStatementsForOptions:(long long)arg1 tokenizerName:(id)arg2;
- (void)_inqRecycleGroups;
- (void)_inqRemoveUUID:(id)arg1 categories:(id)arg2 objectType:(unsigned long long)arg3 isInBatch:(bool)arg4;
- (void)_inqRemoveUUID:(id)arg1 objectType:(unsigned long long)arg2 isInBatch:(bool)arg3;
- (void)_inqRemoveUnusedGroups;
- (double)_inqScoreForGroupID:(unsigned long long)arg1;
- (void)_inqSync:(id /* block */)arg1;
- (void)_inqUpdateGATableWithGroupId:(unsigned long long)arg1 assetId:(unsigned long long)arg2;
- (void)_inqUpdateGCTableWithGroupId:(unsigned long long)arg1 collectionId:(unsigned long long)arg2;
- (unsigned long long)_inqUpdateGroupForText:(id)arg1 identifier:(id)arg2 category:(short)arg3 owningGroupId:(unsigned long long)arg4;
- (bool)_inqVerifyTablesExistInDatabase;
- (bool)_prepareSearchIndexAtPath:(id)arg1 options:(long long)arg2;
- (void)_prepareTokenOutput:(struct tokenOutput_t { id x1; id x2; id x3; struct { /* ? */ } *x4; long long x5; long long x6; struct { /* ? */ } *x7; long long x8; long long x9; }*)arg1 forIndexing:(bool)arg2;
- (void)_processNextKeywordSuggestionsForQuery:(id)arg1 groupResults:(id)arg2 allowIdentifiers:(bool)arg3;
- (void)_removeUUID:(id)arg1 categories:(id)arg2 objectType:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (void)_removeUUIDs:(id)arg1 objectType:(unsigned long long)arg2 deferRemovingUnusedGroups:(bool)arg3 completion:(id /* block */)arg4;
- (void)_runWithMatchingIDs:(id)arg1 block:(id /* block */)arg2;
- (double)_scoreForUserCategory:(unsigned long long)arg1;
- (void)_sortedSearchIndexRowIdsFromUUIDs:(id)arg1 searchResultType:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)addAsset:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)addAssets:(id)arg1 deferRemovingUnusedGroups:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)addAssets:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)addCollection:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)addCollections:(id)arg1 deferRemovingUnusedGroups:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)addCollections:(id)arg1 withCompletion:(id /* block */)arg2;
- (id)allAssetUUIDsForGroupsWithCategories:(id)arg1;
- (id)allCollectionUUIDsWithCollectionType:(unsigned long long)arg1;
- (id)allCollections;
- (id)allGroupIds;
- (unsigned long long)assetCountForLookupIdentifier:(id)arg1;
- (bool)assetExistsWithUUID:(id)arg1;
- (void)assetIdsFromUUIDs:(id)arg1 completion:(id /* block */)arg2;
- (struct __CFArray { }*)assetIdsWithDateFilter:(id)arg1;
- (id)assetUUIDByAssetIdWithAssetIds:(id)arg1;
- (id)assetUUIDsForAssetIDs:(struct __CFArray { }*)arg1;
- (void)bindMatchingIds:(struct __CFSet { }*)arg1;
- (void)bindMatchingIds:(const long long*)arg1 numberOfMatchingIds:(unsigned long long)arg2;
- (void)bindMatchingIds:(struct __CFArray { }*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)collectionIdsFromUUIDs:(id)arg1 completion:(id /* block */)arg2;
- (id)collectionResultByCollectionIdWithCollectionIds:(id)arg1;
- (id)collectionUUIDsForCollectionIDs:(struct __CFArray { }*)arg1;
- (unsigned long long)countOfAssets;
- (struct sqlite3 { }*)databaseConnection;
- (void)dealloc;
- (void)deleteEmbeddingsForModelTypes:(id)arg1 assetUUID:(id)arg2;
- (void)deleteGroupsWithGraphCollectionsForPersonUUIDs:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)dropDatabaseWithCompletion:(id /* block */)arg1;
- (id)dumpGroupsInfoForAssetUUID:(id)arg1 indexCategories:(id)arg2 includeUUIDs:(bool)arg3;
- (id)dumpGroupsInfoWithIndexCategories:(id)arg1 includeUUIDs:(bool)arg2;
- (id)dumpLookupStringsWithIndexCategories:(id)arg1;
- (void)executeFetchEmbeddingQuery:(id)arg1 batchHandler:(id /* block */)arg2;
- (void)executeQuery:(id)arg1 disableWildcardMatchesForUserControlledCategories:(bool)arg2 resultsHandler:(id /* block */)arg3;
- (void)executeQueryV2:(id)arg1 resultsHandler:(id /* block */)arg2;
- (void)executeStatement:(id)arg1;
- (void)executeStatement:(id)arg1 withResultEnumerationBlock:(id /* block */)arg2;
- (void)executeStatementFromString:(id)arg1;
- (void)executeStatementFromString:(id)arg1 withResultEnumerationBlock:(id /* block */)arg2;
- (void)exqExecuteStatementFromString:(id)arg1 withResultEnumerationBlock:(id /* block */)arg2;
- (void)fetchAssetUUIDsForAssetIDs:(struct __CFArray { }*)arg1 creationDateSorted:(bool)arg2 completionHandler:(id /* block */)arg3;
- (id)fetchAssetUUIDsForDateFilter:(id)arg1;
- (void)fetchEmbeddingsForModelTypes:(id)arg1 assetUUID:(id)arg2 withBatchHandler:(id /* block */)arg3;
- (void)group:(id)arg1 fetchOwningContentString:(bool)arg2 assetIdRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 collectionIdRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4 completionHandler:(id /* block */)arg5;
- (id)groupArraysFromGroupIdSets:(id)arg1 dateFilter:(id)arg2 searchResultTypes:(unsigned long long)arg3 progressBlock:(id /* block */)arg4;
- (id)groupForLookupIdentifier:(id)arg1 searchResultTypes:(unsigned long long)arg2;
- (id)groupForText:(id)arg1 identifier:(id)arg2 category:(unsigned long long)arg3 resultTypes:(unsigned long long)arg4;
- (id)groupIdsInPrefixTable;
- (struct __CFSet { }*)groupIdsMatchingString:(id)arg1 categories:(id)arg2 textIsSearchable:(bool)arg3;
- (struct __CFSet { }*)groupIdsWithCategories:(id)arg1;
- (id)groupResultWithDateFilter:(id)arg1 datedTokens:(id)arg2;
- (id)groupResultsQueue;
- (id)groupWithMatchingGroupId:(unsigned long long)arg1 dateFilter:(id)arg2 searchResultTypes:(unsigned long long)arg3;
- (void)groupsForAssetIds:(struct __CFArray { }*)arg1 completion:(id /* block */)arg2;
- (void)groupsForCollectionIds:(struct __CFArray { }*)arg1 completion:(id /* block */)arg2;
- (id)groupsForSearchIndexCategories:(id)arg1 searchResultTypes:(unsigned long long)arg2 dateFilter:(id)arg3;
- (id)groupsForText:(id)arg1 useWildcardSearchText:(bool)arg2 leadingAnchored:(bool)arg3 searchIndexCategories:(id)arg4 searchResultTypes:(unsigned long long)arg5;
- (id)groupsFromGroupIds:(struct __CFSet { }*)arg1 dateFilter:(id)arg2 searchResultTypes:(unsigned long long)arg3;
- (id)initForTestingWithOptions:(long long)arg1;
- (id)initWithPathManager:(id)arg1 options:(long long)arg2;
- (long long)insertAsset:(id)arg1;
- (long long)insertCollection:(id)arg1;
- (void)insertEmbeddings:(id)arg1 modelType:(unsigned long long)arg2 assetUUID:(id)arg3 completion:(id /* block */)arg4;
- (long long)insertGroup:(id)arg1;
- (bool)isDatabaseCorrupted;
- (long long)lastInsertedRowID;
- (void)linkAssetWithId:(long long)arg1 toGroupWithId:(long long)arg2;
- (void)linkCollectionWithId:(long long)arg1 toGroupWithId:(long long)arg2;
- (id)meNodeIdentifier;
- (struct __CFArray { }*)mostRecentSortedAssetIdsWithLimit:(unsigned long long)arg1;
- (id)newQueryWithSearchText:(id)arg1 queryTokens:(id)arg2 useWildcardSearchText:(bool)arg3 libraryScope:(unsigned long long)arg4;
- (id)newQueryWithSearchTextV2:(id)arg1 queryTokens:(id)arg2 scopedSearchIdentifiers:(id)arg3 searchResultTypes:(unsigned long long)arg4 searchSuggestionType:(unsigned long long)arg5 useWildcardSearchText:(bool)arg6 enableExactMatchPrioritization:(bool)arg7 libraryScope:(unsigned long long)arg8 suggestionLimit:(unsigned long long)arg9;
- (id)newSuggestionsQueryForQueryText:(id)arg1 suggestionType:(unsigned long long)arg2 suggestionLimit:(unsigned long long)arg3 resultTypes:(unsigned long long)arg4 libraryScope:(unsigned long long)arg5;
- (long long)options;
- (id)path;
- (id)pathManager;
- (void)performSyncOnDBQueue:(id /* block */)arg1;
- (struct sqlite3_stmt { }*)prepareEmbeddingStatement:(long long)arg1 modelTypes:(id)arg2 assetUUID:(id)arg3;
- (void)prepareForNumberOfMatchingIds:(unsigned long long)arg1;
- (void)removeAssetWithUUID:(id)arg1 completion:(id /* block */)arg2;
- (void)removeAssetsWithUUIDs:(id)arg1 completion:(id /* block */)arg2;
- (void)removeAssetsWithUUIDs:(id)arg1 deferRemovingUnusedGroups:(bool)arg2 completion:(id /* block */)arg3;
- (void)removeCategories:(id)arg1 forAssetUUID:(id)arg2 completion:(id /* block */)arg3;
- (void)removeCollectionWithUUID:(id)arg1 completion:(id /* block */)arg2;
- (void)removeCollectionsWithUUIDs:(id)arg1 completion:(id /* block */)arg2;
- (void)removeCollectionsWithUUIDs:(id)arg1 deferRemovingUnusedGroups:(bool)arg2 completion:(id /* block */)arg3;
- (void)removeUnusedGroups;
- (void)resetGroupsCache;
- (id)searchResultV2WithDateFilter:(id)arg1 scopedSearchIdentifiers:(id)arg2 searchResultTypes:(unsigned long long)arg3 suggestionType:(unsigned long long)arg4;
- (id)statementFromString:(id)arg1;
- (id)suggestionWhitelistedScenes;
- (id)tokenizer;
- (void)unbindMatchingIds;
- (void)unprepareMatchingIds;
- (unsigned long long)updateGroupForText:(id)arg1 identifier:(id)arg2 category:(short)arg3 owningGroupId:(unsigned long long)arg4;
- (void)updateRankingScoreForGroups:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)updateSearchMetadata;
- (id)wordEmbeddingMatchesForToken:(id)arg1;

@end
