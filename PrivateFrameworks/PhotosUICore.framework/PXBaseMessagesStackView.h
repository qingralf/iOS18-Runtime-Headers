/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXBaseMessagesStackView : UIView <PXEventCoalescerObserver, PXGShadowSource, PXGSolidColorOverlayDecorationSource, PXGSolidColorSource, PXGViewSource, PXMessagesStackItemsLayoutPrimaryItemDelegate, PXScrollViewControllerObserver, PXSectionedDataSourceManagerObserver> {
    NSShadow * _centerItemShadow;
    PXSectionedDataSource * _currentDataSource;
    PXSectionedDataSourceManager * _dataSourceManager;
    bool  _debugColorModeEnabled;
    PXGDecoratingLayout * _decoratingLayout;
    long long  _horizontalAlignment;
    long long  _indexToRestore;
    bool  _isProgramaticallyScrolling;
    struct PXSimpleIndexPath { 
        long long dataSourceIdentifier; 
        long long section; 
        long long item; 
        long long subitem; 
    }  _lastKnownPrimaryIndex;
    PXMessagesStackItemsLayout * _layout;
    bool  _selectionOverlayEnabled;
    bool  _settled;
    PXEventCoalescer * _settledEventCoalescer;
    PXGView * _tungstenView;
    bool  _useAspectTiles;
    double  _verticalContentInsets;
}

@property (nonatomic, retain) PXSectionedDataSource *currentDataSource;
@property (nonatomic, readonly) unsigned long long currentIndex;
@property (nonatomic, readonly) PXSectionedObjectReference *currentObjectReference;
@property (nonatomic, retain) PXSectionedDataSourceManager *dataSourceManager;
@property (nonatomic) bool debugColorModeEnabled;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long horizontalAlignment;
@property (nonatomic, readonly) double horizontalContentMargin;
@property (nonatomic, readonly) PXMessagesStackItemsLayout *layout;
@property (nonatomic) double leftEdgeHorizontalContentMarginAdjustment;
@property (nonatomic) long long numberOfAccessoryItems;
@property (nonatomic, readonly) UIPanGestureRecognizer *panGestureRecognizer;
@property (nonatomic) double rightEdgeHorizontalContentMarginAdjustment;
@property (nonatomic) bool selectionOverlayEnabled;
@property (getter=isSettled, nonatomic) bool settled;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PXGView *tungstenView;
@property (nonatomic) bool useAspectTiles;
@property (nonatomic) double verticalContentInsets;

+ (unsigned char)accessoryMediaKind;
+ (unsigned char)itemMediaKind;

- (void).cxx_destruct;
- (void)_updateDataSource;
- (double)alphaForShadowAtSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)colorAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (bool)contentChangedForItemBeforeDataSource:(id)arg1 beforeIndexPath:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg2 afterDataSource:(id)arg3 afterIndexPath:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg4;
- (double)cornerRadiusForShadowSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)currentDataSource;
- (void)currentDataSourceDidChange;
- (unsigned long long)currentIndex;
- (id)currentObjectReference;
- (id)dataSourceManager;
- (bool)debugColorModeEnabled;
- (long long)horizontalAlignment;
- (double)horizontalContentMargin;
- (double)horizontalContentMarginForSize:(struct CGSize { double x1; double x2; })arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isSettled;
- (id)layout;
- (void)layoutSubviews;
- (double)leftEdgeHorizontalContentMarginAdjustment;
- (long long)numberOfAccessoryItems;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)outputEventSignaledForCoalescer:(id)arg1;
- (id)panGestureRecognizer;
- (void)prepareForDisplay;
- (void)primaryItemDidChange:(bool)arg1 didChangeIndex:(bool)arg2;
- (void)primaryItemDidChangeForStackItemsLayout:(id)arg1;
- (void)registerAllTextureProvidersWithMediaProvider:(id)arg1;
- (void)reloadAccessoryItems;
- (double)rightEdgeHorizontalContentMarginAdjustment;
- (bool)scrollToIndex:(unsigned long long)arg1 animated:(bool)arg2;
- (bool)scrollToObjectReference:(id)arg1 animated:(bool)arg2;
- (void)scrollViewControllerDidEndScrolling:(id)arg1;
- (void)scrollViewControllerDidLayoutSubviews:(id)arg1;
- (void)scrollViewControllerWillBeginScrolling:(id)arg1;
- (void)scrollViewControllerWillEndScrolling:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3 currentContentOffset:(struct CGPoint { double x1; double x2; })arg4;
- (bool)selectionOverlayEnabled;
- (void)setCurrentDataSource:(id)arg1;
- (void)setDataSourceManager:(id)arg1;
- (void)setDebugColorModeEnabled:(bool)arg1;
- (void)setHorizontalAlignment:(long long)arg1;
- (void)setLeftEdgeHorizontalContentMarginAdjustment:(double)arg1;
- (void)setNumberOfAccessoryItems:(long long)arg1;
- (void)setRightEdgeHorizontalContentMarginAdjustment:(double)arg1;
- (void)setSelectionOverlayEnabled:(bool)arg1;
- (void)setSettled:(bool)arg1;
- (void)setUseAspectTiles:(bool)arg1;
- (void)setVerticalContentInsets:(double)arg1;
- (void)settledDidChange;
- (id)shadowForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (double)solidColorOverlayAlphaForSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)solidColorOverlayForLayout:(id)arg1;
- (id)tungstenView;
- (bool)useAspectTiles;
- (double)verticalContentInsets;
- (Class)viewClassForAccessoryItemAtIndex:(long long)arg1;
- (Class)viewClassForItemAtIndex:(long long)arg1 inStackLayout:(id)arg2;
- (Class)viewClassForSpriteAtIndex:(unsigned int)arg1 inDecoratingLayout:(id)arg2;
- (Class)viewClassForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)viewUserDataForAccessoryItemAtIndex:(long long)arg1;
- (id)viewUserDataForItemAtIndex:(long long)arg1 inStackLayout:(id)arg2;
- (id)viewUserDataForSpriteAtIndex:(unsigned int)arg1 inDecoratingLayout:(id)arg2;
- (id)viewUserDataForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (void)willBeginScrolling;

@end
