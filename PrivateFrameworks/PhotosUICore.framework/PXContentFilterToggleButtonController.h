/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXContentFilterToggleButtonController : NSObject <PXMutableContentFilterToggleButtonController> {
    UIColor * _baseBackgroundColor;
    UIButton * _button;
    PXContentFilterState * _contentFilterState;
    NSArray * _filterInlineMenuItems;
    UIImageSymbolConfiguration * _filteringSymbolConfiguration;
    NSString * _filteringSymbolName;
    bool  _isPerformingChanges;
    PXLibraryFilterState * _libraryFilterState;
    UIColor * _originalUnfilteredBackgroundColor;
    UIColor * _primaryTintColor;
    bool  _roundedButton;
    UIColor * _secondaryTintColor;
    bool  _shouldUpdateButtonSymbol;
    UIImageSymbolConfiguration * _symbolConfiguration;
    NSString * _symbolName;
    PXUpdater * _updater;
}

@property (nonatomic, readonly) NSArray *allMenuItems;
@property (nonatomic, readonly) UIColor *baseBackgroundColor;
@property (nonatomic, readonly) UIButton *button;
@property (nonatomic, copy) PXContentFilterState *contentFilterState;
@property (nonatomic, readonly) NSArray *filterInlineMenuItems;
@property (nonatomic, readonly) NSArray *filterMenuItems;
@property (nonatomic, readonly) NSString *filterMenuSubtitle;
@property (nonatomic, readonly) UIImageSymbolConfiguration *filteringSymbolConfiguration;
@property (nonatomic, readonly) NSString *filteringSymbolName;
@property (nonatomic, copy) PXLibraryFilterState *libraryFilterState;
@property (nonatomic, readonly) UIColor *primaryTintColor;
@property (nonatomic, readonly) UIColor *secondaryTintColor;
@property (nonatomic) bool shouldUpdateButtonSymbol;
@property (nonatomic, readonly) UIImageSymbolConfiguration *symbolConfiguration;
@property (nonatomic, readonly) NSString *symbolName;
@property (nonatomic, readonly) NSArray *viewOptionsMenuItems;
@property (nonatomic, readonly) NSString *viewOptionsMenuSubtitle;

- (void).cxx_destruct;
- (id)_deferredMenu;
- (void)_invalidateButton;
- (void)_invalidateButtonMenu;
- (void)_setNeedsUpdate;
- (void)_setupButtonWithConfiguration:(id)arg1 roundedButton:(bool)arg2;
- (void)_updateButton;
- (void)_updateButtonMenu;
- (id)adjustedChildMenuIfNecessary:(id)arg1;
- (id)allMenuItems;
- (id)baseBackgroundColor;
- (id)button;
- (id)contentFilterState;
- (id)filterInlineMenuItems;
- (id)filterMenuItems;
- (id)filterMenuSubtitle;
- (id)filteringSymbolConfiguration;
- (id)filteringSymbolName;
- (id)initWithButtonConfiguration:(id)arg1 roundedButton:(bool)arg2;
- (void)invalidateButton;
- (void)invalidateButtonMenu;
- (id)libraryFilterState;
- (void)performChanges:(id /* block */)arg1;
- (id)primaryTintColor;
- (id)secondaryTintColor;
- (void)setBaseBackgroundColor:(id)arg1;
- (void)setContentFilterState:(id)arg1;
- (void)setFilteringSymbolConfiguration:(id)arg1;
- (void)setFilteringSymbolName:(id)arg1;
- (void)setLibraryFilterState:(id)arg1;
- (void)setPrimaryTintColor:(id)arg1;
- (void)setSecondaryTintColor:(id)arg1;
- (void)setShouldUpdateButtonSymbol:(bool)arg1;
- (void)setSymbolConfiguration:(id)arg1;
- (void)setSymbolName:(id)arg1;
- (bool)shouldHideButton;
- (bool)shouldUpdateButtonSymbol;
- (id)symbolConfiguration;
- (id)symbolName;
- (id)viewOptionsMenuItems;
- (id)viewOptionsMenuSubtitle;

@end
