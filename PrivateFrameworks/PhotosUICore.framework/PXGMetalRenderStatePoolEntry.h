/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXGMetalRenderStatePoolEntry : NSObject <PXGMetalRenderState> {
    PXGMetalRenderStatePool * _pool;
    PXGReusableMetalRenderState * _renderState;
}

@property (nonatomic, retain) NSArray *captureSpriteTextures;
@property (nonatomic, readonly) PXGMetalRenderPassState *currentRenderPassState;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (nonatomic, readonly) PXGEffectComponent *effectComponent;
@property (nonatomic) bool hasParsedRenderTextures;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PXGMetalRenderTextureStore *opaqueTextures;
@property (nonatomic, readonly) PXGMetalRenderStatePool *pool;
@property (nonatomic, readonly) PXGReusableMetalRenderState *renderState;
@property (nonatomic, readonly) <MTLBuffer> *resizableCapInsetsBuffer;
@property (nonatomic, readonly) const struct { unsigned int x1; }*spriteEntities;
@property (nonatomic, readonly) <MTLBuffer> *spriteEntitiesBuffer;
@property (nonatomic, readonly) const struct { float x1; float x2; float x3; }*spriteGeometries;
@property (nonatomic, readonly) <MTLBuffer> *spriteGeometriesBuffer;
@property (nonatomic, readonly) const struct { unsigned char x1; unsigned char x2; float x3; long long x4; unsigned short x5; unsigned char x6; }*spriteInfos;
@property (nonatomic, readonly) <MTLBuffer> *spriteInfosBuffer;
@property (nonatomic, readonly) const struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; }*spriteOriginalGeometries;
@property (nonatomic, readonly) <MTLBuffer> *spriteOriginalGeometriesBuffer;
@property (nonatomic, readonly) const struct { float x1; struct { union { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; } x_1_2_1; float x_1_2_2[4]; } x_2_1_1; } x2; float x3; float x4; float x5; float x6; unsigned short x7; unsigned char x8; float x9; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_10_1_1[4]; } x10; }*spriteStyles;
@property (nonatomic, readonly) <MTLBuffer> *spriteStylesBuffer;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSArray *textures;
@property (nonatomic, readonly) PXGMetalRenderTextureStore *translucentTextures;
@property (nonatomic, readonly) struct { struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_1_1[4]; } x1; struct { void*x_2_1_1[4]; } x2; float x3; }*uniforms;
@property (nonatomic) struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; double x5; unsigned long long x6; long long x7; double x8; } values;

- (void).cxx_destruct;
- (id)captureSpriteTextures;
- (id)currentRenderPassState;
- (void)dealloc;
- (id)device;
- (id)effectComponent;
- (bool)hasParsedRenderTextures;
- (id)initWithReusableRenderState:(id)arg1 pool:(id)arg2;
- (void)keepAlive;
- (id)opaqueTextures;
- (id)pool;
- (void)prepareForRender:(long long)arg1;
- (id)renderPassStateForSpriteCount:(long long)arg1;
- (id)renderState;
- (id)resizableCapInsetsBuffer;
- (struct { float x1; float x2; float x3; float x4; }*)resizableCapInsetsBufferWithCount:(long long)arg1;
- (void)setCaptureSpriteTextures:(id)arg1;
- (void)setHasParsedRenderTextures:(bool)arg1;
- (void)setTextures:(id)arg1;
- (void)setValues:(struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; double x5; unsigned long long x6; long long x7; double x8; })arg1;
- (const struct { unsigned int x1; }*)spriteEntities;
- (id)spriteEntitiesBuffer;
- (struct { unsigned int x1; }*)spriteEntitiesBufferWithCount:(long long)arg1;
- (const struct { float x1; float x2; float x3; }*)spriteGeometries;
- (id)spriteGeometriesBuffer;
- (struct { float x1; float x2; float x3; }*)spriteGeometriesBufferWithCount:(long long)arg1;
- (const struct { unsigned char x1; unsigned char x2; float x3; long long x4; unsigned short x5; unsigned char x6; }*)spriteInfos;
- (id)spriteInfosBuffer;
- (struct { unsigned char x1; unsigned char x2; float x3; long long x4; unsigned short x5; unsigned char x6; }*)spriteInfosBufferWithCount:(long long)arg1;
- (const struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; }*)spriteOriginalGeometries;
- (id)spriteOriginalGeometriesBuffer;
- (struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; }*)spriteOriginalGeometriesBufferWithCount:(long long)arg1;
- (const struct { float x1; struct { union { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; } x_1_2_1; float x_1_2_2[4]; } x_2_1_1; } x2; float x3; float x4; float x5; float x6; unsigned short x7; unsigned char x8; float x9; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_10_1_1[4]; } x10; }*)spriteStyles;
- (id)spriteStylesBuffer;
- (struct { float x1; struct { union { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; } x_1_2_1; float x_1_2_2[4]; } x_2_1_1; } x2; float x3; float x4; float x5; float x6; unsigned short x7; unsigned char x8; float x9; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_10_1_1[4]; } x10; }*)spriteStylesBufferWithCount:(long long)arg1;
- (id)textures;
- (id)translucentTextures;
- (struct { struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_1_1[4]; } x1; struct { void*x_2_1_1[4]; } x2; float x3; }*)uniforms;
- (struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; double x5; unsigned long long x6; long long x7; double x8; })values;

@end
