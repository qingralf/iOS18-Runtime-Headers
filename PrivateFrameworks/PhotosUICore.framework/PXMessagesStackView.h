/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXMessagesStackView : PXBaseMessagesStackView <PXGAssetBadgeDecorationSource, PXGDisplayAssetSource, PXGSelectionDecorationSource, PXGTapbackDecorationSource, PXMessagesStackItemsLayoutDelegate, PXPhotosGridStackTransitionEndpoint, UIGestureRecognizerDelegate, UIViewControllerTransitioningDelegate> {
    PXMessagesStackActivityIndicatorViewUserData * _activityIndicatorViewUserData;
    struct { 
        unsigned long long count; 
        long long type; 
    }  _additionalItemsCount;
    bool  _allowPlayableContentLoading;
    PXPhotosGridAssetDecorationSource * _assetDecorationSource;
    PXMessagesStackAdditionalItemsViewUserData * _cachedAdditionalItemsUserData;
    <PXDisplayAssetFetchResult> * _cachedClampedFetchResult;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _cachedClampedItemRange;
    PXMessagesStackPlaybackControlUserData * _cachedPlaybackControlUserData;
    PXGDisplayAssetVideoPresentationController * _currentVideoPresentationController;
    <PXMessagesStackViewDelegate> * _delegate;
    struct { 
        bool didSelectAssetReference; 
        bool didChangeCurrentAssetReference; 
        bool shouldAutoplayAsset; 
        bool didSelectAdditionalItems; 
    }  _delegateRespondsTo;
    NSSet * _hiddenAssetReferences;
    PXUIMediaProvider * _mediaProvider;
    PXMessagesStackPlaybackControlViewModel * _playbackControlViewModel;
    bool  _providesLoadingAppearanceAndBehavior;
    UITapGestureRecognizer * _tapGestureRecognizer;
    UIView * _transitionPlaceholderView;
    PXLRUMemoryCache * _videoPresentationControllersByItem;
}

@property (nonatomic) struct { unsigned long long x1; long long x2; } additionalItemsCount;
@property (nonatomic) bool allowPlayableContentLoading;
@property (nonatomic, readonly) PXAssetReference *currentAssetReference;
@property (nonatomic, readonly) PXAssetsDataSource *currentDataSource;
@property (nonatomic, retain) PXGDisplayAssetVideoPresentationController *currentVideoPresentationController;
@property (nonatomic, retain) PXAssetsDataSourceManager *dataSourceManager;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <PXMessagesStackViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <UIViewControllerTransitioningDelegate> *gridTransitioningDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSSet *hiddenAssetReferences;
@property (nonatomic, retain) PXUIMediaProvider *mediaProvider;
@property (nonatomic) bool providesLoadingAppearanceAndBehavior;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UITapGestureRecognizer *tapGestureRecognizer;
@property (nonatomic, retain) <PXTapbackStatusManager> *tapbackStatusManager;
@property (nonatomic, retain) UIView *transitionPlaceholderView;

+ (unsigned char)accessoryMediaKind;
+ (unsigned char)itemMediaKind;

- (void).cxx_destruct;
- (void)_handleTap:(id)arg1;
- (bool)_isSpriteReferenceForPrimaryItem:(id)arg1;
- (id)_presentationControllerForAsset:(id)arg1;
- (id)_regionOfInterestForAssetReference:(id)arg1 forTransitioning:(bool)arg2;
- (bool)_shouldAutoplayAsset:(id)arg1;
- (id)_trackingContainerViewForAssetReference:(id)arg1;
- (void)_updateCurrentPresentationController;
- (struct { unsigned long long x1; long long x2; })additionalItemsCount;
- (bool)allowPlayableContentLoading;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (struct PXGAssetDecorationInfo { unsigned long long x1; double x2; long long x3; long long x4; })assetDecorationInfoForAsset:(id)arg1 atSpriteIndex:(unsigned int)arg2 inLayout:(id)arg3;
- (bool)contentChangedForItemBeforeDataSource:(id)arg1 beforeIndexPath:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg2 afterDataSource:(id)arg3 afterIndexPath:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg4;
- (id)currentAssetReference;
- (void)currentDataSourceDidChange;
- (id)currentVideoPresentationController;
- (id)delegate;
- (unsigned long long)desiredPlaceholderStyleInLayout:(id)arg1;
- (id)displayAssetFetchResultForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 inLayout:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)gridTransitioningDelegate;
- (bool)hasTapbacksForSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)hiddenAssetReferences;
- (bool)hidesTopLeadingBadgesInLayout:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)installTransitionSnapshotViewForAssetReference:(id)arg1 uncroppedImageFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (id)interactionControllerForDismissal:(id)arg1;
- (double)itemsLayout:(id)arg1 aspectRatioForItem:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })itemsLayout:(id)arg1 bestCropRectForItem:(long long)arg2 withAspectRatio:(double)arg3;
- (long long)itemsLayout:(id)arg1 itemForObjectReference:(id)arg2 options:(unsigned long long)arg3;
- (id)itemsLayout:(id)arg1 objectReferenceForItem:(long long)arg2;
- (id)mediaProvider;
- (struct CGSize { double x1; double x2; })minSpriteSizeForPresentationStyle:(unsigned long long)arg1;
- (long long)overallSelectionOrderAtSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (struct { float x1; float x2; float x3; float x4; })overlayInsetsForSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (void)prepareForDisplay;
- (void)primaryItemDidChange:(bool)arg1 didChangeIndex:(bool)arg2;
- (bool)providesLoadingAppearanceAndBehavior;
- (id)regionOfInterestForAssetReference:(id)arg1;
- (id)regionOfInterestForTransitioningAssetReference:(id)arg1;
- (void)removeTransitionSnapshotView;
- (bool)scrollToAssetReference:(id)arg1 animated:(bool)arg2;
- (id)selectedSpriteIndexesInLayout:(id)arg1;
- (unsigned long long)selectionDecorationAdditionsInLayout:(id)arg1;
- (long long)selectionDecorationStyleInLayout:(id)arg1;
- (void)setAdditionalItemsCount:(struct { unsigned long long x1; long long x2; })arg1;
- (void)setAllowPlayableContentLoading:(bool)arg1;
- (void)setCurrentVideoPresentationController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHiddenAssetReferences:(id)arg1;
- (void)setHiddenAssetReferences:(id)arg1 animationType:(long long)arg2;
- (void)setMediaProvider:(id)arg1;
- (void)setProvidesLoadingAppearanceAndBehavior:(bool)arg1;
- (void)setTapbackStatusManager:(id)arg1;
- (void)setTransitionPlaceholderView:(id)arg1;
- (void)settledDidChange;
- (bool)stackItemsLayout:(id)arg1 itemHasTapback:(long long)arg2;
- (unsigned long long)supportedDisplayAssetPresentationStylesInLayout:(id)arg1;
- (id)tapGestureRecognizer;
- (struct { double x1; double x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; })tapbackConfigurationForProposedConfiguration:(struct { double x1; double x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; })arg1 spriteIndex:(unsigned int)arg2 inLayout:(id)arg3;
- (id)tapbackStatusManager;
- (id)transitionPlaceholderView;
- (id)videoPresentationControllerForDisplayAsset:(id)arg1 spriteIndex:(unsigned int)arg2 inLayout:(id)arg3;
- (Class)viewClassForAccessoryItemAtIndex:(long long)arg1;
- (Class)viewClassForSpriteAtIndex:(unsigned int)arg1 inDecoratingLayout:(id)arg2;
- (id)viewUserDataForAccessoryItemAtIndex:(long long)arg1;
- (id)viewUserDataForSpriteAtIndex:(unsigned int)arg1 inDecoratingLayout:(id)arg2;
- (bool)wantsAssetBadgeDecorationsInLayout:(id)arg1;
- (bool)wantsFileSizeBadgesInLayout:(id)arg1;
- (bool)wantsInteractiveFavoriteBadgesInLayout:(id)arg1;
- (bool)wantsTapbackDecorationInLayout:(id)arg1;
- (void)willBeginScrolling;

@end
