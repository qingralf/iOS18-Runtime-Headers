/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXZoomablePhotosMiniModeAnimator : PXObservable <PXChangeObserver> {
    PXNumberAnimator * _gridBackgroundVisibilityAnimator;
    PXNumberAnimator * _gridExpansionAnimator;
    double  _gridExpansionVelocity;
    PXNumberAnimator * _gridMiniChromeVisibilityAnimator;
    PXNumberAnimator * _gridMiniStylingAnimator;
    double  _interactionProgress;
    bool  _isAnimating;
    bool  _isContentAnimating;
    bool  _performAnimated;
    unsigned long long  _previousState;
    CASpringAnimation * _rowFoldingAnimation;
    PXValueSpringAnimation * _rowFoldingValueAnimation;
    CASpringAnimation * _rowUnfoldingAnimation;
    PXValueSpringAnimation * _rowUnfoldingValueAnimation;
    unsigned long long  _targetState;
    PXUpdater * _updater;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) PXNumberAnimator *gridBackgroundVisibilityAnimator;
@property (nonatomic, readonly) double gridBackgroundVisibilityPercentage;
@property (nonatomic, readonly) PXNumberAnimator *gridExpansionAnimator;
@property (nonatomic, readonly) double gridExpansionPercentage;
@property (nonatomic) double gridExpansionVelocity;
@property (nonatomic, readonly) PXNumberAnimator *gridMiniChromeVisibilityAnimator;
@property (nonatomic, readonly) double gridMiniChromeVisibilityPercentage;
@property (nonatomic, readonly) PXNumberAnimator *gridMiniStylingAnimator;
@property (nonatomic, readonly) double gridMiniStylingPercentage;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double interactionProgress;
@property (nonatomic, readonly) bool isActive;
@property (nonatomic) bool isAnimating;
@property (nonatomic, readonly) bool isContentAnimating;
@property (nonatomic, readonly) unsigned long long previousState;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long targetState;

- (void).cxx_destruct;
- (void)_applyAnimationValue:(struct { double x1; double x2; double x3; long long x4; double x5; bool x6; })arg1 toAnimator:(id)arg2 animateImmediately:(bool)arg3;
- (void)_invalidateAnimator;
- (void)_invalidateIsAnimating;
- (void)_setNeedsUpdate;
- (void)_updateAnimator;
- (void)_updateIsAnimating;
- (id)description;
- (void)didPerformChanges;
- (id)gridBackgroundVisibilityAnimator;
- (double)gridBackgroundVisibilityPercentage;
- (id)gridExpansionAnimator;
- (double)gridExpansionPercentage;
- (double)gridExpansionVelocity;
- (id)gridMiniChromeVisibilityAnimator;
- (double)gridMiniChromeVisibilityPercentage;
- (double)gridMiniFoldingPercentage;
- (id)gridMiniStylingAnimator;
- (double)gridMiniStylingPercentage;
- (double)gridMiniUnfoldingPercentage;
- (id)init;
- (double)interactionProgress;
- (bool)isActive;
- (bool)isAnimating;
- (bool)isContentAnimating;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)performAnimated:(bool)arg1 changes:(id /* block */)arg2;
- (void)performChanges:(id /* block */)arg1;
- (unsigned long long)previousState;
- (void)setGridExpansionVelocity:(double)arg1;
- (void)setInteractionProgress:(double)arg1;
- (void)setIsAnimating:(bool)arg1;
- (void)setIsContentAnimating:(bool)arg1;
- (void)setTargetState:(unsigned long long)arg1;
- (unsigned long long)targetState;

@end
