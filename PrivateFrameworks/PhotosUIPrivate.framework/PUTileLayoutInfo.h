/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUIPrivate.framework/PhotosUIPrivate
 */

@interface PUTileLayoutInfo : NSObject <NSCopying> {
    double  _alpha;
    UIColor * _borderColor;
    double  _borderWidth;
    struct CGPoint { 
        double x; 
        double y; 
    }  _center;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _contentsRect;
    <PUTilingCoordinateSystem> * _coordinateSystem;
    NSString * _cornerCurve;
    unsigned long long  _cornerMask;
    double  _cornerRadius;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _cropInsets;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _expandedRectInsets;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _hitTestOutset;
    struct CGSize { 
        double width; 
        double height; 
    }  _size;
    PUTileIdentifier * _tileIdentifier;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _transform;
    double  _verticalLegibilityFraction;
    double  _zPosition;
}

@property (setter=_setAlpha:, nonatomic) double alpha;
@property (nonatomic, readonly) UIColor *borderColor;
@property (nonatomic, readonly) double borderWidth;
@property (setter=_setCenter:, nonatomic) struct CGPoint { double x1; double x2; } center;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } contentsRect;
@property (setter=_setCoordinateSystem:, nonatomic, retain) <PUTilingCoordinateSystem> *coordinateSystem;
@property (setter=_setCornerCurve:, nonatomic, retain) NSString *cornerCurve;
@property (setter=_setCornerMask:, nonatomic) unsigned long long cornerMask;
@property (setter=_setCornerRadius:, nonatomic) double cornerRadius;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } cropInsets;
@property (nonatomic, readonly) NSString *dataSourceIdentifier;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } expandedRectInsets;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } hitTestOutset;
@property (nonatomic, readonly) NSIndexPath *indexPath;
@property (setter=_setSize:, nonatomic) struct CGSize { double x1; double x2; } size;
@property (setter=_setTileIdentifier:, nonatomic, retain) PUTileIdentifier *tileIdentifier;
@property (nonatomic, readonly) NSString *tileKind;
@property (setter=_setTransform:, nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } transform;
@property (nonatomic) double verticalLegibilityFraction;
@property (setter=_setZPosition:, nonatomic) double zPosition;

- (void).cxx_destruct;
- (void)_setAlpha:(double)arg1;
- (void)_setCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)_setCoordinateSystem:(id)arg1;
- (void)_setCornerCurve:(id)arg1;
- (void)_setCornerMask:(unsigned long long)arg1;
- (void)_setCornerRadius:(double)arg1;
- (void)_setSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setTileIdentifier:(id)arg1;
- (void)_setTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)_setZPosition:(double)arg1;
- (double)alpha;
- (id)borderColor;
- (double)borderWidth;
- (struct CGPoint { double x1; double x2; })center;
- (id)clone;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentsRect;
- (id)coordinateSystem;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)cornerCurve;
- (unsigned long long)cornerMask;
- (double)cornerRadius;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })cropInsets;
- (id)dataSourceIdentifier;
- (id)description;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })expandedRectInsets;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (unsigned long long)hash;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })hitTestOutset;
- (id)indexPath;
- (id)init;
- (id)initWithTileIdentifier:(id)arg1 center:(struct CGPoint { double x1; double x2; })arg2 size:(struct CGSize { double x1; double x2; })arg3 alpha:(double)arg4 cornerRadius:(double)arg5 cornerCurve:(id)arg6 cornerMask:(unsigned long long)arg7 borderWidth:(double)arg8 borderColor:(id)arg9 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg10 zPosition:(double)arg11 contentsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg12 hitTestOutset:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg13 coordinateSystem:(id)arg14 cropInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg15 verticalLegibilityFraction:(double)arg16;
- (id)initWithTileIdentifier:(id)arg1 center:(struct CGPoint { double x1; double x2; })arg2 size:(struct CGSize { double x1; double x2; })arg3 alpha:(double)arg4 cornerRadius:(double)arg5 cornerCurve:(id)arg6 cornerMask:(unsigned long long)arg7 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg8 zPosition:(double)arg9 contentsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg10 coordinateSystem:(id)arg11;
- (id)initWithTileIdentifier:(id)arg1 center:(struct CGPoint { double x1; double x2; })arg2 size:(struct CGSize { double x1; double x2; })arg3 alpha:(double)arg4 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg5 zPosition:(double)arg6 contentsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg7 coordinateSystem:(id)arg8;
- (id)initWithTileIdentifier:(id)arg1 center:(struct CGPoint { double x1; double x2; })arg2 size:(struct CGSize { double x1; double x2; })arg3 alpha:(double)arg4 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg5 zPosition:(double)arg6 contentsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg7 hitTestOutset:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg8 coordinateSystem:(id)arg9;
- (id)initWithTileIdentifier:(id)arg1 center:(struct CGPoint { double x1; double x2; })arg2 size:(struct CGSize { double x1; double x2; })arg3 alpha:(double)arg4 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg5 zPosition:(double)arg6 coordinateSystem:(id)arg7;
- (bool)isEqual:(id)arg1;
- (bool)isGeometryEqualToLayoutInfo:(id)arg1;
- (id)layoutInfoByInterpolatingWithLayoutInfo:(id)arg1 mixFactor:(double)arg2 coordinateSystem:(id)arg3;
- (id)layoutInfoWithAlpha:(double)arg1;
- (id)layoutInfoWithCenter:(struct CGPoint { double x1; double x2; })arg1 size:(struct CGSize { double x1; double x2; })arg2 alpha:(double)arg3 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg4 zPosition:(double)arg5 coordinateSystem:(id)arg6;
- (id)layoutInfoWithCenter:(struct CGPoint { double x1; double x2; })arg1 size:(struct CGSize { double x1; double x2; })arg2 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg3;
- (id)layoutInfoWithCoordinateSystem:(id)arg1;
- (id)layoutInfoWithIndexPath:(id)arg1 tileKind:(id)arg2 dataSourceIdentifier:(id)arg3;
- (id)layoutInfoWithZPosition:(double)arg1;
- (struct CGPoint { double x1; double x2; })parallaxOffset;
- (void)setCropInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setExpandedRectInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setVerticalLegibilityFraction:(double)arg1;
- (struct CGSize { double x1; double x2; })size;
- (id)tileIdentifier;
- (id)tileKind;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;
- (double)verticalLegibilityFraction;
- (double)zPosition;

@end
