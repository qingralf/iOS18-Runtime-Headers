/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUIPrivate.framework/PhotosUIPrivate
 */

@interface PUUserTransformTileViewController : PUTileViewController <PUAssetViewModelChangeObserver, PUUserTransformViewDelegate> {
    NSString * __identifier;
    PUAssetViewModel * _assetViewModel;
    PUBrowsingViewModel * _browsingViewModel;
    <PUUserTransformTileViewControllerDelegate> * _delegate;
    struct { 
        bool didChangeIsUserInteracting; 
        bool shouldReceiveTouchAtLocationFromProvider; 
    }  _delegateRespondsTo;
    PUDisplayTileTransform * _displayTileTransform;
    UIView * _interactionHostView;
    double  _minimumScaleWhileApplyingInsets;
    struct CGPoint { 
        double x; 
        double y; 
    }  _offsetWhileApplyingInsets;
    bool  _userInteractionEnabled;
    PUUserTransformView * _userTransformView;
}

@property (setter=_setIdentifier:, nonatomic, copy) NSString *_identifier;
@property (nonatomic, retain) PUAssetViewModel *assetViewModel;
@property (nonatomic, retain) PUBrowsingViewModel *browsingViewModel;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <PUUserTransformTileViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) PUDisplayTileTransform *displayTileTransform;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UIView *interactionHostView;
@property (nonatomic, readonly) bool isZoomedIn;
@property (nonatomic) double minimumScaleWhileApplyingInsets;
@property (nonatomic) struct CGPoint { double x1; double x2; } offsetWhileApplyingInsets;
@property (readonly) Class superclass;
@property (setter=setUserInteractionEnabled:, nonatomic) bool userInteractionEnabled;
@property (nonatomic, readonly) PUUserTransformTileLayoutInfo *userTransformTileLayoutInfo;
@property (setter=_setUserTransformView:, nonatomic, retain) PUUserTransformView *userTransformView;

- (void).cxx_destruct;
- (void)_handleAssetViewModelChange:(id)arg1;
- (void)_handleBrowsingViewModelChange:(id)arg1;
- (id)_identifier;
- (void)_setIdentifier:(id)arg1;
- (void)_setUserTransformView:(id)arg1;
- (void)_updateAssetViewModelIsZoomedIn;
- (void)_updateAssetViewModelProperties;
- (void)_updateDisplayTileTransform;
- (void)_updateInteractionHostViewRegistration;
- (void)_updateMinimumZoomScale:(bool)arg1;
- (void)_updateUserInteractionEnabled;
- (void)_updateUserTransformOffset:(bool)arg1;
- (void)_updateUserTransformPadding;
- (void)_updateUserTransformView:(id)arg1;
- (id)_userInputOriginIdentifier;
- (void)applyLayoutInfo:(id)arg1;
- (id)assetViewModel;
- (void)becomeReusable;
- (id)browsingViewModel;
- (void)dealloc;
- (id)delegate;
- (void)didChangeAnimating;
- (void)didChangeIsOnPrimaryDisplay;
- (id)displayTileTransform;
- (id)initWithReuseIdentifier:(id)arg1;
- (id)interactionHostView;
- (bool)isZoomedIn;
- (id)loadView;
- (double)minimumScaleWhileApplyingInsets;
- (struct CGPoint { double x1; double x2; })offsetWhileApplyingInsets;
- (bool)pointInsideContentView:(struct CGPoint { double x1; double x2; })arg1 inCoordinateSpace:(id)arg2;
- (void)setAssetViewModel:(id)arg1;
- (void)setBrowsingViewModel:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayTileTransform:(id)arg1;
- (void)setMinimumScaleWhileApplyingInsets:(double)arg1;
- (void)setOffsetWhileApplyingInsets:(struct CGPoint { double x1; double x2; })arg1;
- (void)setUserInteractionEnabled:(bool)arg1;
- (bool)userInteractionEnabled;
- (id)userTransformTileLayoutInfo;
- (id)userTransformView;
- (void)userTransformView:(id)arg1 didChangeIsUserInteracting:(bool)arg2;
- (void)userTransformView:(id)arg1 didChangeUserAffineTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg2 isUserInteracting:(bool)arg3;
- (bool)userTransformView:(id)arg1 shouldReceiveTouchAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)userTransformViewDidChangeIsZoomedIn:(id)arg1;
- (void)viewModel:(id)arg1 didChange:(id)arg2;
- (void)zoomInOnLocationFromProvider:(id)arg1;
- (void)zoomOutAnimated:(bool)arg1;

@end
