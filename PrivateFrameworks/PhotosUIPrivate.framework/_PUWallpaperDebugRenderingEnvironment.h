/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosUIPrivate.framework/PhotosUIPrivate
 */

@interface _PUWallpaperDebugRenderingEnvironment : NSObject <PXPosterRenderingEnvironment> {
    NSURL * _assetDirectory;
    PFPosterConfiguration * _posterConfiguration;
    bool  _px_preview;
    unsigned long long  _px_significantEventsCounter;
    bool  _px_snapshot;
}

@property (nonatomic, readonly) NSURL *assetDirectory;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PFPosterConfiguration *posterConfiguration;
@property (nonatomic, readonly) NSURL *px_assetDirectory;
@property (getter=px_backlightLuminance, nonatomic, readonly) long long px_backlightLuminance;
@property (nonatomic, readonly) long long px_boundingShape;
@property (getter=px_isCallServices, nonatomic, readonly) bool px_callServices;
@property (nonatomic, readonly) long long px_contentsType;
@property (nonatomic, readonly) long long px_deviceOrientation;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } px_floatingObscurableBounds;
@property (getter=px_isPlayground, nonatomic, readonly) bool px_playground;
@property (getter=px_isPreview, nonatomic, readonly) bool px_preview;
@property (nonatomic) unsigned long long px_significantEventsCounter;
@property (getter=px_isSnapshot, nonatomic, readonly) bool px_snapshot;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)assetDirectory;
- (id)initWithPosterConfiguration:(id)arg1 assetDirectory:(id)arg2;
- (id)posterConfiguration;
- (id)px_assetDirectory;
- (long long)px_backlightLuminance;
- (long long)px_boundingShape;
- (long long)px_contentsType;
- (long long)px_deviceOrientation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })px_floatingObscurableBounds;
- (bool)px_isCallServices;
- (bool)px_isPlayground;
- (bool)px_isPreview;
- (bool)px_isSnapshot;
- (unsigned long long)px_significantEventsCounter;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })px_titleBoundsForLayout:(unsigned long long)arg1;
- (void)setPx_significantEventsCounter:(unsigned long long)arg1;

@end
