/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PlatformSSO.framework/PlatformSSO
 */

@interface PORegistrationContext : NSObject {
    int  _authMethod;
    bool  _authorizationProvided;
    NSString * _containerAppBundleIdentifier;
    LAContext * _credentialContext;
    bool  _deviceKeysShouldChange;
    NSNumber * _encryptionAlgorithm;
    NSString * _extensionIdentifier;
    int  _failureCount;
    NSString * _loginUserName;
    bool  _migratingDeviceKeys;
    bool  _newPasswordUser;
    bool  _newSmartCardUser;
    bool  _newUserBindingComplete;
    long long  _options;
    POProfile * _profile;
    long long  _protocolVersion;
    NSString * _registrationToken;
    POUIRegistrationWindow * _registrationUI;
    bool  _repair;
    bool  _resetKeys;
    bool  _retry;
    NSNumber * _signingAlgorithm;
    NSData * _smartCardHash;
    NSString * _smartCardTokenId;
    POExtension * _ssoExtension;
    long long  _state;
    bool  _useSharedDeviceKeys;
    bool  _userIsPlatformSSOUser;
    NSString * _userName;
    bool  _userNotified;
    bool  _userSEPKeyInvalid;
    NSNumber * _userSigningAlgorithm;
}

@property int authMethod;
@property bool authorizationProvided;
@property (retain) NSString *containerAppBundleIdentifier;
@property (retain) LAContext *credentialContext;
@property bool deviceKeysShouldChange;
@property (nonatomic, retain) NSNumber *encryptionAlgorithm;
@property (retain) NSString *extensionIdentifier;
@property int failureCount;
@property (retain) NSString *loginUserName;
@property bool migratingDeviceKeys;
@property (getter=isNewPasswordUser) bool newPasswordUser;
@property (getter=isNewSmartCarddUser) bool newSmartCardUser;
@property bool newUserBindingComplete;
@property long long options;
@property (retain) POProfile *profile;
@property long long protocolVersion;
@property (retain) NSString *registrationToken;
@property (retain) POUIRegistrationWindow *registrationUI;
@property (getter=isRepair) bool repair;
@property bool resetKeys;
@property (getter=isRetry) bool retry;
@property (nonatomic, retain) NSNumber *signingAlgorithm;
@property (retain) NSData *smartCardHash;
@property (retain) NSString *smartCardTokenId;
@property (retain) POExtension *ssoExtension;
@property long long state;
@property bool useSharedDeviceKeys;
@property bool userIsPlatformSSOUser;
@property (retain) NSString *userName;
@property bool userNotified;
@property bool userSEPKeyInvalid;
@property (nonatomic, retain) NSNumber *userSigningAlgorithm;

- (void).cxx_destruct;
- (int)authMethod;
- (bool)authorizationProvided;
- (id)containerAppBundleIdentifier;
- (id)credentialContext;
- (bool)deviceKeysShouldChange;
- (id)encryptionAlgorithm;
- (id)extensionIdentifier;
- (int)failureCount;
- (id)init;
- (bool)isNewPasswordUser;
- (bool)isNewSmartCarddUser;
- (bool)isRepair;
- (bool)isRetry;
- (bool)isUserNotification;
- (id)loginUserName;
- (bool)migratingDeviceKeys;
- (bool)newUserBindingComplete;
- (long long)options;
- (id)profile;
- (long long)protocolVersion;
- (id)registrationToken;
- (id)registrationUI;
- (bool)resetKeys;
- (void)setAuthMethod:(int)arg1;
- (void)setAuthorizationProvided:(bool)arg1;
- (void)setContainerAppBundleIdentifier:(id)arg1;
- (void)setCredentialContext:(id)arg1;
- (void)setDeviceKeysShouldChange:(bool)arg1;
- (void)setEncryptionAlgorithm:(id)arg1;
- (void)setExtensionIdentifier:(id)arg1;
- (void)setFailureCount:(int)arg1;
- (void)setLoginUserName:(id)arg1;
- (void)setMigratingDeviceKeys:(bool)arg1;
- (void)setNewPasswordUser:(bool)arg1;
- (void)setNewSmartCardUser:(bool)arg1;
- (void)setNewUserBindingComplete:(bool)arg1;
- (void)setOptions:(long long)arg1;
- (void)setProfile:(id)arg1;
- (void)setProtocolVersion:(long long)arg1;
- (void)setRegistrationToken:(id)arg1;
- (void)setRegistrationUI:(id)arg1;
- (void)setRepair:(bool)arg1;
- (void)setResetKeys:(bool)arg1;
- (void)setRetry:(bool)arg1;
- (void)setSigningAlgorithm:(id)arg1;
- (void)setSmartCardHash:(id)arg1;
- (void)setSmartCardTokenId:(id)arg1;
- (void)setSsoExtension:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setUseSharedDeviceKeys:(bool)arg1;
- (void)setUserIsPlatformSSOUser:(bool)arg1;
- (void)setUserName:(id)arg1;
- (void)setUserNotified:(bool)arg1;
- (void)setUserSEPKeyInvalid:(bool)arg1;
- (void)setUserSigningAlgorithm:(id)arg1;
- (id)signingAlgorithm;
- (id)smartCardHash;
- (id)smartCardTokenId;
- (id)ssoExtension;
- (long long)state;
- (bool)useSharedDeviceKeys;
- (bool)userIsPlatformSSOUser;
- (id)userName;
- (bool)userNotified;
- (bool)userSEPKeyInvalid;
- (id)userSigningAlgorithm;

@end
