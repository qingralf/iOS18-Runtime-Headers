/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PlatformSSOCore.framework/PlatformSSOCore
 */

@interface POConfigurationCoreManager : NSObject {
    PODeviceConfiguration * _currentDeviceConfiguration;
    POLoginConfiguration * _currentLoginConfiguration;
    POUserConfiguration * _currentUserConfiguration;
    POConfigurationVersion * _deviceConfigurationVersion;
    POConfigurationVersion * _loginConfigurationVersion;
    PODaemonCoreConnection * _serviceConnection;
    bool  _sharedOnly;
    POConfigurationVersion * _userConfigurationVersion;
    NSString * _userIdentifier;
    <POUserIdentifierProvider> * _userIdentifierProvider;
    NSString * _userName;
}

@property (readonly) PODeviceConfiguration *currentDeviceConfiguration;
@property (readonly) POLoginConfiguration *currentLoginConfiguration;
@property (readonly) POUserConfiguration *currentUserConfiguration;
@property (retain) POConfigurationVersion *deviceConfigurationVersion;
@property (retain) POConfigurationVersion *loginConfigurationVersion;
@property bool sharedOnly;
@property (retain) POConfigurationVersion *userConfigurationVersion;
@property (readonly) PODeviceConfiguration *userDeviceConfiguration;
@property (readonly) NSString *userIdentifier;
@property (retain) <POUserIdentifierProvider> *userIdentifierProvider;
@property (readonly) NSString *userName;

- (void).cxx_destruct;
- (id)currentDeviceConfiguration;
- (id)currentLoginConfiguration;
- (id)currentUserConfiguration;
- (id)deviceConfiguration;
- (id)deviceConfigurationVersion;
- (id)initWithUserName:(id)arg1 identifierProvider:(id)arg2 sharedOnly:(bool)arg3;
- (id)initWithUserName:(id)arg1 identifierProvider:(id)arg2 sharedOnly:(bool)arg3 volume:(id)arg4;
- (void)insertTokenForUserName:(id)arg1;
- (bool)isPlatformSSOUserName:(id)arg1;
- (id)loginConfiguration;
- (id)loginConfigurationVersion;
- (id)retrievePendingSSOTokensForUserName:(id)arg1;
- (id)retrieveStashedDecryptionContextForUserName:(id)arg1;
- (id)retrieveStashedSSOTokensForUserName:(id)arg1;
- (void)saveCachedContextsToDisk;
- (bool)savePendingSSOTokens:(id)arg1 forUserName:(id)arg2;
- (bool)saveStashedDecryptionContext:(id)arg1 forUserName:(id)arg2;
- (bool)saveStashedSSOTokens:(id)arg1 forUserName:(id)arg2;
- (void)setDeviceConfigurationVersion:(id)arg1;
- (void)setLoginConfigurationVersion:(id)arg1;
- (void)setSharedOnly:(bool)arg1;
- (void)setUserConfigurationVersion:(id)arg1;
- (void)setUserIdentifierProvider:(id)arg1;
- (bool)sharedOnly;
- (bool)updateLoginStateForUserName:(id)arg1 state:(unsigned long long)arg2 loginDate:(id)arg3 loginType:(unsigned long long)arg4;
- (bool)updateLoginTypeForUserName:(id)arg1 loginType:(unsigned long long)arg2;
- (id)userConfigurationForUserName:(id)arg1;
- (id)userConfigurationVersion;
- (id)userDeviceConfiguration;
- (id)userIdentifier;
- (id)userIdentifierProvider;
- (id)userLoginStateForUserName:(id)arg1;
- (id)userName;
- (bool)verifyTokenForUserName:(id)arg1 passwordContext:(id)arg2;

@end
