/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation
 */

@interface MediaLibraryItem : NSObject {
    NSNumber * _activeDsid;
    NSString * _album;
    NSString * _artist;
    NSNumber * _artworkTokenId;
    NSURL * _artworkUrl;
    NSNumber * _bookmarkTimeMillis;
    NSNumber * _dateAccessed;
    NSNumber * _dateReleased;
    NSString * _externalGuid;
    NSString * _feedUrl;
    NSNumber * _fileSize;
    NSNumber * _hasBeenPlayed;
    NSNumber * _hasVideo;
    NSString * _itemDescription;
    NSURL * _itemFilePath;
    NSNumber * _playCount;
    NSNumber * _playlistId;
    NSString * _seriesName;
    NSNumber * _serpentId;
    NSString * _statsDownloadIdentifier;
    NSString * _title;
    NSNumber * _totalTimeMillis;
}

@property (nonatomic, retain) NSNumber *activeDsid;
@property (nonatomic, retain) NSString *album;
@property (nonatomic, retain) NSString *artist;
@property (nonatomic, retain) NSNumber *artworkTokenId;
@property (nonatomic, retain) NSURL *artworkUrl;
@property (nonatomic, retain) NSNumber *bookmarkTimeMillis;
@property (nonatomic, retain) NSNumber *dateAccessed;
@property (nonatomic, retain) NSNumber *dateReleased;
@property (nonatomic, retain) NSString *externalGuid;
@property (nonatomic, retain) NSString *feedUrl;
@property (nonatomic, retain) NSNumber *fileSize;
@property (nonatomic, retain) NSNumber *hasBeenPlayed;
@property (nonatomic, retain) NSNumber *hasVideo;
@property (nonatomic, retain) NSString *itemDescription;
@property (nonatomic, retain) NSURL *itemFilePath;
@property (nonatomic, retain) NSNumber *playCount;
@property (nonatomic, retain) NSNumber *playlistId;
@property (nonatomic, retain) NSString *seriesName;
@property (nonatomic, retain) NSNumber *serpentId;
@property (nonatomic, retain) NSString *statsDownloadIdentifier;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, retain) NSNumber *totalTimeMillis;

+ (id)chosenByAutofill;
+ (id)isCompilation;
+ (id)isOTAPurchased;
+ (id)needsRestore;
+ (id)playbackRelativeVolume;
+ (id)playbackStart;
+ (id)remeberBookmark;

- (void).cxx_destruct;
- (id)activeDsid;
- (id)album;
- (id)artist;
- (id)artworkTokenId;
- (id)artworkUrl;
- (id)bookmarkTimeMillis;
- (id)dateAccessed;
- (id)dateReleased;
- (id)externalGuid;
- (id)feedUrl;
- (id)fileSize;
- (id)hasBeenPlayed;
- (id)hasVideo;
- (id)initWithDateAccessed:(id)arg1 album:(id)arg2 title:(id)arg3 fileSize:(id)arg4 externalGuid:(id)arg5 bookmarkTimeMillis:(id)arg6 seriesName:(id)arg7 itemDescription:(id)arg8 hasVideo:(id)arg9 feedUrl:(id)arg10 playlistId:(id)arg11 dateReleased:(id)arg12 artist:(id)arg13 totalTimeMillis:(id)arg14 playCount:(id)arg15 hasBeenPlayed:(id)arg16 serpentId:(id)arg17 activeDsid:(id)arg18 statsDownloadIdentifier:(id)arg19 itemFilePath:(id)arg20 artworkUrl:(id)arg21 artworkTokenId:(id)arg22;
- (id)itemDescription;
- (id)itemFilePath;
- (id)playCount;
- (id)playlistId;
- (id)seriesName;
- (id)serpentId;
- (void)setActiveDsid:(id)arg1;
- (void)setAlbum:(id)arg1;
- (void)setArtist:(id)arg1;
- (void)setArtworkTokenId:(id)arg1;
- (void)setArtworkUrl:(id)arg1;
- (void)setBookmarkTimeMillis:(id)arg1;
- (void)setDateAccessed:(id)arg1;
- (void)setDateReleased:(id)arg1;
- (void)setExternalGuid:(id)arg1;
- (void)setFeedUrl:(id)arg1;
- (void)setFileSize:(id)arg1;
- (void)setHasBeenPlayed:(id)arg1;
- (void)setHasVideo:(id)arg1;
- (void)setItemDescription:(id)arg1;
- (void)setItemFilePath:(id)arg1;
- (void)setPlayCount:(id)arg1;
- (void)setPlaylistId:(id)arg1;
- (void)setSeriesName:(id)arg1;
- (void)setSerpentId:(id)arg1;
- (void)setStatsDownloadIdentifier:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTotalTimeMillis:(id)arg1;
- (id)statsDownloadIdentifier;
- (id)title;
- (id)totalTimeMillis;

@end
