/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Portrait.framework/Portrait
 */

@interface PTPixelBufferUtil : NSObject {
    CIContext * _ciContext;
    struct OpaqueVTPixelTransferSession { } * _pixelTransferSession;
}

+ (struct YUVPixelFormats { unsigned long long x1; unsigned long long x2; })_getPixelFormatsForType:(unsigned int)arg1;
+ (id)createTextureFromCache:(struct __CVMetalTextureCache { }*)arg1 pixelBuffer:(struct __CVBuffer { }*)arg2 descriptor:(id)arg3 plane:(unsigned long long)arg4;
+ (id)createTextureFromPixelBuffer:(struct __CVBuffer { }*)arg1 device:(id)arg2;
+ (id)createTextureFromPixelBuffer:(struct __CVBuffer { }*)arg1 device:(id)arg2 textureCache:(struct __CVMetalTextureCache { }*)arg3 sRGB:(bool)arg4;
+ (unsigned int)createTexturesFromPixelBuffer:(struct __CVBuffer { }*)arg1 device:(id)arg2 outLuma:(id*)arg3 outChroma:(id*)arg4 read:(bool)arg5 write:(bool)arg6;
+ (unsigned int)createTexturesFromPixelBuffer:(struct __CVBuffer { }*)arg1 device:(id)arg2 textureCache:(struct __CVMetalTextureCache { }*)arg3 outLuma:(id*)arg4 outChroma:(id*)arg5 read:(bool)arg6 write:(bool)arg7;
+ (id)getAttachmentString:(struct __CVBuffer { }*)arg1 forKey:(struct __CFString { }*)arg2;
+ (unsigned int)getCVPixelBufferGetPixelFormatType:(unsigned long long)arg1;
+ (id)getMTLTextureDescriptor:(struct __CVBuffer { }*)arg1 device:(id)arg2;
+ (id)getMTLTextureFromPixelBuffer:(struct __CVBuffer { }*)arg1 device:(id)arg2;
+ (unsigned long long)getNoConcurrentAccessHint:(struct __CVBuffer { }*)arg1;
+ (struct YUVPixelFormats { unsigned long long x1; unsigned long long x2; })getPixelFormatsForPixelBuffer:(struct __CVBuffer { }*)arg1;
+ (bool)isCompressed:(struct __CVBuffer { }*)arg1;
+ (bool)isPixelBuffer10Bit:(struct __CVBuffer { }*)arg1;
+ (bool)isPixelBufferFullRange:(struct __CVBuffer { }*)arg1;
+ (bool)isRGB:(struct __CVBuffer { }*)arg1;
+ (void)logPixelbufferMetadataForPixelBuffer:(struct __CVBuffer { }*)arg1 name:(id)arg2;
+ (unsigned int)pixelBufferToLumaChroma:(id)arg1 pixelBuffer:(struct __CVBuffer { }*)arg2 outLuma:(id*)arg3 outChroma:(id*)arg4 read:(bool)arg5 write:(bool)arg6;
+ (int)readRawPixelBufferFromFile:(id)arg1 pixelBuffer:(struct __CVBuffer { }*)arg2;

- (void).cxx_destruct;
- (void)dealloc;

@end
