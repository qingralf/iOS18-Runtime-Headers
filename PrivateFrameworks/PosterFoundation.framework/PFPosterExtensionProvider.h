/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PosterFoundation.framework/PosterFoundation
 */

@interface PFPosterExtensionProvider : NSObject <BSCancellable, _EXQueryControllerDelegate> {
    PFPosterExtensionInstanceProvider * _instanceProvider;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    <PFPosterExtensionProviderObserver> * _lock_delegate;
    NSDictionary * _lock_extensionByProvider;
    NSHashTable * _lock_observers;
    NSPredicate * _lock_predicate;
    NSArray * _lock_queries;
    _EXQueryController * _lock_queryController;
    NSPredicate * _lock_rolePredicate;
    bool  _lock_started;
    NSSet * _lock_supportedRoles;
    NSObject<OS_dispatch_queue> * _observerQueue;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic, readonly) NSUUID *defaultInstanceIdentifier;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSDictionary *extensionForIdentifier;
@property (nonatomic, readonly) bool hasPosterExtensions;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PFPosterExtensionInstanceProvider *instanceProvider;
@property (nonatomic, retain) NSArray *knownPosterExtensions;
@property (retain) NSObject<OS_dispatch_queue> *observerQueue;
@property (nonatomic, retain) NSPredicate *predicate;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSSet *supportedRoles;

+ (id)extensionKitQuery;

- (void).cxx_destruct;
- (id)_lock_buildQuery;
- (void)_lock_executeCancellationAndRestartIfAlreadyStarted:(bool)arg1;
- (void)_lock_executeQuery;
- (void)_lock_notifyDataStoreOfUpdatedExtensions:(id)arg1 fromExtensions:(id)arg2;
- (void)_lock_start;
- (void)_lock_teardownQueryController;
- (bool)_lock_updateExtensions;
- (bool)_lock_updateExtensions:(id)arg1;
- (id)acquireInstanceForExtensionWithIdentifier:(id)arg1 reason:(id)arg2 error:(out id*)arg3;
- (void)addObserver:(id)arg1;
- (void)cancel;
- (id)defaultInstanceIdentifier;
- (id)defaultInstanceOfProvider:(id)arg1 error:(out id*)arg2;
- (id)extensionForIdentifier;
- (bool)hasPosterExtensions;
- (id)init;
- (id)initWithDefaultInstanceIdentifier:(id)arg1;
- (id)instanceProvider;
- (id)knownPosterExtensions;
- (id)observerQueue;
- (id)predicate;
- (void)queryControllerDidUpdate:(id)arg1 resultDifference:(id)arg2;
- (void)relinquishExtensionInstanceWithIdentifier:(id)arg1 reason:(id)arg2;
- (bool)reloadExtensions;
- (void)removeObserver:(id)arg1;
- (void)setObserverQueue:(id)arg1;
- (void)setPredicate:(id)arg1;
- (void)setSupportedRoles:(id)arg1;
- (void)start;
- (id)supportedRoles;

@end
