/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PosterUIFoundation.framework/PosterUIFoundation
 */

@interface PUIStylePickerHomeScreenItemView : UIControl {
    _PUIStylePickerMicaAssetView * _assetView;
    bool  _highlighted;
    double  _iconContinuousCornerRadius;
    struct CGSize { 
        double width; 
        double height; 
    }  _iconSize;
    NSArray * _knownConstraints;
    UILabel * _label;
    NSLayoutConstraint * _labelAssetViewMarginConstraint;
    bool  _selected;
    UIView * _selectedBorderView;
    <UITraitChangeRegistration> * _traitChangeRegistration;
}

@property (nonatomic, readonly) UIView<PUIStylePickerMicaAssetControlling> *assetView;
@property (getter=isHighlighted, nonatomic) bool highlighted;
@property (nonatomic) double iconContinuousCornerRadius;
@property (nonatomic) struct CGSize { double x1; double x2; } iconSize;
@property (nonatomic, readonly) UILabel *label;
@property (getter=isSelected, nonatomic) bool selected;

+ (id)defaultFont;
+ (struct CGSize { double x1; double x2; })defaultSizeForIconSize:(struct CGSize { double x1; double x2; })arg1;

- (void).cxx_destruct;
- (void)_updateColorsForTraitCollectionAnimated:(bool)arg1;
- (void)_updateHighlightState:(bool)arg1;
- (void)_updateLayoutConstraints;
- (void)_userInterfaceStyleDidUpdate:(id)arg1;
- (id)assetView;
- (double)iconContinuousCornerRadius;
- (struct CGSize { double x1; double x2; })iconSize;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isHighlighted;
- (bool)isSelected;
- (id)label;
- (void)setHighlighted:(bool)arg1;
- (void)setHighlighted:(bool)arg1 animated:(bool)arg2;
- (void)setIconContinousCornerRadius:(double)arg1;
- (void)setIconContinuousCornerRadius:(double)arg1;
- (void)setIconSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setSelected:(bool)arg1;
- (void)setSelected:(bool)arg1 animated:(bool)arg2;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)willMoveToWindow:(id)arg1;

@end
