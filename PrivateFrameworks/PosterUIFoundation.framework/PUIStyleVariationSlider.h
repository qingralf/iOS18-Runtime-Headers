/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PosterUIFoundation.framework/PosterUIFoundation
 */

@interface PUIStyleVariationSlider : UIControl {
    NSString * _contextIdentifier;
    bool  _isPressed;
    struct { 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } thumbContainerViewBounds; 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } thumbContainerViewFrame; 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } trackViewFrame; 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } thumbBorderRect; 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } pressedThumbBorderRect; 
        double trackViewContinuousCornerRadius; 
        double thumbBorderLayerStrokeWidth; 
    }  _metrics;
    UIPanGestureRecognizer * _panGesture;
    double  _startPanOffset;
    PUIStyleUICoordinator * _styleCoordinator;
    CAShapeLayer * _thumbBorderLayer;
    CAShapeLayer * _thumbClippingLayer;
    UIView * _thumbContainerView;
    UIView * _thumbContentView;
    CALayer * _thumbSoftShadowLayer;
    UIView * _trackView;
    <UITraitChangeRegistration> * _traitChangeRegistration;
    double  _value;
    double  _variation;
}

@property (nonatomic, retain) NSString *contextIdentifier;
@property (setter=setPressed:, nonatomic) bool isPressed;
@property (nonatomic, retain) UIPanGestureRecognizer *panGesture;
@property (nonatomic, readonly) UIGestureRecognizer *sliderGestureRecognizer;
@property (nonatomic) double startPanOffset;
@property (nonatomic, retain) PUIStyleUICoordinator *styleCoordinator;
@property (nonatomic, retain) CAShapeLayer *thumbBorderLayer;
@property (nonatomic, retain) CAShapeLayer *thumbClippingLayer;
@property (nonatomic, retain) UIView *thumbContainerView;
@property (nonatomic, retain) UIView *thumbContentView;
@property (nonatomic, retain) CALayer *thumbSoftShadowLayer;
@property (nonatomic, retain) UIView *trackView;
@property (nonatomic) double value;
@property (nonatomic) double variation;

+ (double)defaultHeight;
+ (struct CGColor { }*)defaultTrackBorderColor;
+ (double)defaultTrackHeight;
+ (double)defaultTrackInnerShadowBorderWidth;
+ (double)defaultTrackMultiplier;

- (void).cxx_destruct;
- (void)_applyMetrics:(struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; double x6; double x7; })arg1;
- (void)_layoutDirectionDidChange:(id)arg1 previousTraitCollection:(id)arg2;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; double x6; double x7; })_metricsForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setSliderValue:(double)arg1 layout:(bool)arg2 fireActions:(bool)arg3;
- (void)_setupViewsIfNeeded;
- (void)_updateThumbContentViewAnimated:(bool)arg1;
- (void)_updateTrackAnimated:(bool)arg1;
- (id)contextIdentifier;
- (id)initWithStyleCoordinator:(id)arg1 contextIdentifier:(id)arg2;
- (bool)isPressed;
- (void)layoutSubviews;
- (id)panGesture;
- (void)setContextIdentifier:(id)arg1;
- (void)setPanGesture:(id)arg1;
- (void)setPressed:(bool)arg1;
- (void)setPressed:(bool)arg1 animated:(bool)arg2;
- (void)setStartPanOffset:(double)arg1;
- (void)setStyleCoordinator:(id)arg1;
- (void)setStyleCoordinator:(id)arg1 animated:(bool)arg2;
- (void)setThumbBorderLayer:(id)arg1;
- (void)setThumbClippingLayer:(id)arg1;
- (void)setThumbContainerView:(id)arg1;
- (void)setThumbContentView:(id)arg1;
- (void)setThumbSoftShadowLayer:(id)arg1;
- (void)setTrackView:(id)arg1;
- (void)setValue:(double)arg1;
- (void)setVariation:(double)arg1;
- (id)sliderGestureRecognizer;
- (double)startPanOffset;
- (id)styleCoordinator;
- (id)thumbBorderLayer;
- (id)thumbClippingLayer;
- (id)thumbContainerView;
- (id)thumbContentView;
- (id)thumbSoftShadowLayer;
- (void)thumbViewDidPan:(id)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)trackView;
- (double)value;
- (double)variation;

@end
