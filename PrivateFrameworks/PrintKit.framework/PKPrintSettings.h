/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PrintKit.framework/PrintKit
 */

@interface PKPrintSettings : NSObject <NSCopying, NSSecureCoding, PKPropertyVisitable> {
    bool  _annotationsImaged;
    int  _copies;
    NSString * _documentPassword;
    NSString * _duplex;
    NSString * _fileType;
    NSString * _finishingTemplate;
    NSArray * _finishings;
    NSString * _inputSlot;
    NSString * _jobAccountID;
    NSString * _jobName;
    NSString * _jobPresetName;
    NSString * _mediaType;
    NSString * _orientation;
    NSString * _outputBin;
    NSString * _outputMode;
    NSArray * _pageRanges_asStringArray;
    NSString * _pageScale;
    NSString * _pageStackOrder;
    PKPaper * _paper;
    NSString * _printQuality;
    NSURL * _printerInfoURL;
    NSURL * _printerSuppliesURL;
    NSString * _thumbnailPosition;
}

@property bool annotationsImaged;
@property int copies;
@property (copy) NSString *documentPassword;
@property (copy) NSString *duplex;
@property (copy) NSString *fileType;
@property (copy) NSString *finishingTemplate;
@property (copy) NSArray *finishings;
@property (copy) NSString *inputSlot;
@property (copy) NSString *jobAccountID;
@property (copy) NSString *jobName;
@property (copy) NSString *jobPresetName;
@property (copy) NSString *mediaType;
@property (copy) NSString *orientation;
@property (copy) NSString *outputBin;
@property (copy) NSString *outputMode;
@property (copy) NSArray *pageRanges;
@property (copy) NSArray *pageRanges_asStringArray;
@property (copy) NSString *pageScale;
@property (copy) NSString *pageStackOrder;
@property (copy) PKPaper *paper;
@property (copy) NSString *printQuality;
@property (copy) NSURL *printerInfoURL;
@property (copy) NSURL *printerSuppliesURL;
@property (copy) NSString *thumbnailPosition;

+ (id)default;
+ (id)photo;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_setupDefaults;
- (bool)annotationsImaged;
- (int)copies;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)debugDescription;
- (id)documentPassword;
- (id)duplex;
- (void)encodeWithCoder:(id)arg1;
- (id)fileType;
- (id)finishingTemplate;
- (id)finishings;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithPaper:(id)arg1;
- (id)initWithSettings:(id)arg1;
- (id)initWithUserCodableDictionary:(id)arg1;
- (id)inputSlot;
- (bool)isEqual:(id)arg1;
- (id)jobAccountID;
- (id)jobName;
- (id)jobPresetName;
- (id)keyedNameToVisitName:(id)arg1;
- (id)mediaType;
- (id)objectForKey:(id)arg1;
- (id)orientation;
- (id)outputBin;
- (id)outputMode;
- (id)pageRanges;
- (id)pageRanges_asStringArray;
- (id)pageScale;
- (id)pageStackOrder;
- (id)paper;
- (id)printQuality;
- (id)printerInfoURL;
- (id)printerSuppliesURL;
- (void)removeObjectForKey:(id)arg1;
- (void)setAnnotationsImaged:(bool)arg1;
- (void)setCopies:(int)arg1;
- (void)setDocumentPassword:(id)arg1;
- (void)setDuplex:(id)arg1;
- (void)setFileType:(id)arg1;
- (void)setFinishingTemplate:(id)arg1;
- (void)setFinishings:(id)arg1;
- (void)setFromUserCodableDictionary:(id)arg1;
- (void)setInputSlot:(id)arg1;
- (void)setJobAccountID:(id)arg1;
- (void)setJobName:(id)arg1;
- (void)setJobPresetName:(id)arg1;
- (void)setMediaType:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setOrientation:(id)arg1;
- (void)setOutputBin:(id)arg1;
- (void)setOutputMode:(id)arg1;
- (void)setPageRanges:(id)arg1;
- (void)setPageRanges_asStringArray:(id)arg1;
- (void)setPageScale:(id)arg1;
- (void)setPageStackOrder:(id)arg1;
- (void)setPaper:(id)arg1;
- (void)setPrintQuality:(id)arg1;
- (void)setPrinterInfoURL:(id)arg1;
- (void)setPrinterSuppliesURL:(id)arg1;
- (void)setThumbnailPosition:(id)arg1;
- (id)thumbnailPosition;
- (id)userCodableDictionary;
- (void)visitProperties:(struct Visitor { int (**x1)(); }*)arg1;

@end
