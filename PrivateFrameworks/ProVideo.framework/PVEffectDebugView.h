/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo
 */

@interface PVEffectDebugView : UIView {
    CAShapeLayer * _cornerPointsLayer;
    <PVEffectDebugViewDelegate> * _delegate;
    CAShapeLayer * _documentBoundingBoxLayer;
    CAShapeLayer * _hitAreaMinimumSizeBoundingBoxLayer;
    CAShapeLayer * _hitAreaPointsLayer;
    CAShapeLayer * _hitAreaShapeLayer;
    CAShapeLayer * _midpointLayer;
    CAShapeLayer * _objectAlignedBoundingBoxLayer;
    PVEffectDebugViewOptions * _options;
    PVEffectDebugOptionsView * _optionsView;
    CAShapeLayer * _originCrosshairLayer;
    CAShapeLayer * _originLayer;
    CAShapeLayer * _outputROILayer;
    UIView * _rootContainerView;
    CALayer * _rootLayer;
    CATransformLayer * _rootTransformLayer;
    CALayer * _textBoundingBoxesContainerLayer;
    CALayer * _textCornerPointsContainerLayer;
    CAShapeLayer * _userPointsLayer;
    CAShapeLayer * _userPointsTransformedLayer;
    CAShapeLayer * _userRectsLayer;
    CAShapeLayer * _userRectsTransformedLayer;
}

@property (nonatomic, retain) CAShapeLayer *cornerPointsLayer;
@property (nonatomic) <PVEffectDebugViewDelegate> *delegate;
@property (nonatomic, retain) CAShapeLayer *documentBoundingBoxLayer;
@property (nonatomic, retain) CAShapeLayer *hitAreaMinimumSizeBoundingBoxLayer;
@property (nonatomic, retain) CAShapeLayer *hitAreaPointsLayer;
@property (nonatomic, retain) CAShapeLayer *hitAreaShapeLayer;
@property (nonatomic, retain) CAShapeLayer *midpointLayer;
@property (nonatomic, retain) CAShapeLayer *objectAlignedBoundingBoxLayer;
@property (nonatomic, retain) PVEffectDebugViewOptions *options;
@property (nonatomic, retain) PVEffectDebugOptionsView *optionsView;
@property (nonatomic, retain) CAShapeLayer *originCrosshairLayer;
@property (nonatomic, retain) CAShapeLayer *originLayer;
@property (nonatomic, retain) CAShapeLayer *outputROILayer;
@property (nonatomic, retain) UIView *rootContainerView;
@property (nonatomic, retain) CALayer *rootLayer;
@property (nonatomic, retain) CATransformLayer *rootTransformLayer;
@property (nonatomic, retain) CALayer *textBoundingBoxesContainerLayer;
@property (nonatomic, retain) CALayer *textCornerPointsContainerLayer;
@property (nonatomic, retain) CAShapeLayer *userPointsLayer;
@property (nonatomic, retain) CAShapeLayer *userPointsTransformedLayer;
@property (nonatomic, retain) CAShapeLayer *userRectsLayer;
@property (nonatomic, retain) CAShapeLayer *userRectsTransformedLayer;

+ (id)documentBoundsLayerWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(id)arg2;
+ (id)hitAreaShapeLayerWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(id)arg2;
+ (id)objectBoundsLayerWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(id)arg2;
+ (id)outputROILayerWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(id)arg2;
+ (id)textBoundsLayerWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(id)arg2;

- (void).cxx_destruct;
- (id)cornerPointsLayer;
- (id)delegate;
- (id)documentBoundingBoxLayer;
- (id)hitAreaMinimumSizeBoundingBoxLayer;
- (id)hitAreaPointsLayer;
- (id)hitAreaShapeLayer;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 delegate:(id)arg2;
- (id)midpointLayer;
- (id)objectAlignedBoundingBoxLayer;
- (id)options;
- (id)optionsView;
- (id)originCrosshairLayer;
- (id)originLayer;
- (id)outputROILayer;
- (id)rootContainerView;
- (id)rootLayer;
- (id)rootTransformLayer;
- (void)setCornerPointsLayer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDocumentBoundingBoxLayer:(id)arg1;
- (void)setHitAreaMinimumSizeBoundingBoxLayer:(id)arg1;
- (void)setHitAreaPointsLayer:(id)arg1;
- (void)setHitAreaShapeLayer:(id)arg1;
- (void)setMidpointLayer:(id)arg1;
- (void)setObjectAlignedBoundingBoxLayer:(id)arg1;
- (void)setOptions:(id)arg1;
- (void)setOptionsView:(id)arg1;
- (void)setOriginCrosshairLayer:(id)arg1;
- (void)setOriginLayer:(id)arg1;
- (void)setOutputROILayer:(id)arg1;
- (void)setRootContainerView:(id)arg1;
- (void)setRootLayer:(id)arg1;
- (void)setRootTransformLayer:(id)arg1;
- (void)setTextBoundingBoxesContainerLayer:(id)arg1;
- (void)setTextCornerPointsContainerLayer:(id)arg1;
- (void)setUserPointsLayer:(id)arg1;
- (void)setUserPointsTransformedLayer:(id)arg1;
- (void)setUserRectsLayer:(id)arg1;
- (void)setUserRectsTransformedLayer:(id)arg1;
- (void)setupViews;
- (id)textBoundingBoxesContainerLayer;
- (id)textCornerPointsContainerLayer;
- (void)updateBorderedLayer:(id)arg1 borderRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 borderWidth:(double)arg3 borderColor:(id)arg4;
- (void)updateCrosshairLayer:(id)arg1 center:(struct CGPoint { double x1; double x2; })arg2 color:(id)arg3 size:(struct CGSize { double x1; double x2; })arg4 thickness:(struct CGSize { double x1; double x2; })arg5;
- (void)updateDottedBorderedLayer:(id)arg1 borderRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 borderWidth:(double)arg3 borderColor:(id)arg4 borderPhase:(double)arg5 borderDashPattern:(id)arg6;
- (void)updateFilledCircleLayer:(id)arg1 center:(struct CGPoint { double x1; double x2; })arg2 radius:(double)arg3 fillColor:(id)arg4;
- (void)updateFilledCircleLayer:(id)arg1 center:(struct CGPoint { double x1; double x2; })arg2 radius:(double)arg3 fillColor:(id)arg4 borderWidth:(double)arg5 borderColor:(id)arg6 borderPhase:(double)arg7 borderDashPattern:(id)arg8;
- (void)updateFilledPolygonLayer:(id)arg1 path:(struct CGPath { }*)arg2 fillColor:(id)arg3;
- (void)updatePointsLayers:(id)arg1 points:(id)arg2 colors:(id)arg3 size:(double)arg4;
- (void)updatePolygonLayer:(id)arg1 points:(id)arg2 borderWidth:(double)arg3 borderColor:(id)arg4 borderPhase:(double)arg5 borderDashPattern:(id)arg6;
- (void)updateUserPoints:(id)arg1 transformedLayer:(id)arg2 effectScale:(double)arg3 points:(id)arg4;
- (void)updateUserRects:(id)arg1 transformedLayer:(id)arg2 effectScale:(double)arg3 rects:(id)arg4;
- (void)updateWithEffectFrame:(id)arg1;
- (id)userPointsLayer;
- (id)userPointsToDraw;
- (id)userPointsTransformedLayer;
- (id)userRectsLayer;
- (id)userRectsToDraw;
- (id)userRectsTransformedLayer;

@end
