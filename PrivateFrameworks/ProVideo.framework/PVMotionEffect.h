/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo
 */

@interface PVMotionEffect : PVEffect {
    NSMutableDictionary * _cachedPublishedParams;
    bool  _cachedRenderDirty;
    struct atomic<PVDocumentLoadStatus> { 
        struct __cxx_atomic_impl<PVDocumentLoadStatus, std::__cxx_atomic_base_impl<PVDocumentLoadStatus>> { 
            _Atomic int __a_value; 
        } __a_; 
    }  _docLoadStatus;
    void * _documentInfo;
    NSLock * _documentLock;
    double  _effectOutputAspect;
    unsigned int  _groupIDToCache;
    bool  _hasPlayableAspectOverride;
    PVMotionEffectHitAreaComponent * _hitAreaComponent;
    bool  _lastRenderWasHDR;
    NSMutableArray * _motionComponents;
    NSMutableSet * _parameterKeysThatInvalidateCache;
    NSMutableDictionary * _parametersThatInvalidateCache;
    double  _playableAspectRatio;
    int  _playableContentMode;
    unsigned int  _previousGroupIDToCache;
    NSString * _projectPath;
    NSString * _projectPathOverride;
    NSURL * _projectURL;
    PVMotionEffectSceneManagerComponent * _sceneManagerComponent;
    NSNumber * _stillImageInverseToneMapOperator;
    NSNumber * _supportsExtendedRangeInputs;
    PVMotionEffectTextComponent * _textComponent;
    PVMotionEffectTimelineComponent * _timelineComponent;
    PVMotionEffectTranscriptionComponent * _transcriptionComponent;
    PVMotionEffectTransformComponent * _transformComponent;
}

@property (nonatomic, readonly) PVMotionEffectHitAreaComponent *hitAreaComponent;
@property (nonatomic, readonly) PVMotionEffectSceneManagerComponent *sceneManagerComponent;
@property (nonatomic, readonly) PVMotionEffectTextComponent *textComponent;
@property (nonatomic, readonly) PVMotionEffectTimelineComponent *timelineComponent;
@property (nonatomic, readonly) PVMotionEffectTranscriptionComponent *transcriptionComponent;
@property (nonatomic, readonly) PVMotionEffectTransformComponent *transformComponent;

+ (id)_bundleLibPaths;
+ (id)_effectPathFromID:(id)arg1;
+ (id)_userLibPaths;
+ (void)clearPreviewStats;
+ (id)effectMap;
+ (void)extractMetadataFromContentsOfFile:(id)arg1 toCacheEntry:(id)arg2;
+ (void)handleApplicationDidReceiveMemoryWarning;
+ (void)handleApplicationWillTerminate;
+ (void)handleCleanupEffectsCache;
+ (void)initializeMotion;
+ (void)initializeMotionInternal;
+ (void)mapTemplatesInDirectory:(id)arg1 doingRescan:(bool)arg2 origCache:(id)arg3 newCache:(id)arg4;
+ (id)motionComponentClasses;
+ (id)motionEffectPropertyKeyToPublishedParameterNameMap;
+ (id)newEffectWithData:(id)arg1;
+ (id)newEffectWithURL:(id)arg1;
+ (id)publishedParameterNameToMotionEffectPropertyKeyMap;
+ (void)registerEffects;
+ (void)registerNoneEffectForType:(id)arg1 effectID:(id)arg2 origCache:(id)arg3 newCache:(id)arg4;
+ (void)registerTemplateInDirectory:(id)arg1 relPath:(id)arg2 effectID:(id)arg3 doingRescan:(bool)arg4 origCache:(id)arg5 newCache:(id)arg6;
+ (bool)replacedMappedEffectWithNewPath:(id)arg1;
+ (void)scanTemplatesInDirectory:(id)arg1 doingRescan:(bool)arg2 replaceMappedEffectPath:(bool)arg3 origCache:(id)arg4 newCache:(id)arg5;

- (void).cxx_destruct;
- (void)_commonInitWithProjectPathOverride:(id)arg1;
- (void)_configureComponents;
- (void)_documentDidUnload_NoLock;
- (void)add3DObject:(id)arg1 handle:(id)arg2;
- (id)addToTopLevelTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 forcePosterFrame:(bool)arg3 restrictToBounds:(bool)arg4 viewSize:(struct CGSize { double x1; double x2; })arg5 viewOrigin:(int)arg6;
- (void)adjustCamera:(id)arg1;
- (void)adjustCutawayBorder:(id)arg1;
- (void)adjustCutawayFadeAnimation:(id)arg1;
- (void)adjustCutawayInputs:(void*)arg1 splitCropRectA:(id)arg2 splitCropRectB:(id)arg3 pipRect:(id)arg4 pipScaleFactor:(id)arg5 renderScale:(float)arg6 pipNeedsCrop:(bool)arg7 isHDRRender:(bool)arg8 workingColorSpace:(struct CGColorSpace { }*)arg9;
- (void)adjustKenBurnsAnimation:(id)arg1;
- (void)adjustPosition:(id)arg1;
- (void)adjustTransitionInputs:(void*)arg1 renderScale:(float)arg2 renderer:(const void*)arg3 inputANeedsBackground:(bool)arg4 inputBNeedsBackground:(bool)arg5 slideCropRectA:(id)arg6 slideCropRectB:(id)arg7;
- (void)applyARData:(id)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 renderParams:(struct _OZXRenderParams { float x1; float x2; float x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; int x5; int x6; int x7; struct CGColorSpace {} *x8; struct CGColorSpace {} *x9; bool x10; int x11; bool x12; }*)arg3;
- (void)applyInspectableProperties;
- (void)applyInspectableProperties_NoLock;
- (void)assertDocumentIsLocked;
- (void)assertDocumentStatusIsError;
- (void)assertDocumentStatusIsInProgress;
- (void)assertDocumentStatusIsLoaded;
- (void)assertDocumentStatusIsLoadedOrReady;
- (void)assertDocumentStatusIsNotStarted;
- (void)assertDocumentStatusIsReady;
- (void)assertDocumentStatusIsReadyAfterLoad:(bool)arg1;
- (id)attributedStringAtIndex:(unsigned long long)arg1;
- (void)beginEditingTextAtIndex:(unsigned int)arg1;
- (void)beginTextEditing;
- (bool)bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 forcePosterFrame:(bool)arg3 includeDropShadow:(bool)arg4 includeMasks:(bool)arg5;
- (void)buildDropZoneIdMap_NoLock;
- (id)cameraProjection;
- (id)cameraTransform;
- (void)clearTranscription;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })componentTimeFromTimelineTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })componentTimeRangeFromTimelineTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (void)convertPointFromView:(struct CGPoint { double x1; double x2; })arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 viewSize:(struct CGSize { double x1; double x2; })arg3 viewOrigin:(int)arg4;
- (struct CGPoint { double x1; double x2; })convertPointToView:(void *)arg1 atTime:(void *)arg2 forcePosterFrame:(void *)arg3 includeTransformAnimation:(void *)arg4 includePlayableAspectScale:(void *)arg5 viewSize:(void *)arg6 viewOrigin:(void *)arg7; // needs 7 arg types, found 6: struct { long long x1; int x2; unsigned int x3; long long x4; }, bool, bool, bool, struct CGSize { double x1; double x2; }, int
- (struct CGPoint { double x1; double x2; })convertPointToView:(void *)arg1 withEffectToViewTransform:(void *)arg2 viewSize:(void *)arg3; // needs 3 arg types, found 2: struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; }, struct CGSize { double x1; double x2; }
- (struct PVCGPointQuad { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; struct CGPoint { double x_4_1_1; double x_4_1_2; } x4; })cornersAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 includeDropShadow:(bool)arg3 scale:(struct CGPoint { double x1; double x2; })arg4 viewSize:(struct CGSize { double x1; double x2; })arg5 viewOrigin:(int)arg6;
- (struct CGPath { }*)createPathsForHitTestingAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 scale:(struct CGPoint { double x1; double x2; })arg3 adjustForMinimumSize:(bool)arg4 minimumSize:(double)arg5 sizeThreshold:(double)arg6 viewSize:(struct CGSize { double x1; double x2; })arg7 viewOrigin:(int)arg8 outExpandedPath:(out const struct CGPath {}**)arg9;
- (void)dealloc;
- (id)debugDisplayName;
- (id)defaultAttributedString:(unsigned long long)arg1;
- (void)deleteObjectsWithHandles:(id)arg1;
- (void)deleteTemporalInspectableProperties;
- (bool)didCacheInvalidatingParameterChange_NoLock:(id)arg1 key:(id)arg2;
- (bool)didSetCacheInvalidatingParameter_NoLock:(id)arg1 forKey:(id)arg2;
- (void)disableBackgroundMovie:(bool)arg1;
- (void)disableCameraOverride;
- (void)disableElementWithPublishedParam:(struct PCString { struct __CFString {} *x1; }*)arg1 disable:(bool)arg2;
- (struct CGSize { double x1; double x2; })documentSize;
- (id)effectParameters;
- (void)enableCameraOverride:(id)arg1 projection:(id)arg2;
- (void)endEditingTextAtIndex:(unsigned int)arg1;
- (void)endTextEditing;
- (id)ephemeralProperties;
- (bool)forceDisableBuildAnimation;
- (bool)forceDisableLoop;
- (bool)forceRenderAtPosterFrame;
- (int)getOSFAOption:(id)arg1;
- (void)getScale;
- (id)handleForOZID:(unsigned int)arg1;
- (bool)hasAllNecessaryResources;
- (bool)hasBuiltInEnvironment;
- (bool)hasPlayableAspectOverride_NoLock;
- (struct HGRef<HGNode> { struct HGNode {} *x1; })hgNodeForTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 inputs:(const void*)arg2 renderer:(const void*)arg3 igContext:(struct HGRef<PVInstructionGraphContext> { struct PVInstructionGraphContext {} *x1; })arg4;
- (id)hitAreaComponent;
- (id)hitAreaPointsAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 includeDropShadow:(bool)arg3 scale:(struct CGPoint { double x1; double x2; })arg4 viewSize:(struct CGSize { double x1; double x2; })arg5 viewOrigin:(int)arg6;
- (bool)hitTest:(struct CGPoint { double x1; double x2; })arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 forcePosterFrame:(bool)arg3 scale:(struct CGPoint { double x1; double x2; })arg4 adjustForMinimumSize:(bool)arg5 minimumSize:(double)arg6 sizeThreshold:(double)arg7 viewSize:(struct CGSize { double x1; double x2; })arg8 viewOrigin:(int)arg9;
- (id)initWithContentID:(id)arg1 andDictionary:(id)arg2;
- (id)initWithEffectID:(id)arg1;
- (bool)isBuildInAnimationEnabled;
- (bool)isBuildOutAnimationEnabled;
- (bool)isCameraOverrideEnabled;
- (bool)isEphemeralProperty:(id)arg1;
- (bool)isLandscape:(id)arg1;
- (bool)isLoopedRangeRenderCacheable;
- (bool)isReady;
- (bool)isRenderCachingDisabled_NoLock:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (bool)isSketch;
- (bool)isTemporalProperty:(id)arg1;
- (bool)isTextFlipped;
- (bool)isTimeDurationIndefinite;
- (bool)isTitleCard;
- (bool)isTranscription;
- (bool)isVisibleAtTime_NoLock:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 timedProperties:(id)arg2 defaultProperties:(id)arg3;
- (void)loadDocument_NoLock;
- (void)loadEffectInternal_NoLock;
- (bool)loadResources;
- (bool)loadResources_NoLock;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })loopTimeOverride;
- (bool)loopTimeOverrideEnabled;
- (id)mainTitle;
- (struct HGRect { int x1; int x2; int x3; int x4; })makeCropRectForDOD:(struct HGRect { int x1; int x2; int x3; int x4; })arg1 renderRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 renderScale:(float)arg3;
- (id)objectHitTest:(struct CGPoint { double x1; double x2; })arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 forcePosterFrame:(bool)arg3 scale:(struct CGPoint { double x1; double x2; })arg4 adjustForMinimumSize:(bool)arg5 minimumSize:(double)arg6 sizeThreshold:(double)arg7 viewSize:(struct CGSize { double x1; double x2; })arg8 viewOrigin:(int)arg9;
- (int)orientation;
- (int)origin;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })outputROI;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })outputROI_NoLock:(const void*)arg1 scale:(double)arg2;
- (struct CGSize { double x1; double x2; })outputSize;
- (bool)parameterInvalidatesCache_NoLock:(id)arg1;
- (double)playableAspectRatio_NoLock;
- (int)playableContentMode_NoLock;
- (id)posterFrameMarker;
- (id)projectPath;
- (id)projectURL;
- (id)publishedParam_NoLock:(const void*)arg1 forKey:(id)arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 includeHidden:(bool)arg4;
- (id)publishedParams_NoLock:(const void*)arg1;
- (void)releaseResources;
- (void)resetToDefaultTranscriptionForLocaleID:(id)arg1;
- (bool)resourcesAreReady;
- (void)runEnsuringDocumentReadyAndLockingDocument:(id /* block */)arg1;
- (void)runEnsuringDocumentReady_NoLock:(id /* block */)arg1;
- (void)runWithDocument_NoLock:(id /* block */)arg1;
- (id)scaleToFit:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 forcePosterFrame:(bool)arg3 viewSize:(struct CGSize { double x1; double x2; })arg4 viewOrigin:(int)arg5 restrictToBounds:(bool)arg6;
- (id)sceneManagerComponent;
- (void)setAttributedString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setBuildInAnimationEnabled:(bool)arg1;
- (void)setBuildOutAnimationEnabled:(bool)arg1;
- (void)setEffectOutputAspectWithProperties_NoLock:(id)arg1 allProperties:(id)arg2;
- (void)setEffectOutputAspect_NoLock:(double)arg1 playableAspect:(double)arg2 playableContentMode:(int)arg3;
- (void)setEffectParameters:(id)arg1;
- (void)setForceDisableBuildAnimation:(bool)arg1;
- (void)setForceDisableLoop:(bool)arg1;
- (void)setForceRenderAtPosterFrame:(bool)arg1;
- (void)setIsFrontFacingCamera:(bool)arg1;
- (void)setLoopTimeOverride:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setLoopTimeOverrideEnabled:(bool)arg1;
- (void)setLoopedRangeRenderIsCacheable:(bool)arg1;
- (void)setMainTitle:(id)arg1;
- (void)setMaskPoints:(id)arg1;
- (void)setNodeIDToCache:(unsigned int)arg1;
- (id)setPositionInView:(struct CGPoint { double x1; double x2; })arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 viewSize:(struct CGSize { double x1; double x2; })arg3 viewOrigin:(int)arg4 restrictToBounds:(bool)arg5;
- (void)setQuaternion:(double)arg1 :(double)arg2 :(double)arg3 :(double)arg4;
- (void)setRollRadians:(double)arg1;
- (void)setScale;
- (void)setSketchStrokes:(id)arg1;
- (void)setString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setSubtitle:(id)arg1;
- (void)setTopLevelGroupTransform:(id)arg1;
- (void)setTopLevelOpacity:(double)arg1;
- (void)setTranscriptionText:(id)arg1;
- (void)setTransform:(id)arg1;
- (void)setTransformUnitsAreInMeters:(bool)arg1;
- (void)setUseLocalLoopTime:(bool)arg1;
- (void)setupPublishedParameters:(id)arg1;
- (void)setupTransitionParameters:(id)arg1;
- (int)stillImageInverseToneMapOperator:(id)arg1;
- (id)subtitle;
- (bool)supportsExtendedRangeInputs;
- (bool)supportsFlippingText;
- (bool)supportsOrientation;
- (bool)supportsParam:(id)arg1;
- (id)temporalProperties;
- (id)textComponent;
- (struct PVCGPointQuad { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; struct CGPoint { double x_4_1_1; double x_4_1_2; } x4; })textCornersAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 index:(unsigned long long)arg2 forcePosterFrame:(bool)arg3 includeDropShadow:(bool)arg4 scale:(struct CGPoint { double x1; double x2; })arg5 viewSize:(struct CGSize { double x1; double x2; })arg6 viewOrigin:(int)arg7;
- (id)textEditingBounds:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)textEditingBoundsAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 useParagraphBounds:(bool)arg3 includeDropShadow:(bool)arg4 includeMasks:(bool)arg5;
- (id)textTransformsAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 includeTransformAnimation:(bool)arg3 includePlayableAspectScale:(bool)arg4 viewSize:(struct CGSize { double x1; double x2; })arg5 viewOrigin:(int)arg6;
- (id)textTransformsAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 includeTransformAnimation:(bool)arg3 viewSize:(struct CGSize { double x1; double x2; })arg4 viewOrigin:(int)arg5;
- (id)textTransformsAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 viewSize:(struct CGSize { double x1; double x2; })arg3 viewOrigin:(int)arg4;
- (id)timelineComponent;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })timelineDuration;
- (unsigned int)timelineDurationInFrames;
- (double)timelineDurationInSeconds;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })timelineFrameDuration;
- (double)timelineFrameRate;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })timelineLastFrame;
- (id)timelineMarkers;
- (id)timelineMarkersOfType:(int)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })timelineTimeFromComponentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })timelineTimeRangeFromComponentTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (id)topLevelGroupTransform;
- (double)topLevelOpacity;
- (id)transcriptionComponent;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })transcriptionDuration;
- (bool)transcriptionHitTest:(struct CGPoint { double x1; double x2; })arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)transformAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 includeTransformAnimation:(bool)arg3 includePlayableAspectScale:(bool)arg4 viewSize:(struct CGSize { double x1; double x2; })arg5 viewOrigin:(int)arg6;
- (id)transformAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 includeTransformAnimation:(bool)arg3 viewSize:(struct CGSize { double x1; double x2; })arg4 viewOrigin:(int)arg5;
- (id)transformAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forcePosterFrame:(bool)arg2 viewSize:(struct CGSize { double x1; double x2; })arg3 viewOrigin:(int)arg4;
- (id)transformComponent;
- (bool)transformUnitsAreInMeters;
- (void)updateInspectableProperties;
- (void)updateInspectableProperties:(id)arg1;
- (void)updateInspectableProperties_NoLock:(id)arg1 componentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)updateSketchAnimation:(id)arg1 defaultProperties:(id)arg2 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (bool)useLocalLoopTime;

@end
