/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ProactiveEventTracker.framework/ProactiveEventTracker
 */

@interface COMAPPLEPROACTIVEGMSGMSUberEvent : PBCodable <NSCopying> {
    COMAPPLEPROACTIVEGMSGMSAssetEvent * _assetEvent;
    NSString * _bootSessionUUID;
    NSString * _catalogResourceIdentifier;
    NSString * _clientRequestIdentifier;
    NSString * _clientSessionIdentifier;
    COMAPPLEPROACTIVEGMSGMSError * _error;
    int  _eventType;
    COMAPPLEPROACTIVEGMSGMSGenerativeFunctionEvent * _generativeFunctionEvent;
    struct { 
        unsigned int threadQualityOfService : 1; 
        unsigned int version : 1; 
        unsigned int eventType : 1; 
    }  _has;
    COMAPPLEPROACTIVEGMSGMSInferenceEvent * _inferenceEvent;
    NSString * _inferenceProviderIdentifier;
    NSString * _modelManagerRequestIdentifier;
    NSString * _modelManagerSessionIdentifier;
    COMAPPLEPROACTIVEGMSGMSPrewarmEvent * _prewarmEvent;
    NSString * _testKey;
    long long  _threadQualityOfService;
    NSString * _useCaseIdentifier;
    long long  _version;
}

@property (nonatomic, retain) COMAPPLEPROACTIVEGMSGMSAssetEvent *assetEvent;
@property (nonatomic, retain) NSString *bootSessionUUID;
@property (nonatomic, retain) NSString *catalogResourceIdentifier;
@property (nonatomic, retain) NSString *clientRequestIdentifier;
@property (nonatomic, retain) NSString *clientSessionIdentifier;
@property (nonatomic, retain) COMAPPLEPROACTIVEGMSGMSError *error;
@property (nonatomic) int eventType;
@property (nonatomic, retain) COMAPPLEPROACTIVEGMSGMSGenerativeFunctionEvent *generativeFunctionEvent;
@property (nonatomic, readonly) bool hasAssetEvent;
@property (nonatomic, readonly) bool hasBootSessionUUID;
@property (nonatomic, readonly) bool hasCatalogResourceIdentifier;
@property (nonatomic, readonly) bool hasClientRequestIdentifier;
@property (nonatomic, readonly) bool hasClientSessionIdentifier;
@property (nonatomic, readonly) bool hasError;
@property (nonatomic) bool hasEventType;
@property (nonatomic, readonly) bool hasGenerativeFunctionEvent;
@property (nonatomic, readonly) bool hasInferenceEvent;
@property (nonatomic, readonly) bool hasInferenceProviderIdentifier;
@property (nonatomic, readonly) bool hasModelManagerRequestIdentifier;
@property (nonatomic, readonly) bool hasModelManagerSessionIdentifier;
@property (nonatomic, readonly) bool hasPrewarmEvent;
@property (nonatomic, readonly) bool hasTestKey;
@property (nonatomic) bool hasThreadQualityOfService;
@property (nonatomic, readonly) bool hasUseCaseIdentifier;
@property (nonatomic) bool hasVersion;
@property (nonatomic, retain) COMAPPLEPROACTIVEGMSGMSInferenceEvent *inferenceEvent;
@property (nonatomic, retain) NSString *inferenceProviderIdentifier;
@property (nonatomic, retain) NSString *modelManagerRequestIdentifier;
@property (nonatomic, retain) NSString *modelManagerSessionIdentifier;
@property (nonatomic, retain) COMAPPLEPROACTIVEGMSGMSPrewarmEvent *prewarmEvent;
@property (nonatomic, retain) NSString *testKey;
@property (nonatomic) long long threadQualityOfService;
@property (nonatomic, retain) NSString *useCaseIdentifier;
@property (nonatomic) long long version;

- (void).cxx_destruct;
- (int)StringAsEventType:(id)arg1;
- (id)assetEvent;
- (id)bootSessionUUID;
- (id)catalogResourceIdentifier;
- (id)clientRequestIdentifier;
- (id)clientSessionIdentifier;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)error;
- (int)eventType;
- (id)eventTypeAsString:(int)arg1;
- (id)generativeFunctionEvent;
- (bool)hasAssetEvent;
- (bool)hasBootSessionUUID;
- (bool)hasCatalogResourceIdentifier;
- (bool)hasClientRequestIdentifier;
- (bool)hasClientSessionIdentifier;
- (bool)hasError;
- (bool)hasEventType;
- (bool)hasGenerativeFunctionEvent;
- (bool)hasInferenceEvent;
- (bool)hasInferenceProviderIdentifier;
- (bool)hasModelManagerRequestIdentifier;
- (bool)hasModelManagerSessionIdentifier;
- (bool)hasPrewarmEvent;
- (bool)hasTestKey;
- (bool)hasThreadQualityOfService;
- (bool)hasUseCaseIdentifier;
- (bool)hasVersion;
- (unsigned long long)hash;
- (id)inferenceEvent;
- (id)inferenceProviderIdentifier;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)modelManagerRequestIdentifier;
- (id)modelManagerSessionIdentifier;
- (id)prewarmEvent;
- (bool)readFrom:(id)arg1;
- (void)setAssetEvent:(id)arg1;
- (void)setBootSessionUUID:(id)arg1;
- (void)setCatalogResourceIdentifier:(id)arg1;
- (void)setClientRequestIdentifier:(id)arg1;
- (void)setClientSessionIdentifier:(id)arg1;
- (void)setError:(id)arg1;
- (void)setEventType:(int)arg1;
- (void)setGenerativeFunctionEvent:(id)arg1;
- (void)setHasEventType:(bool)arg1;
- (void)setHasThreadQualityOfService:(bool)arg1;
- (void)setHasVersion:(bool)arg1;
- (void)setInferenceEvent:(id)arg1;
- (void)setInferenceProviderIdentifier:(id)arg1;
- (void)setModelManagerRequestIdentifier:(id)arg1;
- (void)setModelManagerSessionIdentifier:(id)arg1;
- (void)setPrewarmEvent:(id)arg1;
- (void)setTestKey:(id)arg1;
- (void)setThreadQualityOfService:(long long)arg1;
- (void)setUseCaseIdentifier:(id)arg1;
- (void)setVersion:(long long)arg1;
- (id)testKey;
- (long long)threadQualityOfService;
- (id)useCaseIdentifier;
- (long long)version;
- (void)writeTo:(id)arg1;

@end
