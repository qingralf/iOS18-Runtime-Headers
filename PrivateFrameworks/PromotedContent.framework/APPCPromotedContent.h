/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PromotedContent.framework/PromotedContent
 */

@interface APPCPromotedContent : NSObject <APPCPromotableContent> {
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _contextIdentifier;
    void adServerEnvironments;
    void attachedToView;
    void bestRepresentation;
    void brandName;
    void campaignText;
    void consumed;
    void context;
    void diagnosticCode;
    void diagnosticMetricHelper;
    void diagnosticPrimitiveCreator;
    void discardReason;
    void discarded;
    void discardedDueToPolicy;
    void disclosureRendererPayload;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  disclosureURL;
    void error;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  expirationDate;
    void identifier;
    void impressionThreshold;
    void installAttribution;
    void isLocationAvailableForAd;
    void isPAAvailableForAd;
    void journeyIdentifier;
    void mediaMetricHelper;
    void metaData;
    void metricEventsTracking;
    void metricsHelper;
    void minimumTimeBetweenPresentation;
    void onPromotedContentComplete;
    void overriddenAdType;
    void placeholder;
    void placement;
    void primitiveCreator;
    void promotedContentUsedRegisterID;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  receivedReferenceTime;
    void representations;
    void serverResponseReceivedTimestamp;
    void serverUnfilledReason;
    void unfilledReasonDelegate;
    void vended;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  videoRequestStartDate;
}

@property (nonatomic, readonly) NSArray *adServerEnvironments;
@property (nonatomic, readonly) long long adType;
@property (nonatomic) bool attachedToView;
@property (nonatomic, readonly) bool available;
@property (nonatomic, retain) <APPCPromotableContentRepresentation> *bestRepresentation;
@property (nonatomic, copy) NSString *brandName;
@property (nonatomic, copy) NSString *campaignText;
@property (nonatomic) bool consumed;
@property (nonatomic) <APPCPromotableContext> *context;
@property (nonatomic, readonly) NSUUID *contextIdentifier;
@property (nonatomic, readonly) NSString *debugDescription;
@property (nonatomic, readonly) <APPCDiagnosticMetricsHelping> *diagnosticMetricHelper;
@property (nonatomic) bool discarded;
@property (nonatomic) bool discardedDueToPolicy;
@property (nonatomic, copy) NSString *disclosureRendererPayload;
@property (nonatomic, copy) NSURL *disclosureURL;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, copy) NSDate *expirationDate;
@property (nonatomic, readonly) long long feedMetadataContentProviderID;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic) double impressionThreshold;
@property (nonatomic, retain) APInstallAttribution *installAttribution;
@property (nonatomic, readonly) bool isLocationAvailableForAd;
@property (nonatomic, readonly) bool isMRAID;
@property (nonatomic, readonly) bool isOutstreamVideoAd;
@property (nonatomic, readonly) bool isPAAvailableForAd;
@property (nonatomic, copy) NSString *journeyIdentifier;
@property (nonatomic, retain) <APPCMediaMetricsHelping> *mediaMetricHelper;
@property (nonatomic, copy) NSDictionary *metaData;
@property (nonatomic, retain) <APPCMetricEventsTracking> *metricEventsTracking;
@property (nonatomic, retain) <APPCCarouselMetricsHelping><APPCJourneyMetricsHelping><APPCJourneyMetricsNotificationsHelping> *metricsHelper;
@property (nonatomic) long long minimumTimeBetweenPresentation;
@property (nonatomic, readonly) long long numOfArticlesSinceInterstitial;
@property (nonatomic, readonly) bool placeholder;
@property (nonatomic, readonly) NSDate *receivedReferenceTime;
@property (nonatomic, copy) NSArray *representations;
@property (nonatomic) long long serverUnfilledReason;
@property (nonatomic, readonly) NSDictionary *transparencyDetailsDictionary;
@property (nonatomic) bool vended;
@property (nonatomic, copy) NSDate *videoRequestStartDate;

- (void).cxx_destruct;
- (id)adServerEnvironments;
- (long long)adType;
- (bool)attachedToView;
- (bool)available;
- (id)bestRepresentation;
- (id)brandName;
- (id)campaignText;
- (bool)consumed;
- (id)context;
- (id)contextIdentifier;
- (void)dealloc;
- (id)debugDescription;
- (id)diagnosticMetricHelper;
- (bool)discarded;
- (bool)discardedDueToPolicy;
- (id)disclosureRendererPayload;
- (id)disclosureURL;
- (id)error;
- (id)expirationDate;
- (long long)feedMetadataContentProviderID;
- (id)identifier;
- (double)impressionThreshold;
- (id)init;
- (id)installAttribution;
- (bool)isLocationAvailableForAd;
- (bool)isMRAID;
- (bool)isOutstreamVideoAd;
- (bool)isPAAvailableForAd;
- (id)journeyIdentifier;
- (id)mediaMetricHelper;
- (id)metaData;
- (id)metricEventsTracking;
- (id)metricsHelper;
- (long long)minimumTimeBetweenPresentation;
- (void)notifyListenersPCUsedWithPcID:(id)arg1;
- (long long)numOfArticlesSinceInterstitial;
- (bool)placeholder;
- (id)receivedReferenceTime;
- (void)registerPromotedContentUsedWithAction:(id /* block */)arg1;
- (void)replaceMetricsHelperWithNewMetricsHelper:(id)arg1;
- (id)representations;
- (unsigned long long)retrieveNetworkType;
- (long long)serverUnfilledReason;
- (void)setAttachedToView:(bool)arg1;
- (void)setBestRepresentation:(id)arg1;
- (void)setBrandName:(id)arg1;
- (void)setCampaignText:(id)arg1;
- (void)setConsumed:(bool)arg1;
- (void)setContext:(id)arg1;
- (void)setDiscarded:(bool)arg1;
- (void)setDiscardedDueToPolicy:(bool)arg1;
- (void)setDisclosureRendererPayload:(id)arg1;
- (void)setDisclosureURL:(id)arg1;
- (void)setError:(id)arg1;
- (void)setExpirationDate:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setImpressionThreshold:(double)arg1;
- (void)setInstallAttribution:(id)arg1;
- (void)setJourneyIdentifier:(id)arg1;
- (void)setMediaMetricHelper:(id)arg1;
- (void)setMetaData:(id)arg1;
- (void)setMetricEventsTracking:(id)arg1;
- (void)setMetricsHelper:(id)arg1;
- (void)setMinimumTimeBetweenPresentation:(long long)arg1;
- (void)setRepresentations:(id)arg1;
- (void)setServerUnfilledReason:(long long)arg1;
- (void)setVended:(bool)arg1;
- (void)setVideoRequestStartDate:(id)arg1;
- (id)transparencyDetailsDictionary;
- (bool)vended;
- (id)videoRequestStartDate;

@end
