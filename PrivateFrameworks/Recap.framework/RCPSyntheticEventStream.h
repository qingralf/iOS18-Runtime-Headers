/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Recap.framework/Recap
 */

@interface RCPSyntheticEventStream : RCPEventStream <RCPCrownEventStreamComposer, RCPEventStreamComposer, RCPFluidSwipeGesturesEventStreamComposer, RCPNaturalInputCollectionEventStreamComposer, RCPPointerEventStreamComposer> {
    unsigned long long  _activePointCount;
    struct { double x1; double x2; double x3; double x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; double x7; unsigned char x8; unsigned int x9; bool x10; } * _activePoints;
    double  _currentTimeOffset;
    long long  _generationCount;
    struct CGSize { 
        double width; 
        double height; 
    }  _gsScreenPointSize;
    double  _gsScreenScaleFactor;
    RCPPointerTrackingChildEventStream * _pointerChildEventStream;
    CAMediaTimingFunction * _pointerCurveFunction;
    double  _pointerFrequency;
    NSMutableArray * _processingEventBuffer;
    bool  _scalePointerPhaseScrollToPixels;
    struct CGSize { 
        double width; 
        double height; 
    }  _screenSize;
    RCPEventSenderProperties * _senderProperties;
    CAMediaTimingFunction * _touchCurveFunction;
    long long  _touchFrequency;
    unsigned int  _transducerType;
}

@property (nonatomic) unsigned long long activePointCount;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; double x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; double x7; unsigned char x8; unsigned int x9; bool x10; }*activePoints;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic, readonly) double defaultPressure;
@property (nonatomic, readonly) double defaultRadius;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct CGSize { double x1; double x2; } gsScreenPointSize;
@property (nonatomic) double gsScreenScaleFactor;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) RCPPointerTrackingChildEventStream *pointerChildEventStream;
@property (nonatomic, retain) CAMediaTimingFunction *pointerCurveFunction;
@property (nonatomic) double pointerFrequency;
@property (nonatomic) bool scalePointerPhaseScrollToPixels;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } screenSize;
@property (nonatomic, retain) RCPEventSenderProperties *senderProperties;
@property (readonly) Class superclass;
@property (nonatomic, retain) CAMediaTimingFunction *touchCurveFunction;
@property (nonatomic) long long touchFrequency;
@property (nonatomic) unsigned int transducerType;

+ (id)eventStreamWithCLIArguments:(id)arg1;
+ (id)eventStreamWithEventActions:(id /* block */)arg1;

- (void).cxx_destruct;
- (void)_addIOHIDEventToProcessingBuffer:(struct __IOHIDEvent { }*)arg1;
- (struct __IOHIDEvent { }*)_createIOHIDGameControllerEventForDpadButton:(long long)arg1;
- (struct __IOHIDEvent { }*)_createIOHIDWithEventType:(long long)arg1;
- (struct __IOHIDEvent { }*)_createIOSButtonHIDEventWithButtonType:(long long)arg1 down:(bool)arg2;
- (struct __IOHIDEvent { }*)_createIOSButtonHIDEventWithPage:(unsigned int)arg1 usage:(unsigned int)arg2 down:(bool)arg3;
- (unsigned long long)_currentMachTime;
- (void)_delayBetweenMove:(int)arg1 elapsedTime:(double)arg2;
- (void)_dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 mask:(unsigned long long)arg2 endPoint:(struct CGPoint { double x1; double x2; })arg3 mask:(unsigned long long)arg4 duration:(double)arg5 tapAndWait:(double)arg6 lift:(bool)arg7 pressure:(double)arg8 radius:(double)arg9;
- (void)_finalizeHomeButtonEvents;
- (void)_finalizePointerButtonMasks;
- (void)_finalizeProcessingEventBuffer;
- (void)_flickWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 pressure:(double)arg4 radius:(double)arg5;
- (void)_hoverAtPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2 pressure:(double)arg3 radius:(double)arg4 edgeMaskOptions:(const struct { unsigned int x1; bool x2; }*)arg5 withEventType:(long long)arg6 withZPosition:(double)arg7 withAzimuthAngle:(double)arg8 withRollAngle:(double)arg9 withAltitudeAngle:(double)arg10;
- (void)_initScreenProperties;
- (void)_initScreenPropertiesForScreen:(id)arg1;
- (bool)_isEdgePoint:(struct CGPoint { double x1; double x2; })arg1 getMask:(unsigned int*)arg2;
- (void)_knobEventForOffset:(struct CGVector { double x1; double x2; })arg1 buttonMask:(unsigned int)arg2 oldButtonMask:(unsigned int)arg3;
- (void)_moveLastTouchPoint:(struct CGPoint { double x1; double x2; })arg1 eventMask:(unsigned long long)arg2;
- (struct CGPoint { double x1; double x2; })_normalizePoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct __IOHIDEvent { }*)_parentZeroPointerEvent;
- (void)_pressButtonEventForIndex:(long long)arg1 down:(bool)arg2;
- (void)_setMajorRadiusForAllPoints:(double)arg1;
- (void)_setPressureForAllPoints:(double)arg1;
- (id)_splitStringIntoArrayOfCharacters:(id)arg1;
- (void)_squeezeWithPhase:(unsigned short)arg1 withPage:(id)arg2 withUsage:(id)arg3 withVersion:(unsigned char)arg4 withStage:(unsigned int)arg5 withTransition:(unsigned int)arg6 withNextThreshold:(double)arg7 withPressedThreshold:(double)arg8 withReleasedThreshold:(double)arg9 withNormalizedForce:(double)arg10 withNormalizedForceVelocity:(double)arg11;
- (void)_tap:(struct CGPoint { double x1; double x2; })arg1 withPressure:(double)arg2;
- (void)_touchDownAtPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2 pressure:(double)arg3 radius:(double)arg4 edgeMaskOptions:(const struct { unsigned int x1; bool x2; }*)arg5;
- (void)_touchSensitiveButtonEventWithPhase:(unsigned short)arg1 withPage:(id)arg2 withUsage:(id)arg3 withStage:(unsigned int)arg4 withTransition:(unsigned int)arg5 withNormalizedForce:(double)arg6 withNormalizedForceVelocity:(double)arg7 withNormalizedPositionX:(double)arg8 withNormalizedPositionDeltaX:(double)arg9 withNormalizedPositionY:(double)arg10 withNormalizedPositionDeltaY:(double)arg11 withMajorRadius:(double)arg12 withMinorRadius:(double)arg13 withMask:(unsigned int)arg14 withTouch:(int)arg15 withNextThreshold:(double)arg16 withPressedThreshold:(double)arg17 withReleasedThreshold:(double)arg18;
- (void)_updateTouchPoints:(struct CGPoint { double x1; double x2; }*)arg1 count:(unsigned long long)arg2;
- (void)_withPointerEventStreamAtFrequency:(long long)arg1 perform:(id /* block */)arg2;
- (void)_wrapInPointerParentAndAddToProcessingBuffer:(struct __IOHIDEvent { }*)arg1;
- (unsigned long long)activePointCount;
- (struct { double x1; double x2; double x3; double x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; double x7; unsigned char x8; unsigned int x9; bool x10; }*)activePoints;
- (void)advanceTime:(double)arg1;
- (void)barrelRollAtLocation:(struct CGPoint { double x1; double x2; })arg1 withZPosition:(double)arg2 withAltitudeAngle:(double)arg3 withAzimuthAngle:(double)arg4 withRollAngle:(double)arg5;
- (void)beginButtonPressForButtonType:(long long)arg1;
- (void)beginButtonPressWithPage:(unsigned long long)arg1 usage:(unsigned long long)arg2;
- (void)composeDockGestureInMotion:(unsigned short)arg1 frequency:(unsigned long long)arg2 actionBlock:(id /* block */)arg3;
- (void)composeDockGestureOfFlavor:(unsigned short)arg1 motion:(unsigned short)arg2 frequency:(unsigned long long)arg3 actionBlock:(id /* block */)arg4;
- (void)composeNavigationGestureInMotion:(unsigned short)arg1 frequency:(unsigned long long)arg2 actionBlock:(id /* block */)arg3;
- (void)composeWithSender:(id)arg1 actionBlock:(id /* block */)arg2;
- (void)dealloc;
- (double)defaultPressure;
- (double)defaultRadius;
- (void)doubleFingerTap:(struct CGPoint { double x1; double x2; })arg1;
- (void)doubleTap:(struct CGPoint { double x1; double x2; })arg1;
- (void)dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3;
- (void)dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 pressure:(double)arg4;
- (void)dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 pressure:(double)arg4 radius:(double)arg5;
- (void)dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 radius:(double)arg4;
- (void)dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 tapAndWait:(double)arg4 lift:(bool)arg5;
- (void)dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 tapAndWait:(double)arg4 lift:(bool)arg5 pressure:(double)arg6;
- (void)dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 tapAndWait:(double)arg4 lift:(bool)arg5 pressure:(double)arg6 radius:(double)arg7;
- (void)dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 tapAndWait:(double)arg4 lift:(bool)arg5 radius:(double)arg6;
- (void)dragWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 mask:(unsigned long long)arg2 endPoint:(struct CGPoint { double x1; double x2; })arg3 mask:(unsigned long long)arg4 duration:(double)arg5;
- (void)edgeOrb:(struct CGPoint { double x1; double x2; })arg1;
- (void)edgeOrbSwipe:(struct CGPoint { double x1; double x2; })arg1 withEndLocation:(struct CGPoint { double x1; double x2; })arg2 withDuration:(double)arg3;
- (void)endButtonPressForButtonType:(long long)arg1;
- (void)endButtonPressWithPage:(unsigned long long)arg1 usage:(unsigned long long)arg2;
- (void)flipRingerSwitchToValue:(bool)arg1;
- (struct CGSize { double x1; double x2; })gsScreenPointSize;
- (double)gsScreenScaleFactor;
- (void)hover:(struct CGPoint { double x1; double x2; })arg1 withZPosition:(double)arg2;
- (void)hover:(struct CGPoint { double x1; double x2; })arg1 withZPosition:(double)arg2 withAltitudeAngle:(double)arg3 withAzimuthAngle:(double)arg4 withRollAngle:(double)arg5;
- (void)hoverAtLocation:(struct CGPoint { double x1; double x2; })arg1 withDuration:(double)arg2;
- (void)hoverAtLocation:(struct CGPoint { double x1; double x2; })arg1 withDuration:(double)arg2 withZPosition:(double)arg3;
- (void)hoverAtLocation:(struct CGPoint { double x1; double x2; })arg1 withDuration:(double)arg2 withZPosition:(double)arg3 withAltitudeAngle:(double)arg4 withAzimuthAngle:(double)arg5 withRollAngle:(double)arg6;
- (void)hoverToTap:(struct CGPoint { double x1; double x2; })arg1 withZPosition:(double)arg2;
- (void)hoverToTapAtLocation:(struct CGPoint { double x1; double x2; })arg1 withDuration:(double)arg2;
- (void)hoverToTapAtLocation:(struct CGPoint { double x1; double x2; })arg1 withDuration:(double)arg2 withZPosition:(double)arg3;
- (id)init;
- (void)knobNudge:(struct CGVector { double x1; double x2; })arg1 buttonMask:(unsigned int)arg2 duration:(double)arg3;
- (void)liftUp:(struct CGPoint { double x1; double x2; })arg1;
- (void)liftUp:(struct CGPoint { double x1; double x2; })arg1 touchCount:(unsigned long long)arg2;
- (void)liftUpActivePointsByIndex:(id)arg1;
- (void)liftUpAtAllActivePoints;
- (void)liftUpAtAllActivePointsWithEventType:(long long)arg1;
- (void)liftUpAtPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2;
- (void)moveToPoint:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2;
- (void)moveToPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2 duration:(double)arg3;
- (void)moveToPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2 pressure:(double)arg3 duration:(double)arg4;
- (void)moveToPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2 pressure:(double)arg3 duration:(double)arg4 radius:(double)arg5;
- (void)multifingerDragWithPointArray:(struct CGPoint { double x1; double x2; }*)arg1 numPoints:(unsigned long long)arg2 duration:(double)arg3 numFingers:(unsigned long long)arg4;
- (void)peekAndPop:(struct CGPoint { double x1; double x2; })arg1 commit:(bool)arg2 duration:(double)arg3;
- (void)peekAndPop:(struct CGPoint { double x1; double x2; })arg1 commit:(bool)arg2 duration:(double)arg3 pressure:(double)arg4 radius:(double)arg5;
- (void)peekAndPop:(struct CGPoint { double x1; double x2; })arg1 commit:(bool)arg2 duration:(double)arg3 presure:(double)arg4;
- (void)peekAndPop:(struct CGPoint { double x1; double x2; })arg1 commit:(bool)arg2 duration:(double)arg3 radius:(double)arg4;
- (void)pinchCloseWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3;
- (void)pinchCloseWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 pressure:(double)arg4;
- (void)pinchCloseWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 pressure:(double)arg4 radius:(double)arg5;
- (void)pinchCloseWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 radius:(double)arg4;
- (void)pinchOpenWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3;
- (void)pinchOpenWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 pressure:(double)arg4;
- (void)pinchOpenWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 pressure:(double)arg4 radius:(double)arg5;
- (void)pinchOpenWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 radius:(double)arg4;
- (void)pointerBeginPressingButton:(long long)arg1;
- (id)pointerChildEventStream;
- (id)pointerCurveFunction;
- (void)pointerDiscreteGesture:(id)arg1 duration:(double)arg2 frequency:(long long)arg3;
- (void)pointerDiscreteScroll:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2;
- (void)pointerDiscreteScroll:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2 frequency:(long long)arg3;
- (void)pointerEndPressingButton:(long long)arg1;
- (double)pointerFrequency;
- (void)pointerMoveByDelta:(struct CGVector { double x1; double x2; })arg1 duration:(double)arg2;
- (void)pointerMoveDelta:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2 frequency:(long long)arg3;
- (void)pointerMoveFromOriginPoint:(struct CGPoint { double x1; double x2; })arg1 toDestinationPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 frequency:(long long)arg4;
- (void)pointerMoveToPoint:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2;
- (void)pointerPhasedFlick:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2;
- (void)pointerPhasedFlick:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2 frequency:(long long)arg3;
- (void)pointerPhasedScroll:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2;
- (void)pointerPhasedScroll:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2 frequency:(long long)arg3;
- (void)pointerRotation:(double)arg1 duration:(double)arg2 frequency:(long long)arg3;
- (void)pointerScale:(double)arg1 duration:(double)arg2 frequency:(long long)arg3;
- (void)pointerSetAbsolutePosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)pointerTranslatation:(struct CGPoint { double x1; double x2; })arg1 duration:(double)arg2 frequency:(long long)arg3;
- (void)pressButtons:(id)arg1 duration:(double)arg2;
- (void)pressButtonsWithPages:(id)arg1 usages:(id)arg2 duration:(double)arg3;
- (void)pressDiscreteGameControllerButton:(long long)arg1 duration:(double)arg2;
- (void)rotate:(struct CGPoint { double x1; double x2; })arg1 withRadius:(double)arg2 rotation:(double)arg3 duration:(double)arg4 touchCount:(unsigned long long)arg5;
- (void)rotateCrown:(double)arg1 direction:(long long)arg2 duration:(double)arg3;
- (bool)scalePointerPhaseScrollToPixels;
- (struct CGSize { double x1; double x2; })screenSize;
- (void)sendFlickWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3;
- (void)sendFlickWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 pressure:(double)arg4;
- (void)sendFlickWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 pressure:(double)arg4 radius:(double)arg5;
- (void)sendFlickWithStartPoint:(struct CGPoint { double x1; double x2; })arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 duration:(double)arg3 radius:(double)arg4;
- (void)sendUnicodeString:(id)arg1;
- (void)sendUnicodeString:(id)arg1 synthesizePerCharacterEvents:(bool)arg2 durationBetweenEvents:(double)arg3;
- (void)sendUnicodeStringByCharacters:(id)arg1 durationBetweenEvents:(double)arg2;
- (id)senderProperties;
- (void)setActivePointCount:(unsigned long long)arg1;
- (void)setGsScreenPointSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setGsScreenScaleFactor:(double)arg1;
- (void)setPointerChildEventStream:(id)arg1;
- (void)setPointerCurveFunction:(id)arg1;
- (void)setPointerFrequency:(double)arg1;
- (void)setScalePointerPhaseScrollToPixels:(bool)arg1;
- (void)setSenderProperties:(id)arg1;
- (void)setTouchCurveFunction:(id)arg1;
- (void)setTouchFrequency:(long long)arg1;
- (void)setTransducerType:(unsigned int)arg1;
- (void)squeeze;
- (void)squeezeAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)stylusBarrelDoubleTap;
- (void)tap:(struct CGPoint { double x1; double x2; })arg1;
- (void)tap:(struct CGPoint { double x1; double x2; })arg1 pressure:(double)arg2;
- (void)tap:(struct CGPoint { double x1; double x2; })arg1 radius:(double)arg2;
- (void)tap:(struct CGPoint { double x1; double x2; })arg1 withPressure:(double)arg2 radius:(double)arg3;
- (void)tapToWakeAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)taps:(unsigned long long)arg1 location:(struct CGPoint { double x1; double x2; })arg2 withNumberOfTouches:(unsigned long long)arg3;
- (void)taps:(unsigned long long)arg1 location:(struct CGPoint { double x1; double x2; })arg2 withNumberOfTouches:(unsigned long long)arg3 pressure:(double)arg4 radius:(double)arg5;
- (void)tapsNoLift:(unsigned long long)arg1 location:(struct CGPoint { double x1; double x2; })arg2 withNumberOfTouches:(unsigned long long)arg3;
- (id)touchCurveFunction;
- (void)touchDown:(struct CGPoint { double x1; double x2; })arg1;
- (void)touchDown:(struct CGPoint { double x1; double x2; })arg1 touchCount:(unsigned long long)arg2;
- (void)touchDown:(struct CGPoint { double x1; double x2; })arg1 touchCount:(unsigned long long)arg2 pressure:(double)arg3;
- (void)touchDown:(struct CGPoint { double x1; double x2; })arg1 touchCount:(unsigned long long)arg2 pressure:(double)arg3 radius:(double)arg4;
- (void)touchDown:(struct CGPoint { double x1; double x2; })arg1 touchCount:(unsigned long long)arg2 radius:(double)arg3;
- (void)touchDownAtPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2;
- (void)touchDownAtPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2 pressure:(double)arg3;
- (void)touchDownAtPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2 pressure:(double)arg3 radius:(double)arg4;
- (void)touchDownAtPoints:(struct CGPoint { double x1; double x2; }*)arg1 touchCount:(unsigned long long)arg2 radius:(double)arg3;
- (long long)touchFrequency;
- (double)touchMoveInterval;
- (void)touchSensitiveButtonClickWithPage:(id)arg1 withUsage:(id)arg2 withTouch:(int)arg3 withNormalizedPositionY:(double)arg4 withNormalizedPositionDeltaY:(double)arg5;
- (void)touchSensitiveButtonEngagedWithDuration:(double)arg1 withPage:(id)arg2 withUsage:(id)arg3 withTouch:(int)arg4 withNormalizedPositionY:(double)arg5 withNormalizedPositionDeltaY:(double)arg6;
- (void)touchSensitiveButtonEngagedWithLiftWithDuration:(double)arg1 withPage:(id)arg2 withUsage:(id)arg3 withTouch:(int)arg4 withNormalizedPositionY:(double)arg5 withNormalizedPositionDeltaY:(double)arg6;
- (void)touchSensitiveButtonEngagedWithPage:(id)arg1 withUsage:(id)arg2 withTouch:(int)arg3 withNormalizedPositionY:(double)arg4 withNormalizedPositionDeltaY:(double)arg5;
- (void)touchSensitiveButtonHoldWithDuration:(double)arg1 withPage:(id)arg2 withUsage:(id)arg3 withTouch:(int)arg4 withNormalizedPositionY:(double)arg5 withNormalizedPositionDeltaY:(double)arg6;
- (void)touchSensitiveButtonHoldWithPage:(id)arg1 withUsage:(id)arg2 withTouch:(int)arg3 withNormalizedPositionY:(double)arg4 withNormalizedPositionDeltaY:(double)arg5;
- (void)touchSensitiveButtonIntermediatePressWithDuration:(double)arg1 withPage:(id)arg2 withUsage:(id)arg3 withTouch:(int)arg4 withNormalizedPositionY:(double)arg5 withNormalizedPositionDeltaY:(double)arg6;
- (void)touchSensitiveButtonIntermediatePressWithPage:(id)arg1 withUsage:(id)arg2 withTouch:(int)arg3 withNormalizedPositionY:(double)arg4 withNormalizedPositionDeltaY:(double)arg5;
- (void)touchSensitiveButtonLiftWithPage:(id)arg1 withUsage:(id)arg2;
- (void)touchSensitiveButtonReleaseHoldWithPage:(id)arg1 withUsage:(id)arg2 withTouch:(int)arg3 withNormalizedPositionY:(double)arg4 withNormalizedPositionDeltaY:(double)arg5;
- (void)touchTapDown:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned int)transducerType;
- (void)vendorEventWithPage:(id)arg1 withUsage:(id)arg2 withVersion:(unsigned char)arg3;
- (void)vendorEventWithPage:(id)arg1 withUsage:(id)arg2 withVersion:(unsigned char)arg3 withData:(id)arg4;
- (void)withExclusiveChildStream:(id)arg1 perform:(id /* block */)arg2;

@end
