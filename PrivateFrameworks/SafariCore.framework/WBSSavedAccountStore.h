/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore
 */

@interface WBSSavedAccountStore : NSObject <WBSAuthenticationServicesAgentDelegate, WBSOngoingSharingGroupProviderSubscriber, WBSSavedAccountStoreGroupSharingExtras, WBSSavedAccountStorePasskeyExtras, WBSSavedAccountStoreWebsiteNameConsumer> {
    NSMutableArray * _allRecentlyDeletedSavedAccounts;
    NSMutableDictionary * _allSavedAccountsHighLevelDomainToUsernameToCredentialTypesToSavedAccounts;
    WBSAuthenticationServicesAgentProxy * _authenticationServicesAgentProxy;
    bool  _didInitializeShouldShowServiceNamesSetting;
    struct atomic_flag { 
        _Atomic bool _Value; 
    }  _didReportAccountsWithUnknownContributorID;
    NSArray * _domainsStoreIsLimitedTo;
    NSMutableDictionary * _groupIdentifiersToHighLevelDomainToUsernameToPasswordToSavedAccounts;
    NSDictionary * _groupIdentifiersToPasskeysData;
    NSDictionary * _groupIdentifiersToRecentlyDeletedPasskeysData;
    NSMutableDictionary * _groupIdentifiersToSavedAccounts;
    NSMutableDictionary * _groupIdentifiersToUserHandleProtectionSpacePairsToSavedAccountsWithPasskeys;
    bool  _hasPasskeysEligibleForAutoFill;
    bool  _hasPasswordsEligibleForAutoFill;
    NSMutableDictionary * _highLevelDomainToLegacyPlatformAuthenticatorCredentials;
    bool  _isForTesting;
    _Atomic int  _isMigratingKeychainItemsWithInvalidAuthenticationTypes;
    WBSKeychainCredentialNotificationMonitor * _keychainMonitor;
    id  _keychainNotificationRegistrationToken;
    _TtC10SafariCore15WBSPasskeyStore * _passkeyStore;
    NSArray * _passkeysDataInPersonalKeychain;
    NSMutableDictionary * _personalKeychainHighLevelDomainToUsernameToPasswordToSavedAccounts;
    NSMutableDictionary * _personalKeychainUserHandleProtectionSpacePairsToSavedAccountsWithPasskeys;
    NSObject<OS_dispatch_queue_serial> * _queue;
    NSArray * _recentlyDeletedPasskeysDataInPersonalKeychain;
    NSMutableDictionary * _recentlyDeletedPersonalKeychainHighLevelDomainToUsernameToPasswordToSavedAccounts;
    NSMutableDictionary * _recentlyDeletedPersonalKeychainUserHandleProtectionSpacePairsToSavedAccountsWithPasskeys;
    NSMutableArray * _recentlyDeletedSavedAccountsInPersonalKeychain;
    NSArray * _savedAccounts;
    NSArray * _savedAccountsInPersonalKeychain;
    NSArray * _savedAccountsWithNeverSaveMarker;
    NSArray * _savedAccountsWithPasswords;
    NSArray * _savedAccountsWithSignInWithAppleRecords;
    NSArray * _sharedAccountsGroups;
    NSMutableDictionary * _sharedGroupIdentifiersToRecentlyDeletedSavedAccounts;
    bool  _shouldIgnoreKeychainUpdates;
    bool  _shouldShowServiceNamesForPasswordAndPasskeyItems;
    bool  _shouldWarmDataStoreAfterReset;
    WBSDiagnosticStateCollector * _stateCollector;
    NSTimer * _warmDataStoreAfterResetTimer;
}

@property (nonatomic, readonly) NSArray *allRecentlyDeletedSavedAccounts;
@property (nonatomic, readonly) WBSAuthenticationServicesAgentProxy *authenticationServicesAgentProxy;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasPasskeysEligibleForAutoFill;
@property (nonatomic, readonly) bool hasPasswordsEligibleForAutoFill;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSSet *highLevelDomainsOfAllSavedAccountsExcludingNeverSaveMarkerPasswords;
@property (nonatomic, readonly) NSSet *highLevelDomainsOfAllSavedAccountsWithPasswordsExcludingNeverSaveMarkerPasswords;
@property (nonatomic, readonly) NSSet *highLevelDomainsOfRecentlyDeletedAccounts;
@property (nonatomic, readonly) bool isForTesting;
@property (nonatomic, readonly) unsigned long long numberOfSavedAccountsToBeExported;
@property (nonatomic, readonly) _TtC10SafariCore15WBSPasskeyStore *passkeyStore;
@property (nonatomic, readonly) NSArray *passkeysDataOnInternalQueue;
@property (nonatomic, readonly) NSArray *recentlyDeletedPasskeysDataOnInternalQueue;
@property (nonatomic, readonly) NSArray *recentlyDeletedSavedAccountsInPersonalKeychain;
@property (nonatomic, readonly) NSArray *savedAccounts;
@property (nonatomic, readonly) NSArray *savedAccountsExcludingNeverSaveMarkerPasswords;
@property (nonatomic, readonly) NSArray *savedAccountsInPersonalKeychain;
@property (nonatomic, readonly) NSArray *savedAccountsInPersonalKeychainExcludingNeverSaveMarkerPasswords;
@property (nonatomic, readonly) NSArray *savedAccountsWithNeverSaveMarker;
@property (nonatomic, readonly) NSArray *savedAccountsWithPasswords;
@property (nonatomic, readonly) NSArray *savedAccountsWithPasswordsExcludingNeverSaveMarkerPasswords;
@property (nonatomic, readonly, copy) NSArray *savedAccountsWithTOTPGenerators;
@property (nonatomic, readonly) NSArray *sharedSavedAccountsInRecentlyDeletedToNotifyUserAbout;
@property (nonatomic, readonly) NSArray *sharingGroupsWithRecentlyDeletedSavedAccounts;
@property (nonatomic, readonly) NSArray *sharingGroupsWithSavedAccounts;
@property (nonatomic) bool shouldShowServiceNamesForPasswordAndPasskeyItems;
@property (nonatomic) bool shouldWarmDataStoreAfterReset;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <WBSSavedAccountStoreWebsiteNameProvider> *websiteNameProvider;

// Image: /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore

+ (bool)getProtectionSpaceAndHighLevelDomainForUserTypedSite:(id)arg1 protectionSpace:(id*)arg2 highLevelDomain:(id*)arg3;
+ (id)protectionSpaceForNewStandalonePassword;
+ (void)removeCredentialTypes:(long long)arg1 forSavedAccount:(id)arg2 forGroup:(id)arg3;
+ (void)setShouldShowServiceNamesForPasswordAndPasskeyItems:(bool)arg1;
+ (id)sharedStore;
+ (bool)shouldShowServiceNamesForPasswordAndPasskeyItems;
+ (bool)userTypedTitleShouldBeTreatedAsAWebsiteWhenAddingNewAccount:(id)arg1;

- (void).cxx_destruct;
- (void)_addGroupID:(id)arg1 toArrayForUserDefaultsKey:(id)arg2;
- (void)_addNewGroupToCachedSharingGroups:(id)arg1;
- (void)_addSavedAccount:(id)arg1 toCachedDictionaryForSavedAccountsWithPasskeysForGroupID:(id)arg2;
- (void)_addSavedAccount:(id)arg1 toCachedDictionaryForSavedAccountsWithPasswordsForGroupID:(id)arg2;
- (void)_addSavedAccountToRecentlyDeletedCachedCollections:(id)arg1;
- (id)_allInternetPasswordEntriesFromGroupID:(id)arg1;
- (id)_allInternetPasswordEntriesFromPersonalKeychain;
- (id)_allPersonalSidecarsForGroupID:(id)arg1 fromRecentlyDeleted:(bool)arg2;
- (id)_allPersonalSidecarsFromPersonalKeychainFromRecentlyDeleted:(bool)arg1;
- (id)_allSharedSidecarsForGroupID:(id)arg1 fromRecentlyDeleted:(bool)arg2;
- (id)_allSidecarsFromPersonalKeychain;
- (bool)_applyServiceNamesToSavedAccounts:(id)arg1;
- (bool)_canChangeSavedAccount:(id)arg1 toUser:(id)arg2 password:(id)arg3 forGroupID:(id)arg4;
- (bool)_canChangeSavedAccountInPersonalKeychain:(id)arg1 toUser:(id)arg2 password:(id)arg3;
- (bool)_canMoveSavedAccount:(id)arg1 toGroupWithID:(id)arg2;
- (bool)_canMoveSavedAccountWithPasskey:(id)arg1 toGroup:(id)arg2;
- (bool)_canPerformMaintenanceTasks;
- (void)_cleanUpRedundantCredentialsWithoutUsernames;
- (void)_cleanUpSharedSavedAccountsWithUnknownOriginalContributorParticipantIDsIfNecessaryFromRecentlyDeleted:(bool)arg1;
- (void)_clearExpiredRecentlyDeletedNotificationDates;
- (id)_convertSignInWithAppleAccountsToSavedAccounts:(id)arg1;
- (bool)_copySavedAccount:(id)arg1 toGroup:(id)arg2;
- (bool)_deleteSavedAccountsWithUnknownOriginalContributorParticipantIDsFromSavedAccounts:(id)arg1 inGroup:(id)arg2;
- (id)_diagnosticStateDictionary;
- (void)_ensureDomainsToUsersExists;
- (void)_ensureNoRecentlyDeletedSavedAccountsConflictWithSavedAccount:(id)arg1;
- (void)_ensureRecentlyDeletedSavedAccountsAreLoadedOnInternalQueue;
- (void)_fetchAndFilterAllPasskeysData;
- (void)_fetchAndFilterPasskeysData;
- (void)_fetchAndFilterRecentlyDeletedPasskeysData;
- (id)_fetchCurrentAutoFillPasskeysWithCriteria:(id)arg1;
- (void)_fetchSharedAccountsGroups;
- (void)_fetchSignInWithAppleAccounts;
- (id)_getSavedAccountMatchesFromSavedAccountTreeMatchesOnInternalQueue:(id)arg1 withCriteria:(id)arg2 mergingAutoFillPasskeys:(id)arg3 nearbyDeviceOptions:(id)arg4;
- (id)_getSavedAccountTreeMatchesWithCriteriaOnInternalQueue:(id)arg1 relyingPartyURL:(id)arg2;
- (id)_getSavedAccountsMatchingCriteriaOnInternalQueue:(id)arg1;
- (id)_groupIDArrayForUserDefaultsKey:(id)arg1;
- (bool)_hasPersonWithParticipantID:(id)arg1 contributedSavedAccountsToGroupWithID:(id)arg2;
- (bool)_hasSavedAccountWithSameUserNameOfSavedAccount:(id)arg1 forProtectionSpace:(id)arg2;
- (void)_identifySharedSavedAccountsWithSameUsernameAndHighLevelDomainPairs;
- (bool)_isMigratingKeychainItemsWithInvalidAuthenticationTypes;
- (id)_loadAndMergeSavedAccountsFromGroupID:(id)arg1 intoAllSavedAccounts:(id)arg2;
- (id)_loadAndMergeSavedAccountsFromPersonalKeychainIntoAllSavedAccounts:(id)arg1;
- (void)_loadRecentlyDeletedSavedAccounts;
- (void)_loadRecentlyDeletedSavedAccountsFromSharedGroupIDs:(id)arg1;
- (void)_loadRecentlyDeletedSavedAccountsInPersonalKeychain;
- (id)_loadSavedAccounts;
- (id)_loadSavedAccountsWithPasskeysFromPasskeyData:(id)arg1 forGroupID:(id)arg2 fromRecentlyDeleted:(bool)arg3 withDictionaryForSavedAccountsWithPasskeys:(id)arg4;
- (id)_loadSavedAccountsWithPasswordsFromKeychainData:(id)arg1 forGroupID:(id)arg2 withDictionaryForSavedAccountsWithPasswords:(id)arg3 fromRecentlyDeleted:(bool)arg4;
- (void)_matchSidecars:(id)arg1 toSavedAccountsWithPasskeysInDictionary:(id)arg2 unmatchedSidecars:(id)arg3;
- (void)_matchSidecars:(id)arg1 toSavedAccountsWithPasswordsInDictionary:(id)arg2 unmatchedSidecars:(id)arg3;
- (id)_mergeLoadedSavedAccounts:(id)arg1 intoAllSavedAccounts:(id)arg2;
- (void)_mergeSavedAccountWithPasskey:(id)arg1 toSavedAccountWithPassword:(id)arg2;
- (void)_mergeSavedAccountWithPassword:(id)arg1 toSavedAccountWithPasskey:(id)arg2;
- (id)_mergeSavedAccountsWithPasskeys:(id)arg1 andSavedAccountsWithPasswords:(id)arg2 usingDictionaryForSavedAccountsWithPasswords:(id)arg3 dictionaryForSavedAccountsWithPasskeys:(id)arg4;
- (void)_migratePasswordsWithInvalidAuthenticationTypes;
- (void)_moveContributedSavedAccountsBackToPersonalKeychainIfNecessary;
- (id)_moveCredentialTypesToRecentlyDeleted:(long long)arg1 fromSavedAccount:(id)arg2;
- (id)_moveCredentialTypesToRecentlyDeletedOnInternalQueue:(long long)arg1 fromSavedAccount:(id)arg2;
- (bool)_moveSavedAccount:(id)arg1 toGroupWithID:(id)arg2;
- (bool)_moveSavedAccountsOriginallyContributedByCurrentUserToPersonalKeychainFromGroupID:(id)arg1 isForAlreadyExitedGroup:(bool)arg2;
- (bool)_moveSavedAccountsOriginallyContributedByCurrentUserToPersonalKeychainFromGroupIDOnInternalQueue:(id)arg1 isForAlreadyExitedGroup:(bool)arg2;
- (bool)_moveSignInWithAppleSavedAccount:(id)arg1 toGroupID:(id)arg2;
- (void)_notifyClientsAboutWebsiteNamesChanges;
- (void)_performCleanupForExitedGroupsIfNecessary:(id /* block */)arg1;
- (void)_performLegacySidecarModificationWithChangeRequest:(id)arg1 toSavedAccount:(id)arg2;
- (void)_performRecentlyDeletedMaintenanceIfNecessary;
- (id)_persistentIdentifierForUser:(id)arg1 host:(id)arg2;
- (void)_postSavedAccountStoreDidChangeNotification;
- (void)_prewarm;
- (void)_pruneSavedAccountTreeMatchesOnInternalQueue:(id)arg1 basedOnUsernameAndPasswordCriteria:(id)arg2 autoFillPasskeyIdentifiers:(id)arg3 keepAllPasskeyMatches:(bool)arg4;
- (bool)_reapplyServiceNamesFromProvider;
- (void)_recordGroupIdentifierForExitCleanup:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_recordGroupIdentifierForMovingContributedCredentialsBackToPersonalKeychain:(id)arg1;
- (bool)_recoverRecentlyDeletedSavedAccount:(id)arg1;
- (id)_relyingPartyURLForPasskeyCredentialIdentifierOnInternalQueue:(id)arg1 credentialIdentifiersToAutoFillPasskeys:(id)arg2;
- (void)_removeCredentialTypes:(long long)arg1 forSavedAccount:(id)arg2;
- (void)_removeGroupID:(id)arg1 fromArrayForUserDefaultsKey:(id)arg2;
- (void)_removeSavedAccount:(id)arg1 fromCachedCollectionsForCredentialTypes:(long long)arg2;
- (void)_removeSavedAccount:(id)arg1 fromCachedDictionaryForSavedAccountsWithPasskeysForGroupID:(id)arg2;
- (void)_removeSavedAccount:(id)arg1 fromCachedDictionaryForSavedAccountsWithPasswordsForGroupID:(id)arg2;
- (void)_removeSavedAccount:(id)arg1 fromGroupID:(id)arg2;
- (void)_removeSavedAccountFromRecentlyDeletedCachedCollections:(id)arg1;
- (void)_reportAccountsWithUnknownContributorIDIfNeeded;
- (void)_reportKeychainItemsWithInvalidAuthenticationTypesIfNeeded;
- (void)_resetOnInternalQueue;
- (id)_saveAccountOnInternalQueueWithUser:(id)arg1 password:(id)arg2 forUserTypedSite:(id)arg3 groupID:(id)arg4;
- (id)_saveAccountOnInternalQueueWithUser:(id)arg1 password:(id)arg2 protectionSpace:(id)arg3 highLevelDomain:(id)arg4 groupID:(id)arg5;
- (void)_saveSidecarObjectsOnInternalQueueForSavedAccount:(id)arg1 withBlock:(id /* block */)arg2;
- (void)_saveSidecarObjectsOnInternalQueueForSavedAccountWithPassword:(id)arg1 withBlock:(id /* block */)arg2;
- (void)_saveSidecarOnInternalQueueForSavedAccountWithPasskey:(id)arg1 withBlock:(id /* block */)arg2;
- (id)_saveUser:(id)arg1 passkeyCredential:(id)arg2 passkeyRelyingPartyID:(id)arg3;
- (id)_savedAccountForProtectionSpace:(id)arg1 user:(id)arg2 password:(id)arg3;
- (id)_savedAccounts;
- (id)_savedAccountsWithPasswords;
- (bool)_shareSignInWithAppleAccountWithContext:(id)arg1 withGroupInfo:(id)arg2 savedAccount:(id)arg3;
- (bool)_shouldLoadCredentialRecordWithHostIntoAccountStore:(id)arg1;
- (bool)_shouldUpdateLastUsedDateForSavedAccount:(id)arg1 forProtectionSpace:(id)arg2 inContext:(id)arg3;
- (void)_signInWithApplePushNotificationReceived:(id)arg1;
- (bool)_unshareSignInWithAppleAccountWithContext:(id)arg1;
- (void)_updateCachedSharedAccountGroupsOnInternalQueue;
- (void)_updateCachedSignInWithAppleAccountsOnInternalQueueWithAccounts:(id)arg1;
- (void)_updateLastOneTimeShareDateforSavedAccountIfNeeded:(id)arg1;
- (void)_updateSavedAccountsAndSavedAccountsWithPasswordsDictionary:(id)arg1 withChangeFromOldUser:(id)arg2 oldPassword:(id)arg3 forSavedAccountWithPassword:(id)arg4;
- (void)_updateShowServiceNamesInPasswordsPreference;
- (void)_verifyGroupsInSync;
- (void)_warmDataStoreAfterResetTimerFired:(id)arg1;
- (void)_writeSidecarDataForMergedSavedAccount:(id)arg1;
- (void)addAdditionalSite:(id)arg1 toSavedAccount:(id)arg2;
- (id)allRecentlyDeletedSavedAccounts;
- (id)authenticationServicesAgentProxy;
- (bool)canChangeSavedAccount:(id)arg1 toUser:(id)arg2 password:(id)arg3;
- (bool)canChangeSavedAccountWithRequest:(id)arg1;
- (bool)canSaveUser:(id)arg1 password:(id)arg2 forProtectionSpace:(id)arg3 highLevelDomain:(id)arg4 notes:(id)arg5 customTitle:(id)arg6 groupID:(id)arg7 error:(id*)arg8;
- (bool)canSaveUser:(id)arg1 password:(id)arg2 forUserTypedSite:(id)arg3 notes:(id)arg4 customTitle:(id)arg5 groupID:(id)arg6 error:(id*)arg7;
- (void)changeSavedAccount:(id)arg1 toUser:(id)arg2 password:(id)arg3;
- (void)changeSavedAccountWithRequest:(id)arg1;
- (void)dealloc;
- (void)deletePasskeyWithIdentifier:(void *)arg1 completionHandler:(void *)arg2; // needs 2 arg types, found 41: id, /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, /* Warning: Unrecognized filer type: 'W' using 'void*' */ void*, bool, unsigned short, /* Warning: Unrecognized filer type: 'P' using 'void*' */ void*, /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*, /* Warning: unhandled bit fieldencoding: 'b' */ unsigned int, long, int, BOOL, /* Warning: Unrecognized filer type: 'K' using 'void*' */ void*, /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, /* Warning: Unrecognized filer type: 'y' using 'void*' */ void*, unsigned char, const /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, double, /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, in /* Warning: Unrecognized filer type: 't' using 'void*' */ void*, int, /* Warning: Unrecognized filer type: 'a' using 'void*' */ void*, long, unsigned int, double, /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, in /* Warning: Unrecognized filer type: 't' using 'void*' */ void*, int, float, int, /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, const /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id, /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, inout unsigned short, /* Warning: Unrecognized filer type: 'E' using 'void*' */ void*, const const out const /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, /* Warning: Unrecognized filer type: '>' using 'void*' */ void*
- (void)deletePasskeyWithIdentifierOnInternalQueue:(id)arg1;
- (id)duplicateAccountsWithGroupID:(id)arg1;
- (id)exportPasskeyCredentialWithID:(id)arg1;
- (id)exportPasskeyCredentialWithIDOnInternalQueue:(id)arg1;
- (id)getSavedAccountWithPasskeyCredentialForUserHandle:(id)arg1 protectionSpace:(id)arg2;
- (void)getSavedAccountsMatchingCriteria:(id)arg1 withSynchronousCompletionHandler:(id /* block */)arg2;
- (void)groupProviderReceivedUpdates:(id)arg1;
- (bool)hasPasskeysEligibleForAutoFill;
- (bool)hasPasswordsEligibleForAutoFill;
- (id)highLevelDomainsOfAllSavedAccountsExcludingNeverSaveMarkerPasswords;
- (id)highLevelDomainsOfAllSavedAccountsWithPasswordsExcludingNeverSaveMarkerPasswords;
- (id)highLevelDomainsOfRecentlyDeletedAccounts;
- (id)highLevelDomainsOfSavedAccountsExcludingNeverSaveMarkerPasswordsForGroupID:(id)arg1;
- (id)importPasskeyCredentialOnInternalQueue:(id)arg1;
- (id)initAndPrewarmSavedAccounts:(bool)arg1 forTesting:(bool)arg2;
- (id)initPartialStoreForDomains:(id)arg1 forTesting:(bool)arg2;
- (id)initWithAuthenticationServicesAgentProxy:(id)arg1 shouldPrewarmSavedAccounts:(bool)arg2 limitedToDomains:(id)arg3 forTesting:(bool)arg4;
- (bool)isForTesting;
- (void)knownWebsiteNamesDidChange;
- (void)knownWebsiteNamesDidChangeOnDomains:(id)arg1;
- (void)newPasskeysAvailableForApplicationIdentifier:(id)arg1;
- (unsigned long long)numberOfSavedAccountsInPersonalKeychainForHighLevelDomain:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)passkeyDataForPasskeyCredentialIDOnInternalQueue:(id)arg1;
- (id)passkeyStore;
- (id)passkeysDataOnInternalQueue;
- (void)performTaskEnsuringAllAccountSourcesAreLoadedOnQueue:(id)arg1 task:(id /* block */)arg2;
- (id)persistentIdentifierForCredential:(id)arg1 protectionSpace:(id)arg2;
- (id)persistentIdentifierForSavedAccount:(id)arg1;
- (id)recentlyDeletedPasskeysDataOnInternalQueue;
- (id)recentlyDeletedSavedAccountsForGroupWithID:(id)arg1;
- (id)recentlyDeletedSavedAccountsInPersonalKeychain;
- (void)removeCredentialTypes:(long long)arg1 forSavedAccount:(id)arg2;
- (void)removeDontSaveMarkerForProtectionSpace:(id)arg1;
- (void)removeHideWarningMarkerForSavedAccount:(id)arg1;
- (void)removeLegacyPlatformCredentialsForDomains:(id)arg1;
- (void)removeSite:(id)arg1 fromSavedAccountWithPassword:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)removeTOTPGeneratorForSavedAccount:(id)arg1;
- (void)reset;
- (void)resetHiddenSecurityRecommendationsWithCompletionHandler:(id /* block */)arg1;
- (void)saveAdditionalSites:(id)arg1 forSavedAccount:(id)arg2;
- (void)saveCustomTitle:(id)arg1 forSavedAccount:(id)arg2;
- (void)saveHideMarker:(id)arg1 forSavedAccount:(id)arg2;
- (void)saveNotesEntry:(id)arg1 forSavedAccount:(id)arg2;
- (void)saveTOTPGenerator:(id)arg1 forSavedAccount:(id)arg2;
- (id)saveUser:(id)arg1 password:(id)arg2 forProtectionSpace:(id)arg3 highLevelDomain:(id)arg4 groupID:(id)arg5;
- (id)saveUser:(id)arg1 password:(id)arg2 forUserTypedSite:(id)arg3 customTitle:(id)arg4 notesEntry:(id)arg5 groupID:(id)arg6;
- (id)saveUser:(id)arg1 password:(id)arg2 forUserTypedSite:(id)arg3 groupID:(id)arg4;
- (id)saveUser:(id)arg1 password:(id)arg2 forUserTypedSite:(id)arg3 notesEntry:(id)arg4 groupID:(id)arg5;
- (id)savedAccountForURL:(id)arg1 user:(id)arg2 password:(id)arg3;
- (id)savedAccountForURLCredential:(id)arg1 protectionSpace:(id)arg2;
- (id)savedAccountForUserTypedSite:(id)arg1 userName:(id)arg2;
- (id)savedAccountWithAllMetadataForURLCredential:(id)arg1 protectionSpace:(id)arg2;
- (void)savedAccountWithAllMetadataForURLCredential:(id)arg1 protectionSpace:(id)arg2 completion:(id /* block */)arg3;
- (id)savedAccounts;
- (id)savedAccountsExcludingNeverSaveMarkerPasswords;
- (id)savedAccountsForGroupID:(id)arg1;
- (id)savedAccountsForPersistentIdentifiers:(id)arg1;
- (id)savedAccountsInPersonalKeychain;
- (id)savedAccountsInPersonalKeychainExcludingNeverSaveMarkerPasswords;
- (void)savedAccountsMatchingCriteria:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)savedAccountsWithNeverSaveMarker;
- (id)savedAccountsWithPasswords;
- (id)savedAccountsWithPasswordsExcludingNeverSaveMarkerPasswords;
- (id)savedAccountsWithTOTPGenerators;
- (void)setDontSaveMarkerForSavedAccountsWithProtectionSpace:(id)arg1;
- (void)setSavedAccountAsDefault:(id)arg1 forProtectionSpace:(id)arg2;
- (void)setSavedAccountAsDefault:(id)arg1 forProtectionSpace:(id)arg2 context:(id)arg3;
- (void)setShouldShowServiceNamesForPasswordAndPasskeyItems:(bool)arg1;
- (void)setShouldWarmDataStoreAfterReset:(bool)arg1;
- (id)sharedSavedAccountsInRecentlyDeletedToNotifyUserAbout;
- (id)sharingGroupsWithRecentlyDeletedSavedAccounts;
- (id)sharingGroupsWithSavedAccounts;
- (bool)shouldShowServiceNamesForPasswordAndPasskeyItems;
- (bool)shouldWarmDataStoreAfterReset;
- (void)test_copyPasskeyWithCredentialID:(id)arg1 toGroup:(id)arg2 inRecentlyDeleted:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)test_createLegacyWebAuthnCredentialWithUserName:(id)arg1 displayName:(id)arg2 relyingPartyIdentifier:(id)arg3 userHandle:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)test_createPasskeyWithUserName:(id)arg1 displayName:(id)arg2 relyingPartyIdentifier:(id)arg3 userHandle:(id)arg4 groupID:(id)arg5 inRecentlyDeleted:(bool)arg6 completionHandler:(id /* block */)arg7;
- (void)test_createPasskeyWithUserName:(id)arg1 displayName:(id)arg2 relyingPartyIdentifier:(id)arg3 userHandle:(id)arg4 groupID:(id)arg5 inRecentlyDeleted:(bool)arg6 unsafeAllowRealKeychainAccess:(bool)arg7 completionHandler:(id /* block */)arg8;
- (void)test_reloadAllSavedAccounts;
- (void)test_setSharedAccountsGroups:(id)arg1;
- (bool)unshareSignInWithAppleSavedAccount:(id)arg1;
- (void)updateAllSavedAccountsWithPasswordsWithUser:(id)arg1 protectionSpace:(id)arg2 withNewPassword:(id)arg3;
- (void)updateUserVisibleName:(void *)arg1 forPasskeyWithIdentifier:(void *)arg2 completionHandler:(void *)arg3; // needs 3 arg types, found 49: id, /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, inout unsigned short, unsigned short, /* Warning: Unrecognized filer type: 't' using 'void*' */ void*, const int, in /* Warning: Unrecognized filer type: 'g' using 'void*' */ void*, /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, id, /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, /* Warning: Unrecognized filer type: 'W' using 'void*' */ void*, bool, unsigned short, /* Warning: Unrecognized filer type: 'P' using 'void*' */ void*, /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*, /* Warning: unhandled bit fieldencoding: 'b' */ unsigned int, long, int, BOOL, /* Warning: Unrecognized filer type: 'K' using 'void*' */ void*, /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, /* Warning: Unrecognized filer type: 'y' using 'void*' */ void*, unsigned char, const /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, double, /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, in /* Warning: Unrecognized filer type: 't' using 'void*' */ void*, int, /* Warning: Unrecognized filer type: 'a' using 'void*' */ void*, long, unsigned int, double, /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, in /* Warning: Unrecognized filer type: 't' using 'void*' */ void*, int, float, int, /* Warning: Unrecognized filer type: 'e' using 'void*' */ void*, const /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id, /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, inout unsigned short, /* Warning: Unrecognized filer type: 'E' using 'void*' */ void*, const const out const /* Warning: Unrecognized filer type: '"' using 'void*' */ void*, /* Warning: Unrecognized filer type: '>' using 'void*' */ void*
- (void)updateUserVisibleNameOnInternalQueue:(id)arg1 forPasskeyWithIdentifier:(id)arg2;
- (id)websiteNameProvider;

// Image: /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices

+ (id)_displayNameForOriginalContributorParticipantID:(id)arg1 inGroupID:(id)arg2;

- (id)websiteNameProvider;

// Image: /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared

- (void)_test_writeContentsOfAccountStoreToWriter:(id)arg1;
- (void)_writeContentsOfAccounts:(id)arg1 toWriter:(id)arg2;
- (void)exportContentsOfAccountStoreToCSVFileWithPath:(id)arg1;
- (void)exportContentsOfSavedAccounts:(id)arg1 toCSVFileWithPath:(id)arg2;
- (unsigned long long)numberOfSavedAccountsToBeExported;

@end
