/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI
 */

@interface WBSLPLinkMetadataCache : NSObject <WBSDataCacheDelegate, WBSSQLiteStoreDelegate> {
    long long  _cacheState;
    NSURL * _databaseURL;
    NSURL * _diskCacheURL;
    bool  _evictionEnabled;
    double  _expirationInterval;
    NSObject<OS_dispatch_queue> * _internalQueue;
    bool  _isInMemoryStorePrewarmed;
    unsigned long long  _maximumNumberOfEntries;
    WBSLPLinkMetadataSQLiteStore * _metadataDatabase;
    WBSOnDiskDataCache * _metadataDiskCache;
    id /* block */  _setUpCompletionHandler;
    NSMutableDictionary * _urlStringsToMetadataInfo;
}

@property (nonatomic, readonly, copy) NSURL *databaseURL;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSURL *diskCacheURL;
@property (nonatomic, readonly) bool evictionEnabled;
@property (nonatomic, readonly) double expirationInterval;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned long long maximumNumberOfEntries;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_didFailDiskCacheWriteForMetadataInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_didFinishDiskCacheWriteWithCompletionHandler:(id /* block */)arg1;
- (void)_discardAllMetadataInfo;
- (void)_discardMetadataInfoForURLString:(id)arg1;
- (void)_evictCacheItemsIfNecessaryWithCompletionHandler:(id /* block */)arg1;
- (void)_finishSetUpWithStatus:(long long)arg1;
- (long long)_internalStatusFromWBSSQLStoreStatus:(long long)arg1;
- (bool)_isMetadataExpiredWithInfo:(id)arg1;
- (void)_purgeMetadataForURLStrings:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_storeMetadataInfo:(id)arg1 forURLString:(id)arg2;
- (id)_storedMetadataInfoForURLString:(id)arg1;
- (void)closeAfterPendingChangesWithCompletionHandler:(id /* block */)arg1;
- (void)dataCacheDidSetUp:(id)arg1;
- (id)databaseURL;
- (id)diskCacheURL;
- (bool)evictionEnabled;
- (double)expirationInterval;
- (void)getMetadataInfoForURLString:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)getMetadataWithInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)initWithCacheDirectoryURL:(id)arg1 expirationInterval:(double)arg2;
- (id)initWithCacheDirectoryURL:(id)arg1 expirationInterval:(double)arg2 maximumNumberOfEntries:(unsigned long long)arg3;
- (unsigned long long)maximumNumberOfEntries;
- (void)openWithCompletionHandler:(id /* block */)arg1;
- (void)prewarmInMemoryStoreWithCompletionHandler:(id /* block */)arg1;
- (void)removeAllMetadataWithCompletionHandler:(id /* block */)arg1;
- (void)removeMetadataWithURLString:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)reuseMetadataOfURLString:(id)arg1 forURLString:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)savePendingChangesBeforeTermination;
- (void)setMetadata:(id)arg1 forURLString:(id)arg2 lastFetchDate:(id)arg3 lastFetchDidSucceed:(bool)arg4 metadataHasImage:(bool)arg5 completionHandler:(id /* block */)arg6;
- (void)sqliteStoreDidFailDatabaseIntegrityCheck:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)sqliteStoreDidFallBackToInMemoryStore:(id)arg1;

@end
