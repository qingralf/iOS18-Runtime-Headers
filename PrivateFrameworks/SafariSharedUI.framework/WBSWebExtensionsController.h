/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI
 */

@interface WBSWebExtensionsController : WBSExtensionsController <WKWebExtensionControllerDelegate> {
    NSMutableDictionary * _extensionIdentifierToData;
    NSHashTable * _extensionsWithWebNavigationListeners;
    NSHashTable * _extensionsWithWebRequestListeners;
    NSMutableSet * _migratedWebNavigationExtensionIdentifiers;
    NSMutableDictionary * _nativeRequestIdentifiersToCompletionHandlers;
    NSURL * _settingsFileURL;
    WBSWebExtensionNewTabOverridePreferencesManager * _tabOverridePreferencesManager;
    WKWebExtensionController * _webKitController;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <WBSWebExtensionsControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) WBSCoreAnalyticsExtensionsStatistics *extensionStatisticsReport;
@property (nonatomic, readonly) bool hasNamedProfiles;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <WBSWebExtensionWindow> *lastFocusedWindow;
@property (nonatomic, readonly) NSString *profileName;
@property (readonly) Class superclass;
@property (nonatomic, readonly) WBTabGroupManager *tabGroupManager;
@property (nonatomic, readonly) WBSWebExtensionNewTabOverridePreferencesManager *tabOverridePreferencesManager;
@property (readonly) unsigned long long toolbarItemIdealPointSize;
@property (nonatomic, readonly) WKWebExtensionController *webKitController;

+ (id)_commandShortcutConflictsForExtension:(id)arg1 sortedWebExtensions:(id)arg2;
+ (id)_composedIdentifierForStateOfExtensionWithBundleIdentifier:(id)arg1 developerIdentifier:(id)arg2;
+ (id)_extensionPointIdentifier;
+ (id)_firstConflctForCommand:(id)arg1 inSortedWebExtensions:(id)arg2;
+ (id)extensionURLScheme;
+ (double)pendingSiteAccessTimeoutInterval;

- (void).cxx_destruct;
- (id)_allWindowsForWebExtension:(id)arg1;
- (void)_applyManagedExtensionPermissionsForWebExtension:(id)arg1;
- (void)_clearNewTabPreferenceIfNecessaryForRemovedExtensionWithComposedIdentifier:(id)arg1;
- (void)_createNewTabInWindow:(id)arg1 tabIndex:(id)arg2 url:(id)arg3 makeActive:(bool)arg4 completionHandler:(id /* block */)arg5;
- (void)_deleteStateForExtensionWithComposedIdentifier:(id)arg1;
- (void)_deleteStorageForExtensionWithComposedIdentifier:(id)arg1;
- (id)_deviceUUIDString;
- (id)_discoverabilityTitleForCommand:(id)arg1 webExtension:(id)arg2;
- (id)_displayNameForExtension:(id)arg1;
- (id)_displayShortNameForExtension:(id)arg1;
- (id)_displayVersionForExtension:(id)arg1;
- (id)_domainForDefaultSearchProvider;
- (id)_enabledWebExtensionsSortedByDisplayShortName;
- (bool)_extensionShouldBeAutomaticallyEnabled:(id)arg1;
- (bool)_extensionShouldBeEnabled:(id)arg1;
- (id)_extensionURLToLoadFromPersistentStateURL:(id)arg1;
- (id)_filteredOriginsRemovingAllHostsPatterns:(id)arg1 containedAllHostsPattern:(bool*)arg2;
- (id)_findWindowWithID:(double)arg1;
- (void)_finishedLoadingExtensions;
- (void)_grantRequestedPermissionsIfNecessaryForExtension:(id)arg1;
- (void)_loadEnabledExtension:(id)arg1;
- (void)_loadPermissionsFromStorageForWebExtension:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_permissionsMayHaveBeenChangedExternallyForExtension:(id)arg1 previousExtensionState:(id)arg2;
- (id)_persistentStateURLForExtensionURL:(id)arg1;
- (void)_pinTab:(id)arg1;
- (void)_relateParentTab:(id)arg1 toTab:(id)arg2;
- (id)_safariShortVersion;
- (void)_savePermissionsToStorageAndPostDidChangeNotificationSoonForWebExtension:(id)arg1 permissionsWereUpdatedDueToAnExternalChange:(bool)arg2;
- (void)_savePermissionsToStorageForWebExtension:(id)arg1;
- (void)_savePermissionsToStorageIfNecessaryAndPostDidChangeNotificationForWebExtension:(id)arg1;
- (bool)_shouldDisableExtensionIfAdditionalPermissionsAreRequired:(id)arg1 previousExtensionState:(id)arg2;
- (void)_showAccessRequestAlertForExtension:(id)arg1 domains:(id)arg2 callingAPIName:(id)arg3 responseBlock:(id /* block */)arg4;
- (void)_showPromptForExtensionDisabledBecauseItDoesNotSupportThisVersionOfSafariWithMessage:(id)arg1 extensionIdentifier:(id)arg2;
- (void)_unloadPreviouslyEnabledExtension:(id)arg1;
- (void)_updateExtensionNewTabPageIfNecessary;
- (void)_updateExtensionStateIfPermissionsIncreased:(id)arg1;
- (void)_updateExtensionStateIfThisVersionOfSafariIsNotSupported:(id)arg1;
- (void)_updateManagedPrivateBrowsingStateForAllExtensions;
- (void)_updateManagedWebsiteAccessForAllExtensions;
- (id)_updatedExtensionStateForCurrentPermissions:(id)arg1 previousExtensionState:(id)arg2;
- (id)_urlForExtensionSettings;
- (id)_urlForWebKitExtensionsDirectory;
- (id)_versionNumberForExtension:(id)arg1;
- (void)_webExtensionDataPermissionsWereGranted:(id)arg1;
- (void)_webExtensionDataPermissionsWereRevokedOrRemoved:(id)arg1;
- (void)_webExtensionEnabledStateInPrivateBrowsingChanged:(id)arg1;
- (id)_webViewConfiguration;
- (bool)anyWebExtensionContentBlockerEnabled;
- (id)canonicalURLForWebExtensionURL:(id)arg1;
- (void)clearPermissionStateUsedToDetermineIfExtensionShouldBeDisabledOnUpgradeForExtension:(id)arg1;
- (bool)commandName:(id)arg1 isActionForExtension:(id)arg2;
- (id)commandShortcutConflictsForExtension:(id)arg1;
- (id)composedIdentifiersOfExtensionsWithAutomaticallyGrantedPermissions;
- (void)didActivateWindow:(id)arg1;
- (void)didCloseTab:(id)arg1 windowIsClosing:(bool)arg2;
- (void)didMoveTab:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)didMoveTab:(id)arg1 fromWindowWithID:(double)arg2 indexInOldWindow:(unsigned long long)arg3;
- (void)didOpenTab:(id)arg1;
- (void)didOpenWindow:(id)arg1;
- (void)didReplaceTab:(id)arg1 newTab:(id)arg2;
- (void)didSelectTab:(id)arg1 previousTab:(id)arg2;
- (id)enabledExtensionsWithPrivateBrowsingEnabled:(bool)arg1;
- (bool)extensionIsEnabled:(id)arg1;
- (id)extensionStateKeysToCopy;
- (id)extensionStatisticsReport;
- (void)fireOnUpdatedEventForTab:(id)arg1 withChangedProperties:(unsigned long long)arg2;
- (bool)hasNamedProfiles;
- (id)initWithProfileServerID:(id)arg1 userContentController:(id)arg2;
- (void)initializeWebKitControllerIfNeededFromSettings:(bool)arg1;
- (id)installationDateForExtension:(id)arg1;
- (bool)isTab:(id)arg1 visibleToExtension:(id)arg2;
- (bool)isWindow:(id)arg1 visibleToExtension:(id)arg2;
- (id)lastFocusedWindow;
- (id)lastSeenUniqueIdentiferForWebExtension:(id)arg1;
- (void)loadPermissionsIfNecessaryForExtension:(id)arg1;
- (void)loadSuitableDiscoveredExtensions;
- (void)performCommandForKeyCommand:(id)arg1;
- (id)profileName;
- (void)removeOldExtensionStateForExtension:(id)arg1;
- (void)savePermissionStateUsedToDetermineIfExtensionShouldBeDisabledOnUpgradeForWebExtension:(id)arg1;
- (void)saveUniqueIdentifierToStorageForWebExtension:(id)arg1;
- (void)sendMessage:(id)arg1 toApplicationWithID:(id)arg2 fromExtensionWithIdentifier:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)setExtension:(id)arg1 isEnabled:(bool)arg2 dueToUserGesture:(bool)arg3 skipSavingToStorage:(bool)arg4;
- (bool)showOptionsForExtension:(id)arg1 requestingWebView:(id)arg2;
- (id)tabGroupManager;
- (id)tabOverridePreferencesManager;
- (bool)test_isRunningExtensionTestMode;
- (unsigned long long)toolbarItemIdealPointSize;
- (void)webExtensionController:(id)arg1 connectUsingMessagePort:(id)arg2 forExtensionContext:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)webExtensionController:(id)arg1 focusedWindowForExtensionContext:(id)arg2;
- (void)webExtensionController:(id)arg1 openNewTabUsingConfiguration:(id)arg2 forExtensionContext:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)webExtensionController:(id)arg1 openWindowsForExtensionContext:(id)arg2;
- (void)webExtensionController:(id)arg1 promptForPermissionMatchPatterns:(id)arg2 inTab:(id)arg3 forExtensionContext:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)webExtensionController:(id)arg1 promptForPermissionToAccessURLs:(id)arg2 inTab:(id)arg3 forExtensionContext:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)webExtensionController:(id)arg1 promptForPermissions:(id)arg2 inTab:(id)arg3 forExtensionContext:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)webExtensionController:(id)arg1 sendMessage:(id)arg2 toApplicationIdentifier:(id)arg3 forExtensionContext:(id)arg4 replyHandler:(id /* block */)arg5;
- (void)webExtensionController:(id)arg1 sendMessage:(id)arg2 toApplicationWithIdentifier:(id)arg3 forExtensionContext:(id)arg4 replyHandler:(id /* block */)arg5;
- (id)webExtensionForBaseURIHost:(id)arg1;
- (id)webExtensionForBundleIdentifier:(id)arg1;
- (id)webExtensionForComposedIdentifier:(id)arg1;
- (id)webExtensionForExtension:(id)arg1;
- (id)webExtensionForExtensionIdentifier:(id)arg1;
- (id)webExtensionForURL:(id)arg1;
- (id)webExtensionKeyCommands;
- (id)webKitController;

@end
