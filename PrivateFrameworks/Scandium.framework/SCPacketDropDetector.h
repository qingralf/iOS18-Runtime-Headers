/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Scandium.framework/Scandium
 */

@interface SCPacketDropDetector : NSObject {
    struct PacketDropDetector { 
        struct unordered_map<unsigned char, unsigned short, std::hash<unsigned char>, std::equal_to<unsigned char>, std::allocator<std::pair<const unsigned char, unsigned short>>> { 
            struct __hash_table<std::__hash_value_type<unsigned char, unsigned short>, std::__unordered_map_hasher<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::hash<unsigned char>, std::equal_to<unsigned char>>, std::__unordered_map_equal<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::equal_to<unsigned char>, std::hash<unsigned char>>, std::allocator<std::__hash_value_type<unsigned char, unsigned short>>> { 
                struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>>> { 
                    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>>> { 
                        void **__value_; 
                        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>> { 
                            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>> { 
                                unsigned long long __value_; 
                            } __data_; 
                        } __value_; 
                    } __ptr_; 
                } __bucket_list_; 
                struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *>>> { 
                    struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> { 
                        void *__next_; 
                    } __value_; 
                } __p1_; 
                struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::hash<unsigned char>, std::equal_to<unsigned char>>> { 
                    unsigned long long __value_; 
                } __p2_; 
                struct __compressed_pair<float, std::__unordered_map_equal<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::equal_to<unsigned char>, std::hash<unsigned char>>> { 
                    float __value_; 
                } __p3_; 
            } __table_; 
        } previous_frame_indices_; 
    }  _detector;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)handlePacketWithReportID:(unsigned char)arg1 frameIndex:(unsigned short)arg2 size:(unsigned long long)arg3;

@end
