/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Scandium.framework/Scandium
 */

@interface SCProcessor : NSObject {
    bool  _bypassAlgorithms;
    <SCProcessorDelegate> * _delegate;
    double  _expectedDuration;
    unsigned short  _expectedNumberOfPackets;
    bool  _expended;
    bool  _forBackground;
    int  _frameCount;
    struct unique_ptr<scandium::Processor, std::default_delete<scandium::Processor>> { 
        struct __compressed_pair<scandium::Processor *, std::default_delete<scandium::Processor>> { 
            struct Processor {} *__value_; 
        } __ptr_; 
    }  _processor;
    unsigned long long  _startTimestamp;
}

@property (nonatomic, readonly) double currentTimestamp;
@property (nonatomic) <SCProcessorDelegate> *delegate;
@property (nonatomic, readonly) double expectedDuration;
@property (nonatomic, readonly) unsigned short expectedNumberOfPackets;
@property (nonatomic, readonly) bool forBackground;
@property (nonatomic, readonly) unsigned long long startTimestamp;

- (id).cxx_construct;
- (void).cxx_destruct;
- (double)currentTimestamp;
- (id)delegate;
- (id)dictionaryForAnalytics:(const struct SCAnalytics { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; id x11; id x12; id x13; id x14; id x15; id x16; id x17; id x18; id x19; id x20; id x21; id x22; id x23; id x24; id x25; id x26; id x27; id x28; id x29; id x30; id x31; id x32; id x33; id x34; id x35; id x36; id x37; id x38; id x39; id x40; id x41; id x42; id x43; id x44; id x45; id x46; id x47; id x48; id x49; id x50; id x51; id x52; id x53; id x54; id x55; id x56; id x57; id x58; id x59; id x60; id x61; id x62; id x63; id x64; id x65; id x66; id x67; id x68; id x69; id x70; id x71; id x72; id x73; id x74; id x75; id x76; id x77; id x78; id x79; id x80; id x81; id x82; id x83; id x84; id x85; id x86; id x87; id x88; id x89; id x90; id x91; id x92; id x93; id x94; id x95; id x96; id x97; id x98; id x99; id x100; id x101; id x102; id x103; id x104; id x105; id x106; id x107; id x108; id x109; id x110; id x111; id x112; id x113; id x114; id x115; id x116; id x117; id x118; id x119; id x120; id x121; id x122; id x123; id x124; id x125; id x126; }*)arg1 sessionDuration:(double)arg2 systemInterface:(id)arg3;
- (double)expectedDuration;
- (unsigned short)expectedNumberOfPackets;
- (bool)forBackground;
- (void)handleAbort:(unsigned char)arg1 withAnalytics:(const void*)arg2;
- (void)handleMotionStatusChange:(bool)arg1;
- (void)handlePostureStatusChange:(bool)arg1;
- (void)handleResult:(const struct Result { float x1; float x2; }*)arg1 withAnalytics:(const void*)arg2;
- (id)initWithStartPacket:(const void*)arg1 ofLength:(unsigned long long)arg2 delegate:(id)arg3 withSignalQualityMetricsEnabled:(bool)arg4 bypassingAlgorithms:(bool)arg5 bootDate:(id)arg6 hardwareModel:(id)arg7;
- (void)processPacket:(const void*)arg1 ofLength:(unsigned long long)arg2;
- (void)setDelegate:(id)arg1;
- (unsigned long long)startTimestamp;

@end
