/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SensingPredictServices.framework/SensingPredictServices
 */

@interface SPContextMonitor : NSObject <NSSecureCoding> {
    bool  _activateCalled;
    id /* block */  _activateCompletion;
    unsigned int  _clientID;
    unsigned int  _contextChangeFlags;
    id /* block */  _contextChangeHandler;
    id /* block */  _contextSignalUpdatedHandler;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    id /* block */  _interruptionHandler;
    bool  _invalidateCalled;
    bool  _invalidateDone;
    id /* block */  _invalidationHandler;
    NSXPCConnection * _xpcCnx;
}

@property (nonatomic) unsigned int clientID;
@property (nonatomic) unsigned int contextChangeFlags;
@property (nonatomic, copy) id /* block */ contextChangeHandler;
@property (nonatomic, copy) id /* block */ contextSignalUpdatedHandler;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) id /* block */ interruptionHandler;
@property (nonatomic, copy) id /* block */ invalidationHandler;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_activate:(bool)arg1;
- (void)_ensureXPCStarted;
- (void)_interrupted;
- (void)_invalidated;
- (void)_reportError:(id)arg1;
- (void)activateWithCompletion:(id /* block */)arg1;
- (unsigned int)clientID;
- (unsigned int)contextChangeFlags;
- (id /* block */)contextChangeHandler;
- (void)contextMonitorContextChanged:(id)arg1;
- (void)contextSignalUpdated:(id)arg1 fusedState:(unsigned int)arg2;
- (id /* block */)contextSignalUpdatedHandler;
- (id)description;
- (id)dispatchQueue;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id /* block */)interruptionHandler;
- (void)invalidate;
- (id /* block */)invalidationHandler;
- (bool)isSystemContext;
- (void)setClientID:(unsigned int)arg1;
- (void)setContextChangeFlags:(unsigned int)arg1;
- (void)setContextChangeHandler:(id /* block */)arg1;
- (void)setContextSignalUpdatedHandler:(id /* block */)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setInterruptionHandler:(id /* block */)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;

@end
