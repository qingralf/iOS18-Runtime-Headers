/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SignpostSupport.framework/SignpostSupport
 */

@interface SSGameSessionInterval : NSObject <SSCAMLTimeInterval, SignpostJSONRepresentable> {
    NSDate * _earliestDate;
    unsigned long long  _earliestMCT;
    NSDate * _endDate;
    unsigned long long  _endMachContinuousTime;
    bool  _includeTimelines;
    NSDate * _latestDate;
    unsigned long long  _latestMCT;
    NSDate * _startDate;
    unsigned long long  _startMachContinuousTime;
    bool  _supportsSEM;
    double  _timebaseRatio;
    NSArray * _triggeringGameModeIntervals;
    NSArray * _triggeringSEMIntervals;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSDate *earliestDate;
@property (nonatomic) unsigned long long earliestMCT;
@property (nonatomic, retain) NSDate *endDate;
@property (nonatomic) unsigned long long endMachContinuousTime;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool includeTimelines;
@property (nonatomic, retain) NSDate *latestDate;
@property (nonatomic) unsigned long long latestMCT;
@property (nonatomic, retain) NSDate *startDate;
@property (nonatomic) unsigned long long startMachContinuousTime;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsSEM;
@property (nonatomic, readonly) double timebaseRatio;
@property (nonatomic, readonly) NSArray *triggeringGameModeIntervals;
@property (nonatomic, readonly) NSArray *triggeringSEMIntervals;

- (void).cxx_destruct;
- (id)debugDescription;
- (id)dictionaryRepresentation;
- (unsigned long long)durationMachContinuousTime;
- (double)durationMs;
- (unsigned long long)durationNanoseconds;
- (float)durationSeconds;
- (id)earliestDate;
- (unsigned long long)earliestMCT;
- (id)endDate;
- (unsigned long long)endMachContinuousTime;
- (double)endMs;
- (unsigned long long)endNanoseconds;
- (double)endSeconds;
- (bool)includeTimelines;
- (id)initWithIncludeTimelines:(bool)arg1 timebaseRatio:(double)arg2;
- (id)jsonDescription:(unsigned long long)arg1;
- (id)latestDate;
- (unsigned long long)latestMCT;
- (void)setEarliestDate:(id)arg1;
- (void)setEarliestMCT:(unsigned long long)arg1;
- (void)setEndDate:(id)arg1;
- (void)setEndMachContinuousTime:(unsigned long long)arg1;
- (void)setLatestDate:(id)arg1;
- (void)setLatestMCT:(unsigned long long)arg1;
- (void)setStartDate:(id)arg1;
- (void)setStartMachContinuousTime:(unsigned long long)arg1;
- (id)startDate;
- (unsigned long long)startMachContinuousTime;
- (double)startMs;
- (unsigned long long)startNanoseconds;
- (double)startSeconds;
- (bool)supportsSEM;
- (double)timebaseRatio;
- (id)triggeringGameModeIntervals;
- (id)triggeringSEMIntervals;

@end
