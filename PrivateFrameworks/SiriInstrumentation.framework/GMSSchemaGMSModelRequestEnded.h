/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation
 */

@interface GMSSchemaGMSModelRequestEnded : SISchemaInstrumentationMessage {
    struct { 
        unsigned int tokensPerSecond : 1; 
        unsigned int responseTokensCount : 1; 
        unsigned int kbPerSecond : 1; 
        unsigned int responseKbCount : 1; 
        unsigned int imagePerSecond : 1; 
        unsigned int imageCount : 1; 
        unsigned int timeToFirstTokenInSeconds : 1; 
        unsigned int timeToLastTokenInSeconds : 1; 
        unsigned int responseCharactersCount : 1; 
        unsigned int responseTimeInMilliseconds : 1; 
    }  _has;
    unsigned int  _imageCount;
    float  _imagePerSecond;
    double  _kbPerSecond;
    unsigned int  _responseCharactersCount;
    unsigned int  _responseKbCount;
    unsigned int  _responseTimeInMilliseconds;
    unsigned int  _responseTokensCount;
    double  _timeToFirstTokenInSeconds;
    double  _timeToLastTokenInSeconds;
    double  _tokensPerSecond;
}

@property (nonatomic) bool hasImageCount;
@property (nonatomic) bool hasImagePerSecond;
@property (nonatomic) bool hasKbPerSecond;
@property (nonatomic) bool hasResponseCharactersCount;
@property (nonatomic) bool hasResponseKbCount;
@property (nonatomic) bool hasResponseTimeInMilliseconds;
@property (nonatomic) bool hasResponseTokensCount;
@property (nonatomic) bool hasTimeToFirstTokenInSeconds;
@property (nonatomic) bool hasTimeToLastTokenInSeconds;
@property (nonatomic) bool hasTokensPerSecond;
@property (nonatomic) unsigned int imageCount;
@property (nonatomic) float imagePerSecond;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic) double kbPerSecond;
@property (nonatomic) unsigned int responseCharactersCount;
@property (nonatomic) unsigned int responseKbCount;
@property (nonatomic) unsigned int responseTimeInMilliseconds;
@property (nonatomic) unsigned int responseTokensCount;
@property (nonatomic) double timeToFirstTokenInSeconds;
@property (nonatomic) double timeToLastTokenInSeconds;
@property (nonatomic) double tokensPerSecond;

- (void)deleteImageCount;
- (void)deleteImagePerSecond;
- (void)deleteKbPerSecond;
- (void)deleteResponseCharactersCount;
- (void)deleteResponseKbCount;
- (void)deleteResponseTimeInMilliseconds;
- (void)deleteResponseTokensCount;
- (void)deleteTimeToFirstTokenInSeconds;
- (void)deleteTimeToLastTokenInSeconds;
- (void)deleteTokensPerSecond;
- (id)dictionaryRepresentation;
- (bool)hasImageCount;
- (bool)hasImagePerSecond;
- (bool)hasKbPerSecond;
- (bool)hasResponseCharactersCount;
- (bool)hasResponseKbCount;
- (bool)hasResponseTimeInMilliseconds;
- (bool)hasResponseTokensCount;
- (bool)hasTimeToFirstTokenInSeconds;
- (bool)hasTimeToLastTokenInSeconds;
- (bool)hasTokensPerSecond;
- (unsigned long long)hash;
- (unsigned int)imageCount;
- (float)imagePerSecond;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)jsonData;
- (double)kbPerSecond;
- (bool)readFrom:(id)arg1;
- (unsigned int)responseCharactersCount;
- (unsigned int)responseKbCount;
- (unsigned int)responseTimeInMilliseconds;
- (unsigned int)responseTokensCount;
- (void)setHasImageCount:(bool)arg1;
- (void)setHasImagePerSecond:(bool)arg1;
- (void)setHasKbPerSecond:(bool)arg1;
- (void)setHasResponseCharactersCount:(bool)arg1;
- (void)setHasResponseKbCount:(bool)arg1;
- (void)setHasResponseTimeInMilliseconds:(bool)arg1;
- (void)setHasResponseTokensCount:(bool)arg1;
- (void)setHasTimeToFirstTokenInSeconds:(bool)arg1;
- (void)setHasTimeToLastTokenInSeconds:(bool)arg1;
- (void)setHasTokensPerSecond:(bool)arg1;
- (void)setImageCount:(unsigned int)arg1;
- (void)setImagePerSecond:(float)arg1;
- (void)setKbPerSecond:(double)arg1;
- (void)setResponseCharactersCount:(unsigned int)arg1;
- (void)setResponseKbCount:(unsigned int)arg1;
- (void)setResponseTimeInMilliseconds:(unsigned int)arg1;
- (void)setResponseTokensCount:(unsigned int)arg1;
- (void)setTimeToFirstTokenInSeconds:(double)arg1;
- (void)setTimeToLastTokenInSeconds:(double)arg1;
- (void)setTokensPerSecond:(double)arg1;
- (id)suppressMessageUnderConditions;
- (double)timeToFirstTokenInSeconds;
- (double)timeToLastTokenInSeconds;
- (double)tokensPerSecond;
- (void)writeTo:(id)arg1;

@end
