/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation
 */

@interface IFTSchemaIFTSessionError : SISchemaInstrumentationMessage {
    IFTSchemaIFTExecutorError * _executorError;
    bool  _hasExecutorError;
    bool  _hasOther;
    bool  _hasPlannerError;
    bool  _hasSessionCoordinatorError;
    IFTSchemaIFTIntelligenceFlowError * _other;
    IFTSchemaIFTPlannerError * _plannerError;
    IFTSchemaIFTSessionCoordinatorError * _sessionCoordinatorError;
    unsigned long long  _whichOneof_Sessionerror;
}

@property (nonatomic, retain) IFTSchemaIFTExecutorError *executorError;
@property (nonatomic) bool hasExecutorError;
@property (nonatomic) bool hasOther;
@property (nonatomic) bool hasPlannerError;
@property (nonatomic) bool hasSessionCoordinatorError;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic, retain) IFTSchemaIFTIntelligenceFlowError *other;
@property (nonatomic, retain) IFTSchemaIFTPlannerError *plannerError;
@property (nonatomic, retain) IFTSchemaIFTSessionCoordinatorError *sessionCoordinatorError;
@property (nonatomic, readonly) unsigned long long whichOneof_Sessionerror;

- (void).cxx_destruct;
- (id)applySensitiveConditionsPolicy:(id)arg1;
- (void)deleteExecutorError;
- (void)deleteOther;
- (void)deletePlannerError;
- (void)deleteSessionCoordinatorError;
- (id)dictionaryRepresentation;
- (id)executorError;
- (bool)hasExecutorError;
- (bool)hasOther;
- (bool)hasPlannerError;
- (bool)hasSessionCoordinatorError;
- (unsigned long long)hash;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)jsonData;
- (id)other;
- (id)plannerError;
- (bool)readFrom:(id)arg1;
- (id)sessionCoordinatorError;
- (void)setExecutorError:(id)arg1;
- (void)setHasExecutorError:(bool)arg1;
- (void)setHasOther:(bool)arg1;
- (void)setHasPlannerError:(bool)arg1;
- (void)setHasSessionCoordinatorError:(bool)arg1;
- (void)setOther:(id)arg1;
- (void)setPlannerError:(id)arg1;
- (void)setSessionCoordinatorError:(id)arg1;
- (id)suppressMessageUnderConditions;
- (unsigned long long)whichOneof_Sessionerror;
- (void)writeTo:(id)arg1;

@end
