/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriNLUTypes.framework/SiriNLUTypes
 */

@interface SIRINLUEXTERNALNLU_ROUTERNLRouterServiceRequest : PBRequest <NSCopying> {
    NSMutableArray * _conversationHistorys;
    NSString * _currentUserQuery;
    SIRINLUEXTERNALNLU_ROUTERNLRouterTurnProbingResult * _probingResult;
    SIRINLUEXTERNALNLU_ROUTERQueryDecorationOutput * _queryDecorationOutput;
    NSString * _requestId;
    NSString * _trpCandidateId;
    SIRINLUEXTERNALNLU_ROUTERNLRouterTurnContext * _turnContext;
}

@property (nonatomic, retain) NSMutableArray *conversationHistorys;
@property (nonatomic, retain) NSString *currentUserQuery;
@property (nonatomic, readonly) bool hasCurrentUserQuery;
@property (nonatomic, readonly) bool hasProbingResult;
@property (nonatomic, readonly) bool hasQueryDecorationOutput;
@property (nonatomic, readonly) bool hasRequestId;
@property (nonatomic, readonly) bool hasTrpCandidateId;
@property (nonatomic, readonly) bool hasTurnContext;
@property (nonatomic, retain) SIRINLUEXTERNALNLU_ROUTERNLRouterTurnProbingResult *probingResult;
@property (nonatomic, retain) SIRINLUEXTERNALNLU_ROUTERQueryDecorationOutput *queryDecorationOutput;
@property (nonatomic, retain) NSString *requestId;
@property (nonatomic, retain) NSString *trpCandidateId;
@property (nonatomic, retain) SIRINLUEXTERNALNLU_ROUTERNLRouterTurnContext *turnContext;

+ (Class)conversationHistoryType;

- (void).cxx_destruct;
- (void)addConversationHistory:(id)arg1;
- (void)clearConversationHistorys;
- (id)conversationHistoryAtIndex:(unsigned long long)arg1;
- (id)conversationHistorys;
- (unsigned long long)conversationHistorysCount;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentUserQuery;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasCurrentUserQuery;
- (bool)hasProbingResult;
- (bool)hasQueryDecorationOutput;
- (bool)hasRequestId;
- (bool)hasTrpCandidateId;
- (bool)hasTurnContext;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)probingResult;
- (id)queryDecorationOutput;
- (bool)readFrom:(id)arg1;
- (id)requestId;
- (void)setConversationHistorys:(id)arg1;
- (void)setCurrentUserQuery:(id)arg1;
- (void)setProbingResult:(id)arg1;
- (void)setQueryDecorationOutput:(id)arg1;
- (void)setRequestId:(id)arg1;
- (void)setTrpCandidateId:(id)arg1;
- (void)setTurnContext:(id)arg1;
- (id)trpCandidateId;
- (id)turnContext;
- (void)writeTo:(id)arg1;

@end
