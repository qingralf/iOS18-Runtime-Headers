/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriNetwork.framework/SiriNetwork
 */

@interface SNNetworkAnalyticsInternal : NSObject {
    void connectionProvider;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  debugPreparationSnapshotEvent;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  debugReadySnapshotEvent;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  debugSessionConnectionSnapthotEvent;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  httpHeaderEvent;
    void isConnectionActive;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  netId;
    void netIdAvailable;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  netIdForRequestLink;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  networkConnectionId;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  orchestratorRequestId;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  peerConnectionFailedEvent;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  preparationSnapshotEvent;
    void queue;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  readySnapshotEvent;
    void sequenceNumber;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  sessionConnectionFailedEvent;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  sessionConnectionSnapthotEvent;
    void siriAnalyticsMessageStream;
}

+ (int)netConnectionModeFrom:(id)arg1;
+ (id)netEndpointFromDictionary:(id)arg1;
+ (int)netEndpointTypeFrom:(unsigned int)arg1;
+ (id)netSessionConnectionFailedWithError:(id)arg1 connectionMode:(id)arg2 sessionType:(id)arg3 sessionState:(id)arg4 isDormant:(bool)arg5 snConnectionAnalysisInfo:(id)arg6;
+ (int)netSessionStateFrom:(id)arg1;
+ (int)netSessionTypeFrom:(id)arg1;
+ (id)sharedNetworkAnalytics;

- (void).cxx_destruct;
- (bool)emitLogDebug;
- (bool)getIsConnectionActive;
- (id)getNetId;
- (id)getOrchestratorRequestId;
- (unsigned int)getSequenceNumber;
- (void)increaseSequenceNumber;
- (id)init;
- (bool)isNetIdAvailable;
- (void)logDebugNetworkConnectionStatePreparationSnapshotCaptured:(id)arg1;
- (void)logDebugNetworkConnectionStateReadySnapshotCaptured:(id)arg1;
- (void)logDebugSessionConnectionSnapshotCaptured:(id)arg1;
- (void)logNetworkConnectionStatePreparationSnapshotCaptured:(id)arg1;
- (void)logNetworkConnectionStateReadySnapshotCaptured:(id)arg1;
- (void)logPeerConnectionFailed:(id)arg1;
- (void)logRequestLinkBetweenOrchestratorAndNetworkComponent;
- (void)logSessionConnectionFailed:(id)arg1;
- (void)logSessionConnectionHttpHeaderCreated:(id)arg1;
- (void)logSessionConnectionSnapshotCaptured:(id)arg1;
- (void)reset;
- (void)resetNetId;
- (void)resetSequenceNumber;
- (void)setConnectionProvider:(id)arg1;
- (void)setIsConnectionActive:(bool)arg1;
- (void)setNetId:(id)arg1;
- (void)setNetIdAvailable:(bool)arg1;
- (void)setNetworkConnectionId:(id)arg1;
- (void)setOrchestatorRequestId:(id)arg1;

@end
