/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriSharedUI.framework/SiriSharedUI
 */

@interface SiriSharedUISmartDialogView : SiriSharedUIStandardView <SiriSharedUI.SiriSharedUISmartDialogDelegate, SiriSharedUICompactConversationViewHosting, SiriSharedUICompactServerUtteranceViewDelegate, SiriSharedUICompactUserUtteranceViewDelegate, SiriSharedUILatencyViewDelegate, UIContextMenuInteractionDelegate, UIScrollViewDelegate> {
    bool  _allowAutomaticConversationSnippetViewScaling;
    bool  _automaticallyCollapseWhenResultIsScrolled;
    UIView * _containerView;
    NSDictionary * _conversationSnippetVibrancyViews;
    NSArray * _conversationSnippetViews;
    long long  _currentExpandablePlatterStyle;
    double  _currentExpandedGestureHeight;
    bool  _currentlyTrackingGesture;
    <SiriSharedUICompactConversationViewDelegate> * _delegate;
    bool  _didSetConversationSnippets;
    SRUIFSpeechRecognitionHypothesis * _doNotUse;
    bool  _hasHintConversationSnippets;
    UIView * _hintSnippetView;
    UIView * _hintVibrancyView;
    <SiriSharedUIInteractionDelegate> * _interactionDelegate;
    bool  _isActive;
    bool  _isDrilledIn;
    bool  _isInAmbient;
    bool  _isInAmbientInteractivity;
    SiriSharedUILatencyView * _latencyView;
    SiriSharedUILatencyViewModel * _latencyViewModel;
    SRUIFLocalization * _localization;
    PLPlatterView * _platterView;
    NSMutableArray * _prepareForUpdatesPendingCompletionBlocks;
    bool  _requestedAppearanceAnimation;
    bool  _revealRecognizedSpeech;
    bool  _runningAnimatedFadeOut;
    bool  _runningPrepareForUpdates;
    SiriSharedUIStandardScrollView * _scrollView;
    NSArray * _serverUtterances;
    bool  _showingCollapsedUI;
    SFCard * _smartDialogCard;
    _TtC12SiriSharedUI32SiriSharedUISmartDialogContainer * _smartDialogContainer;
    SAUIPluginSnippet * _smartDialogPlugin;
    UIView * _smartDialogView;
    UIView * _snippetBackgroundView;
    UIView * _snippetContainerView;
    unsigned long long  _snippetLayoutCount;
    SRUIFSpeechRecognitionHypothesis * _speechRecognitionHypothesisForSuggestion;
    long long  _state;
    NSString * _userUtterance;
    SiriSharedUICompactUserUtteranceView * _userUtteranceView;
    SiriSharedUISAEUserUtteranceViewModel * _userUtteranceViewModel;
    bool  _waitingForFinalSpeechHypothesis;
    SiriSharedUIAnimationContext * animationContextForFrameAndLayoutUpdate;
    long long  attachmentType;
    double  attachmentYOffset;
    NSArray * customAttachmentConstraints;
    <SiriSharedUIDropletContentDelegate> * dropletContainerDelegate;
    SiriSharedUIViewStackConstraints * stackConstraints;
    <SiriSharedUIStackableContentDelegate> * stackContainerDelegate;
    bool  useLowerPriorityHeightConstraint;
}

@property (nonatomic) bool allowAutomaticConversationSnippetViewScaling;
@property (nonatomic, retain) SiriSharedUIAnimationContext *animationContextForFrameAndLayoutUpdate; /* unknown property attribute: ? */
@property (nonatomic) long long attachmentType;
@property (nonatomic) double attachmentYOffset;
@property (getter=willAutomaticallyCollapseWhenResultIsScrolled, nonatomic, readonly) bool automaticallyCollapseWhenResultIsScrolled;
@property (nonatomic, copy) NSArray *conversationSnippetViews;
@property (nonatomic) long long currentExpandablePlatterStyle;
@property (getter=isCurrentlyTrackingGesture, nonatomic, readonly) bool currentlyTrackingGesture;
@property (nonatomic, retain) NSArray *customAttachmentConstraints; /* unknown property attribute: ? */
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <SiriSharedUICompactConversationViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) <SiriSharedUIDropletContentDelegate> *dropletContainerDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isActive;
@property (nonatomic) bool isInAmbient;
@property (nonatomic) bool isInAmbientInteractivity;
@property (nonatomic, copy) SiriSharedUILatencyViewModel *latencyViewModel;
@property (nonatomic, retain) SRUIFLocalization *localization;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } portraitContentSize;
@property (nonatomic) bool revealRecognizedSpeech;
@property (nonatomic, retain) SiriSharedUIStandardScrollView *scrollView;
@property (nonatomic, copy) NSArray *serverUtterances;
@property (nonatomic) bool showingCollapsedUI;
@property (getter=_smartDialogContainer, setter=_setSmartDialogContainer:, nonatomic, retain) _TtC12SiriSharedUI32SiriSharedUISmartDialogContainer *smartDialogContainer;
@property (getter=_smartDialogView, setter=_setSmartDialogView:, nonatomic, retain) UIView *smartDialogView;
@property (nonatomic, retain) UIView *snippetBackgroundView;
@property (nonatomic, retain) UIView *snippetContainerView;
@property (nonatomic, copy) SRUIFSpeechRecognitionHypothesis *speechRecognitionHypothesis;
@property (nonatomic, retain) SiriSharedUIViewStackConstraints *stackConstraints;
@property (nonatomic) <SiriSharedUIStackableContentDelegate> *stackContainerDelegate;
@property (nonatomic) long long state;
@property (readonly) Class superclass;
@property (nonatomic) bool useLowerPriorityHeightConstraint; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *userUtterance;
@property (setter=setUserUtteranceViewModel:, nonatomic, copy) SiriSharedUISAEUserUtteranceViewModel *userUtteranceViewModel;

- (void).cxx_destruct;
- (void)_adjustCornerRadiusForSnippetView:(id)arg1 vibrancyView:(id)arg2;
- (void)_adjustHintCornerRadiusForSnippetView:(id)arg1 vibrancyView:(id)arg2;
- (long long)_animatedPresentationType;
- (id)_conversationAppearAnimation;
- (id)_conversationDisappearAnimation;
- (struct CGSize { double x1; double x2; })_fittingSize;
- (bool)_hasNoDialog;
- (bool)_isConversationSnippetHintType:(id)arg1;
- (id)_keyForSnippet:(id)arg1;
- (void)_prepareHintForAnimation;
- (void)_reloadConversationSnippetViewsIfHint;
- (void)_resetExpansionStateForNewContent;
- (void)_setBackgroundViewsVisible:(bool)arg1;
- (void)_setSmartDialogContainer:(id)arg1;
- (void)_setSmartDialogView:(id)arg1;
- (void)_setupSubviews;
- (bool)_shouldAddVibrancyForSnippet:(id)arg1;
- (bool)_showSpeech;
- (struct CGSize { double x1; double x2; })_sizeOfSnippet:(id)arg1;
- (struct CGSize { double x1; double x2; })_sizeThatFits:(struct CGSize { double x1; double x2; })arg1 forSnippet:(id)arg2;
- (struct CGSize { double x1; double x2; })_sizeThatFitsAllSnippets:(struct CGSize { double x1; double x2; })arg1;
- (id)_smartDialogContainer;
- (id)_smartDialogView;
- (void)_updateAmbientSnippetScaling;
- (void)_updateSubviewContentInsets;
- (bool)allowAutomaticConversationSnippetViewScaling;
- (void)animateAppearanceIfNeeded;
- (void)animateFadeOutWithCompletion:(id /* block */)arg1;
- (void)animateForDrillIn;
- (id)animatingLayer;
- (id)animationContextForFrameAndLayoutUpdate;
- (long long)attachmentType;
- (double)attachmentYOffset;
- (bool)canRelayoutSnippet;
- (id)contentContainerView;
- (bool)contentSupportsCollapsingForHeight:(double)arg1;
- (id)contextMenuInteraction:(id)arg1 configuration:(id)arg2 highlightPreviewForItemWithIdentifier:(id)arg3;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (id)conversationSnippetViews;
- (long long)currentExpandablePlatterStyle;
- (id)customAttachmentConstraints;
- (id)delegate;
- (void)didCompleteAnimatedFadeOut;
- (id)dropletContainerDelegate;
- (id)enclosedContainerView;
- (void)finalizePopAnimationOfType:(long long)arg1;
- (bool)hasResult;
- (id)hostingView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithResultView:(id)arg1;
- (id)initWithStreamingTextView:(id)arg1 emojiMaskStreamingTextView:(id)arg2;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isActive;
- (bool)isCurrentlyTrackingGesture;
- (bool)isInAmbient;
- (bool)isInAmbientInteractivity;
- (void)latencyViewClosed:(id)arg1;
- (id)latencyViewModel;
- (bool)layerHasOpacity;
- (void)layoutSubviews;
- (id)localization;
- (double)maxSnippetWidth;
- (bool)ongoingASR;
- (bool)onlyContainsSnippet;
- (id)parserSpeakableObjectProviderForServerUtterance:(id)arg1;
- (struct CGSize { double x1; double x2; })portraitContentSize;
- (void)prepareForDrillInAnimation;
- (void)prepareForPopAnimationOfType:(long long)arg1;
- (id)prepareForUpdatesPendingCompletionBlocks;
- (void)prepareForUpdatesToServerUtterance:(bool)arg1 conversationSnippetViews:(bool)arg2 speechRecognitionHypothesis:(bool)arg3 latencyViewModel:(bool)arg4 updateBlock:(id /* block */)arg5;
- (void)relayout;
- (bool)revealRecognizedSpeech;
- (id)scrollView;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })serverUtteranceContentInsets;
- (void)serverUtteranceView:(id)arg1 utteranceViewDidAppear:(id)arg2;
- (void)serverUtteranceView:(id)arg1 utteranceViewDidDisappear:(id)arg2;
- (id)serverUtterances;
- (void)setAllowAutomaticConversationSnippetViewScaling:(bool)arg1;
- (void)setAnimationContextForFrameAndLayoutUpdate:(id)arg1;
- (void)setAttachmentType:(long long)arg1;
- (void)setAttachmentYOffset:(double)arg1;
- (void)setConversationSnippetViews:(id)arg1;
- (void)setCurrentExpandablePlatterStyle:(long long)arg1;
- (void)setCustomAttachmentConstraints:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDropletContainerDelegate:(id)arg1;
- (void)setInteractionDelegate:(id)arg1;
- (void)setIsActive:(bool)arg1;
- (void)setIsInAmbient:(bool)arg1;
- (void)setIsInAmbientInteractivity:(bool)arg1;
- (void)setLatencyViewModel:(id)arg1;
- (void)setLocalization:(id)arg1;
- (void)setPopoverViewController:(id)arg1;
- (void)setRevealRecognizedSpeech:(bool)arg1;
- (void)setScrollView:(id)arg1;
- (void)setServerUtterances:(id)arg1;
- (void)setShowCollapsedUI:(bool)arg1;
- (void)setShowingCollapsedUI:(bool)arg1;
- (void)setSmartDialogCard:(id)arg1;
- (void)setSmartDialogPlugin:(id)arg1;
- (void)setSnippetBackgroundView:(id)arg1;
- (void)setSnippetContainerView:(id)arg1;
- (void)setSpeechRecognitionHypothesis:(id)arg1;
- (void)setSpeechRecognitionHypothesisForSuggestion:(id)arg1;
- (void)setStackConstraints:(id)arg1;
- (void)setStackContainerDelegate:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setUseLowerPriorityHeightConstraint:(bool)arg1;
- (void)setUserUtterance:(id)arg1;
- (void)setUserUtteranceViewModel:(id)arg1;
- (bool)showingCollapsedUI;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)smartDialogSizeDidChangeWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)snippetBackgroundView;
- (id)snippetContainerView;
- (void)snippetContentDidUpdate;
- (void)snippetContentDidUpdateForHint;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })snippetContentInsets;
- (id)speechRecognitionHypothesis;
- (id)stackConstraints;
- (id)stackContainerDelegate;
- (long long)state;
- (bool)transitionToExpandablePlatterStyle:(long long)arg1;
- (void)transitionToResult;
- (void)triggerSmartDialogAnimationWithDelay:(double)arg1;
- (void)updateContentSizeWithAnimation:(bool)arg1;
- (void)updateUserUtteranceVisibilityIfNeeded;
- (bool)useLowerPriorityHeightConstraint;
- (void)userDidReportConcern;
- (id)userUtterance;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })userUtteranceContentInsets;
- (void)userUtteranceView:(id)arg1 speechRecognitionHypothesisDidAppear:(id)arg2;
- (void)userUtteranceView:(id)arg1 speechRecognitionHypothesisDidDisappear:(id)arg2;
- (void)userUtteranceViewContentHeightDidUpdate:(id)arg1;
- (id)userUtteranceViewModel;
- (void)userUtteranceViewTapped:(id)arg1;
- (bool)willAutomaticallyCollapseWhenResultIsScrolled;

@end
