/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriUICore.framework/SiriUICore
 */

@interface SUICEdgeLightMaskMetalLayer : CAMetalLayer <CAAnimationDelegate> {
    bool  _animating;
    SUICEdgeLightMaskMetalLayer * _baseLayer;
    unsigned long long  _burstAnimationType;
    bool  _burstModeHasBeenSet;
    NSDate * _burstStartDate;
    void _buttonCenter;
    <MTLCommandQueue> * _commandQueue;
    float  _customFlameScale;
    <MTLDevice> * _device;
    CAFilter * _dismissalBlurFilter;
    CADisplayLink * _displayLink;
    bool  _firstFrame;
    unsigned long long  _firstFrameSignpost;
    float  _fluidDismissalProgress;
    struct { 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*burstCenter; 
    }  _fragUniforms;
    long long  _framesPerSecondBeforePerformanceOptimization;
    bool  _iPadReduceMotionBoost;
    long long  _idiom;
    bool  _isInFluidDismissal;
    struct { 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*resolution; 
    }  _layout;
    int  _maxPhysicsIterationsBeforePerformanceOptimization;
    float  _minPowerLevel;
    double  _nativeScreenWidth;
    <MTLTexture> * _noiseTexture;
    id /* block */  _offCompletion;
    id /* block */  _onCompletion;
    bool  _paused;
    struct { 
        struct { 
            unsigned long long physicsRate; 
            int maxPhysicsIterationsPerFrame; 
            float physicsTickDelta; 
            float framerateEnergyModifier; 
            float micPowerLevel; 
            float chipRandomOffset[33]; 
            float chipRotation; 
            bool drawingVeryLastFrame; 
            bool reduceMotion; 
        } common; 
        struct { 
            float value; 
            float curVelocity; 
            float maxAcceleration; 
            float springAmount; 
        } flameSpring; 
        struct { 
            float value; 
            float curVelocity; 
            float maxAcceleration; 
            float springAmount; 
        } onSpring; 
        struct { 
            float value; 
            float curVelocity; 
            float maxAcceleration; 
            float springAmount; 
        } volumeSpring; 
        struct { 
            float value; 
            float curVelocity; 
            float maxAcceleration; 
            float springAmount; 
        } glowSpring; 
        unsigned long long zoning; 
        bool isBuddy; 
        struct { 
            float value; 
            float curVelocity; 
            float maxAcceleration; 
            float springAmount; 
        } energySpring; 
        struct { 
            float value; 
            float curVelocity; 
            float maxAcceleration; 
            float springAmount; 
        } lightnessSpring; 
        float flameDrawnSize; 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*lights[11]; 
    }  _physics;
    MTLRenderPassDescriptor * _renderPassDesc;
    <MTLRenderPipelineState> * _renderPipeline;
    <MTLRenderPipelineState> * _roundRenderPipeline;
    UIScreen * _screen;
    double  _screenScale;
    bool  _shouldBurst;
    bool  _useRoundPipeline;
    struct { 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*noiseScale; 
    }  _vertUniforms;
    float  _volumeLinearPowerLevel;
    SUICWEdgeLight * _wedgeLight;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isPaused, nonatomic) bool paused;
@property (readonly) Class superclass;

+ (bool)currentIdiomDefaultsToFullBorder;
+ (void)prewarm;

- (void).cxx_destruct;
- (void)_calculateCornerRadiusRatio:(bool)arg1;
- (void)_commonInitWithScreen:(id)arg1 commandQueue:(id)arg2;
- (id)_createRenderPipelineFromLibrary:(id)arg1 archive:(id)arg2 vert:(id)arg3 frag:(id)arg4;
- (void)_drawFrame:(id)arg1;
- (id)_getCommandQueue;
- (id)_getNoiseTexture;
- (id)_getScreen;
- (void)_invalidate;
- (void)_loadMetalPipelines;
- (void)_loadMetalState;
- (void)_startOffAnimation;
- (void)_updateForUIIdiom;
- (void)_updateMetalRatios:(struct CGSize { double x1; double x2; })arg1;
- (void)_updateiPadLayout;
- (void)animateOffWithCompletion:(id /* block */)arg1;
- (void)animateOn;
- (void)animateOnWithCompletion:(id /* block */)arg1;
- (void)animationDidStop:(id)arg1 finished:(bool)arg2;
- (void)dismissalBlur:(float)arg1;
- (void)endReducedFramerateForPerformance;
- (id)init;
- (id)initWithBaseEdgeLightLayer:(id)arg1;
- (id)initWithCommandQueue:(id)arg1;
- (id)initWithFullBorder:(bool)arg1;
- (id)initWithScreen:(id)arg1 commandQueue:(id)arg2;
- (bool)isPaused;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setBurstOpacity:(float)arg1;
- (void)setBurstStartPosition:(unsigned long long)arg1;
- (void)setBurstStartPositionCustom:(struct CGPoint { double x1; double x2; })arg1;
- (void)setFlamePosX:(float)arg1 posY:(float)arg2 radius:(float)arg3;
- (void)setFlameScale:(float)arg1;
- (void)setInputAveragePowerLevel:(float)arg1 withPeakPowerLevel:(float)arg2;
- (void)setMinimumPowerLevel:(float)arg1;
- (void)setPaused:(bool)arg1;
- (void)setScreen:(id)arg1;
- (void)setUserInterfaceIdiom:(long long)arg1;
- (void)startReducedFramerateForPerformance;
- (void)stopVolumeInput;
- (void)updateVolumeInputdB:(float)arg1;

@end
