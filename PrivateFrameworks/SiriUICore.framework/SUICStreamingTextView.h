/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriUICore.framework/SiriUICore
 */

@interface SUICStreamingTextView : UIView <SUICStreamingTextViewEmptyProtocol> {
    bool  _animated;
    bool  _animatedInternal;
    double  _animationDuration;
    bool  _centerAlign;
    UIImage * _editTextImage;
    NSString * _editTextSymbol;
    UIColor * _endTextColor;
    UIFont * _font;
    double  _hyphenationFactor;
    NSLayoutManager * _layoutManager;
    bool  _renderEmojis;
    bool  _renderEmojisOnly;
    bool  _showChevron;
    bool  _showEditTextImage;
    UIColor * _startTextColor;
    <SUICStreamingTextViewDelegate> * _streamingTextViewDelegate;
    UIColor * _textColor;
    NSTextContainer * _textContainer;
    NSTextStorage * _textStorage;
    NSMutableArray * _words;
    NSMutableSet * _wordsToDelete;
    NSMutableArray * _wordsToShow;
}

@property (nonatomic) bool animated;
@property (nonatomic) double animationDuration;
@property (nonatomic) bool centerAlign;
@property (nonatomic, retain) NSString *editTextSymbol;
@property (nonatomic, retain) UIColor *endTextColor;
@property (nonatomic, retain) UIFont *font;
@property (nonatomic) double hyphenationFactor;
@property (nonatomic) bool renderEmojis;
@property (nonatomic) bool renderEmojisOnly;
@property (nonatomic) bool showChevron;
@property (nonatomic) bool showEditTextImage;
@property (nonatomic, retain) UIColor *startTextColor;
@property (nonatomic) <SUICStreamingTextViewDelegate> *streamingTextViewDelegate;
@property (nonatomic, readonly) NSString *text;
@property (nonatomic, retain) UIColor *textColor;
@property (nonatomic, copy) NSArray *words;

- (void).cxx_destruct;
- (void)_animateLayers;
- (void)_animateWordIn:(id)arg1;
- (void)_animateWordOut:(id)arg1;
- (id)_createEditTextImage;
- (id)_createGlyphImage:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 glyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 layoutManager:(id)arg3;
- (id)_glyphImageForWord:(id)arg1 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 glyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 textColor:(id)arg4;
- (struct CGImage { }*)_imageRefForImage:(id)arg1;
- (void)_layoutFrames;
- (void)_resetState;
- (void)_sharedInit;
- (id)_substringRangesContainingEmojiInString:(id)arg1 startingIndex:(long long)arg2;
- (void)_updateAnimatedInternal;
- (void)_updateText:(id)arg1;
- (bool)animated;
- (double)animationDuration;
- (bool)centerAlign;
- (id)editTextSymbol;
- (id)endTextColor;
- (id)font;
- (double)hyphenationFactor;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (bool)renderEmojis;
- (bool)renderEmojisOnly;
- (void)setAnimated:(bool)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCenterAlign:(bool)arg1;
- (void)setEditTextSymbol:(id)arg1;
- (void)setEndTextColor:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHyphenationFactor:(double)arg1;
- (void)setRenderEmojis:(bool)arg1;
- (void)setRenderEmojisOnly:(bool)arg1;
- (void)setShowChevron:(bool)arg1;
- (void)setShowEditTextImage:(bool)arg1;
- (void)setStartTextColor:(id)arg1;
- (void)setStreamingTextViewDelegate:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)setWords:(id)arg1;
- (bool)showChevron;
- (bool)showEditTextImage;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)startTextColor;
- (id)streamingTextViewDelegate;
- (id)text;
- (id)textColor;
- (id)words;

@end
