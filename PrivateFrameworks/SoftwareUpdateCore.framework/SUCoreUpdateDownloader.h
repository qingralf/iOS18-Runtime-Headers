/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateCore.framework/SoftwareUpdateCore
 */

@interface SUCoreUpdateDownloader : NSObject <SUCoreFSMDelegate, SUCoreMobileAssetDelegate> {
    <SUCoreUpdateDownloaderDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateCallBackQueue;
    SUCoreFSM * _downloadFSM;
    SUCoreMobileAsset * _maControl;
    SUCoreMobileAsset * _maControlSplombo;
    int  _numPendingOperations;
    SUCorePolicy * _policy;
    bool  _shouldDownloadSplat;
    bool  _shouldReportDownloadFailureIfCanceled;
    NSDictionary * _stateTable;
    unsigned long long  _totalToWriteBytesForPhase;
    unsigned long long  _totalWrittenBytesUpToLastPhase;
    SUCoreProgress * _unifiedProgress;
    SUCoreDescriptor * _updateDescriptor;
    NSString * _updateUUID;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic, readonly) <SUCoreUpdateDownloaderDelegate> *delegate;
@property (nonatomic, readonly, retain) NSObject<OS_dispatch_queue> *delegateCallBackQueue;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, retain) SUCoreFSM *downloadFSM;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, retain) SUCoreMobileAsset *maControl;
@property (nonatomic, readonly, retain) SUCoreMobileAsset *maControlSplombo;
@property (nonatomic) int numPendingOperations;
@property (nonatomic, retain) SUCorePolicy *policy;
@property (nonatomic, readonly) bool shouldDownloadSplat;
@property (nonatomic) bool shouldReportDownloadFailureIfCanceled;
@property (nonatomic, readonly, retain) NSDictionary *stateTable;
@property (readonly) Class superclass;
@property (nonatomic) unsigned long long totalToWriteBytesForPhase;
@property (nonatomic) unsigned long long totalWrittenBytesUpToLastPhase;
@property (nonatomic, retain) SUCoreProgress *unifiedProgress;
@property (nonatomic, readonly, retain) SUCoreDescriptor *updateDescriptor;
@property (nonatomic, readonly, retain) NSString *updateUUID;

+ (id)_generateStateTable;

- (void).cxx_destruct;
- (id)_createEvent:(id)arg1;
- (bool)_isPreSUStagingEnabled;
- (void)_reportPSUSFinishedEvent:(id)arg1;
- (void)_reportPSUSStartedEvent;
- (void)_reportUpdateFailedToDownload:(id)arg1;
- (bool)_shouldStageOptionalPSUSAssets;
- (void)_skipCurrentOperationFor:(id)arg1;
- (void)_trackAnomaly:(id)arg1 reason:(id)arg2 result:(long long)arg3 error:(id)arg4;
- (void)_trackBegin:(id)arg1 withIdentifier:(id)arg2;
- (void)_trackEnd:(id)arg1 withIdentifier:(id)arg2 withResult:(long long)arg3 withError:(id)arg4;
- (void)_verifyNoPendingOperations:(id)arg1 reason:(id)arg2;
- (id)_versionedModuleName;
- (long long)actionCheckRemoveCompleted:(id)arg1 error:(id*)arg2;
- (long long)actionDownloadPSUSAssets:(id)arg1 error:(id*)arg2;
- (long long)actionDownloadSU:(id)arg1 error:(id*)arg2;
- (long long)actionDownloadSplat:(id)arg1 error:(id*)arg2;
- (long long)actionRemoveUpdate:(id)arg1 error:(id*)arg2;
- (long long)actionReportDownloadProgress:(id)arg1 error:(id*)arg2;
- (long long)actionReportDownloadStalled:(id)arg1 error:(id*)arg2;
- (long long)actionReportUpdateDownloaded:(id)arg1 error:(id*)arg2;
- (long long)actionReportUpdateFailedToDownload:(id)arg1 error:(id*)arg2;
- (long long)actionReportUpdateFailedToRemove:(id)arg1 error:(id*)arg2;
- (long long)actionReportUpdateRemoved:(id)arg1 error:(id*)arg2;
- (long long)actionUnknownAction:(id)arg1 error:(id*)arg2;
- (void)alterPolicy:(id)arg1;
- (id)delegate;
- (id)delegateCallBackQueue;
- (id)description;
- (id)downloadFSM;
- (void)downloadUpdateWithPolicy:(id)arg1;
- (id)initWithDelegate:(id)arg1 forUpdate:(id)arg2 updateUUID:(id)arg3;
- (void)maAnomaly:(id)arg1;
- (id)maControl;
- (id)maControlSplombo;
- (void)maDownloadProgress:(id)arg1;
- (void)maDownloadStalled:(id)arg1;
- (int)numPendingOperations;
- (long long)performAction:(id)arg1 onEvent:(id)arg2 inState:(id)arg3 withInfo:(id)arg4 nextState:(id)arg5 error:(id*)arg6;
- (id)policy;
- (void)removeUpdate;
- (void)setNumPendingOperations:(int)arg1;
- (void)setPolicy:(id)arg1;
- (void)setShouldReportDownloadFailureIfCanceled:(bool)arg1;
- (void)setTotalToWriteBytesForPhase:(unsigned long long)arg1;
- (void)setTotalWrittenBytesUpToLastPhase:(unsigned long long)arg1;
- (void)setUnifiedProgress:(id)arg1;
- (bool)shouldDownloadSplat;
- (bool)shouldReportDownloadFailureIfCanceled;
- (id)stateTable;
- (unsigned long long)totalToWriteBytesForPhase;
- (unsigned long long)totalWrittenBytesUpToLastPhase;
- (id)unifiedProgress;
- (id)updateDescriptor;
- (id)updateUUID;

@end
