/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices
 */

@interface SUDDMManager : NSObject <SUCoreDDMActivitySchedulerDelegate, SUManagerObserver> {
    SUCoreDDMDeclaration * _activeDeclarationEnforcedSU;
    SUCorePolicyDDMConfiguration * _ddmConfiguration;
    SUDescriptor * _descriptor;
    SUCoreDDMActivityScheduler * _downloadScheduler;
    SUCoreDDMActivityScheduler * _evaluationScheduler;
    SUCoreDDMDeclarationGlobalSettings * _globalSettings;
    NSObject<OS_dispatch_queue> * _gsWorkQueue;
    <SUManagerInterface> * _manager;
    <SUManagerDelegate> * _managerServerDelegate;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (long long)_NSNumberToTriState:(id)arg1;
+ (id)statePath;

- (void).cxx_destruct;
- (void)_cancelCurrentDownloadAndDownload:(id)arg1;
- (void)_cancelScheduledDownloadRetryForReason:(id)arg1;
- (void)_downloadRequestCompletedWithStatus:(bool)arg1 error:(id)arg2 withDescriptor:(id)arg3;
- (bool)_evaluateAllDeclarations;
- (void)_evaluateDeclarationsWithNewDeclaration:(id)arg1;
- (void)_handleExistingDownload:(id)arg1 targetUpdate:(id)arg2;
- (void)_handleScanResults:(id)arg1;
- (void)_initiateDownloadWithDescriptor:(id)arg1;
- (bool)_nonFatalScanError:(id)arg1;
- (void)_notifyUI:(id)arg1;
- (void)_purgeDownloadWithHandler:(id /* block */)arg1;
- (id)_scanForUpdateForDeclaration:(id)arg1 retryIfNecessary:(int)arg2;
- (void)_scheduleDownloadRetryForReason:(id)arg1;
- (void)_setActiveDeclaration:(id)arg1;
- (id)activeDDMDeclarationEnfrocedSU;
- (id)allDeclarations;
- (long long)alwaysEnableAutoDownload;
- (long long)alwaysEnableAutoInstallOSUpdates;
- (long long)alwaysEnableAutoInstallRapidSecurityResponse;
- (bool)cancelDDMDeclarationForKey:(id)arg1 outError:(id*)arg2;
- (void)downloadDidFail:(id)arg1 withError:(id)arg2;
- (void)downloadDidFinish:(id)arg1 withInstallPolicy:(id)arg2;
- (void)downloadDidStart:(id)arg1;
- (void)downloadWasInvalidated:(id)arg1;
- (bool)enableGlobalNotifications;
- (bool)enableRapidSecurityResponse;
- (bool)enableRapidSecurityResponseRollback;
- (void)getActiveDDMDeclarationEnforcedSUWithResponse:(id /* block */)arg1;
- (id)getDDMGlobalSettingsWithError:(id*)arg1;
- (void)getDescriptorWithCallback:(id /* block */)arg1;
- (bool)handleDDMDeclaration:(id)arg1 outError:(id*)arg2;
- (id)initWithDelegate:(id)arg1;
- (void)installDidFinish:(id)arg1;
- (bool)isDealyingUpdates;
- (bool)isManagedByDDM;
- (id)manager;
- (unsigned long long)recommendedCadence;
- (void)resumeOrResetStateIfNecessary;
- (void)scanRequestDidFinishForOptions:(id)arg1 results:(id)arg2 error:(id)arg3;
- (bool)setDDMGlobalSettings:(id)arg1 outError:(id*)arg2;
- (void)timeFiredForScheduler:(id)arg1 withOptions:(id)arg2 replyBlock:(id /* block */)arg3;
- (unsigned long long)updateDeferralPeriodDays;

@end
