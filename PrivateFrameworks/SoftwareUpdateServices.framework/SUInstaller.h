/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices
 */

@interface SUInstaller : NSObject {
    SUManagerCore * _core;
    SUInstallOptions * _currentInstallOptions;
    <SUInvalidatable> * _installDeviceLockAssertion;
    SUInstallPolicy * _installPolicy;
    bool  _installRetrying;
    bool  _installed;
    bool  _installing;
    bool  _isInstallTonight;
    bool  _isInstallTonightScheduled;
    SUAutoUpdatePasscodePolicy * _passcodePolicy;
}

@property (nonatomic) SUManagerCore *core;
@property (nonatomic, retain) <SUInvalidatable> *installDeviceLockAssertion;
@property (nonatomic, retain) SUInstallPolicy *installPolicy;
@property (getter=isInstallRetrying, nonatomic) bool installRetrying;
@property (getter=isInstalled, nonatomic) bool installed;
@property (getter=isInstalling, nonatomic) bool installing;
@property (nonatomic) bool isInstallTonight;
@property (nonatomic) bool isInstallTonightScheduled;
@property (nonatomic, retain) SUAutoUpdatePasscodePolicy *passcodePolicy;

+ (id)purgeOptionsForDownloadOptions:(id)arg1 spaceNeeded:(unsigned long long)arg2 completionQueue:(id)arg3;

- (void).cxx_destruct;
- (bool)_isUpdateReadyForInstallationWithOptions:(id)arg1 error:(id*)arg2 shouldRetry:(bool*)arg3;
- (void)_isUpdateReadyForInstallationWithOptions:(id)arg1 forceCleanup:(bool)arg2 withReplyHandler:(id /* block */)arg3;
- (void)autoSUFailedWithError:(id)arg1;
- (id)core;
- (void)ensureSSOTokenIfNeededForInstall:(id)arg1;
- (unsigned long long)getInstallationConstraintsForDownload:(id)arg1 allowDiskCleanupIfNeeded:(bool)arg2 forceDiskCleanupIfNeeded:(bool)arg3 options:(id)arg4;
- (void)getInstallationConstraintsForDownload:(id)arg1 allowDiskCleanupIfNeeded:(bool)arg2 forceDiskCleanupIfNeeded:(bool)arg3 options:(id)arg4 completionQueue:(id)arg5 completion:(id /* block */)arg6;
- (id)initWithCore:(id)arg1;
- (void)installCompleted:(id)arg1;
- (id)installDeviceLockAssertion;
- (id)installPolicy;
- (void)installUpdateWithInstallOptions:(id)arg1 withResult:(id /* block */)arg2;
- (bool)isInstallRetrying;
- (bool)isInstallTonight;
- (bool)isInstallTonightScheduled;
- (bool)isInstalled;
- (bool)isInstallerReadyForInstallationWithOptions:(id)arg1 error:(id*)arg2 ShouldRetry:(bool*)arg3;
- (bool)isInstalling;
- (bool)isUpdateReadyForInstallation:(id*)arg1;
- (void)isUpdateReadyForInstallationWithOptions:(id)arg1 replyHandler:(id /* block */)arg2;
- (void)managedInstallRequested;
- (id)passcodePolicy;
- (void)setCore:(id)arg1;
- (void)setInstallDeviceLockAssertion:(id)arg1;
- (void)setInstallPolicy:(id)arg1;
- (void)setInstallRetrying:(bool)arg1;
- (void)setInstalled:(bool)arg1;
- (void)setInstalling:(bool)arg1;
- (void)setIsInstallTonight:(bool)arg1;
- (void)setIsInstallTonightScheduled:(bool)arg1;
- (void)setPasscodePolicy:(id)arg1;
- (void)updateInstallPolicyAutoUpdateEnabled:(bool)arg1;
- (void)updateInstallPolicyClientName:(id)arg1;
- (void)updateInstallPolicyDarkBootEnabled:(bool)arg1;
- (void)updateInstallPolicyType:(unsigned long long)arg1;
- (bool)verifyConstraintsMetForInstallationWithOptions:(id)arg1 error:(id*)arg2;

@end
