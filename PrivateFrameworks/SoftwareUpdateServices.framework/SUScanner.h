/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices
 */

@interface SUScanner : NSObject {
    SUScanTask * _activeScanTask;
    SUCoreDescriptor * _alternateLastScannedCoreDescriptor;
    SUManagerCore * _core;
    SUUpdateDiscoveryDateManager * _discoveryDateManager;
    SUUpdateDiscoveryDateManager * _fullyUnrampedDateManager;
    SUScanOptions * _lastScannedDescriptorScanOptions;
    SUCoreDescriptor * _preferredLastScannedCoreDescriptor;
    NSTimer * _recommendedUpdateTimer;
    NSMutableArray * _scanRequests;
    bool  _scanning;
}

@property (nonatomic, retain) SUScanTask *activeScanTask;
@property (nonatomic, retain) SUCoreDescriptor *alternateLastScannedCoreDescriptor;
@property (nonatomic) SUManagerCore *core;
@property (nonatomic, retain) SUScanOptions *lastScannedDescriptorScanOptions;
@property (nonatomic, retain) SUCoreDescriptor *preferredLastScannedCoreDescriptor;
@property (nonatomic, retain) NSMutableArray *scanRequests;
@property (getter=isScanning, nonatomic) bool scanning;

+ (int)typeForCoreDescriptor:(id)arg1;

- (void).cxx_destruct;
- (bool)_coreDescriptorFailedPatching:(id)arg1;
- (void)_doScanForUpdates;
- (id)_handleDescriptor:(id)arg1 forRequestedBuild:(id)arg2;
- (void)_handleScanError:(id)arg1;
- (void)_handleScannedPreferredDescriptor:(id)arg1 alternateDescriptor:(id)arg2 scanOptions:(id)arg3 error:(id)arg4;
- (void)_queue_refreshLastScannedCoreDescriptors;
- (id)activeScanTask;
- (id)alternateLastScannedCoreDescriptor;
- (void)autoScanAndDownloadIfAvailable:(int)arg1 downloadNow:(bool)arg2 withResult:(id /* block */)arg3;
- (void)autoScanAndDownloadIfAvailable:(int)arg1 withResult:(id /* block */)arg2;
- (void)cancelTimerForRecommendedUpdateNotification;
- (id)core;
- (id)defaultValuesForCoreDescriptor:(id)arg1;
- (id)descriptorToAutoDownload;
- (id)descriptorToAutoDownload:(id)arg1;
- (id)discoveryDateforBuildVersion:(id)arg1;
- (id)fullyUnrampedDateForBuildVersion:(id)arg1;
- (void)handleActiveScanTaskDocumentationFor:(id)arg1 withOptions:(id)arg2 withSelectedDescriptorCompletion:(id /* block */)arg3;
- (void)handleActiveScanTaskScanCompletionWithPreferredPrimaryDescriptor:(id)arg1 preferredSecondaryDescriptor:(id)arg2 alternatePrimaryDescriptor:(id)arg3 alternateSecondaryDescriptor:(id)arg4 scanOptions:(id)arg5 error:(id)arg6;
- (id)initWithCore:(id)arg1;
- (bool)isBuddyRunning;
- (bool)isScanning;
- (id)lastScannedDescriptorScanOptions;
- (bool)lastScannedMatchScanOptions:(id)arg1;
- (void)notifyClientForRecommendedUpdate:(id)arg1 shouldPresent:(bool)arg2;
- (void)notifyScanDidComplete:(id)arg1 options:(id)arg2 error:(id)arg3;
- (void)notifyScanRequestDidFinish:(id)arg1 results:(id)arg2 error:(id)arg3;
- (void)notifyScanRequestDidStart:(id)arg1;
- (id)preferredLastScannedCoreDescriptor;
- (id)recommendedDescriptor:(id)arg1;
- (void)removeFullyUnrampedDateForBuildVersion:(id)arg1;
- (void)scanCompleted:(id)arg1 alternateDescriptor:(id)arg2 scanOptions:(id)arg3 error:(id)arg4;
- (void)scanForUpdates:(id)arg1 complete:(id /* block */)arg2;
- (void)scanForUpdates:(id)arg1 shouldUseDDMInState:(bool)arg2 complete:(id /* block */)arg3;
- (id)scanRequests;
- (bool)scanResultIsUpToDateWithAlternate:(id)arg1;
- (bool)scanResultsChangedSinceLastScan:(id)arg1 preferredUpdateNewlyDiscovered:(bool*)arg2 alternateUpdateNewlyDiscovered:(bool*)arg3 preferredUpdateChanged:(bool*)arg4 alternateUpdateChanged:(bool*)arg5 preferredWasAlternate:(bool*)arg6 alternateWasPreferred:(bool*)arg7;
- (id)scanResultsForSUCoreScanResults:(id)arg1;
- (void)scheduleRecommendedUpdateFromResults:(id)arg1;
- (void)scheduleRecommendedUpdateNotification:(id)arg1;
- (void)setActiveScanTask:(id)arg1;
- (void)setAlternateLastScannedCoreDescriptor:(id)arg1;
- (void)setCore:(id)arg1;
- (void)setDiscoveryDate:(id)arg1 forBuildVersion:(id)arg2;
- (void)setFullyUnrampedDate:(id)arg1 forBuildVersion:(id)arg2;
- (void)setLastScannedDescriptorScanOptions:(id)arg1;
- (void)setPreferredLastScannedCoreDescriptor:(id)arg1;
- (void)setScanRequests:(id)arg1;
- (void)setScanning:(bool)arg1;
- (void)setupTimerForRecommendedUpdateNotification:(id)arg1;
- (bool)shouldPresentUpdate:(id)arg1 options:(id)arg2;
- (id)stringForScanPriority:(long long)arg1;
- (void)unscheduleRecommendedUpdateNotification;

@end
