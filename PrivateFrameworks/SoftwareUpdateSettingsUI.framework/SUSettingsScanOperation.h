/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateSettingsUI.framework/SoftwareUpdateSettingsUI
 */

@interface SUSettingsScanOperation : NSObject <SUCoreFSMDelegate> {
    id /* block */  _cancelHandler;
    bool  _canceled;
    NSObject<OS_dispatch_queue> * _clientCompletionQueue;
    NSObject<OS_dispatch_queue> * _concurrentQueue;
    id /* block */  _fullScanCompletionHandler;
    SUCoreLog * _log;
    unsigned long long  _operationType;
    id /* block */  _refreshScanCompletionHandler;
    SUCoreFSM * _scanFSM;
    NSObject<OS_dispatch_group> * _scanGroup;
    NSString * _scanUUID;
    SDBetaManager * _seedingBetaManager;
    NSDictionary * _stateTable;
    SUManagerClient * _suClient;
}

@property (nonatomic, copy) id /* block */ cancelHandler;
@property (getter=isCanceled) bool canceled;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *clientCompletionQueue;
@property (retain) NSObject<OS_dispatch_queue> *concurrentQueue;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ fullScanCompletionHandler;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, retain) SUCoreLog *log;
@property unsigned long long operationType;
@property (nonatomic, copy) id /* block */ refreshScanCompletionHandler;
@property (nonatomic, readonly) SUCoreFSM *scanFSM;
@property (retain) NSObject<OS_dispatch_group> *scanGroup;
@property (nonatomic, readonly) NSString *scanUUID;
@property (nonatomic, readonly) SDBetaManager *seedingBetaManager;
@property (nonatomic, readonly, retain) NSDictionary *stateTable;
@property (nonatomic, readonly) SUManagerClient *suClient;
@property (readonly) Class superclass;

+ (id)_generateStateTable;
+ (unsigned long long)installationIgnorableConstraints;

- (void).cxx_destruct;
- (long long)actionUnknownAction:(id)arg1 error:(id*)arg2;
- (long long)action_CheckForAvailableUpdate:(id)arg1 error:(id*)arg2;
- (long long)action_ObserveConcurrentQueries:(id)arg1 error:(id*)arg2;
- (long long)action_QueryCurrentDownload:(id)arg1 error:(id*)arg2;
- (long long)action_QueryFullScanMetadata:(id)arg1 error:(id*)arg2;
- (long long)action_QueryUpdatesInfo:(id)arg1 error:(id*)arg2;
- (long long)action_ReportScanCanceled:(id)arg1 error:(id*)arg2;
- (long long)action_ReportScanOutcome:(id)arg1 error:(id*)arg2;
- (id)baseDomain;
- (void)cancel:(id /* block */)arg1;
- (id /* block */)cancelHandler;
- (void)checkForAvailableUpdatesWithCompletionHandler:(id /* block */)arg1;
- (void)checkForAvailableUpdatesWithOptions:(id)arg1 usingCompletionHandler:(id /* block */)arg2;
- (void)checkForAvailableUpdatesWithOptions:(id)arg1 usingCompletionHandler:(id /* block */)arg2 usingThirdPartyScanResults:(id)arg3 andScanError:(id)arg4;
- (void)checkForBetaPrograms:(id)arg1 withReplyHandler:(id /* block */)arg2;
- (void)checkForMDMRestrictions:(id)arg1 withReplyHandler:(id /* block */)arg2;
- (void)checkIfAutoUpdateScheduled:(id)arg1 withReplyHandler:(id /* block */)arg2;
- (void)checkIsEligibleForRollback:(id)arg1 withReplyHandler:(id /* block */)arg2;
- (id)clientCompletionQueue;
- (id)concurrentQueue;
- (id /* block */)fullScanCompletionHandler;
- (id)initWithUUID:(id)arg1 usingSUManagerClient:(id)arg2 andBetaManager:(id)arg3 withCompletionQueue:(id)arg4;
- (void)invalidateMachine;
- (bool)isActive;
- (bool)isCanceled;
- (id)log;
- (unsigned long long)operationType;
- (long long)performAction:(id)arg1 onEvent:(id)arg2 inState:(id)arg3 withInfo:(id)arg4 nextState:(id)arg5 error:(id*)arg6;
- (void)queryDDMDeclaration:(id)arg1 withReplyHandler:(id /* block */)arg2;
- (void)queryRollbackStatus:(id)arg1 withReplyHandler:(id /* block */)arg2;
- (void)refreshBetaProgramsWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (id /* block */)refreshScanCompletionHandler;
- (void)refreshScanResultsWithPreferredUpdate:(id)arg1 alternateUpdate:(id)arg2 options:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)refreshScanResultsWithPreferredUpdate:(id)arg1 alternateUpdate:(id)arg2 options:(id)arg3 previouslyDiscoveredDownload:(id)arg4 encounteredError:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)refreshScanResultsWithPreferredUpdate:(id)arg1 alternateUpdate:(id)arg2 options:(id)arg3 previouslyDiscoveredDownload:(id)arg4 previouslyDiscoveredAutoInstallOperation:(id)arg5 encounteredError:(id)arg6 completionHandler:(id /* block */)arg7;
- (id)scanFSM;
- (void)scanForDeviceEligibleBetaPrograms:(id)arg1 withReplyHandler:(id /* block */)arg2;
- (id)scanGroup;
- (id)scanUUID;
- (void)scheduleConcurrentActionWithSelector:(SEL)arg1 eventInfo:(id)arg2;
- (id)seedingBetaManager;
- (void)setCancelHandler:(id /* block */)arg1;
- (void)setCanceled:(bool)arg1;
- (void)setConcurrentQueue:(id)arg1;
- (void)setFullScanCompletionHandler:(id /* block */)arg1;
- (void)setOperationType:(unsigned long long)arg1;
- (void)setRefreshScanCompletionHandler:(id /* block */)arg1;
- (void)setScanGroup:(id)arg1;
- (bool)shouldConsiderErrorAsSuccessfulCase:(id)arg1;
- (void)startRefreshOperation:(id)arg1 withEventInfo:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)stateTable;
- (id)suClient;

@end
