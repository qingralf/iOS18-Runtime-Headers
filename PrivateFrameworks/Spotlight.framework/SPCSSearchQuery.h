/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Spotlight.framework/Spotlight
 */

@interface SPCSSearchQuery : SPKQuery {
    struct BundleIdToResultMap { 
        struct unordered_map<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>>> { 
            struct __hash_table<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>>> { 
                struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, void *> *> *>>> { 
                    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, void *> *> *>>> { 
                        void **__value_; 
                        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, void *> *> *>> { 
                            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, void *> *> *>> { 
                                unsigned long long __value_; 
                            } __data_; 
                        } __value_; 
                    } __ptr_; 
                } __bucket_list_; 
                struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, void *>>> { 
                    struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, void *> *> { 
                        void *__next_; 
                    } __value_; 
                } __p1_; 
                struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, std::hash<std::string>, std::equal_to<std::string>>> { 
                    unsigned long long __value_; 
                } __p2_; 
                struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::pair<SFMutableResultSection *, NSMutableOrderedSet<SPSearchTopHitResult *> *>>, std::equal_to<std::string>, std::hash<std::string>>> { 
                    float __value_; 
                } __p3_; 
            } __table_; 
        } map; 
        SFMutableResultSection *syndicatedLinkSection; 
        SFMutableResultSection *syndicatedPhotosInAppsSection; 
        SFMutableResultSection *syndicatedPhotosInMessagesSection; 
        SFMutableResultSection *syndicatedPhotosInNotesSection; 
        SFMutableResultSection *syndicatedPhotosInFilesSection; 
        SFMutableResultSection *syndicatedGeneralPhotosSection; 
        SFMutableResultSection *contactResultsSection; 
        SFMutableResultSection *peopleResultsSection; 
        SFMutableResultSection *photosSection; 
    }  _bundleIdToResultsMap;
    NSMutableDictionary * _completionSuggestions;
    long long  _contentFilters;
    CSSearchQuery * _csQuery;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _csQueryLock;
    double  _currentTime;
    NSSet * _disabledAppSet;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    SFStartLocalSearchFeedback * _feedback;
    NSObject<OS_dispatch_queue> * _feedbackQueue;
    NSMutableDictionary * _foundBundleIDs;
    unsigned int  _gotSuggestions;
    unsigned int  _isCJK;
    bool  _isPeopleSearch;
    bool  _isPhotosSearch;
    PRSRankingItemRanker * _itemRanker;
    long long  _maxCount;
    bool  _parsecAvailable;
    unsigned int  _pommes;
    unsigned long long  _previousQueryKind;
    struct atomic<bool> { 
        struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { 
            _Atomic bool __a_value; 
        } __a_; 
    }  _queryCanceled;
    NSObject<OS_dispatch_queue> * _rankQueue;
    PRSRankingConfiguration * _rankingInfo;
    NSDictionary * _renderEngagementCounts;
    NSIndexSet * _resultAttrIndexSet;
    NSArray * _resultAttrs;
    struct vector<std::vector<(anonymous namespace)::SPResultValueItem>, std::allocator<std::vector<(anonymous namespace)::SPResultValueItem>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<(anonymous namespace)::SPResultValueItem> *, std::allocator<std::vector<(anonymous namespace)::SPResultValueItem>>>="__value_"^v {}  _resultHeaps;
    struct vector<tt_hash_table<(anonymous namespace)::SPResultValueItemHashTableEntry>, std::allocator<tt_hash_table<(anonymous namespace)::SPResultValueItemHashTableEntry>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<tt_hash_table<(anonymous namespace)::SPResultValueItemHashTableEntry> *, std::allocator<tt_hash_table<(anonymous namespace)::SPResultValueItemHashTableEntry>>>="__value_"^v {}  _resultRankTables;
    struct vector<tt_hash_table<(anonymous namespace)::SPResultValueItemHashTableEntry>, std::allocator<tt_hash_table<(anonymous namespace)::SPResultValueItemHashTableEntry>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<tt_hash_table<(anonymous namespace)::SPResultValueItemHashTableEntry> *, std::allocator<tt_hash_table<(anonymous namespace)::SPResultValueItemHashTableEntry>>>="__value_"^v {}  _resultRecencyTables;
    NSMutableArray * _suggestionResults;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _suggestionsLock;
    NSObject<OS_dispatch_source> * _timeoutTimer;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _timeoutTimerLock;
    /* Warning: Unrecognized filer type: 'T' using 'void*' */ void* _topHitThreshold;
}

@property (nonatomic) long long contentFilters;
@property (nonatomic) double currentTime;
@property (nonatomic) bool isCJK;
@property (nonatomic) bool isPeopleSearch;
@property (nonatomic) bool isPhotosSearch;
@property (nonatomic, retain) PRSRankingItemRanker *itemRanker;
@property (nonatomic) long long maxCount;
@property (nonatomic) bool parsecAvailable;
@property (nonatomic) unsigned long long previousQueryKind;
@property (retain) PRSRankingConfiguration *rankingInfo;

+ (id)_makeUniqueFetchAttributesWithAttributes:(id)arg1 extraAttributes:(id)arg2;
+ (void)activate;
+ (void)deactivate;
+ (void)initialize;
+ (void)preheat;
+ (unsigned int)searchDomain;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_sendResponse:(id)arg1;
- (void)addSearchResult:(const struct SPResultValueItem { /* Warning: Unrecognized filer type: 'T' using 'void*' */ void*x1; double x2; int x3; float x4; id x5; float x6; float x7; float x8; id x9; id x10; }*)arg1 withFoundBundleID:(id)arg2;
- (void)buildFullSearchResults:(id)arg1 withResultSets:(id)arg2;
- (void)buildPeopleResults:(id)arg1 withContacts:(id)arg2;
- (void)cancel;
- (void)collectSearchResults:(id)arg1 isSearchToolClient:(bool)arg2;
- (void)completed:(id)arg1;
- (void)constructResultsForResponse:(bool)arg1;
- (long long)contentFilters;
- (double)currentTime;
- (void)dealloc;
- (void)executeQuery;
- (void)foundCompletion:(id)arg1 scores:(id)arg2 bundleIDs:(id)arg3;
- (void)foundCompletions:(id)arg1;
- (void)foundItems:(id)arg1 isSearchToolClient:(bool)arg2;
- (id)initWithUserQuery:(id)arg1 queryGroupId:(unsigned long long)arg2 options:(unsigned long long)arg3 queryContext:(id)arg4;
- (bool)isCJK;
- (bool)isPeopleSearch;
- (bool)isPhotosSearch;
- (id)itemRanker;
- (long long)maxCount;
- (bool)parsecAvailable;
- (id)prepareRankingItems:(id)arg1 withResultSets:(id)arg2 totalFeatureComputationTime:(double*)arg3;
- (unsigned long long)previousQueryKind;
- (void)priorityGatherEnded;
- (void)processSection:(id)arg1;
- (void)processUserActivitiesForSection:(id)arg1;
- (void)rankAndSendResultsWithResponseKind:(int)arg1 withResultSections:(id)arg2 withResultSets:(id)arg3 withiCloudDriveSection:(id)arg4 withMailResultSet:(id)arg5;
- (id)rankingInfo;
- (void)removeDuplicatesInSection:(id)arg1;
- (void)sendResponseWithKind:(int)arg1;
- (void)setContentFilters:(long long)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setIsCJK:(bool)arg1;
- (void)setIsPeopleSearch:(bool)arg1;
- (void)setIsPhotosSearch:(bool)arg1;
- (void)setItemRanker:(id)arg1;
- (void)setMaxCount:(long long)arg1;
- (void)setParsecAvailable:(bool)arg1;
- (void)setPreviousQueryKind:(unsigned long long)arg1;
- (void)setRankingInfo:(id)arg1;
- (void)sortResultsInSection:(id)arg1;
- (void)start;
- (void)updateCoreSuggestionsSection:(id)arg1;
- (void)updateMailAttachmentResults:(id)arg1;

@end
