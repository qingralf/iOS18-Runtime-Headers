/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
 */

@interface SBFolderIconImageSharedCache : NSObject <SBFolderIconGridCellImageProvider, SBFolderIconObserver, SBFolderObserver, SBHIconImageCacheObserver, SBIconObserver> {
    NSCountedSet * _backgroundActivityReasons;
    NSHashTable * _cachedFolderIcons;
    SBHIconImageAppearanceStore * _cachedFolderImages;
    SBHIconImageAppearanceStore * _cachedMiniGridImageGenerations;
    SBHIconImageAppearanceStore * _cachedMiniGridImages;
    NSMutableSet * _cachingMiniGridImageIdentities;
    SBHIconImageAppearanceStore * _cachingPlaceholderMiniGridImages;
    NSHashTable * _folderIconImageCaches;
    NSMapTable * _folderIconObservers;
    SBHIconImageAppearanceStore * _genericMiniGridImages;
    SBHIconImageCache * _iconImageCache;
    <SBIconListLayout> * _listLayout;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    SBHIconImageAppearanceStore * _miniGridImageLayers;
    bool  _miniGridImageLoadingAsynchronous;
    CPMemoryPool * _miniGridImagePool;
    NSMutableArray * _performAfterCachingActivityBlocks;
    CPMemoryPool * _pool;
}

@property (nonatomic, readonly, copy) NSString *activityDescription;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) SBHIconImageCache *iconImageCache;
@property (nonatomic, readonly) <SBIconListLayout> *listLayout;
@property (nonatomic, retain) SBHIconImageAppearanceStore *miniGridImageLayers;
@property (getter=isMiniGridImageLoadingAsynchronous, nonatomic) bool miniGridImageLoadingAsynchronous;
@property (nonatomic, readonly) CPMemoryPool *miniGridImagePool;
@property (nonatomic, readonly) unsigned long long numberOfCacheHits;
@property (nonatomic, readonly) unsigned long long numberOfCacheMisses;
@property (nonatomic, readonly) unsigned long long numberOfCachedImages;
@property (nonatomic, readonly) CPMemoryPool *pool;
@property (readonly) Class superclass;

+ (bool)isMiniGridImageLoadingAsynchronous;
+ (id)miniImageQueue;

- (void).cxx_destruct;
- (id)activityDescription;
- (void)addObserver:(id)arg1 forFolderIcon:(id)arg2;
- (void)beginAsynchronousMiniImageGenerationForImage:(id)arg1 forIcon:(id)arg2 appearance:(id)arg3 reason:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)cachedMiniImageAppearancesForIcon:(id)arg1;
- (id)cachingPlaceholderMiniGridImageWithImageAppearance:(id)arg1;
- (void)checkIfCachingActivityHasCompleted;
- (void)didEndCachingActivityForReason:(id)arg1;
- (void)finishAsynchronousMiniImageGenerationWithImage:(id)arg1 forIcon:(id)arg2 imageIdentity:(id)arg3 reason:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)folder:(id)arg1 didAddIcons:(id)arg2 removedIcons:(id)arg3;
- (void)folder:(id)arg1 didAddList:(id)arg2;
- (void)folder:(id)arg1 didMoveIcon:(id)arg2;
- (void)folder:(id)arg1 didMoveList:(id)arg2 fromIndex:(unsigned long long)arg3 toIndex:(unsigned long long)arg4;
- (void)folder:(id)arg1 didRemoveLists:(id)arg2 atIndexes:(id)arg3;
- (void)folder:(id)arg1 didReplaceIcon:(id)arg2 withIcon:(id)arg3;
- (void)folderIcon:(id)arg1 containedIconAccessoriesDidUpdate:(id)arg2;
- (void)folderIcon:(id)arg1 containedIconImageDidUpdate:(id)arg2;
- (void)folderIcon:(id)arg1 containedIconLaunchEnabledDidChange:(id)arg2;
- (void)folderIconImageCache:(id)arg1 didAddObserverForFolderIcon:(id)arg2;
- (id)genericMiniGridImageWithImageAppearance:(id)arg1;
- (id)gridCellImageForIcon:(id)arg1 imageAppearance:(id)arg2;
- (id)gridCellImageForIcon:(id)arg1 imageAppearance:(id)arg2 imageAttributes:(unsigned long long*)arg3;
- (id)gridCellImageOfSize:(struct CGSize { double x1; double x2; })arg1 forIcon:(id)arg2 iconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg3 compatibleWithTraitCollection:(id)arg4 imageAttributes:(unsigned long long*)arg5;
- (id)gridCellImageOfSize:(struct CGSize { double x1; double x2; })arg1 forIcon:(id)arg2 iconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg3 imageAppearance:(id)arg4 imageAttributes:(unsigned long long*)arg5;
- (id)gridCellLayerForIcon:(id)arg1 imageAppearance:(id)arg2;
- (id)gridCellLayerForIcon:(id)arg1 imageAppearance:(id)arg2 imageAttributes:(unsigned long long*)arg3;
- (bool)hasCachedItemsThatIncludeIcon:(id)arg1 imageAppearance:(id)arg2;
- (id)iconImageCache;
- (void)iconImageCache:(id)arg1 didUpdateImageForIcon:(id)arg2 imageAppearance:(id)arg3;
- (void)iconImageDidUpdate:(id)arg1;
- (id)imageForPageAtIndex:(unsigned long long)arg1 inFolderIcon:(id)arg2 imageAppearance:(id)arg3;
- (void)informObserversOfUpdateForFolderIcon:(id)arg1 imageAppearance:(id)arg2;
- (id)initWithListLayout:(id)arg1 iconImageCache:(id)arg2;
- (bool)isMiniGridImageLoadingAsynchronous;
- (id)layerForPageAtIndex:(unsigned long long)arg1 inFolderIcon:(id)arg2 imageAppearance:(id)arg3;
- (id)listLayout;
- (id)miniGridImageLayers;
- (id)miniGridImagePool;
- (unsigned long long)numberOfCacheHits;
- (unsigned long long)numberOfCacheMisses;
- (unsigned long long)numberOfCachedImages;
- (void)performAsynchronousMiniImageGenerationForImage:(id)arg1 forIcon:(id)arg2 imageIdentity:(id)arg3 miniImageSize:(struct CGSize { double x1; double x2; })arg4 reason:(id)arg5 completionHandler:(id /* block */)arg6;
- (id)performSynchronousMiniImageGenerationForImage:(id)arg1 forIcon:(id)arg2 appearance:(id)arg3;
- (void)performWhenCachingActivityCompletesUsingBlock:(id /* block */)arg1;
- (id)pool;
- (void)purgeAllCachedFolderImages;
- (void)rebuildAllCachedFolderImages;
- (void)rebuildImagesForFolderIcon:(id)arg1;
- (void)rebuildImagesForFolderIcon:(id)arg1 appearance:(id)arg2;
- (void)registerFolderIconImageCache:(id)arg1;
- (void)removeObserver:(id)arg1 forFolderIcon:(id)arg2;
- (void)setMiniGridImageLayers:(id)arg1;
- (void)setMiniGridImageLoadingAsynchronous:(bool)arg1;
- (void)unregisterFolderIconImageCache:(id)arg1;
- (void)updateCachedImagesForFolderIcon:(id)arg1 afterChangeToContainedForIcon:(id)arg2 imageAppearance:(id)arg3 updateType:(long long)arg4;
- (void)updateCachedMiniImage:(id)arg1 forIcon:(id)arg2 imageAppearance:(id)arg3;
- (void)willBeginCachingActivityForReason:(id)arg1;

@end
