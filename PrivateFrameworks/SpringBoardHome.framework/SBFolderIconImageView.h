/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
 */

@interface SBFolderIconImageView : SBIconImageView <SBFolderIconImageCacheObserver, SBFolderIconObserver> {
    bool  _animating;
    bool  _animatingIconImageInfoChange;
    unsigned long long  _backgroundStyle;
    UIView * _backgroundView;
    SBFloatyFolderView * _crossfadeFolderView;
    UIView * _crossfadeScalingView;
    unsigned long long  _currentBackgroundStyle;
    unsigned long long  _currentPageIndex;
    SBHIconImageAppearance * _displayedImageAppearance;
    bool  _hasCustomBackgroundView;
    UIView<SBFolderIconGridViewing> * _leftWrapperView;
    NSMutableArray * _pageElements;
    UIView * _pageGridContainer;
    UIView<SBFolderIconGridViewing> * _rightWrapperView;
    UIView * _solidColorBackgroundView;
    unsigned long long  _transitionToken;
}

@property (getter=isAnimating, nonatomic, readonly) bool animating;
@property (getter=isAnimatingIconImageInfoChange, nonatomic) bool animatingIconImageInfoChange;
@property (nonatomic) unsigned long long backgroundStyle;
@property (nonatomic, retain) UIView *backgroundView;
@property (nonatomic, readonly) unsigned long long concreteBackgroundStyle;
@property (nonatomic) unsigned long long currentBackgroundStyle;
@property (nonatomic, readonly) NSArray *currentPageIconLayers;
@property (nonatomic, readonly) unsigned long long currentPageIndex;
@property (nonatomic, readonly) UIView *currentPageView;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) SBHIconImageAppearance *displayedImageAppearance;
@property (nonatomic, readonly) bool hasCustomBackgroundView;
@property (readonly) unsigned long long hash;
@property (nonatomic) double iconGridImageAlpha;
@property (nonatomic) bool pageGridClipsToBounds;
@property (getter=isPageGridHidden, nonatomic) bool pageGridHidden;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool usesLayersForMiniIcons;

+ (bool)allowsLayersForMiniIcons;
+ (bool)usesCachedImagesForMiniIconLayers;

- (void).cxx_destruct;
- (id)_currentPageElement;
- (id)_folderIcon;
- (id)_folderIconImageCache;
- (id)_generateSquareContentsImage;
- (Class)_iconGridImageClass;
- (struct CGSize { double x1; double x2; })_interiorGridSize;
- (void)_performScrollingDirection:(long long)arg1 targetPageIndex:(unsigned long long)arg2 targetPageScrollRow:(unsigned long long)arg3 newLeftElement:(id)arg4 newRightElement:(id)arg5 animated:(bool)arg6;
- (void)_setAnimating:(bool)arg1;
- (void)_setPageElements:(id)arg1;
- (void)_setupGridViewsInDefaultConfiguration;
- (void)_showLeftMinigrid;
- (void)_showRightMinigrid;
- (void)_updateAccessibilityBackgroundContrast;
- (void)_updateCurrentBackgroundStyle;
- (void)_updateRasterization;
- (unsigned long long)backgroundStyle;
- (id)backgroundView;
- (bool)canUpdateImage;
- (unsigned long long)centerVisibleMiniIconIndex;
- (void)cleanupAfterFloatyFolderCrossfade;
- (unsigned long long)concreteBackgroundStyle;
- (void)configureGridMiniLayer:(id)arg1;
- (id)contentsImage;
- (unsigned long long)currentBackgroundStyle;
- (id)currentPageIconLayers;
- (unsigned long long)currentPageIndex;
- (id)currentPageView;
- (void)dealloc;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (void)didAnimateIconImageInfoChange;
- (id)displayedImageAppearance;
- (unsigned long long)firstVisibleMiniIconIndex;
- (void)folderIcon:(id)arg1 containedIconAccessoriesDidUpdate:(id)arg2;
- (void)folderIcon:(id)arg1 containedIconImageDidUpdate:(id)arg2;
- (void)folderIcon:(id)arg1 containedIconLaunchEnabledDidChange:(id)arg2;
- (void)folderIconImageCache:(id)arg1 didUpdateImagesForFolderIcon:(id)arg2 imageAppearance:(id)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForMiniIconAtIndex:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForMiniIconAtIndexPath:(id)arg1;
- (void)fulfillGridImageForPageElement:(id)arg1;
- (void)fulfillGridLayerForPageElement:(id)arg1;
- (bool)hasCustomBackgroundView;
- (double)iconGridImageAlpha;
- (void)iconImageInfoDidChange;
- (void)iconViewFolderIconImageCacheDidChange;
- (void)iconViewLegibilitySettingsDidChange;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isAnimating;
- (bool)isAnimatingIconImageInfoChange;
- (bool)isPageGridHidden;
- (unsigned long long)lastVisibleMiniIconIndex;
- (void)layoutSubviews;
- (id)pageElements;
- (bool)pageGridClipsToBounds;
- (void)prepareForReuse;
- (void)prepareToCrossfadeWithFloatyFolderView:(id)arg1 allowFolderInteraction:(bool)arg2;
- (id)representedListLayout;
- (void)scrollToFirstGapAnimated:(bool)arg1;
- (void)scrollToGapOrTopIfFullOfPage:(unsigned long long)arg1 animated:(bool)arg2;
- (void)scrollToTopOfFirstPageAnimated:(bool)arg1;
- (void)scrollToTopOfPage:(unsigned long long)arg1 animated:(bool)arg2;
- (void)setAnimatingIconImageInfoChange:(bool)arg1;
- (void)setBackgroundAndIconGridImageAlpha:(double)arg1;
- (void)setBackgroundScale:(double)arg1;
- (void)setBackgroundStyle:(unsigned long long)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setCurrentBackgroundStyle:(unsigned long long)arg1;
- (void)setDisplayedImageAppearance:(id)arg1;
- (void)setFloatyFolderCrossfadeFraction:(double)arg1;
- (void)setIcon:(id)arg1 location:(id)arg2 animated:(bool)arg3;
- (void)setIconGridImageAlpha:(double)arg1;
- (void)setIconView:(id)arg1;
- (void)setPageGridClipsToBounds:(bool)arg1;
- (void)setPageGridCornerRadius:(double)arg1;
- (void)setPageGridHidden:(bool)arg1;
- (id)snapshot;
- (void)updateBackgroundViewOverrideUserInterfaceStyle;
- (void)updateImageAnimated:(bool)arg1;
- (bool)usesLayersForMiniIcons;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleImageRelativeFrameForMiniIconAtIndex:(unsigned long long)arg1;
- (unsigned long long)visibleMiniIconCount;
- (unsigned long long)visibleMiniIconListIndex;
- (void)willAnimateIconImageInfoChange;

@end
