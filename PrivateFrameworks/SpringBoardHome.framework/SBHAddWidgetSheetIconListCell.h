/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
 */

@interface SBHAddWidgetSheetIconListCell : UICollectionViewCell <SBIconListLayoutObserver> {
    void headerLeadingConstraint;
    void headerTrailingConstraint;
    void iconImageInfo;
    void iconListView;
    void imageHeightConstraint;
    void imageView;
    void imageWidthConstraint;
    void labelNumberOfLines;
    void labelViewsForIconViews;
    void listContainerView;
    void listContainerViewTopConstraint;
    void separatorView;
    void separatorVisible;
    void symbolImageView;
    void textLabel;
    void titleStackView;
    void titleStackViewBottomConstraint;
    void visualStylingProvider;
    void wantsHeaderView;
}

@property (nonatomic, retain) UIColor *iconBackgroundColor;
@property (nonatomic, retain) UIImage *iconImage;
@property (nonatomic) struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; } iconImageInfo;
@property (nonatomic, retain) SBIconListView *iconListView;
@property (nonatomic) bool separatorVisible;
@property (nonatomic, readonly) UILabel *textLabel;
@property (nonatomic, copy) NSString *title;
@property (nonatomic) MTVisualStylingProvider *visualStylingProvider;
@property (nonatomic) bool wantsHeaderView;

- (void).cxx_destruct;
- (bool)_descendantsShouldHighlight;
- (id)iconBackgroundColor;
- (id)iconImage;
- (struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })iconImageInfo;
- (id)iconListView;
- (void)iconListView:(id)arg1 didAddIconView:(id)arg2;
- (void)iconListView:(id)arg1 didRemoveIconView:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)prepareForReuse;
- (bool)separatorVisible;
- (void)setIconBackgroundColor:(id)arg1;
- (void)setIconImage:(id)arg1;
- (void)setIconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
- (void)setIconListView:(id)arg1;
- (void)setSeparatorVisible:(bool)arg1;
- (void)setTitle:(id)arg1;
- (void)setVisualStylingProvider:(id)arg1;
- (void)setWantsHeaderView:(bool)arg1;
- (id)textLabel;
- (id)title;
- (id)visualStylingProvider;
- (bool)wantsHeaderView;

@end
