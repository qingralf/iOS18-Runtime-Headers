/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip
 */

@interface AsyncStreamingFileWriter : StreamingFileWriter <StreamingFileWriterQueueAsyncOperation> {
    struct timeval { 
        long long tv_sec; 
        int tv_usec; 
    }  _accessTime;
    <StreamingFileWriterErrorDelegate> * _errorDelegate;
    unsigned long long  _executeFileOperationFlags;
    NSMutableData * _fileData;
    unsigned int  _gid;
    struct timeval { 
        long long tv_sec; 
        int tv_usec; 
    }  _modTime;
    unsigned short  _mode;
    int  _oflag;
    unsigned short  _omode;
    bool  _performCachedWrites;
    StreamingFileWriterQueueReservation * _reservation;
    bool  _setOwnership;
    NSObject<OS_dispatch_group> * _trackingGroup;
    unsigned int  _uid;
}

@property (nonatomic) struct timeval { long long x1; int x2; } accessTime;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic) <StreamingFileWriterErrorDelegate> *errorDelegate;
@property (nonatomic) unsigned long long executeFileOperationFlags;
@property (nonatomic, retain) NSMutableData *fileData;
@property (nonatomic) unsigned int gid;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct timeval { long long x1; int x2; } modTime;
@property (nonatomic) unsigned short mode;
@property (nonatomic, readonly) int oflag;
@property (nonatomic, readonly) unsigned short omode;
@property (nonatomic, readonly, copy) NSString *path;
@property (nonatomic, readonly) bool performCachedWrites;
@property (nonatomic, readonly) StreamingFileWriterQueueReservation *reservation;
@property (nonatomic) bool setOwnership;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSObject<OS_dispatch_group> *trackingGroup;
@property (nonatomic) unsigned int uid;

- (void).cxx_destruct;
- (bool)_executeWithError:(id*)arg1;
- (id)_initForWritingToPath:(id)arg1 withOpenFlags:(int)arg2 mode:(unsigned short)arg3 quarantineInfo:(void*)arg4 performCachedWrites:(bool)arg5 expectedSize:(long long)arg6 asyncTrackingGroup:(id)arg7 errorDelegate:(id)arg8 reservation:(id)arg9 error:(id*)arg10;
- (bool)_openCurrentOutputFDForPath:(id)arg1 withOpenFlags:(int)arg2 mode:(unsigned short)arg3 performCachedWrites:(bool)arg4 quarantineInfo:(void*)arg5 error:(id*)arg6;
- (struct timeval { long long x1; int x2; })accessTime;
- (void)closeCurrentOutputFD;
- (void)configureFileAndSetOwnership:(bool)arg1 toUID:(unsigned int)arg2 GID:(unsigned int)arg3;
- (long long)currentOffsetWithError:(id*)arg1;
- (void)dealloc;
- (id)errorDelegate;
- (void)executeAsyncOperation;
- (unsigned long long)executeFileOperationFlags;
- (id)fileData;
- (bool)finalizeFileWithAccessTime:(struct timeval { long long x1; int x2; })arg1 modTime:(struct timeval { long long x1; int x2; })arg2 mode:(unsigned short)arg3 error:(id*)arg4;
- (unsigned int)gid;
- (struct timeval { long long x1; int x2; })modTime;
- (unsigned short)mode;
- (int)oflag;
- (unsigned short)omode;
- (bool)performCachedWrites;
- (long long)readIntoBuffer:(void*)arg1 length:(unsigned long long)arg2 error:(id*)arg3;
- (id)reservation;
- (void)setAccessTime:(struct timeval { long long x1; int x2; })arg1;
- (bool)setCurrentOffset:(long long)arg1 error:(id*)arg2;
- (void)setErrorDelegate:(id)arg1;
- (void)setExecuteFileOperationFlags:(unsigned long long)arg1;
- (void)setFileData:(id)arg1;
- (void)setGid:(unsigned int)arg1;
- (void)setIncompleteExtractionAttribute;
- (void)setModTime:(struct timeval { long long x1; int x2; })arg1;
- (void)setMode:(unsigned short)arg1;
- (bool)setOwnership;
- (void)setSetOwnership:(bool)arg1;
- (void)setUid:(unsigned int)arg1;
- (bool)suspendWithError:(id*)arg1;
- (id)trackingGroup;
- (unsigned int)uid;
- (bool)writeBuffer:(const void*)arg1 length:(unsigned long long)arg2 error:(id*)arg3;

@end
