/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip
 */

@interface StreamingFileWriterQueue : NSObject {
    NSObject<OS_dispatch_queue> * _fileWriterQueue;
    unsigned long long  _maxConcurrency;
    long long  _maxPendingItemSize;
    long long  _maxPendingOperationSize;
    NSMutableDictionary * _pendingOperationPathsByGroupPointer;
    long long  _pendingOperationSize;
    NSMutableArray * _pendingOperations;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _pendingStateLock;
    unsigned long long  _runningOperationCount;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *fileWriterQueue;
@property (nonatomic, readonly) unsigned long long maxConcurrency;
@property (nonatomic, readonly) long long maxPendingItemSize;
@property (nonatomic, readonly) long long maxPendingOperationSize;
@property (nonatomic, readonly) NSMutableDictionary *pendingOperationPathsByGroupPointer;
@property (nonatomic) long long pendingOperationSize;
@property (nonatomic, readonly) NSMutableArray *pendingOperations;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x1; } pendingStateLock;
@property (nonatomic) unsigned long long runningOperationCount;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_runOperation:(id)arg1;
- (id)fileWriterQueue;
- (id)init;
- (bool)insertAsyncFileOperation:(id)arg1 error:(id*)arg2;
- (unsigned long long)maxConcurrency;
- (long long)maxPendingItemSize;
- (long long)maxPendingOperationSize;
- (id)pendingOperationPathsByGroupPointer;
- (long long)pendingOperationSize;
- (id)pendingOperations;
- (struct os_unfair_lock_s { unsigned int x1; })pendingStateLock;
- (id)reserveAsyncOperationForFileSize:(long long)arg1 path:(id)arg2 group:(id)arg3 operationPendingForPath:(bool*)arg4;
- (unsigned long long)runningOperationCount;
- (void)setPendingOperationSize:(long long)arg1;
- (void)setPendingStateLock:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (void)setRunningOperationCount:(unsigned long long)arg1;

@end
