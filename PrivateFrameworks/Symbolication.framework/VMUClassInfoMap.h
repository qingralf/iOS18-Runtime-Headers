/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Symbolication.framework/Symbolication
 */

@interface VMUClassInfoMap : NSObject <NSSecureCoding> {
    struct unordered_map<VMUClassInfo *, unsigned int, std::hash<VMUClassInfo *>, std::equal_to<VMUClassInfo *>, std::allocator<std::pair<VMUClassInfo *const, unsigned int>>> { 
        struct __hash_table<std::__hash_value_type<VMUClassInfo *, unsigned int>, std::__unordered_map_hasher<VMUClassInfo *, std::__hash_value_type<VMUClassInfo *, unsigned int>, std::hash<VMUClassInfo *>, std::equal_to<VMUClassInfo *>>, std::__unordered_map_equal<VMUClassInfo *, std::__hash_value_type<VMUClassInfo *, unsigned int>, std::equal_to<VMUClassInfo *>, std::hash<VMUClassInfo *>>, std::allocator<std::__hash_value_type<VMUClassInfo *, unsigned int>>> { 
            struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUClassInfo *, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUClassInfo *, unsigned int>, void *> *> *>>> { 
                struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUClassInfo *, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUClassInfo *, unsigned int>, void *> *> *>>> { 
                    void **__value_; 
                    struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUClassInfo *, unsigned int>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUClassInfo *, unsigned int>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUClassInfo *, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<VMUClassInfo *, unsigned int>, void *>>> { 
                struct __hash_node_base<std::__hash_node<std::__hash_value_type<VMUClassInfo *, unsigned int>, void *> *> { 
                    void *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__unordered_map_hasher<VMUClassInfo *, std::__hash_value_type<VMUClassInfo *, unsigned int>, std::hash<VMUClassInfo *>, std::equal_to<VMUClassInfo *>>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__unordered_map_equal<VMUClassInfo *, std::__hash_value_type<VMUClassInfo *, unsigned int>, std::equal_to<VMUClassInfo *>, std::hash<VMUClassInfo *>>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _classInfoToIndexMap;
    struct unordered_map<VMUFieldInfo *, unsigned int, std::hash<VMUFieldInfo *>, std::equal_to<VMUFieldInfo *>, std::allocator<std::pair<VMUFieldInfo *const, unsigned int>>> { 
        struct __hash_table<std::__hash_value_type<VMUFieldInfo *, unsigned int>, std::__unordered_map_hasher<VMUFieldInfo *, std::__hash_value_type<VMUFieldInfo *, unsigned int>, std::hash<VMUFieldInfo *>, std::equal_to<VMUFieldInfo *>>, std::__unordered_map_equal<VMUFieldInfo *, std::__hash_value_type<VMUFieldInfo *, unsigned int>, std::equal_to<VMUFieldInfo *>, std::hash<VMUFieldInfo *>>, std::allocator<std::__hash_value_type<VMUFieldInfo *, unsigned int>>> { 
            struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUFieldInfo *, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUFieldInfo *, unsigned int>, void *> *> *>>> { 
                struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUFieldInfo *, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUFieldInfo *, unsigned int>, void *> *> *>>> { 
                    void **__value_; 
                    struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUFieldInfo *, unsigned int>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUFieldInfo *, unsigned int>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<VMUFieldInfo *, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<VMUFieldInfo *, unsigned int>, void *>>> { 
                struct __hash_node_base<std::__hash_node<std::__hash_value_type<VMUFieldInfo *, unsigned int>, void *> *> { 
                    void *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__unordered_map_hasher<VMUFieldInfo *, std::__hash_value_type<VMUFieldInfo *, unsigned int>, std::hash<VMUFieldInfo *>, std::equal_to<VMUFieldInfo *>>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__unordered_map_equal<VMUFieldInfo *, std::__hash_value_type<VMUFieldInfo *, unsigned int>, std::equal_to<VMUFieldInfo *>, std::hash<VMUFieldInfo *>>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _fieldInfoToIndexMap;
    struct unordered_map<unsigned long long, unsigned int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned int>>> { 
        struct __hash_table<std::__hash_value_type<unsigned long long, unsigned int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned int>>> { 
            struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>> { 
                struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>> { 
                    void **__value_; 
                    struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *>>> { 
                struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned int>, void *> *> { 
                    void *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _isaAddressToIndexMap;
    NSMutableArray * _linearClassInfos;
    NSMutableArray * _linearFieldInfos;
    struct unordered_map<SwiftFieldKey, unsigned int, std::hash<SwiftFieldKey>, std::equal_to<SwiftFieldKey>, std::allocator<std::pair<const SwiftFieldKey, unsigned int>>> { 
        struct __hash_table<std::__hash_value_type<SwiftFieldKey, unsigned int>, std::__unordered_map_hasher<SwiftFieldKey, std::__hash_value_type<SwiftFieldKey, unsigned int>, std::hash<SwiftFieldKey>, std::equal_to<SwiftFieldKey>>, std::__unordered_map_equal<SwiftFieldKey, std::__hash_value_type<SwiftFieldKey, unsigned int>, std::equal_to<SwiftFieldKey>, std::hash<SwiftFieldKey>>, std::allocator<std::__hash_value_type<SwiftFieldKey, unsigned int>>> { 
            struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SwiftFieldKey, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SwiftFieldKey, unsigned int>, void *> *> *>>> { 
                struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SwiftFieldKey, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SwiftFieldKey, unsigned int>, void *> *> *>>> { 
                    void **__value_; 
                    struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SwiftFieldKey, unsigned int>, void *> *> *>> { 
                        struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SwiftFieldKey, unsigned int>, void *> *> *>> { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SwiftFieldKey, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<SwiftFieldKey, unsigned int>, void *>>> { 
                struct __hash_node_base<std::__hash_node<std::__hash_value_type<SwiftFieldKey, unsigned int>, void *> *> { 
                    void *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__unordered_map_hasher<SwiftFieldKey, std::__hash_value_type<SwiftFieldKey, unsigned int>, std::hash<SwiftFieldKey>, std::equal_to<SwiftFieldKey>>> { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__unordered_map_equal<SwiftFieldKey, std::__hash_value_type<SwiftFieldKey, unsigned int>, std::equal_to<SwiftFieldKey>, std::hash<SwiftFieldKey>>> { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _swiftFieldToIndexMap;
}

@property (nonatomic, readonly) unsigned int count;
@property (nonatomic, readonly) unsigned int fieldInfoCount;
@property (nonatomic, readonly) bool hasClassInfosDerivedFromStackBacktraces;

+ (void)_destroyRetainedLinearArray:(id*)arg1 withCount:(unsigned int)arg2;
+ (bool)supportsSecureCoding;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_applyTypeOverlay:(id)arg1;
- (id*)_retainedLinearArrayWithReturnedCount:(unsigned int*)arg1;
- (unsigned int)addClassInfo:(id)arg1 forAddress:(unsigned long long)arg2;
- (void)addClassInfosFromMap:(id)arg1;
- (unsigned int)addFieldInfo:(id)arg1;
- (id)classInfoForAddress:(unsigned long long)arg1;
- (id)classInfoForIndex:(unsigned int)arg1;
- (unsigned int)count;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateInfosWithBlock:(id /* block */)arg1;
- (unsigned int)fieldInfoCount;
- (id)fieldInfoForIndex:(unsigned int)arg1;
- (bool)hasClassInfosDerivedFromStackBacktraces;
- (unsigned int)indexForClassInfo:(id)arg1;
- (unsigned int)indexForFieldInfo:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)memoizeSwiftField:(id)arg1 withName:(const char *)arg2 offset:(unsigned int)arg3 kind:(unsigned int)arg4 typeref:(struct swift_typeref_interop { unsigned long long x1; int x2; })arg5;
- (id)swiftFieldWithName:(const char *)arg1 offset:(unsigned int)arg2 kind:(unsigned int)arg3 typeref:(struct swift_typeref_interop { unsigned long long x1; int x2; })arg4;

@end
