/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SymptomShared.framework/SymptomShared
 */

@interface NWNetworkOfInterest : NSObject <NSCopying, NSSecureCoding> {
    long long  _considerAlternate;
    NWNetworkAdviceUpdate * _considerAlternateUpdate;
    NSPredicate * _customSignature;
    bool  _discretionaryTrafficInvited;
    long long  _flags;
    unsigned char  _functionalInterfaceType;
    long long  _interface;
    long long  _interfaceClass;
    long long  _interfaceSubtype;
    bool  _isAny;
    bool  _isBuiltin;
    bool  _isThinnedOut;
    bool  _isTrafficEligible;
    long long  _linkQuality;
    long long  _powerCostDL;
    long long  _powerCostUL;
    NSArray * _predictions;
    NSDate * _predictionsGeneratedAt;
    long long  _scopedToLOI;
    long long  _version;
    bool  _willGetDiscretionaryTrafficInvites;
}

@property long long considerAlternate;
@property (retain) NWNetworkAdviceUpdate *considerAlternateUpdate;
@property (readonly) NSPredicate *customSignature;
@property bool discretionaryTrafficInvited;
@property (readonly) long long flags;
@property (readonly) unsigned char functionalInterfaceType;
@property (readonly) long long interface;
@property long long interfaceClass;
@property (readonly) long long interfaceSubtype;
@property (readonly) bool isAny;
@property (readonly) bool isBuiltin;
@property bool isTrafficEligible;
@property long long linkQuality;
@property long long powerCostDL;
@property long long powerCostUL;
@property (retain) NSArray *predictions;
@property (retain) NSDate *predictionsGeneratedAt;
@property (readonly) long long scopedToLOI;
@property (readonly) long long version;
@property bool willGetDiscretionaryTrafficInvites;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_descriptionFull:(bool)arg1;
- (bool)_isEqualToNOI:(id)arg1;
- (id)_thinCopy;
- (void)addObserverForAllKeyPaths:(id)arg1;
- (bool)atHomeScopedNOI;
- (bool)atWorkScopedNOI;
- (long long)considerAlternate;
- (id)considerAlternateUpdate;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)customSignature;
- (id)description;
- (bool)discretionaryTrafficInvited;
- (void)encodeWithCoder:(id)arg1;
- (long long)flags;
- (unsigned char)functionalInterfaceType;
- (unsigned long long)hash;
- (id)identityAttrsOnly;
- (id)initWithCoder:(id)arg1;
- (id)initWithSpec:(unsigned char)arg1 isAny:(bool)arg2 isBuiltin:(bool)arg3 scopedToLOI:(long long)arg4 flags:(long long)arg5 hasCustomSignature:(id)arg6;
- (long long)interface;
- (long long)interfaceClass;
- (long long)interfaceSubtype;
- (bool)isAny;
- (bool)isBuiltin;
- (bool)isEqual:(id)arg1;
- (bool)isTrafficEligible;
- (long long)linkQuality;
- (long long)powerCostDL;
- (long long)powerCostUL;
- (id)predictions;
- (id)predictionsGeneratedAt;
- (void)removeObserverForAllKeyPaths:(id)arg1;
- (long long)scopedToLOI;
- (void)setConsiderAlternate:(long long)arg1;
- (void)setConsiderAlternateUpdate:(id)arg1;
- (void)setDiscretionaryTrafficInvited:(bool)arg1;
- (void)setInterfaceClass:(long long)arg1;
- (void)setIsTrafficEligible:(bool)arg1;
- (void)setLinkQuality:(long long)arg1;
- (void)setPowerCostDL:(long long)arg1;
- (void)setPowerCostUL:(long long)arg1;
- (void)setPredictions:(id)arg1;
- (void)setPredictionsGeneratedAt:(id)arg1;
- (void)setWillGetDiscretionaryTrafficInvites:(bool)arg1;
- (id)typePrettyPrint;
- (long long)version;
- (bool)willGetDiscretionaryTrafficInvites;

@end
