/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SymptomShared.framework/SymptomShared
 */

@interface NWPVar : NSObject <NSCopying, NSSecureCoding> {
    NSDictionary * _allState;
    NSUUID * _durableId;
    NSObject<NSSecureCoding><NSCopying> * _expectingRewardOn;
    NSString * _exportLabel;
    NSObject<NSSecureCoding><NSCopying> * _firstValue;
    NSDictionary * _hyperParams;
    NSString * _label;
    unsigned long long  _logicalClock;
    unsigned long long  _model;
    unsigned long long  _pullCount;
    NSArray * _referenceValues;
    id /* block */  _telemetryReporter;
    bool  _useScalarRange;
}

@property (nonatomic, retain) NSDictionary *allState;
@property (nonatomic, retain) NSUUID *durableId;
@property (nonatomic, retain) NSObject<NSSecureCoding><NSCopying> *expectingRewardOn;
@property (nonatomic, copy) NSString *exportLabel;
@property (nonatomic, retain) NSObject<NSSecureCoding><NSCopying> *firstValue;
@property (nonatomic, retain) NSDictionary *hyperParams;
@property (nonatomic, retain) NSString *label;
@property (nonatomic) unsigned long long logicalClock;
@property (nonatomic) unsigned long long model;
@property (nonatomic) unsigned long long pullCount;
@property (nonatomic, retain) NSArray *referenceValues;
@property (nonatomic, copy) id /* block */ telemetryReporter;
@property (nonatomic) bool useScalarRange;

+ (id)_backgroundQueue;
+ (id)_defaultBackingStore;
+ (id)_fetchCheckpoint:(id)arg1 isPrefix:(bool)arg2;
+ (id)_serviceQueue;
+ (void)_setCustomBackingStore:(id)arg1;
+ (void)setBackingStore:(id)arg1;
+ (void)setLogHandle:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_initToCopy;
- (void)_mirrorFrom:(id)arg1;
- (long long)_pruneOldCheckpoints;
- (id)_pullCounts;
- (void)_setToCleanSlate;
- (id)allState;
- (id)checkpoint;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)durableId;
- (void)encodeWithCoder:(id)arg1;
- (id)expectingRewardOn;
- (id)exportLabel;
- (id)firstValue;
- (id)hyperParams;
- (id)init;
- (id)initFromCheckpoint:(id)arg1 forLabel:(id)arg2;
- (id)initFromLastCheckpointForLabel:(id)arg1;
- (id)initInValueSpace:(id)arg1 withLabel:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)label;
- (unsigned long long)logicalClock;
- (id)migrateToValueSpace:(id)arg1;
- (unsigned long long)model;
- (id)predictValueGivenContext:(id)arg1 generationId:(id*)arg2;
- (unsigned long long)pullCount;
- (id)referenceValues;
- (bool)selectModel:(unsigned long long)arg1;
- (void)setAllState:(id)arg1;
- (void)setDurableId:(id)arg1;
- (void)setExpectingRewardOn:(id)arg1;
- (void)setExportLabel:(id)arg1;
- (void)setFirstValue:(id)arg1;
- (void)setHyperParams:(id)arg1;
- (bool)setInitialValue:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setLogicalClock:(unsigned long long)arg1;
- (void)setModel:(unsigned long long)arg1;
- (void)setPullCount:(unsigned long long)arg1;
- (void)setReferenceValues:(id)arg1;
- (bool)setReward:(float)arg1 onValue:(id)arg2 forPredictionGenerationId:(id)arg3;
- (void)setTelemetryReporter:(id /* block */)arg1;
- (void)setUseScalarRange:(bool)arg1;
- (id /* block */)telemetryReporter;
- (bool)useScalarRange;

@end
