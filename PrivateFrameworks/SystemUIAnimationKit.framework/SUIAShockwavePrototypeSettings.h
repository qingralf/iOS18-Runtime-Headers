/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SystemUIAnimationKit.framework/SystemUIAnimationKit
 */

@interface SUIAShockwavePrototypeSettings : PTSettings {
    void abberationCancelledFadeOutAnimationSettings;
    void abberationFadeOutAnimationSettings;
    void aberrationBlurRadius;
    void aberrationColorBrightness;
    void aberrationColorMatrixMultiplyFactor;
    void aberrationColorSaturateAmount;
    void aberrationEDRGain;
    void aberrationFadeOutDelay;
    void aberrationFadeOutDelayIPad;
    void aberrationMagnitudeX;
    void aberrationMagnitudeY;
    void aberrationUseColorBrightness;
    void aberrationUseColorMatrixMultiply;
    void aberrationUseColorSaturate;
    void aberrationUseEDR;
    void captureChromaticAberrationEnabled;
    void captureFillLightType;
    void captureFillWhiteValue;
    void captureHintAnimationSettings;
    void captureHintInterpolationProgress;
    void captureHintMeshOffset;
    void captureHintRetargetImpulse;
    void captureMeshEnabled;
    void chromaticAberrationFinalDonutMaskLargeScreen;
    void chromaticAberrationFinalDonutMaskSmallScreen;
    void chromaticAberrationInitialDonutMask;
    void colorFillFinalCircleMask;
    void colorFillHintCircleMask;
    void colorFillInitialCircleMask;
    void currentUserInterfaceIdiom;
    void donutMaskEndTransitionDelay;
    void donutMaskInitialEdgeOutsetProportion;
    void donutMaskPositionAnimationSettings;
    void edgeLightFinalCircleMask;
    void edgeLightHintCircleMask;
    void edgeLightHintTransitionDelay;
    void edgeLightInitialCircleMask;
    void fillLightCaptureInitialIntensity;
    void fillLightColorBrightnessAmount;
    void fillLightColorContrastAmount;
    void fillLightColorSaturateAmount;
    void fillLightFinalIntensity;
    void fillLightInitialIntensity;
    void fillLightIntensityFinalStateDelay;
    void finalFitVsDiameterRatioLongEdgeBigScreen;
    void finalFitVsDiameterRatioLongEdgeSmallScreen;
    void finalFitVsDiameterRatioShortEdgeBigScreen;
    void finalFitVsDiameterRatioShortEdgeSmallScreen;
    void lightIntensityAnimationSettings;
    void lightIntensityCancelledAnimationSettings;
    void maximumHintDuration;
    void meshFinalProportionAcrossScreenLongEdge;
    void meshFinalProportionAcrossScreenShortEdge;
    void meshFinalProportionTowardsCenterOnLargeDisplays;
    void meshPointsAnimationSettings;
    void meshPointsCancelledAnimationSettings;
    void meshPointsEndTransitionDelay;
    void meshPositionAnimationSettings;
    void meshRectangularFinalLongDimensionRatio;
    void meshRectangularFinalShortDimensionRatio;
    void meshSquareFinalSizeDiagonalRatio;
    void siriButtonChromaticAberrationEnabled;
    void siriButtonEdgeLightEnabled;
    void siriButtonFillLightEnabled;
    void siriButtonMeshEnabled;
    void siriButtonMeshEnabledLargeScreen;
    void siriEdgeChromaticAberrationEnabled;
    void siriEdgeEdgeLightEnabled;
    void siriEdgeFillLightEnabled;
    void siriEdgeMeshEnabled;
    void siriEdgeMeshEnabledLargeScreen;
    void totalDuration;
    void useSiriMeshForCapture;
    void visionIntelligenceHintAnimationSettings;
    void visionIntelligenceHintFillLightInitialIntensity;
    void visionIntelligenceHintInterpolationProgress;
    void visionIntelligenceHintRetargetImpulse;
    void visualizeEffectMasks;
}

@property (nonatomic, retain) SUIAFluidBehaviorSettings *abberationCancelledFadeOutAnimationSettings;
@property (nonatomic, retain) SUIAFluidBehaviorSettings *abberationFadeOutAnimationSettings;
@property (nonatomic) double aberrationBlurRadius;
@property (nonatomic) double aberrationColorBrightness;
@property (nonatomic) double aberrationColorMatrixMultiplyFactor;
@property (nonatomic) double aberrationColorSaturateAmount;
@property (nonatomic) double aberrationEDRGain;
@property (nonatomic) double aberrationFadeOutDelay;
@property (nonatomic) double aberrationFadeOutDelayIPad;
@property (nonatomic) double aberrationMagnitudeX;
@property (nonatomic) double aberrationMagnitudeY;
@property (nonatomic) bool aberrationUseColorBrightness;
@property (nonatomic) bool aberrationUseColorMatrixMultiply;
@property (nonatomic) bool aberrationUseColorSaturate;
@property (nonatomic) bool aberrationUseEDR;
@property (nonatomic) bool captureChromaticAberrationEnabled;
@property (nonatomic) long long captureFillLightType;
@property (nonatomic) double captureFillWhiteValue;
@property (nonatomic, retain) SUIAFluidBehaviorSettings *captureHintAnimationSettings;
@property (nonatomic) double captureHintInterpolationProgress;
@property (nonatomic) double captureHintMeshOffset;
@property (nonatomic) double captureHintRetargetImpulse;
@property (nonatomic) bool captureMeshEnabled;
@property (nonatomic, retain) SUIAShockwaveRadialMaskSettings *chromaticAberrationFinalDonutMaskLargeScreen;
@property (nonatomic, retain) SUIAShockwaveRadialMaskSettings *chromaticAberrationFinalDonutMaskSmallScreen;
@property (nonatomic, retain) SUIAShockwaveRadialMaskSettings *chromaticAberrationInitialDonutMask;
@property (nonatomic, retain) SUIAShockwaveRadialMaskSettings *colorFillFinalCircleMask;
@property (nonatomic, retain) SUIAShockwaveRadialMaskSettings *colorFillHintCircleMask;
@property (nonatomic, retain) SUIAShockwaveRadialMaskSettings *colorFillInitialCircleMask;
@property (nonatomic) double donutMaskEndTransitionDelay;
@property (nonatomic) double donutMaskInitialEdgeOutsetProportion;
@property (nonatomic, retain) SUIAFluidBehaviorSettings *donutMaskPositionAnimationSettings;
@property (nonatomic, retain) SUIAShockwaveRadialMaskSettings *edgeLightFinalCircleMask;
@property (nonatomic, retain) SUIAShockwaveRadialMaskSettings *edgeLightHintCircleMask;
@property (nonatomic) double edgeLightHintTransitionDelay;
@property (nonatomic, retain) SUIAShockwaveRadialMaskSettings *edgeLightInitialCircleMask;
@property (nonatomic) double fillLightCaptureInitialIntensity;
@property (nonatomic) double fillLightColorBrightnessAmount;
@property (nonatomic) double fillLightColorContrastAmount;
@property (nonatomic) double fillLightColorSaturateAmount;
@property (nonatomic) double fillLightFinalIntensity;
@property (nonatomic) double fillLightInitialIntensity;
@property (nonatomic) double fillLightIntensityFinalStateDelay;
@property (nonatomic) double finalFitVsDiameterRatioLongEdgeBigScreen;
@property (nonatomic) double finalFitVsDiameterRatioLongEdgeSmallScreen;
@property (nonatomic) double finalFitVsDiameterRatioShortEdgeBigScreen;
@property (nonatomic) double finalFitVsDiameterRatioShortEdgeSmallScreen;
@property (nonatomic, retain) SUIAFluidBehaviorSettings *lightIntensityAnimationSettings;
@property (nonatomic, retain) SUIAFluidBehaviorSettings *lightIntensityCancelledAnimationSettings;
@property (nonatomic) double maximumHintDuration;
@property (nonatomic) double meshFinalProportionAcrossScreenLongEdge;
@property (nonatomic) double meshFinalProportionAcrossScreenShortEdge;
@property (nonatomic) double meshFinalProportionTowardsCenterOnLargeDisplays;
@property (nonatomic, retain) SUIAFluidBehaviorSettings *meshPointsAnimationSettings;
@property (nonatomic, retain) SUIAFluidBehaviorSettings *meshPointsCancelledAnimationSettings;
@property (nonatomic) double meshPointsEndTransitionDelay;
@property (nonatomic, retain) SUIAFluidBehaviorSettings *meshPositionAnimationSettings;
@property (nonatomic) double meshRectangularFinalLongDimensionRatio;
@property (nonatomic) double meshRectangularFinalShortDimensionRatio;
@property (nonatomic) double meshSquareFinalSizeDiagonalRatio;
@property (nonatomic) bool siriButtonChromaticAberrationEnabled;
@property (nonatomic) bool siriButtonEdgeLightEnabled;
@property (nonatomic) bool siriButtonFillLightEnabled;
@property (nonatomic) bool siriButtonMeshEnabled;
@property (nonatomic) bool siriButtonMeshEnabledLargeScreen;
@property (nonatomic) bool siriEdgeChromaticAberrationEnabled;
@property (nonatomic) bool siriEdgeEdgeLightEnabled;
@property (nonatomic) bool siriEdgeFillLightEnabled;
@property (nonatomic) bool siriEdgeMeshEnabled;
@property (nonatomic) bool siriEdgeMeshEnabledLargeScreen;
@property (nonatomic) double totalDuration;
@property (nonatomic) bool useSiriMeshForCapture;
@property (nonatomic, retain) SUIAFluidBehaviorSettings *visionIntelligenceHintAnimationSettings;
@property (nonatomic) double visionIntelligenceHintFillLightInitialIntensity;
@property (nonatomic) double visionIntelligenceHintInterpolationProgress;
@property (nonatomic) double visionIntelligenceHintRetargetImpulse;
@property (nonatomic) bool visualizeEffectMasks;

+ (id)settingsControllerModule;

- (void).cxx_destruct;
- (id)abberationCancelledFadeOutAnimationSettings;
- (id)abberationFadeOutAnimationSettings;
- (double)aberrationBlurRadius;
- (double)aberrationColorBrightness;
- (double)aberrationColorMatrixMultiplyFactor;
- (double)aberrationColorSaturateAmount;
- (double)aberrationEDRGain;
- (double)aberrationFadeOutDelay;
- (double)aberrationFadeOutDelayIPad;
- (double)aberrationMagnitudeX;
- (double)aberrationMagnitudeY;
- (bool)aberrationUseColorBrightness;
- (bool)aberrationUseColorMatrixMultiply;
- (bool)aberrationUseColorSaturate;
- (bool)aberrationUseEDR;
- (bool)captureChromaticAberrationEnabled;
- (long long)captureFillLightType;
- (double)captureFillWhiteValue;
- (id)captureHintAnimationSettings;
- (double)captureHintInterpolationProgress;
- (double)captureHintMeshOffset;
- (double)captureHintRetargetImpulse;
- (bool)captureMeshEnabled;
- (id)chromaticAberrationFinalDonutMaskForShockwaveSize:(struct CGSize { double x1; double x2; })arg1;
- (id)chromaticAberrationFinalDonutMaskLargeScreen;
- (id)chromaticAberrationFinalDonutMaskSmallScreen;
- (id)chromaticAberrationInitialDonutMask;
- (id)colorFillFinalCircleMask;
- (id)colorFillHintCircleMask;
- (id)colorFillInitialCircleMask;
- (double)donutMaskEndTransitionDelay;
- (double)donutMaskInitialEdgeOutsetProportion;
- (id)donutMaskPositionAnimationSettings;
- (id)edgeLightFinalCircleMask;
- (id)edgeLightHintCircleMask;
- (double)edgeLightHintTransitionDelay;
- (id)edgeLightInitialCircleMask;
- (double)fillLightCaptureInitialIntensity;
- (double)fillLightColorBrightnessAmount;
- (double)fillLightColorContrastAmount;
- (double)fillLightColorSaturateAmount;
- (double)fillLightFinalIntensity;
- (double)fillLightInitialIntensity;
- (double)fillLightIntensityFinalStateDelay;
- (double)finalFitVsDiameterRatioLongEdgeBigScreen;
- (double)finalFitVsDiameterRatioLongEdgeForShockwaveSize:(struct CGSize { double x1; double x2; })arg1;
- (double)finalFitVsDiameterRatioLongEdgeSmallScreen;
- (double)finalFitVsDiameterRatioShortEdgeBigScreen;
- (double)finalFitVsDiameterRatioShortEdgeForShockwaveSize:(struct CGSize { double x1; double x2; })arg1;
- (double)finalFitVsDiameterRatioShortEdgeSmallScreen;
- (id)lightIntensityAnimationSettings;
- (id)lightIntensityCancelledAnimationSettings;
- (double)maximumHintDuration;
- (double)meshFinalProportionAcrossScreenLongEdge;
- (double)meshFinalProportionAcrossScreenShortEdge;
- (double)meshFinalProportionTowardsCenterOnLargeDisplays;
- (id)meshPointsAnimationSettings;
- (id)meshPointsCancelledAnimationSettings;
- (double)meshPointsEndTransitionDelay;
- (id)meshPositionAnimationSettings;
- (double)meshRectangularFinalLongDimensionRatio;
- (double)meshRectangularFinalShortDimensionRatio;
- (double)meshSquareFinalSizeDiagonalRatio;
- (void)setAbberationCancelledFadeOutAnimationSettings:(id)arg1;
- (void)setAbberationFadeOutAnimationSettings:(id)arg1;
- (void)setAberrationBlurRadius:(double)arg1;
- (void)setAberrationColorBrightness:(double)arg1;
- (void)setAberrationColorMatrixMultiplyFactor:(double)arg1;
- (void)setAberrationColorSaturateAmount:(double)arg1;
- (void)setAberrationEDRGain:(double)arg1;
- (void)setAberrationFadeOutDelay:(double)arg1;
- (void)setAberrationFadeOutDelayIPad:(double)arg1;
- (void)setAberrationMagnitudeX:(double)arg1;
- (void)setAberrationMagnitudeY:(double)arg1;
- (void)setAberrationUseColorBrightness:(bool)arg1;
- (void)setAberrationUseColorMatrixMultiply:(bool)arg1;
- (void)setAberrationUseColorSaturate:(bool)arg1;
- (void)setAberrationUseEDR:(bool)arg1;
- (void)setCaptureChromaticAberrationEnabled:(bool)arg1;
- (void)setCaptureFillLightType:(long long)arg1;
- (void)setCaptureFillWhiteValue:(double)arg1;
- (void)setCaptureHintAnimationSettings:(id)arg1;
- (void)setCaptureHintInterpolationProgress:(double)arg1;
- (void)setCaptureHintMeshOffset:(double)arg1;
- (void)setCaptureHintRetargetImpulse:(double)arg1;
- (void)setCaptureMeshEnabled:(bool)arg1;
- (void)setChromaticAberrationFinalDonutMaskLargeScreen:(id)arg1;
- (void)setChromaticAberrationFinalDonutMaskSmallScreen:(id)arg1;
- (void)setChromaticAberrationInitialDonutMask:(id)arg1;
- (void)setColorFillFinalCircleMask:(id)arg1;
- (void)setColorFillHintCircleMask:(id)arg1;
- (void)setColorFillInitialCircleMask:(id)arg1;
- (void)setDefaultValues;
- (void)setDonutMaskEndTransitionDelay:(double)arg1;
- (void)setDonutMaskInitialEdgeOutsetProportion:(double)arg1;
- (void)setDonutMaskPositionAnimationSettings:(id)arg1;
- (void)setEdgeLightFinalCircleMask:(id)arg1;
- (void)setEdgeLightHintCircleMask:(id)arg1;
- (void)setEdgeLightHintTransitionDelay:(double)arg1;
- (void)setEdgeLightInitialCircleMask:(id)arg1;
- (void)setFillLightCaptureInitialIntensity:(double)arg1;
- (void)setFillLightColorBrightnessAmount:(double)arg1;
- (void)setFillLightColorContrastAmount:(double)arg1;
- (void)setFillLightColorSaturateAmount:(double)arg1;
- (void)setFillLightFinalIntensity:(double)arg1;
- (void)setFillLightInitialIntensity:(double)arg1;
- (void)setFillLightIntensityFinalStateDelay:(double)arg1;
- (void)setFinalFitVsDiameterRatioLongEdgeBigScreen:(double)arg1;
- (void)setFinalFitVsDiameterRatioLongEdgeSmallScreen:(double)arg1;
- (void)setFinalFitVsDiameterRatioShortEdgeBigScreen:(double)arg1;
- (void)setFinalFitVsDiameterRatioShortEdgeSmallScreen:(double)arg1;
- (void)setLightIntensityAnimationSettings:(id)arg1;
- (void)setLightIntensityCancelledAnimationSettings:(id)arg1;
- (void)setMaximumHintDuration:(double)arg1;
- (void)setMeshFinalProportionAcrossScreenLongEdge:(double)arg1;
- (void)setMeshFinalProportionAcrossScreenShortEdge:(double)arg1;
- (void)setMeshFinalProportionTowardsCenterOnLargeDisplays:(double)arg1;
- (void)setMeshPointsAnimationSettings:(id)arg1;
- (void)setMeshPointsCancelledAnimationSettings:(id)arg1;
- (void)setMeshPointsEndTransitionDelay:(double)arg1;
- (void)setMeshPositionAnimationSettings:(id)arg1;
- (void)setMeshRectangularFinalLongDimensionRatio:(double)arg1;
- (void)setMeshRectangularFinalShortDimensionRatio:(double)arg1;
- (void)setMeshSquareFinalSizeDiagonalRatio:(double)arg1;
- (void)setSiriButtonChromaticAberrationEnabled:(bool)arg1;
- (void)setSiriButtonEdgeLightEnabled:(bool)arg1;
- (void)setSiriButtonFillLightEnabled:(bool)arg1;
- (void)setSiriButtonMeshEnabled:(bool)arg1;
- (void)setSiriButtonMeshEnabledLargeScreen:(bool)arg1;
- (void)setSiriEdgeChromaticAberrationEnabled:(bool)arg1;
- (void)setSiriEdgeEdgeLightEnabled:(bool)arg1;
- (void)setSiriEdgeFillLightEnabled:(bool)arg1;
- (void)setSiriEdgeMeshEnabled:(bool)arg1;
- (void)setSiriEdgeMeshEnabledLargeScreen:(bool)arg1;
- (void)setTotalDuration:(double)arg1;
- (void)setUseSiriMeshForCapture:(bool)arg1;
- (void)setVisionIntelligenceHintAnimationSettings:(id)arg1;
- (void)setVisionIntelligenceHintFillLightInitialIntensity:(double)arg1;
- (void)setVisionIntelligenceHintInterpolationProgress:(double)arg1;
- (void)setVisionIntelligenceHintRetargetImpulse:(double)arg1;
- (void)setVisualizeEffectMasks:(bool)arg1;
- (bool)shouldBehaveLikeLargeScreen:(struct CGSize { double x1; double x2; })arg1;
- (bool)siriButtonChromaticAberrationEnabled;
- (bool)siriButtonEdgeLightEnabled;
- (bool)siriButtonFillLightEnabled;
- (bool)siriButtonMeshEnabled;
- (bool)siriButtonMeshEnabledLargeScreen;
- (bool)siriEdgeChromaticAberrationEnabled;
- (bool)siriEdgeEdgeLightEnabled;
- (bool)siriEdgeFillLightEnabled;
- (bool)siriEdgeMeshEnabled;
- (bool)siriEdgeMeshEnabledLargeScreen;
- (double)totalDuration;
- (void)updateValuesForUserInterfaceIdiom:(long long)arg1;
- (bool)useSiriMeshForCapture;
- (id)visionIntelligenceHintAnimationSettings;
- (double)visionIntelligenceHintFillLightInitialIntensity;
- (double)visionIntelligenceHintInterpolationProgress;
- (double)visionIntelligenceHintRetargetImpulse;
- (bool)visualizeEffectMasks;

@end
