/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SystemUIAnimationKit.framework/SystemUIAnimationKit
 */

@interface _SUIAShockwaveChromaticAberrationConfiguration : _SUIAAbstractDictionaryBackedConfiguration <SUIAShockwaveChromaticAberrationConfiguration>

@property (nonatomic, readonly) double aberrationBlurRadius;
@property (nonatomic, readonly) double aberrationColorBrightnessFactor;
@property (nonatomic, readonly) double aberrationColorSaturateAmount;
@property (nonatomic, readonly) double aberrationEDRGain;
@property (nonatomic, readonly) double aberrationIntensity;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } aberrationMagnitude;
@property (nonatomic, readonly) double aberrationMultiplyFactor;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *donutGradientColors;
@property (nonatomic, readonly) NSArray *donutGradientLocations;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } donutMaskFrame;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)chromaticAberrationConfigurationForState:(long long)arg1 variant:(long long)arg2 buttonEmanating:(bool)arg3 normalizedStartLocation:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 settings:(id)arg5 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg6 usesIntelligentFillLight:(bool)arg7;
+ (long long)configurationType;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })donutMaskRectForState:(long long)arg1 variant:(long long)arg2 normalizedStartLocation:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 settings:(id)arg4 inBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5;

- (void)_setAberrationBlurRadius:(double)arg1;
- (void)_setAberrationColorBrightnessFactor:(double)arg1;
- (void)_setAberrationColorSaturateAmount:(double)arg1;
- (void)_setAberrationEDRGain:(double)arg1;
- (void)_setAberrationIntensity:(double)arg1;
- (void)_setAberrationMagnitude:(struct CGPoint { double x1; double x2; })arg1;
- (void)_setAberrationMultiplyFactor:(double)arg1;
- (void)_setDonutGradientColors:(id)arg1;
- (void)_setDonutGradientLocations:(id)arg1;
- (void)_setDonutMaskFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)aberrationBlurRadius;
- (double)aberrationColorBrightnessFactor;
- (double)aberrationColorSaturateAmount;
- (double)aberrationEDRGain;
- (double)aberrationIntensity;
- (struct CGPoint { double x1; double x2; })aberrationMagnitude;
- (double)aberrationMultiplyFactor;
- (id)donutGradientColors;
- (id)donutGradientLocations;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })donutMaskFrame;

@end
