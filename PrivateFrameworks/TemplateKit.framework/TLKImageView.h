/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TemplateKit.framework/TemplateKit
 */

@interface TLKImageView : TLKView {
    unsigned long long  _alignment;
    bool  _animateNextImageTransition;
    TLKImageView * _badgeImageView;
    <TLKImageViewDelegate> * _delegate;
    bool  _disableCornerRounding;
    bool  _ignoreImageAlignmentRectInsets;
    UIImageView * _imageView;
    double  _lastBaselineOffset;
    TLKImage * _lastTlkImage;
    UIColor * _overrideColor;
    TLKProminenceView * _placeholderView;
    unsigned long long  _placeholderVisibility;
    unsigned long long  _prominence;
    UIView * _shadowContainer;
    bool  _shadowDisabled;
    UIFont * _symbolFont;
    long long  _symbolScale;
    long long  _symbolWeight;
    TLKImage * _tlkImage;
    bool  _useButtonColoring;
}

@property (nonatomic) unsigned long long alignment;
@property (nonatomic) bool animateNextImageTransition;
@property (nonatomic, retain) TLKImageView *badgeImageView;
@property (nonatomic) <TLKImageViewDelegate> *delegate;
@property (nonatomic) bool disableCornerRounding;
@property (nonatomic) bool ignoreImageAlignmentRectInsets;
@property (nonatomic, retain) UIImageView *imageView;
@property (nonatomic) double lastBaselineOffset;
@property (nonatomic, retain) TLKImage *lastTlkImage;
@property (nonatomic, retain) UIColor *overrideColor;
@property (nonatomic, retain) TLKProminenceView *placeholderView;
@property (nonatomic) unsigned long long placeholderVisibility;
@property (nonatomic) unsigned long long prominence;
@property (nonatomic, retain) UIView *shadowContainer;
@property (nonatomic) bool shadowDisabled;
@property (nonatomic, retain) UIFont *symbolFont;
@property (nonatomic) long long symbolScale;
@property (nonatomic) long long symbolWeight;
@property (nonatomic, retain) TLKImage *tlkImage;
@property (nonatomic) bool useButtonColoring;

+ (bool)checkTransparencyForImageAtCorners:(struct CGImage { }*)arg1 shouldCropToCircle:(bool)arg2;
+ (unsigned long long)defaultCornerMask;
+ (bool)hasTransparencyAtPoint:(struct CGPoint { double x1; double x2; })arg1 forCGImage:(struct CGImage { }*)arg2;
+ (bool)imageIsProbablyOpaque:(id)arg1 tlkImage:(id)arg2;

- (void).cxx_destruct;
- (unsigned long long)alignment;
- (bool)alignmentIsAspectFill;
- (bool)animateNextImageTransition;
- (void)animateTransitionToImage:(id)arg1;
- (void)applyCornerRoundingStyle:(unsigned long long)arg1 toView:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })aspectRatioPreservedFrameForSize:(struct CGSize { double x1; double x2; })arg1;
- (id)badgeImageView;
- (struct CGSize { double x1; double x2; })constrainedSizeForImageSize:(struct CGSize { double x1; double x2; })arg1 fittingSize:(struct CGSize { double x1; double x2; })arg2;
- (double)cornerRadiusForSize:(struct CGSize { double x1; double x2; })arg1 roundingStyle:(unsigned long long)arg2;
- (id)delegate;
- (void)didMoveToWindow;
- (bool)disableCornerRounding;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })effectiveAlignmentRectInsets;
- (double)effectiveBaselineOffsetFromBottom;
- (double)effectiveFirstBaselineOffsetFromTop;
- (bool)ignoreImageAlignmentRectInsets;
- (id)imageView;
- (id)init;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSizeIfNecessary;
- (double)lastBaselineOffset;
- (id)lastTlkImage;
- (void)layoutSubviews;
- (struct CGSize { double x1; double x2; })naturalSizeForSize:(struct CGSize { double x1; double x2; })arg1;
- (void)observedPropertiesChanged;
- (id)overrideColor;
- (id)placeholderView;
- (unsigned long long)placeholderVisibility;
- (unsigned long long)prominence;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setAnimateNextImageTransition:(bool)arg1;
- (void)setBadgeImageView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisableCornerRounding:(bool)arg1;
- (void)setIgnoreImageAlignmentRectInsets:(bool)arg1;
- (void)setImageView:(id)arg1;
- (void)setLastBaselineOffset:(double)arg1;
- (void)setLastTlkImage:(id)arg1;
- (void)setOverrideColor:(id)arg1;
- (void)setPlaceholderView:(id)arg1;
- (void)setPlaceholderVisibility:(unsigned long long)arg1;
- (void)setProminence:(unsigned long long)arg1;
- (void)setShadowContainer:(id)arg1;
- (void)setShadowDisabled:(bool)arg1;
- (void)setSymbolFont:(id)arg1;
- (void)setSymbolScale:(long long)arg1;
- (void)setSymbolWeight:(long long)arg1;
- (void)setTlkImage:(id)arg1;
- (void)setUseButtonColoring:(bool)arg1;
- (id)shadowContainer;
- (bool)shadowDisabled;
- (double)sizeScale;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)symbolFont;
- (long long)symbolScale;
- (long long)symbolWeight;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (id)tlkImage;
- (void)tlk_updateForAppearance:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateShadow;
- (void)updateSizeAndLayout;
- (void)updateSymbolConfiguration;
- (void)updateWithUIImage:(id)arg1 animateFadeIn:(bool)arg2 appearance:(id)arg3 isTemplate:(bool)arg4;
- (bool)useButtonColoring;

@end
