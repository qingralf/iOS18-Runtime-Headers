/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextInputCore.framework/TextInputCore
 */

@interface TIKeyboardInputManagerTransliteration : TIKeyboardInputManagerTransliterationBase {
    TLTransliterator * _autocorrectionTransliterator;
    NSMutableArray * _committedCandidates;
    NSArray * _currentCandidates;
    TLTransliterator * _exactStringTransliterator;
    bool  _hasCandidates;
    TIKeyboardInputManager * _nativeModelManager;
    bool  _prioritizeLatinCandidates;
    TLTransliterator * _transliterator;
    NSMapTable * _transliteratorCandidateByMecabraCandidatePointerValue;
}

@property (nonatomic, retain) TLTransliterator *autocorrectionTransliterator;
@property (nonatomic, retain) NSMutableArray *committedCandidates;
@property (nonatomic, retain) NSArray *currentCandidates;
@property (nonatomic, retain) TLTransliterator *exactStringTransliterator;
@property (nonatomic) bool hasCandidates;
@property (nonatomic, retain) TIKeyboardInputManager *nativeModelManager;
@property (nonatomic) bool prioritizeLatinCandidates;
@property (nonatomic, retain) TLTransliterator *transliterator;
@property (nonatomic, retain) NSMapTable *transliteratorCandidateByMecabraCandidatePointerValue;

+ (id)transliteratorInputCharacterSet;

- (void).cxx_destruct;
- (bool)acceptsCharacter:(unsigned int)arg1;
- (struct CandidateCollection { struct vector<KB::Candidate, std::allocator<KB::Candidate>> { struct Candidate {} *x_1_1_1; struct Candidate {} *x_1_1_2; struct __compressed_pair<KB::Candidate *, std::allocator<KB::Candidate>> { struct Candidate {} *x_3_2_1; } x_1_1_3; } x1; struct vector<KB::Candidate, std::allocator<KB::Candidate>> { struct Candidate {} *x_2_1_1; struct Candidate {} *x_2_1_2; struct __compressed_pair<KB::Candidate *, std::allocator<KB::Candidate>> { struct Candidate {} *x_3_2_1; } x_2_1_3; } x2; struct vector<KB::Candidate, std::allocator<KB::Candidate>> { struct Candidate {} *x_3_1_1; struct Candidate {} *x_3_1_2; struct __compressed_pair<KB::Candidate *, std::allocator<KB::Candidate>> { struct Candidate {} *x_3_2_1; } x_3_1_3; } x3; struct vector<KB::Candidate, std::allocator<KB::Candidate>> { struct Candidate {} *x_4_1_1; struct Candidate {} *x_4_1_2; struct __compressed_pair<KB::Candidate *, std::allocator<KB::Candidate>> { struct Candidate {} *x_3_2_1; } x_4_1_3; } x4; int x5; unsigned int x6; })autocorrectionCandidateStrings;
- (id)autocorrectionListForEmptyInputWithDesiredCandidateCount:(unsigned long long)arg1;
- (id)autocorrectionTransliterator;
- (id)candidateContextFromDocumentStateOnly;
- (id)candidatesForInputString:(id)arg1;
- (id)candidatesForInputString:(id)arg1 transliterator:(id)arg2;
- (id)candidatesWithTypedString:(id)arg1 autocorrectedCandidates:(id)arg2;
- (id)candidatesWithTypedString:(id)arg1 autocorrectedString:(id)arg2;
- (id)committedCandidates;
- (id)currentCandidates;
- (void)decrementLanguageModelCount:(id)arg1 latinInputString:(id)arg2 tokenID:(struct TITokenID { unsigned int x1; unsigned int x2; })arg3 contextTokens:(id)arg4;
- (void)deleteFromInputWithContext:(id)arg1;
- (id)dictionaryInputMode;
- (id)exactStringTransliterator;
- (id)generateTypingAutocorrectionsWithCandidateRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)handleAcceptedCandidate:(id)arg1 keyboardState:(id)arg2;
- (bool)hasCandidates;
- (bool)hasInputToTransliterate;
- (void)incrementLanguageModelCount:(id)arg1 latinInputString:(id)arg2 tokenID:(struct TITokenID { unsigned int x1; unsigned int x2; })arg3 contextTokens:(id)arg4 saveToDifferentialPrivacy:(int)arg5;
- (void*)initImplementation;
- (id)initWithConfig:(id)arg1 keyboardState:(id)arg2;
- (bool)isTransliterationManager;
- (id)keyEventMap;
- (Class)keyEventMapClass;
- (id)keyboardConfiguration;
- (id)lexiconLocales;
- (void)loadDictionaries;
- (void)loadFavoniusTypingModel;
- (struct shared_ptr<KB::LanguageModel> { struct LanguageModel {} *x1; struct __shared_weak_count {} *x2; })loadNewLanguageModel;
- (id)mecabraCandidatePointerValueWithCandidate:(id)arg1;
- (id)nativeModelManager;
- (bool)prioritizeLatinCandidates;
- (void)processCandidates:(id)arg1 withGeometryScore:(float)arg2 originalLatinString:(id)arg3 context:(void*)arg4 intoCandidateCollection:(void*)arg5 intoStringCandidateMap:(id)arg6;
- (id)scoreAndResortCandidates:(id)arg1 string:(id)arg2 geometryScore:(float)arg3;
- (void)setAutocorrectionTransliterator:(id)arg1;
- (void)setCommittedCandidates:(id)arg1;
- (void)setCurrentCandidates:(id)arg1;
- (void)setExactStringTransliterator:(id)arg1;
- (void)setHasCandidates:(bool)arg1;
- (void)setNativeModelManager:(id)arg1;
- (void)setPrioritizeLatinCandidates:(bool)arg1;
- (void)setTransliterator:(id)arg1;
- (void)setTransliteratorCandidateByMecabraCandidatePointerValue:(id)arg1;
- (id)sortedCandidatesFromTypedStringCandidates:(id)arg1 autocorrectedStringCandidates:(id)arg2 autocorrectedLatinString:(id)arg3;
- (void)suspend;
- (void)syncToKeyboardState:(id)arg1 from:(id)arg2 afterContextChange:(bool)arg3;
- (id)transliterator;
- (id)transliteratorCandidateByMecabraCandidatePointerValue;

@end
