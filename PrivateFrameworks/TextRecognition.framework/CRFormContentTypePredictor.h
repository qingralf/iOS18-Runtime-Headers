/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextRecognition.framework/TextRecognition
 */

@interface CRFormContentTypePredictor : NSObject {
    struct map<std::string, float, std::less<std::string>, std::allocator<std::pair<const std::string, float>>> { 
        struct __tree<std::__value_type<std::string, float>, std::__map_value_compare<std::string, std::__value_type<std::string, float>, std::less<std::string>>, std::allocator<std::__value_type<std::string, float>>> { 
            void *__begin_node_; 
            struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, float>, void *>>> { 
                struct __tree_end_node<std::__tree_node_base<void *> *> { 
                    void *__left_; 
                } __value_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, float>, std::less<std::string>>> { 
                unsigned long long __value_; 
            } __pair3_; 
        } __tree_; 
    }  _customNoneBonuses;
    struct unique_ptr<CoreRecognition::EspressoModelWrapper, std::default_delete<CoreRecognition::EspressoModelWrapper>> { 
        struct __compressed_pair<CoreRecognition::EspressoModelWrapper *, std::default_delete<CoreRecognition::EspressoModelWrapper>> { 
            struct EspressoModelWrapper {} *__value_; 
        } __ptr_; 
    }  _espressoModel;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_decodeCoreMLOutput:(id)arg1 forFields:(id)arg2 updateExternal:(bool)arg3;
- (void)_decodeEspressoOutput:(const struct { void *x1; void *x2; unsigned long long x3[4]; unsigned long long x4[4]; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; unsigned long long x14; int x15; }*)arg1 forFields:(id)arg2 locale:(id)arg3 updateExternal:(bool)arg4;
- (id)_modelInputWithFields:(id)arg1 fieldsAndRegions:(id)arg2 locale:(id)arg3;
- (bool)_predictAndAssignContentTypesForFields:(id)arg1 fieldsAndRegions:(id)arg2 locale:(id)arg3 updateExternal:(bool)arg4;
- (id)init;
- (bool)predictAndAssignContentTypesForFields:(id)arg1 fieldsAndRegions:(id)arg2 locale:(id)arg3 updateExternal:(bool)arg4;

@end
