/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextToSpeechBundleSupport.framework/TextToSpeechBundleSupport
 */

@interface TTSNeuralStyle : NSObject {
    NSString * _key;
    NSString * _name;
    NSArray * _styleVector;
}

@property (nonatomic, retain) NSString *key;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) NSArray *styleVector;

- (void).cxx_destruct;
- (struct vector<float, std::allocator<float>> { float *x1; float *x2; struct __compressed_pair<float *, std::allocator<float>> { float *x_3_1_1; } x3; })getStyleVector;
- (id)initWithName:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __short { BOOL x_1_4_1[23]; unsigned char x_1_4_2[0]; unsigned int x_1_4_3 : 7; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __long { char *x_2_4_1; unsigned long long x_2_4_2; unsigned int x_2_4_3 : 63; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })arg1 vector:(struct vector<float, std::allocator<float>> { float *x1; float *x2; struct __compressed_pair<float *, std::allocator<float>> { float *x_3_1_1; } x3; })arg2;
- (id)key;
- (id)name;
- (void)setKey:(id)arg1;
- (void)setName:(id)arg1;
- (void)setStyleVector:(id)arg1;
- (id)styleVector;

@end
