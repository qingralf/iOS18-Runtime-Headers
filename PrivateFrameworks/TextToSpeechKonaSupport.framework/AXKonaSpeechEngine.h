/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextToSpeechKonaSupport.framework/TextToSpeechKonaSupport
 */

@interface AXKonaSpeechEngine : NSObject {
    bool  _abbreviationDictionary;
    AVAudioConverter * _bufferConverter;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _bufferLock;
    NSRegularExpression * _commandRegex;
    NSDictionary * _configurationMap;
    NSCondition * _consumedBuffers;
    AXKonaConfiguration * _currentConfiguration;
    void * _currentDictionary;
    unsigned int  _currentFrameCount;
    NSMutableArray * _currentMarkers;
    AXKonaParameters * _currentParameters;
    NSArray * _currentSpeechSegments;
    TTSSpeechString * _currentSpeechString;
    AXKonaVoice * _currentVoice;
    id /* block */  _dynamicLoggingBlock;
    AVAudioFormat * _engineFormat;
    NSNumber * _highFormantBandwidthScalingFactor;
    NSNumber * _highFormantFrequencyScalingFactor;
    bool  _highQualityMode;
    float  _lastSampVal;
    AVAudioFormat * _outputFormat;
    NSNumber * _overrideAspirationGain;
    NSNumber * _overrideFricationGain;
    NSNumber * _overrideOverallGain;
    NSNumber * _overrideVoicingGain;
    short  _pSampleBuffer;
    bool  _phrasePrediction;
    bool  _preferCommunityDictionary;
    NSCondition * _producedBuffers;
    NSMutableArray * _queuedBuffers;
    TTSRulesetRunner * _ruleSetRunner;
    unsigned long long  _synthState;
    NSObject<OS_dispatch_queue> * _synthesizerSyncQueue;
    NLTokenizer * _tokenizer;
    void * _wrappedInstance;
}

@property (nonatomic) bool abbreviationDictionary;
@property (nonatomic, retain) AVAudioConverter *bufferConverter;
@property (nonatomic, retain) NSRegularExpression *commandRegex;
@property (nonatomic, retain) NSDictionary *configurationMap;
@property (nonatomic, retain) NSCondition *consumedBuffers;
@property (nonatomic, retain) AXKonaConfiguration *currentConfiguration;
@property (nonatomic) void*currentDictionary;
@property (nonatomic) unsigned int currentFrameCount;
@property (nonatomic, retain) NSMutableArray *currentMarkers;
@property (nonatomic, retain) AXKonaParameters *currentParameters;
@property (nonatomic, retain) NSArray *currentSpeechSegments;
@property (nonatomic, retain) TTSSpeechString *currentSpeechString;
@property (nonatomic, retain) AXKonaVoice *currentVoice;
@property (nonatomic, copy) id /* block */ dynamicLoggingBlock;
@property (nonatomic, retain) AVAudioFormat *engineFormat;
@property (nonatomic, retain) NSNumber *highFormantBandwidthScalingFactor;
@property (nonatomic, retain) NSNumber *highFormantFrequencyScalingFactor;
@property (nonatomic) bool highQualityMode;
@property (nonatomic) float lastSampVal;
@property (nonatomic, retain) AVAudioFormat *outputFormat;
@property (nonatomic, retain) NSNumber *overrideAspirationGain;
@property (nonatomic, retain) NSNumber *overrideFricationGain;
@property (nonatomic, retain) NSNumber *overrideOverallGain;
@property (nonatomic, retain) NSNumber *overrideVoicingGain;
@property (nonatomic, retain) AXKonaParameters *parameters;
@property (nonatomic) bool phrasePrediction;
@property (nonatomic) bool preferCommunityDictionary;
@property (nonatomic, retain) NSCondition *producedBuffers;
@property (nonatomic, retain) NSMutableArray *queuedBuffers;
@property (nonatomic, retain) TTSRulesetRunner *ruleSetRunner;
@property (nonatomic) unsigned long long synthState;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *synthesizerSyncQueue;
@property (nonatomic, retain) NLTokenizer *tokenizer;
@property (nonatomic, retain) AXKonaVoice *voice;
@property (nonatomic) void*wrappedInstance;

+ (id)allVoices;

- (void).cxx_destruct;
- (void)_cancelSynthesis;
- (void)_enqueueBuffer:(id)arg1;
- (void)_initializeConfigurationMap;
- (bool)_initializeWrappedEngineForVoice:(id)arg1;
- (id)_konaCrashPatterns;
- (bool)_loadDictionaryAtPath:(id)arg1 type:(long long)arg2 handle:(void*)arg3;
- (void)_loadDictionaryForVoice:(id)arg1;
- (id)_preprocessTextForIrregularities:(id)arg1;
- (void)_resetEnginePreservingParams;
- (id)_segmentsForText:(id)arg1;
- (bool)abbreviationDictionary;
- (id)bufferConverter;
- (void)cancelSynthesis;
- (id)commandRegex;
- (id)configurationMap;
- (id)consumedBuffers;
- (id)currentConfiguration;
- (void*)currentDictionary;
- (unsigned int)currentFrameCount;
- (id)currentMarkers;
- (id)currentParameters;
- (id)currentSpeechSegments;
- (id)currentSpeechString;
- (id)currentVoice;
- (void)dealloc;
- (id /* block */)dynamicLoggingBlock;
- (long long)eciCallback:(long long)arg1 iParam:(long long)arg2 instanceData:(void*)arg3;
- (id)engineFormat;
- (id)highFormantBandwidthScalingFactor;
- (id)highFormantFrequencyScalingFactor;
- (bool)highQualityMode;
- (id)initWithVoice:(id)arg1;
- (void)klattConstantHook:(struct { float x1; float x2; int x3; int x4; int x5; int x6; int x7; int x8; float x9; float x10; float x11; float x12; char *x13; }*)arg1;
- (void)klattDynamicHook:(struct KlattFrame { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; float x42; float x43; float x44; float x45; float x46; float x47; float x48; float x49; float x50; float x51; float x52; float x53; float x54; float x55; float x56; float x57; float x58; float x59; float x60; float x61; float x62; }*)arg1;
- (float)lastSampVal;
- (id)nextBuffer;
- (id)outputFormat;
- (id)overrideAspirationGain;
- (id)overrideFricationGain;
- (id)overrideOverallGain;
- (id)overrideVoicingGain;
- (id)parameters;
- (bool)phrasePrediction;
- (bool)preferCommunityDictionary;
- (id)producedBuffers;
- (id)queuedBuffers;
- (id)ruleSetRunner;
- (void)setAbbreviationDictionary:(bool)arg1;
- (void)setBufferConverter:(id)arg1;
- (void)setCommandRegex:(id)arg1;
- (void)setConfigurationMap:(id)arg1;
- (void)setConsumedBuffers:(id)arg1;
- (void)setCurrentConfiguration:(id)arg1;
- (void)setCurrentDictionary:(void*)arg1;
- (void)setCurrentFrameCount:(unsigned int)arg1;
- (void)setCurrentMarkers:(id)arg1;
- (void)setCurrentParameters:(id)arg1;
- (void)setCurrentSpeechSegments:(id)arg1;
- (void)setCurrentSpeechString:(id)arg1;
- (void)setCurrentVoice:(id)arg1;
- (void)setDynamicLoggingBlock:(id /* block */)arg1;
- (void)setEngineFormat:(id)arg1;
- (void)setHighFormantBandwidthScalingFactor:(id)arg1;
- (void)setHighFormantFrequencyScalingFactor:(id)arg1;
- (void)setHighQualityMode:(bool)arg1;
- (void)setLastSampVal:(float)arg1;
- (void)setOutputFormat:(id)arg1;
- (void)setOverrideAspirationGain:(id)arg1;
- (void)setOverrideFricationGain:(id)arg1;
- (void)setOverrideOverallGain:(id)arg1;
- (void)setOverrideVoicingGain:(id)arg1;
- (void)setParameters:(id)arg1;
- (void)setPhrasePrediction:(bool)arg1;
- (void)setPreferCommunityDictionary:(bool)arg1;
- (void)setProducedBuffers:(id)arg1;
- (void)setQueuedBuffers:(id)arg1;
- (void)setRuleSetRunner:(id)arg1;
- (void)setSynthState:(unsigned long long)arg1;
- (void)setSynthesizerSyncQueue:(id)arg1;
- (void)setTokenizer:(id)arg1;
- (void)setVoice:(id)arg1;
- (void)setWrappedInstance:(void*)arg1;
- (unsigned long long)synthState;
- (void)synthesizeText:(id)arg1;
- (id)synthesizerSyncQueue;
- (id)tokenizer;
- (id)voice;
- (void*)wrappedInstance;

@end
