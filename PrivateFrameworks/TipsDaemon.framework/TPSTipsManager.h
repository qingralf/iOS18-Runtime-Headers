/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TipsDaemon.framework/TipsDaemon
 */

@interface TPSTipsManager : NSObject <TPSDeviceProfileDataSource, TPSWidgetControllerDelegate> {
    NSDictionary * _cachedUserGuideMap;
    NSArray * _collections;
    NSDictionary * _collectionsMap;
    bool  _contextualTipsInactive;
    <TPSTipsManagerDelegate> * _delegate;
    TPSExperiment * _experiment;
    NSString * _lastFetchedLanguage;
    TPSMetadata * _metadata;
    TPSNotificationController * _notificationController;
    NSString * _rulesVersion;
    NSMutableArray * _sessionItems;
    NSObject<OS_dispatch_queue> * _syncQueue;
    TPSTipStatusController * _tipStatusController;
    NSArray * _tips;
    NSDictionary * _tipsMap;
    TPSWidgetController * _widgetController;
}

@property (nonatomic, retain) NSDictionary *cachedUserGuideMap;
@property (nonatomic, retain) NSArray *collections;
@property (nonatomic, retain) NSDictionary *collectionsMap;
@property (nonatomic) bool contextualTipsInactive;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <TPSTipsManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) TPSExperiment *experiment;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *lastFetchedLanguage;
@property (nonatomic, retain) TPSMetadata *metadata;
@property (nonatomic, retain) TPSNotificationController *notificationController;
@property (nonatomic, copy) NSString *rulesVersion;
@property (nonatomic, retain) NSMutableArray *sessionItems;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *syncQueue;
@property (nonatomic, retain) TPSTipStatusController *tipStatusController;
@property (nonatomic, retain) NSArray *tips;
@property (nonatomic, retain) NSDictionary *tipsMap;
@property (nonatomic, retain) TPSWidgetController *widgetController;

+ (bool)deviceLocalesContainLanguage:(id)arg1;
+ (id)experiment;
+ (id)immediateNotificationIdentifierForType:(unsigned long long)arg1;
+ (bool)needImmediateNotificationForType:(unsigned long long)arg1;
+ (void)removeExperimentCache;
+ (void)removeWelcomeDocumentCache;
+ (void)removeWidgetUpdateDate;
+ (void)resetTipKitContentProcessingFlag;
+ (id)rulesVersion;
+ (bool)setTipKitContentProcessFlagIfNeeded;
+ (bool)supportsFeaturedCollection;

- (void).cxx_destruct;
- (void)_updateExperimentCache;
- (void)_updatePauseStatus:(bool)arg1;
- (id)cachedUserGuideMap;
- (bool)checklistCollectionHasMinSuggestedTips:(id)arg1 tipMap:(id)arg2;
- (void)clearCachedUserGuides;
- (id)collectionSectionMapWithCollections:(id)arg1 availableCollectionSections:(id)arg2 collectionIdToCollectionLabelMap:(id)arg3;
- (id)collectionSectionsFromCollectionMap:(id)arg1 exclude:(id)arg2;
- (id)collectionSectionsWithEligibleCollectionSections:(id)arg1 collectionSectionMap:(id)arg2 featuredCollection:(id)arg3;
- (id)collectionStatusForCollection:(id)arg1;
- (id)collections;
- (id)collectionsMap;
- (void)contentForVariantIdentifiers:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)contentFromOrigin:(bool)arg1 processTipKitContent:(bool)arg2 contextualEligibility:(bool)arg3 widgetEligibility:(bool)arg4 notificationEligibility:(bool)arg5 preferredNotificationIdentifiers:(id)arg6 shouldDeferBlock:(id /* block */)arg7 completionHandler:(id /* block */)arg8;
- (void)contentWithMetaDictionary:(id)arg1 documents:(id)arg2 isRemote:(bool)arg3 processTipKitContent:(bool)arg4 contextualEligibility:(bool)arg5 widgetEligibility:(bool)arg6 notificationEligibility:(bool)arg7 preferredNotificationIdentifiers:(id)arg8 completionHandler:(id /* block */)arg9;
- (bool)contextualTipsInactive;
- (id)delegate;
- (void)deleteAllSearchableItemsWithCompletionHandler:(id /* block */)arg1;
- (id)experiment;
- (id)featureCollectionFromCollectionMap:(id)arg1 collectionOrder:(id)arg2 tipMap:(id)arg3;
- (void)finalEligibleContentWithCollections:(id)arg1 collectionsMap:(id)arg2 collectionDeliveryInfoMap:(id)arg3 eligibleTipIdentifiers:(id)arg4 eligibleContextualTipIdentifiers:(id)arg5 allFullTipsMap:(id)arg6 allMiniTipsMap:(id)arg7 tipDeliveryInfoMap:(id)arg8 deliveryInfoMap:(id)arg9 completionHandler:(id /* block */)arg10;
- (bool)hasWidgetDocument;
- (id)initWithTipStatusController:(id)arg1;
- (bool)isContentIdentifierHoldoutCamp:(id)arg1;
- (bool)isHardwareWelcome;
- (bool)isPreconditionValidForIdentifier:(id)arg1 preconditionDictionary:(id)arg2;
- (id)lastFetchedLanguage;
- (id)metadata;
- (id)notificationController;
- (void)processClientConditions:(id)arg1 targetingCache:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)processCollection:(id)arg1 collectionsMap:(id)arg2 ignoreSection:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)processTipDocumentsDictionary:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)processTipsDeliveryInfo:(id)arg1 deliveryInfoMap:(id)arg2 targetingCache:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)processUserGuidesFromContentPackage:(id)arg1;
- (void)reindexAllSearchableItemsWithCompletionHandler:(id /* block */)arg1;
- (void)reindexSearchableItemsWithIdentifiers:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)rulesVersion;
- (id)sessionItems;
- (void)setCachedUserGuideMap:(id)arg1;
- (void)setCollections:(id)arg1;
- (void)setCollectionsMap:(id)arg1;
- (void)setContextualTipsInactive:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExperiment:(id)arg1;
- (void)setLastFetchedLanguage:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setNotificationController:(id)arg1;
- (void)setRulesVersion:(id)arg1;
- (void)setSessionItems:(id)arg1;
- (void)setSyncQueue:(id)arg1;
- (void)setTipStatusController:(id)arg1;
- (void)setTips:(id)arg1;
- (void)setTipsMap:(id)arg1;
- (void)setWidgetController:(id)arg1;
- (bool)shouldPerformWidgetUpdate;
- (id)syncQueue;
- (id)tipStatusController;
- (id)tips;
- (id)tipsMap;
- (void)updateContentIfOverrideImmediately:(bool)arg1;
- (id)updateDocumentContent:(id)arg1 withClientConditions:(id)arg2 checklistCompletedConditions:(id)arg3 usingDictionary:(id)arg4;
- (void)updateSupplementalIdentifiersForIdentifier:(id)arg1 fromDictionary:(id)arg2;
- (id)welcomeCollectionFromContentPackage:(id)arg1;
- (id)welcomeDocumentFromContentPackage:(id)arg1;
- (id)widgetController;
- (bool)widgetController:(id)arg1 validForDocument:(id)arg2 documentDeliveryInfoMap:(id)arg3 deliveryInfoMap:(id)arg4;

@end
