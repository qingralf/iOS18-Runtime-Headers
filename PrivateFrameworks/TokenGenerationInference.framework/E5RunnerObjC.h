/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TokenGenerationInference.framework/TokenGenerationInference
 */

@interface E5RunnerObjC : NSObject {
    TGIE5ANESessionObjC * _aneSession;
    NSString * _description;
    NSObject<OS_os_log> * _log;
    struct unique_ptr<cgm::token_generation_inference::ajax::AJAXE5MLModel, std::default_delete<cgm::token_generation_inference::ajax::AJAXE5MLModel>> { 
        struct __compressed_pair<cgm::token_generation_inference::ajax::AJAXE5MLModel *, std::default_delete<cgm::token_generation_inference::ajax::AJAXE5MLModel>> { 
            struct AJAXE5MLModel {} *__value_; 
        } __ptr_; 
    }  ajax_e5_model;
}

@property (nonatomic, readonly) unsigned long long maxContextLength;
@property (nonatomic, readonly) bool supportsModularAttention;
@property (nonatomic, readonly) bool supportsNonLinearRunning;
@property (nonatomic, readonly) unsigned long long vocabularyCount;

+ (bool)compileModelAtPath:(id)arg1 modelType:(long long)arg2 error:(id*)arg3;
+ (bool)compileModelWithConfiguration:(id)arg1 error:(id*)arg2;
+ (id)compiledModelAtPath:(id)arg1 modelType:(long long)arg2 bundleCachePath:(id)arg3 error:(id*)arg4;
+ (id)compiledModelWithConfiguration:(id)arg1 bundleCachePath:(id)arg2 error:(id*)arg3;
+ (bool)doesModelRequireCompilationAtPath:(id)arg1 modelType:(long long)arg2;
+ (bool)doesModelRequireCompilationWithConfiguration:(id)arg1;
+ (bool)doesModelRequireCompilationWithConfiguration:(id)arg1 bundleCachePath:(id)arg2;
+ (id)log;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clearAllState;
- (id)createKVCacheEntry:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 error:(id*)arg2;
- (id)description;
- (void)enableTelemetryWithIdentifier:(id)arg1;
- (unsigned long long)getNumTokensProcessed;
- (id)initWithModelConfiguration:(id)arg1 error:(id*)arg2;
- (unsigned long long)maxContextLength;
- (void)moveToDynamicState;
- (void)moveToFullyLoadedState;
- (void)purgeSteps:(id)arg1;
- (void)purgeUnusedKeyValueCache:(id)arg1 trgIdxs:(id)arg2;
- (void)reset;
- (void)resetToStep:(long long)arg1;
- (void)runTokens:(id)arg1 outputBlock:(id /* block */)arg2;
- (void)runTokens:(id)arg1 tokenTreeIndexes:(id)arg2 outputBlock:(id /* block */)arg3;
- (bool)setKVCacheEntry:(id)arg1 startIndex:(long long)arg2 error:(id*)arg3;
- (bool)supportsModularAttention;
- (bool)supportsNonLinearRunning;
- (unsigned long long)vocabularyCount;

@end
