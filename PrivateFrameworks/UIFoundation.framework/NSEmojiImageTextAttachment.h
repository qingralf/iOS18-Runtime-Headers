/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation
 */

@interface NSEmojiImageTextAttachment : NSTextAttachment <CTEmojiImageProviding> {
    NSAdaptiveImageGlyph * _glyph;
}

@property (readonly) NSAdaptiveImageGlyph *adaptiveImageGlyph;
@property (copy) NSString *contentIdentifier;
@property (copy) NSString *shortDescription;

+ (id)_UTIForEmojiImage;
+ (bool)_isEmojiImageTextAttachmentData:(id)arg1 UTI:(id)arg2;
+ (bool)_readsEmojiImageTextAttachmentFromDocumentFormats;
+ (id)emojiImageTextAttachmentForContentIdentifier:(id)arg1;
+ (void)flushInstanceCache;
+ (void)initialize;
+ (void)setEmojiImageTextAttachment:(id)arg1 forContentIdentifier:(id)arg2;

- (void).cxx_destruct;
- (id)_fallbackFileWrapper;
- (bool)_isEmojiImage;
- (id)adaptiveImageGlyph;
- (id)contentIdentifier;
- (unsigned long long)hash;
- (struct CGImage { }*)imageForPointSize:(double)arg1 scaleFactor:(double)arg2 imageOffset:(out struct CGPoint { double x1; double x2; }*)arg3 imageSize:(out struct CGSize { double x1; double x2; }*)arg4;
- (struct CGImage { }*)imageForProposedSize:(struct CGSize { double x1; double x2; })arg1 scaleFactor:(double)arg2 imageOffset:(out struct CGPoint { double x1; double x2; }*)arg3 imageSize:(out struct CGSize { double x1; double x2; }*)arg4;
- (id)initWithAdaptiveImageGlyph:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithFileWrapper:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)shortDescription;
- (id)strikes;

@end
