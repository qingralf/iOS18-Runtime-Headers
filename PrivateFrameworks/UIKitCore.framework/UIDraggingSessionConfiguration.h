/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UIDraggingSessionConfiguration : NSObject <NSSecureCoding> {
    bool  _avoidsKeyboardSuppression;
    NSXPCListenerEndpoint * _axEndpoint;
    _DUITargetLayerDescriptor * _coordinateSpaceSourceLayerContext;
    NSXPCListenerEndpoint * _dataProviderEndpoint;
    struct CAPoint3D { 
        double x; 
        double y; 
        double z; 
    }  _initialCentroid;
    struct CAPoint3D { 
        double x; 
        double y; 
        double z; 
    }  _initialCentroid3D;
    struct CAPoint3D { 
        double x; 
        double y; 
        double z; 
    }  _initialCentroidInSourceWindow;
    bool  _initiatedWithPointer;
    PBItemCollection * _itemCollection;
    struct CGSize { 
        double width; 
        double height; 
    }  _maximumResizableSize;
    struct CGSize { 
        double width; 
        double height; 
    }  _minimumResizableSize;
    double  _originalRotation;
    struct CGSize { 
        double width; 
        double height; 
    }  _originalScale;
    NSString * _persistentSceneIdentifier;
    NSIndexSet * _preferredPreviewIndexes;
    bool  _resizable;
    bool  _rotatable;
    UIDraggingSystemTouchRoutingPolicy * _routingPolicy;
    NSString * _sceneIdentifier;
    bool  _sessionIsRestrictedToLocalDevice;
    bool  _sessionIsRestrictedToSourceApplication;
    bool  _sourceExpectsStagedLegacySelectors;
    bool  _supportsSystemDrag;
    NSArray * _touchIDs;
    bool  _wantsElasticEffects;
    bool  _wantsPresentationUpdates;
}

@property (nonatomic) struct CAPoint3D { double x1; double x2; double x3; } _initialCentroid;
@property (nonatomic) bool avoidsKeyboardSuppression;
@property (nonatomic, retain) NSXPCListenerEndpoint *axEndpoint;
@property (nonatomic, retain) _DUITargetLayerDescriptor *coordinateSpaceSourceLayerContext;
@property (nonatomic, retain) NSXPCListenerEndpoint *dataProviderEndpoint;
@property (nonatomic) struct CGPoint { double x1; double x2; } initialCentroid;
@property (nonatomic, readonly) struct CAPoint3D { double x1; double x2; double x3; } initialCentroid3D;
@property (nonatomic) struct CAPoint3D { double x1; double x2; double x3; } initialCentroidInSourceWindow;
@property (nonatomic) bool initiatedWithPointer;
@property (nonatomic, retain) PBItemCollection *itemCollection;
@property (nonatomic) struct CGSize { double x1; double x2; } maximumResizableSize;
@property (nonatomic) struct CGSize { double x1; double x2; } minimumResizableSize;
@property (nonatomic) double originalRotation;
@property (nonatomic) struct CGSize { double x1; double x2; } originalScale;
@property (nonatomic, retain) NSString *persistentSceneIdentifier;
@property (nonatomic, retain) NSIndexSet *preferredPreviewIndexes;
@property (nonatomic) bool resizable;
@property (nonatomic) bool rotatable;
@property (nonatomic, retain) UIDraggingSystemTouchRoutingPolicy *routingPolicy;
@property (nonatomic, retain) NSString *sceneIdentifier;
@property (nonatomic) bool sessionIsRestrictedToLocalDevice;
@property (nonatomic) bool sessionIsRestrictedToSourceApplication;
@property (nonatomic) bool sourceExpectsStagedLegacySelectors;
@property (nonatomic) bool supportsSystemDrag;
@property (nonatomic, retain) NSArray *touchIDs;
@property (nonatomic) bool wantsElasticEffects;
@property (nonatomic) bool wantsPresentationUpdates;

+ (id)configurationWithItemCollection:(id)arg1 dataProviderEndpoint:(id)arg2 initialCentroidInSourceWindow:(struct CAPoint3D { double x1; double x2; double x3; })arg3 sourceView:(id)arg4;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (struct CAPoint3D { double x1; double x2; double x3; })_initialCentroid;
- (bool)avoidsKeyboardSuppression;
- (id)axEndpoint;
- (id)coordinateSpaceSourceLayerContext;
- (id)dataProviderEndpoint;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (struct CGPoint { double x1; double x2; })initialCentroid;
- (struct CAPoint3D { double x1; double x2; double x3; })initialCentroid3D;
- (struct CAPoint3D { double x1; double x2; double x3; })initialCentroidInSourceWindow;
- (bool)initiatedWithPointer;
- (id)itemCollection;
- (struct CGSize { double x1; double x2; })maximumResizableSize;
- (struct CGSize { double x1; double x2; })minimumResizableSize;
- (double)originalRotation;
- (struct CGSize { double x1; double x2; })originalScale;
- (id)persistentSceneIdentifier;
- (id)preferredPreviewIndexes;
- (bool)resizable;
- (bool)rotatable;
- (id)routingPolicy;
- (id)sceneIdentifier;
- (bool)sessionIsRestrictedToLocalDevice;
- (bool)sessionIsRestrictedToSourceApplication;
- (void)setAvoidsKeyboardSuppression:(bool)arg1;
- (void)setAxEndpoint:(id)arg1;
- (void)setCoordinateSpaceSourceLayerContext:(id)arg1;
- (void)setDataProviderEndpoint:(id)arg1;
- (void)setInitialCentroid:(struct CGPoint { double x1; double x2; })arg1;
- (void)setInitialCentroidInSourceWindow:(struct CAPoint3D { double x1; double x2; double x3; })arg1;
- (void)setInitiatedWithPointer:(bool)arg1;
- (void)setItemCollection:(id)arg1;
- (void)setMaximumResizableSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setMinimumResizableSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setOriginalRotation:(double)arg1;
- (void)setOriginalScale:(struct CGSize { double x1; double x2; })arg1;
- (void)setPersistentSceneIdentifier:(id)arg1;
- (void)setPreferredPreviewIndexes:(id)arg1;
- (void)setResizable:(bool)arg1;
- (void)setRotatable:(bool)arg1;
- (void)setRoutingPolicy:(id)arg1;
- (void)setSceneIdentifier:(id)arg1;
- (void)setSessionIsRestrictedToLocalDevice:(bool)arg1;
- (void)setSessionIsRestrictedToSourceApplication:(bool)arg1;
- (void)setSourceExpectsStagedLegacySelectors:(bool)arg1;
- (void)setSupportsSystemDrag:(bool)arg1;
- (void)setTouchIDs:(id)arg1;
- (void)setWantsElasticEffects:(bool)arg1;
- (void)setWantsPresentationUpdates:(bool)arg1;
- (void)set_initialCentroid:(struct CAPoint3D { double x1; double x2; double x3; })arg1;
- (bool)sourceExpectsStagedLegacySelectors;
- (bool)supportsSystemDrag;
- (id)touchIDs;
- (bool)wantsElasticEffects;
- (bool)wantsPresentationUpdates;

@end
