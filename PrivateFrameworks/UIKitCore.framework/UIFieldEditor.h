/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UIFieldEditor : UIScrollView <NSLayoutManagerDelegate, NSUITextViewCommonMethods, UIAutoscrollContainer, UIKeyInputPrivate, UIKeyboardInput, UITextAutoscrolling, UITextFieldContent, UITextInput, UITextInputControllerDelegate, UITextInputPrivate> {
    bool  __shouldObscureNextInput;
    NSTextContainer * __textContainer;
    UITextInputController * __textInputController;
    _UITextLayoutControllerBase<_UITextLayoutController> * __textLayoutController;
    _UICascadingTextStorage * __textStorage;
    bool  _active;
    bool  _allowsAttachments;
    UIAutoscroll * _autoscroll;
    struct CGPoint { 
        double x; 
        double y; 
    }  _autoscrollContentOffset;
    bool  _cachedUserInteractionEnabled;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentInsetsFromFonts;
    UIView<_UITextCanvas> * _contentView;
    double  _desiredContentWidth;
    struct { 
        unsigned int delegateRespondsToFieldEditorDidChange : 1; 
        unsigned int delegateRespondsToFieldEditorDidChangeSelection : 1; 
        unsigned int delegateRespondsToShouldInsertText : 1; 
        unsigned int delegateRespondsToShouldReplaceWithText : 1; 
        unsigned int suppressScrollToSelection : 1; 
        unsigned int clearOnNextEdit : 1; 
        unsigned int needsInvalidationAfterObscuredRangeChange : 1; 
        unsigned int isAnimatingPaste : 1; 
        unsigned int contentInsetsFromFontsValid : 1; 
    }  _feFlags;
    NSTimer * _obscureAllTextTimer;
    unsigned long long  _obscuredSecureLength;
    NSAttributedString * _originalAttributedString;
    NSDictionary * _originalDefaultAttributes;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _padding;
    id /* block */  _scrollAnimationEndedAction;
    UITextField * _textField;
}

@property (nonatomic, copy) NSIndexSet *PINEntrySeparatorIndexes; /* unknown property attribute: ? */
@property (nonatomic, readonly) RTIInputSystemSourceSession *_rtiSourceSession; /* unknown property attribute: ? */
@property (setter=_setScrollAnimationEndedAction:, nonatomic, copy) id /* block */ _scrollAnimationEndedAction;
@property (nonatomic) bool _shouldObscureNextInput;
@property (nonatomic) bool _systemCursorAccessoriesDisabled; /* unknown property attribute: ? */
@property (nonatomic) long long _textInputSource; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsDictationSearchResults; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsEmoji; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsFloatingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsInitialEmojiKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsPayloads; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsSplitKeyboard; /* unknown property attribute: ? */
@property unsigned long long allowedWritingToolsResultOptions; /* unknown property attribute: ? */
@property (nonatomic) bool allowsAttachments;
@property (nonatomic) long long allowsTextAnimationsType; /* unknown property attribute: ? */
@property (nonatomic) long long autocapitalizationType; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *autocorrectionContext; /* unknown property attribute: ? */
@property (nonatomic) long long autocorrectionType; /* unknown property attribute: ? */
@property (nonatomic) struct CGPoint { double x1; double x2; } autoscrollContentOffset;
@property (nonatomic, readonly) UITextPosition *beginningOfDocument;
@property (nonatomic) bool contentsIsSingleValue; /* unknown property attribute: ? */
@property (nonatomic, readonly) long long cursorBehavior; /* unknown property attribute: ? */
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) bool deferBecomingResponder; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (getter=isDevicePasscodeEntry, nonatomic) bool devicePasscodeEntry; /* unknown property attribute: ? */
@property (nonatomic) bool disableHandwritingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool disableInputBars; /* unknown property attribute: ? */
@property (nonatomic) bool disablePrediction; /* unknown property attribute: ? */
@property (nonatomic) bool displaySecureEditsUsingPlainText; /* unknown property attribute: ? */
@property (nonatomic) bool displaySecureTextUsingPlainText; /* unknown property attribute: ? */
@property (getter=isEditable, nonatomic, readonly) bool editable; /* unknown property attribute: ? */
@property (nonatomic) int emptyContentReturnKeyType; /* unknown property attribute: ? */
@property (nonatomic) bool enablesReturnKeyAutomatically; /* unknown property attribute: ? */
@property (nonatomic) bool enablesReturnKeyOnNonWhiteSpaceContent; /* unknown property attribute: ? */
@property (nonatomic, readonly) UITextPosition *endOfDocument;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } floatingKeyboardEdgeInsets; /* unknown property attribute: ? */
@property (nonatomic) bool forceDefaultDictationInfo; /* unknown property attribute: ? */
@property (nonatomic) long long forceDictationKeyboardType; /* unknown property attribute: ? */
@property (nonatomic) bool forceDisableDictation; /* unknown property attribute: ? */
@property (nonatomic) bool forceEnableDictation; /* unknown property attribute: ? */
@property (nonatomic) bool forceFloatingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool forceSpellingDictation; /* unknown property attribute: ? */
@property (nonatomic) bool hasDefaultContents; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool hasText;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hidePrediction; /* unknown property attribute: ? */
@property (nonatomic) long long inlineCompletionType; /* unknown property attribute: ? */
@property (nonatomic) long long inlinePredictionType; /* unknown property attribute: ? */
@property (nonatomic, retain) UIInputContextHistory *inputContextHistory; /* unknown property attribute: ? */
@property (nonatomic) <UITextInputDelegate> *inputDelegate;
@property (nonatomic, readonly) id insertDictationResultPlaceholder; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *insertionPointColor; /* unknown property attribute: ? */
@property (nonatomic) unsigned long long insertionPointWidth; /* unknown property attribute: ? */
@property (nonatomic, readonly) UITextInteractionAssistant *interactionAssistant;
@property (nonatomic) bool isCarPlayIdiom; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool isSingleLineDocument; /* unknown property attribute: ? */
@property (nonatomic) long long keyboardAppearance; /* unknown property attribute: ? */
@property (nonatomic) long long keyboardType; /* unknown property attribute: ? */
@property (nonatomic, readonly) NSLayoutManager *layoutManager;
@property (nonatomic, readonly) long long layoutOrientation;
@property (nonatomic) bool learnsCorrections; /* unknown property attribute: ? */
@property (nonatomic) bool loadKeyboardsForSiriLanguage; /* unknown property attribute: ? */
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } markedRange; /* unknown property attribute: ? */
@property (nonatomic, readonly) UITextRange *markedTextRange;
@property (nonatomic, readonly) NSDictionary *markedTextStyle; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *matchHighlightColor; /* unknown property attribute: ? */
@property (nonatomic) long long mathExpressionCompletionType; /* unknown property attribute: ? */
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } padding;
@property (nonatomic, copy) UITextInputPasswordRules *passwordRules; /* unknown property attribute: ? */
@property (nonatomic) bool preferOnlineDictation; /* unknown property attribute: ? */
@property (nonatomic) long long preferredKeyboardStyle; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *recentInputIdentifier; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *responseContext; /* unknown property attribute: ? */
@property (nonatomic) bool returnKeyGoesToNextResponder; /* unknown property attribute: ? */
@property (nonatomic) long long returnKeyType; /* unknown property attribute: ? */
@property (getter=isSecureTextEntry, nonatomic) bool secureTextEntry; /* unknown property attribute: ? */
@property (copy) UITextRange *selectedTextRange;
@property (nonatomic) long long selectionAffinity; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionBarColor; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionBorderColor; /* unknown property attribute: ? */
@property (nonatomic) double selectionBorderWidth; /* unknown property attribute: ? */
@property (nonatomic) double selectionCornerRadius; /* unknown property attribute: ? */
@property (nonatomic, retain) UIImage *selectionDragDotImage; /* unknown property attribute: ? */
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } selectionEdgeInsets; /* unknown property attribute: ? */
@property (nonatomic) long long selectionGranularity; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionHighlightColor; /* unknown property attribute: ? */
@property (nonatomic) int shortcutConversionType; /* unknown property attribute: ? */
@property (nonatomic) bool shouldAutoscroll; /* unknown property attribute: ? */
@property (nonatomic) bool showDictationButton; /* unknown property attribute: ? */
@property (nonatomic) long long smartDashesType; /* unknown property attribute: ? */
@property (nonatomic) long long smartInsertDeleteType; /* unknown property attribute: ? */
@property (nonatomic) long long smartQuotesType; /* unknown property attribute: ? */
@property (nonatomic) long long spellCheckingType; /* unknown property attribute: ? */
@property (readonly) Class superclass;
@property (nonatomic, retain) _UISupplementalLexicon *supplementalLexicon; /* unknown property attribute: ? */
@property (nonatomic, retain) UIImage *supplementalLexiconAmbiguousItemIcon; /* unknown property attribute: ? */
@property (nonatomic) bool supportsAdaptiveImageGlyph; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool supportsEmojiImageTextAttachments; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool supportsImagePaste; /* unknown property attribute: ? */
@property (nonatomic) bool suppressReturnKeyStyling; /* unknown property attribute: ? */
@property (nonatomic, readonly) NSTextContainer *textContainer;
@property (nonatomic, copy) NSString *textContentType; /* unknown property attribute: ? */
@property (nonatomic, readonly) <UITextInputSuggestionDelegate> *textInputSuggestionDelegate; /* unknown property attribute: ? */
@property (nonatomic, readonly) UIView *textInputView; /* unknown property attribute: ? */
@property (nonatomic, readonly) _UITextLayoutControllerBase<_UITextLayoutController> *textLayoutController;
@property (nonatomic) int textLoupeVisibility; /* unknown property attribute: ? */
@property (nonatomic, readonly) UITextRange *textRangeForServicesInteraction; /* unknown property attribute: ? */
@property (nonatomic) long long textScriptType; /* unknown property attribute: ? */
@property (nonatomic) int textSelectionBehavior; /* unknown property attribute: ? */
@property (nonatomic, readonly) NSTextStorage *textStorage;
@property (nonatomic) id textSuggestionDelegate; /* unknown property attribute: ? */
@property (nonatomic) struct __CFCharacterSet { }*textTrimmingSet; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *tintColor; /* unknown property attribute: ? */
@property (nonatomic, readonly) <UITextInputTokenizer> *tokenizer;
@property (nonatomic) bool typingAdaptationDisabled; /* unknown property attribute: ? */
@property (nonatomic, copy) NSDictionary *typingAttributes;
@property (nonatomic, retain) UIColor *underlineColorForSpelling; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *underlineColorForTextAlternatives; /* unknown property attribute: ? */
@property (nonatomic) bool useAutomaticEndpointing; /* unknown property attribute: ? */
@property (nonatomic) bool useInterfaceLanguageForLocalization; /* unknown property attribute: ? */
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } validTextRange; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool wasEverSecureTextEntry; /* unknown property attribute: ? */
@property unsigned long long writingToolsAllowedInputOptions; /* unknown property attribute: ? */
@property long long writingToolsBehavior; /* unknown property attribute: ? */

+ (id)activeFieldEditor;
+ (id)excludedElementsForHTML;
+ (id)sharedFieldEditor;

- (void).cxx_destruct;
- (void)_applyCorrectTextContainerSize;
- (void)_applyCorrectTextContainerSize:(id)arg1;
- (id)_attributedTextInRange:(id)arg1;
- (void)_cancelObscureAllTextTimer;
- (bool)_clearOnEditIfNeeded;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_contentInsetsFromFonts;
- (void)_deactivateSelectionView;
- (void)_deleteBackwardAndNotify:(bool)arg1;
- (void)_ephemerallyUnobscureCharacterAtIndex:(unsigned long long)arg1;
- (void)_ephemerallyUnobscureTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_fullContentInsetsFromFonts;
- (void)_handleObscuredTextAfterActivationChange;
- (void)_handleObscuredTextInputIfNecessaryWithEditingBlock:(id /* block */)arg1;
- (bool)_hasDictationPlaceholder;
- (id)_inputController;
- (void)_invalidateAfterObscuredRangeChangeIfNeeded;
- (bool)_mightHaveSelection;
- (void)_obscureAllText;
- (double)_passcodeStyleAlpha;
- (void)_performWhileSuppressingDelegateNotifications:(id /* block */)arg1;
- (void)_resetTypingAttributes;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_responderExternalTouchRectForWindow:(id)arg1;
- (id)_responderForBecomeFirstResponder;
- (id /* block */)_scrollAnimationEndedAction;
- (void)_scrollRangeToVisible:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 animated:(bool)arg2;
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(bool)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_selectionClipRect;
- (void)_setAttributedTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 replacementText:(id)arg2 andSetCaretSelectionAfterText:(bool)arg3;
- (void)_setNeedsInvalidateAfterObscuredRangeChange;
- (void)_setScrollAnimationEndedAction:(id /* block */)arg1;
- (void)_setTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 replacementText:(id)arg2 andSetCaretSelectionAfterText:(bool)arg3;
- (void)_setValue:(id)arg1 forTextAttribute:(id)arg2;
- (bool)_shouldIgnoreAutofillSave;
- (bool)_shouldObscureInput;
- (bool)_shouldObscureNextInput;
- (id)_textCanvasView;
- (id)_textContainer;
- (id)_textInputController;
- (id)_textInputTraits;
- (id)_textLayoutController;
- (id)_textSelectingContainer;
- (id)_textStorage;
- (void)_textStorageDidProcessEditing:(id)arg1;
- (void)_tvUpdateTextColor;
- (void)_unobscureAllText;
- (void)_unobscureTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 settingTimerToReobscure:(bool)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_unobscuredSecureRange;
- (void)_updateLayoutManagerStyleEffectConfiguration;
- (void)_updateTextSelectionFromBehavior;
- (id)_visualSelectionRangeForExtent:(id)arg1 forPoint:(struct CGPoint { double x1; double x2; })arg2 fromPosition:(id)arg3 inDirection:(long long)arg4;
- (void)activateEditor;
- (void)addTextAlternativesDisplayStyle:(long long)arg1 toRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (bool)allowsAttachments;
- (id)attributedSubstringForMarkedRange;
- (id)attributedText;
- (id)attributedTextInRange:(id)arg1;
- (struct CGPoint { double x1; double x2; })autoscrollContentOffset;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (void)beginSelectionChange;
- (id)beginningOfDocument;
- (void)cancelAutoscroll;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })caretRectForPosition:(id)arg1;
- (id)characterRangeAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (void)clearText;
- (id)closestPositionToPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)closestPositionToPoint:(struct CGPoint { double x1; double x2; })arg1 withinRange:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentFrameForView:(id)arg1;
- (void)deactivateEditorDiscardingEdits:(bool)arg1;
- (void)dealloc;
- (void)deleteBackward;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)enclosingScrollView;
- (id)endOfDocument;
- (void)endSelectionChange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })firstRectForRange:(id)arg1;
- (id)font;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForDictationResultPlaceholder:(id)arg1;
- (bool)hasMarkedText;
- (bool)hasText;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithTextField:(id)arg1;
- (id)inputDelegate;
- (void)insertAttributedText:(id)arg1;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (id)insertDictationResultPlaceholder;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })insertFilteredText:(id)arg1;
- (void)insertText:(id)arg1;
- (id)insertTextPlaceholderWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)interactionAssistant;
- (void)invalidateTextContainerOrigin;
- (bool)isEditing;
- (bool)isFirstResponder;
- (bool)isHorizontallyResizable;
- (bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(bool)arg3;
- (bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementText:(id)arg3;
- (bool)keyboardInputChanged:(id)arg1;
- (void)keyboardInputChangedSelection:(id)arg1;
- (bool)keyboardInputShouldDelete:(id)arg1;
- (id)layoutManager;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })layoutManager:(id)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(id)arg3 proposedLineFragment:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 glyphPosition:(struct CGPoint { double x1; double x2; })arg5 characterIndex:(unsigned long long)arg6;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(bool)arg3;
- (id)layoutManager:(id)arg1 effectiveCUICatalogForTextEffect:(id)arg2;
- (unsigned long long)layoutManager:(id)arg1 shouldGenerateGlyphs:(const unsigned short*)arg2 properties:(const long long*)arg3 characterIndexes:(const unsigned long long*)arg4 font:(id)arg5 forGlyphRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6;
- (long long)layoutManager:(id)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;
- (long long)layoutOrientation;
- (void)layoutSubviews;
- (id)linkTextAttributes;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })markedRange;
- (id)markedTextRange;
- (id)markedTextStyle;
- (id)metadataDictionariesForDictationResults;
- (id)methodSignatureForSelector:(SEL)arg1;
- (struct CGSize { double x1; double x2; })minSize;
- (long long)nonEditingLinebreakMode;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })padding;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (id)rangeWithTextAlternatives:(id*)arg1 atPosition:(id)arg2;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(bool)arg2;
- (void)removeTextPlaceholder:(id)arg1;
- (void)replaceRange:(id)arg1 withAttributedText:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (bool)respondsToSelector:(SEL)arg1;
- (void)scrollSelectionToVisible:(bool)arg1;
- (int)scrollXOffset;
- (int)scrollYOffset;
- (void)selectAll;
- (id)selectedTextRange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })selectionRange;
- (id)selectionRectsForRange:(id)arg1;
- (void)setAllowsAttachments:(bool)arg1;
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setAttributedText:(id)arg1;
- (void)setAttributedText:(id)arg1 andSetCaretSelectionAfterText:(bool)arg2;
- (void)setAttributedTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 replacementText:(id)arg2;
- (void)setAutoscrollContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (void)setConstrainedFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setContentOffset:(struct CGPoint { double x1; double x2; })arg1 animated:(bool)arg2;
- (void)setDisplaySecureEditsUsingPlainText:(bool)arg1;
- (void)setFont:(id)arg1;
- (void)setInputDelegate:(id)arg1;
- (void)setLayoutOrientation:(long long)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setMarkedTextStyle:(id)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 avoidAdditionalLayout:(bool)arg2;
- (void)setNonEditingLinebreakMode:(long long)arg1;
- (void)setPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setScrollXOffset:(int)arg1 scrollYOffset:(int)arg2;
- (void)setScrollXOffset:(int)arg1 scrollYOffset:(int)arg2 adjustForPurpleCaret:(bool)arg3;
- (void)setSecureTextEntry:(bool)arg1;
- (void)setSelectedTextRange:(id)arg1;
- (void)setSelection:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setText:(id)arg1;
- (void)setText:(id)arg1 andSetCaretSelectionAfterText:(bool)arg2;
- (void)setTextColor:(id)arg1;
- (void)setTextContainer:(id)arg1;
- (void)setTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 replacementText:(id)arg2;
- (void)setTypingAttributes:(id)arg1;
- (bool)setUpClippingWithMaskForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 contentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)set_shouldObscureNextInput:(bool)arg1;
- (void)startAutoscroll:(struct CGPoint { double x1; double x2; })arg1;
- (id)text;
- (id)textColor;
- (id)textColorForCaretSelection;
- (id)textContainer;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })textContainerInset;
- (struct CGPoint { double x1; double x2; })textContainerOrigin;
- (struct CGPoint { double x1; double x2; })textContainerOriginForTextAlignment:(long long)arg1;
- (void)textContainerUsageDidChangeToSize:(struct CGSize { double x1; double x2; })arg1;
- (id)textField;
- (id)textInRange:(id)arg1;
- (void)textInput:(id)arg1 prepareAttributedTextForInsertion:(id)arg2;
- (bool)textInput:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementText:(id)arg3;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })textInput:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 toCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (void)textInputDidAnimatePaste:(id)arg1;
- (void)textInputDidChange:(id)arg1;
- (void)textInputDidChangeSelection:(id)arg1;
- (bool)textInputShouldExtendCaretHeight:(id)arg1;
- (id)textInputTraits;
- (id)textInputView;
- (void)textInputWillAnimatePaste:(id)arg1;
- (id)textLayoutController;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)textStorage;
- (id)tokenizer;
- (void)traitCollectionDidChange:(id)arg1;
- (id)typingAttributes;
- (id)undoManager;
- (void)unmarkText;
- (void)updateAutoscroll:(id)arg1;
- (void)updateInsertionPointStateAndRestartTimer:(bool)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleRect;

@end
