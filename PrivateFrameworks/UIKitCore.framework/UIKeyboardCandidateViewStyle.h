/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UIKeyboardCandidateViewStyle : NSObject <NSCopying, TUICandidateViewStyle> {
    bool  _allowCandidateGridExpanding;
    long long  _alternativeTextAlignment;
    UIColor * _alternativeTextColor;
    UIFont * _alternativeTextFont;
    double  _alternativeTextLeftSpacing;
    UIFont * _annotationTextFont;
    bool  _applyCornerRadiusToAllCandidates;
    UIColor * _arrowButtonBackgroundColor;
    bool  _arrowButtonBackgroundHidden;
    UIColor * _arrowButtonColor;
    UIButtonConfiguration * _arrowButtonConfig;
    double  _arrowButtonHeight;
    bool  _arrowButtonHighlightBackgroundHidden;
    NSString * _arrowButtonImageName;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _arrowButtonPadding;
    UIImage * _arrowButtonSeparatorImage;
    UIImage * _autofillExtraCandidateImage;
    UIColor * _backgroundColor;
    double  _backgroundOpacity;
    UIFont * _candidateFont;
    UIColor * _candidateNumberColor;
    UIFont * _candidateNumberFont;
    UIColor * _cellBackgroundColor;
    UIImage * _cellBackgroundImage;
    double  _cellCornerRadius;
    UIImage * _cellSeparatorImage;
    long long  _cellTextAlignment;
    unsigned long long  _columnsCount;
    double  _cornerRadius;
    bool  _darkBackdrop;
    bool  _disableSwitchingSortingMethodByTabKey;
    bool  _doNotClipToBounds;
    bool  _dontSelectLastItemByBackwardMoving;
    bool  _dragGestureDisabled;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _extraCellPadding;
    bool  _fillGridWithLines;
    double  _foregroundOpacity;
    UIColor * _gridBackgroundColor;
    struct CGPoint { 
        double x; 
        double y; 
    }  _gridLineOffset;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _gridLinePadding;
    unsigned long long  _gridMaskedCorners;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _gridPadding;
    UIColor * _groupHeaderBackgroundColor;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _groupHeaderPadding;
    bool  _hasShadow;
    bool  _hideLinesOnDisambiguationGridEdges;
    bool  _hideSlottedCellSeparators;
    bool  _hidesPartialCandidates;
    UIColor * _highlightedAlternativeTextColor;
    UIColor * _highlightedBackgroundColor;
    UIColor * _highlightedCandidateNumberColor;
    UIImage * _highlightedCellBackgroundImage;
    UIColor * _highlightedRowBackgroundColor;
    UIColor * _highlightedTextColor;
    double  _interRowSpacing;
    long long  _layoutOrientation;
    UIImage * _leftEdgeMaskImage;
    UIImage * _leftEdgeSeparatorImage;
    long long  _lineBreakMode;
    UIColor * _lineColor;
    unsigned long long  _maskedCorners;
    unsigned long long  _maxNumberOfProactiveCells;
    bool  _maximizeSortControlWidthWithPadding;
    double  _maximumIconWidth;
    double  _minimumCellPadding;
    double  _minimumCellWidth;
    double  _minimumInterItemSpacing;
    long long  _minimumNumberOfCandidates;
    bool  _performScalingAnimationOnCellHighlight;
    NSString * _proactiveCandidateContentsGravity;
    UIImage * _rightEdgeMaskImage;
    UIImage * _rightEdgeSeparatorImage;
    bool  _roundsArrowButtonEdge;
    double  _rowHeight;
    bool  _scrollDisabled;
    bool  _shouldJustifyRow;
    bool  _shouldScrollIfShowingLastVisibleRow;
    bool  _shouldUpdateCollectionViewWidthForArrowButtonVisibility;
    bool  _showCellBorderForSpaceConfirmationCandidate;
    bool  _showExtraLineBeforeFirstRow;
    bool  _showOneMoreCandidate;
    bool  _showsIndex;
    double  _singleSlottedCellMargin;
    bool  _skipInlineCandidate;
    double  _slottedCandidatesIterItemSpacing;
    UIImage * _slottedCellSeparatorImage;
    UIColor * _sortControlBackgroundColor;
    UIColor * _sortControlColor;
    UIFont * _sortControlFont;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _sortControlPadding;
    UIColor * _spaceConfirmationCandidateCellBackgroundColor;
    NSDictionary * _suggestionCandidateBodyFontAttributes;
    NSDictionary * _suggestionCandidateHeaderFontAttributes;
    UIFont * _supplementalLexiconCandidateFont;
    UIColor * _textColor;
    UIColor * _transliterationCandidateBackgroundColor;
    UIImage * _transliterationCandidateBackgroundImage;
    double  _widthOfGridGradient;
}

@property (nonatomic) bool allowCandidateGridExpanding;
@property (nonatomic) long long alternativeTextAlignment;
@property (nonatomic, retain) UIColor *alternativeTextColor;
@property (nonatomic, retain) UIFont *alternativeTextFont;
@property (nonatomic) double alternativeTextLeftSpacing;
@property (nonatomic, retain) UIFont *annotationTextFont;
@property (nonatomic) bool applyCornerRadiusToAllCandidates;
@property (nonatomic, retain) UIColor *arrowButtonBackgroundColor;
@property (nonatomic) bool arrowButtonBackgroundHidden;
@property (nonatomic, retain) UIColor *arrowButtonColor;
@property (nonatomic, retain) UIButtonConfiguration *arrowButtonConfig;
@property (nonatomic) double arrowButtonHeight;
@property (nonatomic) bool arrowButtonHighlightBackgroundHidden;
@property (nonatomic, copy) NSString *arrowButtonImageName;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } arrowButtonPadding;
@property (nonatomic, retain) UIImage *arrowButtonSeparatorImage;
@property (nonatomic, retain) UIImage *autofillExtraCandidateImage;
@property (nonatomic, retain) UIColor *backgroundColor;
@property (nonatomic) double backgroundOpacity;
@property (nonatomic, retain) UIFont *candidateFont;
@property (nonatomic, retain) UIColor *candidateNumberColor;
@property (nonatomic, retain) UIFont *candidateNumberFont;
@property (nonatomic, retain) UIColor *cellBackgroundColor;
@property (nonatomic, retain) UIImage *cellBackgroundImage;
@property (nonatomic) double cellCornerRadius;
@property (nonatomic, retain) UIImage *cellSeparatorImage;
@property (nonatomic) long long cellTextAlignment;
@property (nonatomic) unsigned long long columnsCount;
@property (nonatomic) double cornerRadius;
@property (nonatomic) bool darkBackdrop;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableSwitchingSortingMethodByTabKey;
@property (nonatomic) bool doNotClipToBounds;
@property (nonatomic) bool dontSelectLastItemByBackwardMoving;
@property (nonatomic) bool dragGestureDisabled;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } extraCellPadding;
@property (nonatomic) bool fillGridWithLines;
@property (nonatomic) double foregroundOpacity;
@property (nonatomic, retain) UIColor *gridBackgroundColor;
@property (nonatomic) struct CGPoint { double x1; double x2; } gridLineOffset;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } gridLinePadding;
@property (nonatomic) unsigned long long gridMaskedCorners;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } gridPadding;
@property (nonatomic, retain) UIColor *groupHeaderBackgroundColor;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } groupHeaderPadding;
@property (nonatomic) bool hasShadow;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hideLinesOnDisambiguationGridEdges;
@property (nonatomic) bool hideSlottedCellSeparators;
@property (nonatomic) bool hidesPartialCandidates;
@property (nonatomic, retain) UIColor *highlightedAlternativeTextColor;
@property (nonatomic, retain) UIColor *highlightedBackgroundColor;
@property (nonatomic, retain) UIColor *highlightedCandidateNumberColor;
@property (nonatomic, retain) UIImage *highlightedCellBackgroundImage;
@property (nonatomic, retain) UIColor *highlightedRowBackgroundColor;
@property (nonatomic, retain) UIColor *highlightedTextColor;
@property (nonatomic) double interRowSpacing;
@property (nonatomic) long long layoutOrientation;
@property (nonatomic, retain) UIImage *leftEdgeMaskImage;
@property (nonatomic, retain) UIImage *leftEdgeSeparatorImage;
@property (nonatomic) long long lineBreakMode;
@property (nonatomic, retain) UIColor *lineColor;
@property (nonatomic) unsigned long long maskedCorners;
@property (nonatomic) unsigned long long maxNumberOfProactiveCells;
@property (nonatomic) bool maximizeSortControlWidthWithPadding;
@property (nonatomic) double maximumIconWidth;
@property (nonatomic) double minimumCellPadding;
@property (nonatomic) double minimumCellWidth;
@property (nonatomic) double minimumInterItemSpacing;
@property (nonatomic) long long minimumNumberOfCandidates;
@property (nonatomic) bool performScalingAnimationOnCellHighlight;
@property (nonatomic, copy) NSString *proactiveCandidateContentsGravity;
@property (nonatomic, retain) UIImage *rightEdgeMaskImage;
@property (nonatomic, retain) UIImage *rightEdgeSeparatorImage;
@property (nonatomic) bool roundsArrowButtonEdge;
@property (nonatomic) double rowHeight;
@property (nonatomic) bool scrollDisabled;
@property (nonatomic) bool shouldJustifyRow;
@property (nonatomic) bool shouldScrollIfShowingLastVisibleRow;
@property (nonatomic) bool shouldUpdateCollectionViewWidthForArrowButtonVisibility;
@property (nonatomic) bool showCellBorderForSpaceConfirmationCandidate;
@property (nonatomic) bool showExtraLineBeforeFirstRow;
@property (nonatomic) bool showOneMoreCandidate;
@property (nonatomic) bool showsIndex;
@property (nonatomic) double singleSlottedCellMargin;
@property (nonatomic) bool skipInlineCandidate;
@property (nonatomic) double slottedCandidatesIterItemSpacing;
@property (nonatomic, retain) UIImage *slottedCellSeparatorImage;
@property (nonatomic, retain) UIColor *sortControlBackgroundColor;
@property (nonatomic, retain) UIColor *sortControlColor;
@property (nonatomic, retain) UIFont *sortControlFont;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } sortControlPadding;
@property (nonatomic, retain) UIColor *spaceConfirmationCandidateCellBackgroundColor;
@property (nonatomic, retain) NSDictionary *suggestionCandidateBodyFontAttributes;
@property (nonatomic, retain) NSDictionary *suggestionCandidateHeaderFontAttributes;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIFont *supplementalLexiconCandidateFont;
@property (nonatomic, retain) UIColor *textColor;
@property (nonatomic, retain) UIColor *transliterationCandidateBackgroundColor;
@property (nonatomic, readonly) UIImage *transliterationCandidateBackgroundImage;
@property (nonatomic) double widthOfGridGradient;

+ (id)darkKeyboardStyle;
+ (id)darkKeyboardStyleForDisambiguation;
+ (id)disambiguationStyleForDarkKeyboard:(bool)arg1;
+ (id)lightKeyboardStyle;
+ (id)lightKeyboardStyleForDisambiguation;
+ (id)styleForDarkKeyboard:(bool)arg1;
+ (id)tvGridStyleForDarkKeyboard:(bool)arg1;
+ (id)tvLinearStyleForDarkKeyboard:(bool)arg1;
+ (id)visionInlineStyle;

- (void).cxx_destruct;
- (bool)allowCandidateGridExpanding;
- (long long)alternativeTextAlignment;
- (id)alternativeTextColor;
- (id)alternativeTextFont;
- (double)alternativeTextLeftSpacing;
- (id)annotationTextFont;
- (bool)applyCornerRadiusToAllCandidates;
- (id)arrowButtonBackgroundColor;
- (bool)arrowButtonBackgroundHidden;
- (id)arrowButtonColor;
- (id)arrowButtonConfig;
- (double)arrowButtonHeight;
- (bool)arrowButtonHighlightBackgroundHidden;
- (id)arrowButtonImageName;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arrowButtonPadding;
- (id)arrowButtonSeparatorImage;
- (id)autofillExtraCandidateImage;
- (id)backgroundColor;
- (double)backgroundOpacity;
- (id)candidateFont;
- (id)candidateNumberColor;
- (id)candidateNumberFont;
- (id)cellBackgroundColor;
- (id)cellBackgroundImage;
- (double)cellCornerRadius;
- (id)cellSeparatorImage;
- (long long)cellTextAlignment;
- (unsigned long long)columnsCount;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)cornerRadius;
- (bool)darkBackdrop;
- (bool)disableSwitchingSortingMethodByTabKey;
- (bool)doNotClipToBounds;
- (bool)dontSelectLastItemByBackwardMoving;
- (bool)dragGestureDisabled;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })extraCellPadding;
- (bool)fillGridWithLines;
- (double)foregroundOpacity;
- (id)gridBackgroundColor;
- (struct CGPoint { double x1; double x2; })gridLineOffset;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })gridLinePadding;
- (unsigned long long)gridMaskedCorners;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })gridPadding;
- (id)groupHeaderBackgroundColor;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })groupHeaderPadding;
- (bool)hasShadow;
- (bool)hideLinesOnDisambiguationGridEdges;
- (bool)hideSlottedCellSeparators;
- (bool)hidesPartialCandidates;
- (id)highlightedAlternativeTextColor;
- (id)highlightedBackgroundColor;
- (id)highlightedCandidateNumberColor;
- (id)highlightedCellBackgroundImage;
- (id)highlightedRowBackgroundColor;
- (id)highlightedTextColor;
- (double)interRowSpacing;
- (bool)isEqual:(id)arg1;
- (long long)layoutOrientation;
- (id)leftEdgeMaskImage;
- (id)leftEdgeSeparatorImage;
- (long long)lineBreakMode;
- (id)lineColor;
- (unsigned long long)maskedCorners;
- (unsigned long long)maxNumberOfProactiveCells;
- (bool)maximizeSortControlWidthWithPadding;
- (double)maximumIconWidth;
- (double)minimumCellPadding;
- (double)minimumCellWidth;
- (double)minimumInterItemSpacing;
- (long long)minimumNumberOfCandidates;
- (bool)performScalingAnimationOnCellHighlight;
- (id)proactiveCandidateContentsGravity;
- (id)rightEdgeMaskImage;
- (id)rightEdgeSeparatorImage;
- (bool)roundsArrowButtonEdge;
- (double)rowHeight;
- (bool)scrollDisabled;
- (void)setAllowCandidateGridExpanding:(bool)arg1;
- (void)setAlternativeTextAlignment:(long long)arg1;
- (void)setAlternativeTextColor:(id)arg1;
- (void)setAlternativeTextFont:(id)arg1;
- (void)setAlternativeTextLeftSpacing:(double)arg1;
- (void)setAnnotationTextFont:(id)arg1;
- (void)setApplyCornerRadiusToAllCandidates:(bool)arg1;
- (void)setArrowButtonBackgroundColor:(id)arg1;
- (void)setArrowButtonBackgroundHidden:(bool)arg1;
- (void)setArrowButtonColor:(id)arg1;
- (void)setArrowButtonConfig:(id)arg1;
- (void)setArrowButtonHeight:(double)arg1;
- (void)setArrowButtonHighlightBackgroundHidden:(bool)arg1;
- (void)setArrowButtonImageName:(id)arg1;
- (void)setArrowButtonPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setArrowButtonSeparatorImage:(id)arg1;
- (void)setAutofillExtraCandidateImage:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBackgroundOpacity:(double)arg1;
- (void)setCandidateFont:(id)arg1;
- (void)setCandidateNumberColor:(id)arg1;
- (void)setCandidateNumberFont:(id)arg1;
- (void)setCellBackgroundColor:(id)arg1;
- (void)setCellBackgroundImage:(id)arg1;
- (void)setCellCornerRadius:(double)arg1;
- (void)setCellSeparatorImage:(id)arg1;
- (void)setCellTextAlignment:(long long)arg1;
- (void)setColumnsCount:(unsigned long long)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setDarkBackdrop:(bool)arg1;
- (void)setDisableSwitchingSortingMethodByTabKey:(bool)arg1;
- (void)setDoNotClipToBounds:(bool)arg1;
- (void)setDontSelectLastItemByBackwardMoving:(bool)arg1;
- (void)setDragGestureDisabled:(bool)arg1;
- (void)setExtraCellPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setFillGridWithLines:(bool)arg1;
- (void)setForegroundOpacity:(double)arg1;
- (void)setGridBackgroundColor:(id)arg1;
- (void)setGridLineOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setGridLinePadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setGridMaskedCorners:(unsigned long long)arg1;
- (void)setGridPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setGroupHeaderBackgroundColor:(id)arg1;
- (void)setGroupHeaderPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setHasShadow:(bool)arg1;
- (void)setHideLinesOnDisambiguationGridEdges:(bool)arg1;
- (void)setHideSlottedCellSeparators:(bool)arg1;
- (void)setHidesPartialCandidates:(bool)arg1;
- (void)setHighlightedAlternativeTextColor:(id)arg1;
- (void)setHighlightedBackgroundColor:(id)arg1;
- (void)setHighlightedCandidateNumberColor:(id)arg1;
- (void)setHighlightedCellBackgroundImage:(id)arg1;
- (void)setHighlightedRowBackgroundColor:(id)arg1;
- (void)setHighlightedTextColor:(id)arg1;
- (void)setInterRowSpacing:(double)arg1;
- (void)setLayoutOrientation:(long long)arg1;
- (void)setLeftEdgeMaskImage:(id)arg1;
- (void)setLeftEdgeSeparatorImage:(id)arg1;
- (void)setLineBreakMode:(long long)arg1;
- (void)setLineColor:(id)arg1;
- (void)setMaskedCorners:(unsigned long long)arg1;
- (void)setMaxNumberOfProactiveCells:(unsigned long long)arg1;
- (void)setMaximizeSortControlWidthWithPadding:(bool)arg1;
- (void)setMaximumIconWidth:(double)arg1;
- (void)setMinimumCellPadding:(double)arg1;
- (void)setMinimumCellWidth:(double)arg1;
- (void)setMinimumInterItemSpacing:(double)arg1;
- (void)setMinimumNumberOfCandidates:(long long)arg1;
- (void)setPerformScalingAnimationOnCellHighlight:(bool)arg1;
- (void)setProactiveCandidateContentsGravity:(id)arg1;
- (void)setRightEdgeMaskImage:(id)arg1;
- (void)setRightEdgeSeparatorImage:(id)arg1;
- (void)setRoundsArrowButtonEdge:(bool)arg1;
- (void)setRowHeight:(double)arg1;
- (void)setScrollDisabled:(bool)arg1;
- (void)setShouldJustifyRow:(bool)arg1;
- (void)setShouldScrollIfShowingLastVisibleRow:(bool)arg1;
- (void)setShouldUpdateCollectionViewWidthForArrowButtonVisibility:(bool)arg1;
- (void)setShowCellBorderForSpaceConfirmationCandidate:(bool)arg1;
- (void)setShowExtraLineBeforeFirstRow:(bool)arg1;
- (void)setShowOneMoreCandidate:(bool)arg1;
- (void)setShowsIndex:(bool)arg1;
- (void)setSingleSlottedCellMargin:(double)arg1;
- (void)setSkipInlineCandidate:(bool)arg1;
- (void)setSlottedCandidatesIterItemSpacing:(double)arg1;
- (void)setSlottedCellSeparatorImage:(id)arg1;
- (void)setSortControlBackgroundColor:(id)arg1;
- (void)setSortControlColor:(id)arg1;
- (void)setSortControlFont:(id)arg1;
- (void)setSortControlPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setSpaceConfirmationCandidateCellBackgroundColor:(id)arg1;
- (void)setSuggestionCandidateBodyFontAttributes:(id)arg1;
- (void)setSuggestionCandidateHeaderFontAttributes:(id)arg1;
- (void)setSupplementalLexiconCandidateFont:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)setTransliterationCandidateBackgroundColor:(id)arg1;
- (void)setWidthOfGridGradient:(double)arg1;
- (bool)shouldJustifyRow;
- (bool)shouldScrollIfShowingLastVisibleRow;
- (bool)shouldUpdateCollectionViewWidthForArrowButtonVisibility;
- (bool)showCellBorderForSpaceConfirmationCandidate;
- (bool)showExtraLineBeforeFirstRow;
- (bool)showOneMoreCandidate;
- (bool)showsIndex;
- (double)singleSlottedCellMargin;
- (bool)skipInlineCandidate;
- (double)slottedCandidatesIterItemSpacing;
- (id)slottedCellSeparatorImage;
- (id)sortControlBackgroundColor;
- (id)sortControlColor;
- (id)sortControlFont;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })sortControlPadding;
- (id)spaceConfirmationCandidateCellBackgroundColor;
- (id)suggestionCandidateBodyFontAttributes;
- (id)suggestionCandidateHeaderFontAttributes;
- (id)supplementalLexiconCandidateFont;
- (id)textColor;
- (id)transliterationCandidateBackgroundColor;
- (id)transliterationCandidateBackgroundImage;
- (double)widthOfGridGradient;

@end
