/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UIPencilInteraction : NSObject <BSDebugDescriptionProviding, UIGestureRecognizerDelegate, UIInteraction, UIInteraction_Internal> {
    unsigned long long  _cachedDispatchBehavior;
    <UIPencilInteractionDelegate> * _delegate;
    bool  _enabled;
    <BSInvalidatable> * _eventRegistrationToken;
    UIHoverGestureRecognizer * _hoverGestureRecognizer;
    struct { 
        unsigned int registrationPendingDidMoveToWindow : 1; 
        unsigned int registrationPendingWindowMoveToScene : 1; 
        unsigned int delegateSupportsDidTap : 1; 
        unsigned int delegateSupportsDidReceiveTap : 1; 
        unsigned int delegateSupportsPrivateDidReceiveTap : 1; 
        unsigned int delegateSupportsDidReceiveSqueeze : 1; 
        unsigned int delegateSupportsPrivateDidReceiveSqueeze : 1; 
        unsigned int queriedDispatchBehavior : 1; 
    }  _interactionFlags;
    double  _lastKnownHoverAltitudeAngle;
    double  _lastKnownHoverAzimuthAngle;
    struct CGVector { 
        double dx; 
        double dy; 
    }  _lastKnownHoverAzimuthUnitVector;
    struct CAPoint3D { 
        double x; 
        double y; 
        double z; 
    }  _lastKnownHoverLocation3D;
    double  _lastKnownHoverRollAngle;
    double  _lastKnownHoverZOffset;
    UIView * _view;
}

@property (nonatomic, readonly) unsigned long long _dispatchBehavior;
@property (nonatomic, readonly) UIHoverGestureRecognizer *_hoverGestureRecognizer;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) <UIPencilInteractionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isEnabled, nonatomic) bool enabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <UIInteractionEffect> *interactionEffect; /* unknown property attribute: ? */
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIView *view;

+ (long long)_preferredSqueezeAction;
+ (void)_setHasUsedPassivePencil:(bool)arg1;
+ (void)_setPrefersPencilOnlyDrawing:(bool)arg1;
+ (bool)hasSeenPencilPairingUI;
+ (bool)hasUsedPassivePencil;
+ (long long)preferredSqueezeAction;
+ (long long)preferredTapAction;
+ (bool)prefersHoverToolPreview;
+ (bool)prefersPencilOnlyDrawing;

- (void).cxx_destruct;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (unsigned long long)_dispatchBehavior;
- (void)_handleHoverGestureRecognizer:(id)arg1;
- (id)_hoverGestureRecognizer;
- (bool)_shouldReceiveGestureType:(unsigned long long)arg1;
- (void)_willMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_windowDidMoveToScene:(id)arg1;
- (void)_windowWillMoveToScene:(id)arg1;
- (void)dealloc;
- (id)debugDescription;
- (id)debugDescriptionWithMultilinePrefix:(id)arg1;
- (id)delegate;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)didMoveToView:(id)arg1;
- (id)init;
- (id)initWithDelegate:(id)arg1;
- (bool)isEnabled;
- (void)setDelegate:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)view;
- (void)willMoveToView:(id)arg1;

@end
