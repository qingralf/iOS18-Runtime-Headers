/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UISearchBar : UIView <HUSearchBar, UIBarPositioning, UILookToDictateCapable, UIScribbleInteractionDelegate, UITextInputTraits, UITextInputTraits_Private, _UIBarPositioningInternal, _UINavigationBarAugmentedTitleView> {
    bool  __forceCenteredPlaceholderLayout;
    UISearchController * __searchController;
    bool  __transplanting;
    UIKeyCommand * _cancelKeyCommand;
    Class  _classForSearchTextField;
    <UISearchBarDelegate><UISearchBarDelegate_Private> * _delegate;
    bool  _didAddScribbleInteraction;
    bool  _forceLegacyVisual;
    UIView * _inputAccessoryView;
    <_UISearchBarSearchContainerLayoutCustomizationDelegate> * _searchFieldContainerLayoutCustomizationDelegate;
    UITapGestureRecognizer * _tapToActivateGestureRecognizer;
    UITextInputTraits * _textInputTraits;
    _UISearchBarVisualProviderBase * _visualProvider;
}

@property (nonatomic, copy) NSIndexSet *PINEntrySeparatorIndexes; /* unknown property attribute: ? */
@property (setter=_setActiveSearchDeferringScopeBar:, nonatomic) bool _activeSearchDeferringScopeBar;
@property (setter=_setAdditionalPaddingForCancelButtonAtLeadingEdge:, nonatomic) double _additionalPaddingForCancelButtonAtLeadingEdge;
@property (setter=_setAdditionalPaddingForSearchFieldAtLeadingEdge:, nonatomic) double _additionalPaddingForSearchFieldAtLeadingEdge;
@property (setter=_setAllowsInlineScopeBar:, nonatomic) bool _allowsInlineScopeBar;
@property (setter=_setClassForSearchTextField:, nonatomic, retain) Class _classForSearchTextField;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } _effectiveContentInset;
@property (nonatomic, readonly) bool _effectivelySupportsDynamicType;
@property (nonatomic, readonly) UIBarButtonItem *_existingSearchIconBarButtonItem;
@property (nonatomic, readonly) long long _expectedInterfaceOrientation;
@property (nonatomic) bool _forceCenteredPlaceholderLayout;
@property (setter=_setForceLegacyVisual:, nonatomic) bool _forceLegacyVisual;
@property (nonatomic, readonly) bool _hideNavigationBarBackButton;
@property (nonatomic, readonly) bool _hideNavigationBarCenterBarButtons;
@property (nonatomic, readonly) bool _hideNavigationBarLeadingBarButtons;
@property (nonatomic, readonly) bool _hideNavigationBarStandardTitle;
@property (nonatomic, readonly) bool _hideNavigationBarTrailingBarButtons;
@property (getter=_isHostedByNavigationBar, setter=_setHostedByNavigationBar:, nonatomic) bool _hostedByNavigationBar;
@property (getter=_isHostedInlineByNavigationBar, setter=_setHostedInlineByNavigationBar:, nonatomic) bool _hostedInlineByNavigationBar;
@property (nonatomic, readonly) long long _layoutState;
@property (nonatomic, readonly, retain) UIButton *_leftButton;
@property (setter=_setLeftInsetForInlineSearch:, nonatomic) double _leftInsetForInlineSearch;
@property (nonatomic, readonly) double _navigationBarBackButtonAlpha;
@property (nonatomic, readonly) double _navigationBarBackButtonMaximumWidth;
@property (nonatomic, readonly) double _navigationBarContentHeight;
@property (nonatomic, readonly) double _navigationBarContentHeightExtension;
@property (nonatomic, readonly, copy) NSArray *_navigationBarContentOverlayRects;
@property (nonatomic, readonly) bool _navigationBarHeightShouldBeIncreasedByTabBarHeight;
@property (nonatomic, readonly) double _navigationBarLeadingBarButtonsAlpha;
@property (nonatomic, readonly) double _navigationBarTrailingBarButtonsAlpha;
@property (nonatomic, readonly) long long _preferredAlignment;
@property (setter=_setProvidesRestingMeasurementValues:, nonatomic) bool _providesRestingMeasurementValues;
@property (setter=_setReliesOnNavigationBarBackdrop:, nonatomic) bool _reliesOnNavigationBarBackdrop;
@property (setter=_setRequiresSearchTextField:, nonatomic) bool _requiresSearchTextField;
@property (setter=_setRightInsetForInlineSearch:, nonatomic) double _rightInsetForInlineSearch;
@property (setter=_setScopeBarPosition:, nonatomic) unsigned long long _scopeBarPosition;
@property (setter=_setSearchController:, nonatomic) UISearchController *_searchController;
@property (setter=_setSearchFieldContainerLayoutCustomizationDelegate:, nonatomic) <_UISearchBarSearchContainerLayoutCustomizationDelegate> *_searchFieldContainerLayoutCustomizationDelegate;
@property (nonatomic, readonly) UIBarButtonItem *_searchIconBarButtonItem;
@property (setter=_setShowDictationDisplayInSearchBar:, nonatomic) bool _showDictationDisplayInSearchBar;
@property (nonatomic, readonly) bool _supportsLayoutStates;
@property (getter=_isTextFieldManagedInNSToolbar, setter=_setTextFieldManagedInNSToolbar:, nonatomic) bool _textFieldManagedInNSToolbar;
@property (setter=_setTransplanting:, nonatomic) bool _transplanting;
@property (nonatomic, readonly) bool _usesLegacyVisualProvider;
@property (nonatomic, readonly) UIView *_viewStackedInNavigationBar;
@property (nonatomic, readonly) _UISearchBarVisualProviderBase *_visualProvider;
@property (nonatomic) bool acceptsDictationSearchResults; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsEmoji; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsFloatingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsInitialEmojiKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsPayloads; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsSplitKeyboard; /* unknown property attribute: ? */
@property unsigned long long allowedWritingToolsResultOptions; /* unknown property attribute: ? */
@property (nonatomic) long long allowsTextAnimationsType; /* unknown property attribute: ? */
@property (nonatomic) long long autocapitalizationType; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *autocorrectionContext; /* unknown property attribute: ? */
@property (nonatomic) long long autocorrectionType; /* unknown property attribute: ? */
@property (nonatomic, retain) UIImage *backgroundImage;
@property (nonatomic, readonly) long long barPosition;
@property (nonatomic) long long barStyle;
@property (nonatomic, retain) UIColor *barTintColor;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentInset;
@property (nonatomic) bool contentsIsSingleValue; /* unknown property attribute: ? */
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) bool deferBecomingResponder; /* unknown property attribute: ? */
@property (nonatomic) <UISearchBarDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isDevicePasscodeEntry, nonatomic) bool devicePasscodeEntry; /* unknown property attribute: ? */
@property (nonatomic) bool disableHandwritingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool disableInputBars; /* unknown property attribute: ? */
@property (nonatomic) bool disablePrediction; /* unknown property attribute: ? */
@property (nonatomic) bool displaySecureEditsUsingPlainText; /* unknown property attribute: ? */
@property (nonatomic) bool displaySecureTextUsingPlainText; /* unknown property attribute: ? */
@property (nonatomic) int emptyContentReturnKeyType; /* unknown property attribute: ? */
@property (getter=isEnabled, nonatomic) bool enabled;
@property (nonatomic) bool enablesReturnKeyAutomatically; /* unknown property attribute: ? */
@property (nonatomic) bool enablesReturnKeyOnNonWhiteSpaceContent; /* unknown property attribute: ? */
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } floatingKeyboardEdgeInsets; /* unknown property attribute: ? */
@property (nonatomic) bool forceDefaultDictationInfo; /* unknown property attribute: ? */
@property (nonatomic) long long forceDictationKeyboardType; /* unknown property attribute: ? */
@property (nonatomic) bool forceDisableDictation; /* unknown property attribute: ? */
@property (nonatomic) bool forceEnableDictation; /* unknown property attribute: ? */
@property (nonatomic) bool forceFloatingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool forceSpellingDictation; /* unknown property attribute: ? */
@property (nonatomic) bool hasDefaultContents; /* unknown property attribute: ? */
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hidePrediction; /* unknown property attribute: ? */
@property (nonatomic) long long inlineCompletionType; /* unknown property attribute: ? */
@property (nonatomic) long long inlinePredictionType; /* unknown property attribute: ? */
@property (nonatomic, retain) UIView *inputAccessoryView;
@property (nonatomic, readonly) UITextInputAssistantItem *inputAssistantItem;
@property (nonatomic, retain) UIInputContextHistory *inputContextHistory; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *insertionPointColor; /* unknown property attribute: ? */
@property (nonatomic) unsigned long long insertionPointWidth; /* unknown property attribute: ? */
@property (nonatomic) bool isCarPlayIdiom; /* unknown property attribute: ? */
@property (nonatomic) bool isSingleLineDocument; /* unknown property attribute: ? */
@property (nonatomic) long long keyboardAppearance; /* unknown property attribute: ? */
@property (nonatomic) long long keyboardType; /* unknown property attribute: ? */
@property (nonatomic) bool learnsCorrections; /* unknown property attribute: ? */
@property (nonatomic) bool loadKeyboardsForSiriLanguage; /* unknown property attribute: ? */
@property (getter=isLookToDictateEnabled, nonatomic) bool lookToDictateEnabled;
@property (nonatomic, retain) UIColor *matchHighlightColor; /* unknown property attribute: ? */
@property (nonatomic) long long mathExpressionCompletionType; /* unknown property attribute: ? */
@property (nonatomic, copy) UITextInputPasswordRules *passwordRules; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *placeholder;
@property (nonatomic) bool preferOnlineDictation; /* unknown property attribute: ? */
@property (nonatomic) long long preferredKeyboardStyle; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *prompt;
@property (nonatomic, copy) NSString *recentInputIdentifier; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *responseContext; /* unknown property attribute: ? */
@property (nonatomic) bool returnKeyGoesToNextResponder; /* unknown property attribute: ? */
@property (nonatomic) long long returnKeyType; /* unknown property attribute: ? */
@property (nonatomic) bool roundedFont;
@property (nonatomic, retain) UIImage *scopeBarBackgroundImage;
@property (nonatomic, copy) NSArray *scopeButtonTitles;
@property (nonatomic) unsigned long long searchBarStyle;
@property (getter=_searchBarTextField, nonatomic, readonly) UISearchBarTextField *searchBarTextField;
@property (nonatomic) struct UIOffset { double x1; double x2; } searchFieldBackgroundPositionAdjustment;
@property (getter=isSearchResultsButtonSelected, nonatomic) bool searchResultsButtonSelected;
@property (nonatomic, readonly) UITextField *searchTextField;
@property (nonatomic, readonly) UISearchTextField *searchTextField;
@property (nonatomic) struct UIOffset { double x1; double x2; } searchTextPositionAdjustment;
@property (getter=isSecureTextEntry, nonatomic) bool secureTextEntry; /* unknown property attribute: ? */
@property (nonatomic) long long selectedScopeButtonIndex;
@property (nonatomic, retain) UIColor *selectionBarColor; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionBorderColor; /* unknown property attribute: ? */
@property (nonatomic) double selectionBorderWidth; /* unknown property attribute: ? */
@property (nonatomic) double selectionCornerRadius; /* unknown property attribute: ? */
@property (nonatomic, retain) UIImage *selectionDragDotImage; /* unknown property attribute: ? */
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } selectionEdgeInsets; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionHighlightColor; /* unknown property attribute: ? */
@property (nonatomic) int shortcutConversionType; /* unknown property attribute: ? */
@property (nonatomic) bool showDictationButton; /* unknown property attribute: ? */
@property (nonatomic) bool showsBookmarkButton;
@property (nonatomic) bool showsCancelButton;
@property (nonatomic) bool showsScopeBar;
@property (nonatomic) bool showsSearchResultsButton;
@property (nonatomic) long long smartDashesType; /* unknown property attribute: ? */
@property (nonatomic) long long smartInsertDeleteType; /* unknown property attribute: ? */
@property (nonatomic) long long smartQuotesType; /* unknown property attribute: ? */
@property (nonatomic) long long spellCheckingType; /* unknown property attribute: ? */
@property (readonly) Class superclass;
@property (nonatomic, retain) _UISupplementalLexicon *supplementalLexicon; /* unknown property attribute: ? */
@property (nonatomic, retain) UIImage *supplementalLexiconAmbiguousItemIcon; /* unknown property attribute: ? */
@property (nonatomic) bool suppressReturnKeyStyling; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *text;
@property (nonatomic, copy) NSString *textContentType; /* unknown property attribute: ? */
@property (nonatomic) int textLoupeVisibility; /* unknown property attribute: ? */
@property (nonatomic, readonly) UITextRange *textRangeForServicesInteraction; /* unknown property attribute: ? */
@property (nonatomic) long long textScriptType; /* unknown property attribute: ? */
@property (nonatomic) int textSelectionBehavior; /* unknown property attribute: ? */
@property (nonatomic) id textSuggestionDelegate; /* unknown property attribute: ? */
@property (nonatomic) struct __CFCharacterSet { }*textTrimmingSet; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *tintColor;
@property (getter=isTranslucent, nonatomic) bool translucent;
@property (nonatomic) bool typingAdaptationDisabled; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *underlineColorForSpelling; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *underlineColorForTextAlternatives; /* unknown property attribute: ? */
@property (nonatomic) bool useAutomaticEndpointing; /* unknown property attribute: ? */
@property (nonatomic) bool useInterfaceLanguageForLocalization; /* unknown property attribute: ? */
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } validTextRange; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool wasEverSecureTextEntry; /* unknown property attribute: ? */
@property unsigned long long writingToolsAllowedInputOptions; /* unknown property attribute: ? */
@property long long writingToolsBehavior; /* unknown property attribute: ? */

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

+ (void)_initializeForIdiom:(long long)arg1;

- (void).cxx_destruct;
- (bool)_activeSearchDeferringScopeBar;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (double)_additionalPaddingForCancelButtonAtLeadingEdge;
- (double)_additionalPaddingForSearchFieldAtLeadingEdge;
- (void)_allowCursorToAppear:(bool)arg1;
- (bool)_allowsInlineScopeBar;
- (void)_animateTransitionToSearchLayoutState:(long long)arg1;
- (id)_animatedAppearanceBarButtonItem;
- (double)_autolayoutSpacingAtEdge:(int)arg1 forAttribute:(long long)arg2 inContainer:(id)arg3 isGuide:(bool)arg4;
- (long long)_backdropStyle;
- (id)_backgroundView;
- (double)_barHeightForBarMetrics:(long long)arg1;
- (double)_barHeightForBarMetrics:(long long)arg1 barPosition:(long long)arg2;
- (long long)_barMetricsForOrientation:(long long)arg1;
- (long long)_barPosition;
- (void)_bookmarkButtonPressed;
- (id)_cancelButton;
- (void)_cancelButtonPressed;
- (id)_cancelButtonText;
- (void)_cancelOperation:(id)arg1;
- (void)_cancelTransitionToSearchLayoutState:(long long)arg1;
- (Class)_classForSearchTextField;
- (id)_colorForComponent:(unsigned long long)arg1 disabled:(bool)arg2;
- (void)_commonInit;
- (void)_completeTransitionToSearchLayoutState:(long long)arg1;
- (bool)_containedInNavigationPalette;
- (void)_containerSafeAreaInsetsDidChange:(id)arg1;
- (id)_containingNavigationPalette;
- (void)_contentDidChange;
- (bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (double)_defaultAutolayoutSpacing;
- (double)_defaultHeight;
- (double)_defaultHeightForOrientation:(long long)arg1;
- (id)_defaultPromptString;
- (void)_deleteButtonPressed;
- (void)_destroyCancelButton;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(bool)arg3;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (bool)_disableAutomaticKeyboardUI;
- (void)_dismissScopeBarIfNecessary;
- (void)_driveTransitionToSearchLayoutState:(long long)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_effectiveContentInset;
- (bool)_effectivelySupportsDynamicType;
- (bool)_enableAutomaticKeyboardPressDone;
- (id)_existingSearchIconBarButtonItem;
- (long long)_expectedInterfaceOrientation;
- (bool)_forceCenteredPlaceholderLayout;
- (bool)_forceLegacyVisual;
- (void)_freezeForAnimatedTransitionToSearchLayoutState:(long long)arg1;
- (void)_getOverrideContentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; }*)arg1 overriddenEdges:(unsigned long long*)arg2;
- (void)_growToSearchFieldIfNecessary;
- (bool)_hasCustomAutolayoutNeighborSpacingForAttribute:(long long*)arg1;
- (bool)_hasDarkUIAppearance;
- (double)_heightAllowanceForTopSearchBarInTitleViewLocation;
- (bool)_hideNavigationBarBackButton;
- (bool)_hideNavigationBarCenterBarButtons;
- (bool)_hideNavigationBarLeadingBarButtons;
- (bool)_hideNavigationBarStandardTitle;
- (bool)_hideNavigationBarTrailingBarButtons;
- (void)_hideOrResetHelperPlaceHolder:(bool)arg1;
- (double)_idealInlineWidthForLayoutState:(long long)arg1;
- (void)_identifyBarContainer;
- (void)_insertToken:(id)arg1 atIndex:(unsigned long long)arg2;
- (bool)_isEnabled;
- (bool)_isHostedByNavigationBar;
- (bool)_isHostedInlineByNavigationBar;
- (bool)_isInBarButNotHosted;
- (bool)_isTextFieldManagedInNSToolbar;
- (long long)_layoutState;
- (id)_leftButton;
- (double)_leftInsetForInlineSearch;
- (id)_makeShadowView;
- (double)_navigationBarBackButtonAlpha;
- (double)_navigationBarBackButtonMaximumWidth;
- (double)_navigationBarContentHeight;
- (double)_navigationBarContentHeightExtension;
- (id)_navigationBarContentOverlayRects;
- (bool)_navigationBarHeightShouldBeIncreasedByTabBarHeight;
- (double)_navigationBarLeadingBarButtonsAlpha;
- (void)_navigationBarSlideTransitionDidEnd;
- (void)_navigationBarSlideTransitionWillBegin;
- (double)_navigationBarTrailingBarButtonsAlpha;
- (void)_navigationBarTraitCollectionDidChangeTo:(id)arg1 from:(id)arg2;
- (void)_navigationBarTransitionCompleted:(long long)arg1 willBeDisplayed:(bool)arg2;
- (void)_navigationBarTransitionWillBegin:(long long)arg1 willBeDisplayed:(bool)arg2;
- (double)_overrideInlineAactiveWidth;
- (double)_overrideInlineInactiveWidth;
- (bool)_ownsInputAccessoryView;
- (void)_performNavigationBarTransition:(long long)arg1 willBeDisplayed:(bool)arg2;
- (void)_populateArchivedSubviews:(id)arg1;
- (long long)_preferredAlignment;
- (long long)_preferredContentSizeForSize:(long long)arg1;
- (void)_prepareForTransitionToSearchLayoutState:(long long)arg1;
- (void)_presentScopeBarIfNecessary;
- (id)_presentationBackgroundBlurEffectForTraitCollection:(id)arg1;
- (bool)_providesRestingMeasurementValues;
- (bool)_reliesOnNavigationBarBackdrop;
- (void)_removeTokenAtIndex:(unsigned long long)arg1;
- (void)_replaceSearchTextWithToken:(id)arg1;
- (bool)_requiresSearchTextField;
- (void)_resetIfNecessaryForNavigationBarHosting:(bool)arg1;
- (void)_resultsListButtonPressed;
- (double)_rightInsetForInlineSearch;
- (id)_scopeBar;
- (id)_scopeBarContainerView;
- (double)_scopeBarHeight;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_scopeBarInsets;
- (bool)_scopeBarIsVisible;
- (unsigned long long)_scopeBarPosition;
- (void)_scopeChanged:(id)arg1;
- (void)_scopeIndexChanged:(long long)arg1;
- (id)_searchBarTextField;
- (bool)_searchBarTextFieldShouldBeginEditing;
- (bool)_searchBarTextFieldShouldChangeCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 replacementString:(id)arg2;
- (bool)_searchBarTextFieldShouldClear;
- (bool)_searchBarTextFieldShouldEndEditing;
- (bool)_searchBarTextFieldShouldScrollToVisibleWhenBecomingFirstResponder;
- (void)_searchButtonAction:(id)arg1;
- (id)_searchController;
- (id)_searchDisplayControllerNavigationItem;
- (id)_searchField;
- (void)_searchFieldBeginEditing;
- (id)_searchFieldContainerLayoutCustomizationDelegate;
- (void)_searchFieldEditingChanged;
- (void)_searchFieldEndEditing;
- (void)_searchFieldReturnPressed;
- (void)_searchFieldSelectionChanged;
- (void)_searchFieldTextChanged:(bool)arg1;
- (void)_searchFieldTokensChanged;
- (id)_searchIconBarButtonItem;
- (id)_searchTextField;
- (id)_selectedTokens;
- (id)_separatorImage;
- (void)_setActiveSearchDeferringScopeBar:(bool)arg1;
- (void)_setAdditionalPaddingForCancelButtonAtLeadingEdge:(double)arg1;
- (void)_setAdditionalPaddingForSearchFieldAtLeadingEdge:(double)arg1;
- (void)_setAllowsInlineScopeBar:(bool)arg1;
- (void)_setAutoDisableCancelButton:(bool)arg1;
- (void)_setBackdropStyle:(long long)arg1;
- (void)_setBackgroundLayoutNeedsUpdate;
- (void)_setBarPosition:(long long)arg1;
- (void)_setCancelButtonText:(id)arg1;
- (void)_setClassForSearchTextField:(Class)arg1;
- (void)_setClipsToBounds:(bool)arg1;
- (void)_setDataSource:(id)arg1 navigationItem:(id)arg2 titleLocation:(long long)arg3;
- (void)_setDeferredAutomaticShowsScopeBarInNavigationBar:(id)arg1 hasContent:(bool)arg2;
- (void)_setDisableDictationButton:(bool)arg1;
- (void)_setDisableFocus:(bool)arg1;
- (void)_setEnabled:(bool)arg1;
- (void)_setEnabled:(bool)arg1 animated:(bool)arg2;
- (void)_setForceLegacyVisual:(bool)arg1;
- (void)_setHelperPlaceholder:(id)arg1;
- (void)_setHelperPlaceholderOverride:(id)arg1;
- (void)_setHelperPlaceholderOverride:(id)arg1;
- (void)_setHostedByNavigationBar:(bool)arg1;
- (void)_setHostedInlineByNavigationBar:(bool)arg1;
- (void)_setLeftInsetForInlineSearch:(double)arg1;
- (void)_setMaskActive:(bool)arg1;
- (void)_setMaskBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setOverrideContentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1 forRectEdges:(unsigned long long)arg2;
- (void)_setOverrideInlineActiveWidth:(double)arg1;
- (void)_setOverrideInlineInactiveWidth:(double)arg1;
- (void)_setProvidesRestingMeasurementValues:(bool)arg1;
- (void)_setReliesOnNavigationBarBackdrop:(bool)arg1;
- (void)_setRequiresLegacyVisualProvider;
- (void)_setRequiresSearchTextField:(bool)arg1;
- (void)_setRightInsetForInlineSearch:(double)arg1;
- (void)_setScopeBarHidden:(bool)arg1;
- (void)_setScopeBarPosition:(unsigned long long)arg1;
- (void)_setSearchController:(id)arg1;
- (void)_setSearchFieldContainerLayoutCustomizationDelegate:(id)arg1;
- (void)_setSeparatorImage:(id)arg1;
- (void)_setShadowVisibleIfNecessary:(bool)arg1;
- (void)_setShowDictationDisplayInSearchBar:(bool)arg1;
- (void)_setShowsCancelButton:(bool)arg1;
- (void)_setShowsDeleteButton:(bool)arg1;
- (void)_setShowsScopeBar:(bool)arg1 animateOpacity:(bool)arg2;
- (void)_setShowsScopeBar:(bool)arg1 animated:(bool)arg2;
- (void)_setShowsSeparator:(bool)arg1;
- (void)_setTextFieldManagedInNSToolbar:(bool)arg1;
- (void)_setTokenBackgroundColor:(id)arg1;
- (void)_setTransplanting:(bool)arg1;
- (void)_setUpVisualProvider;
- (void)_setupCancelButton;
- (void)_setupCancelButtonWithAppearance:(id)arg1;
- (bool)_shouldCombineLandscapeBars;
- (bool)_shouldCombineLandscapeBarsForOrientation:(long long)arg1;
- (bool)_shouldUseNavigationBarHeight;
- (bool)_showDictationDisplayInSearchBar;
- (bool)_showingDictationButton;
- (bool)_showsHelperPlaceholder;
- (void)_shrinkToButtonIfNecessary;
- (bool)_supportsLayoutStates;
- (id)_textColor;
- (long long)_textInputSource;
- (id)_tokens;
- (id)_traitCollectionOverridesForNavigationBarTraitCollection:(id)arg1;
- (bool)_transplanting;
- (id)_uiktest_placeholderLabelColor;
- (void)_updateBackgroundToBackdropStyle:(long long)arg1;
- (void)_updateEffectiveContentInset;
- (void)_updateForNewSearchFieldText:(id)arg1;
- (void)_updateInsetsForCurrentContainerViewAndBarPosition;
- (void)_updateInsetsForTableView:(id)arg1;
- (void)_updateNavigationBarLayoutInsertDataForSearchBar:(id)arg1 collapsibleScopeBar:(id)arg2 forLayoutState:(long long)arg3;
- (bool)_usesLegacyVisualProvider;
- (id)_viewForChildViews;
- (id)_viewStackedInNavigationBar;
- (id)_visualProvider;
- (bool)_wantsTwoPartTransition;
- (double)_widthForButtonBarItemLayout;
- (bool)_wouldCombineLandscapeBarsForSize:(struct CGSize { double x1; double x2; })arg1;
- (id)backgroundImage;
- (id)backgroundImageForBarPosition:(long long)arg1 barMetrics:(long long)arg2;
- (long long)barPosition;
- (long long)barStyle;
- (id)barTintColor;
- (bool)becomeFirstResponder;
- (void)bringSubviewToFront:(id)arg1;
- (bool)canBecomeFirstResponder;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (bool)canResignFirstResponder;
- (id)cancelButton;
- (bool)centerPlaceholder;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInset;
- (id)controller;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (bool)drawsBackground;
- (bool)drawsBackgroundInPalette;
- (void)encodeWithCoder:(id)arg1;
- (id)focusGroupIdentifier;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)imageForSearchBarIcon:(long long)arg1 state:(unsigned long long)arg2;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)inputAccessoryView;
- (id)inputAssistantItem;
- (void)insertTextSuggestion:(id)arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isElementAccessibilityExposedToInterfaceBuilder;
- (bool)isEnabled;
- (bool)isFirstResponder;
- (bool)isLookToDictateEnabled;
- (bool)isSearchResultsButtonSelected;
- (bool)isTranslucent;
- (id)keyCommands;
- (void)layoutMarginsDidChange;
- (void)layoutSubviews;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)placeholder;
- (struct UIOffset { double x1; double x2; })positionAdjustmentForSearchBarIcon:(long long)arg1;
- (id)preferredFocusEnvironments;
- (id)preferredFocusedView;
- (bool)pretendsIsInBar;
- (id)prompt;
- (void)reloadInputViews;
- (bool)resignFirstResponder;
- (bool)respondsToSelector:(SEL)arg1;
- (void)safeAreaInsetsDidChange;
- (id)scopeBarBackgroundImage;
- (id)scopeBarButtonBackgroundImageForState:(unsigned long long)arg1;
- (id)scopeBarButtonDividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2;
- (id)scopeBarButtonTitleTextAttributesForState:(unsigned long long)arg1;
- (id)scopeButtonTitles;
- (bool)scribbleInteractionShouldDelayFocus:(id)arg1;
- (unsigned long long)searchBarStyle;
- (id)searchField;
- (id)searchFieldBackgroundImageForState:(unsigned long long)arg1;
- (struct UIOffset { double x1; double x2; })searchFieldBackgroundPositionAdjustment;
- (long long)searchFieldLeftViewMode;
- (id)searchTextField;
- (struct UIOffset { double x1; double x2; })searchTextPositionAdjustment;
- (long long)selectedScopeButtonIndex;
- (void)sendSubviewToBack:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setBackgroundImage:(id)arg1 forBarMetrics:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forBarPosition:(long long)arg2 barMetrics:(long long)arg3;
- (void)setBarStyle:(long long)arg1;
- (void)setBarTintColor:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCancelButton:(id)arg1;
- (void)setCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCenterPlaceholder:(bool)arg1;
- (void)setContentInset:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDrawsBackground:(bool)arg1;
- (void)setDrawsBackgroundInPalette:(bool)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setFocusGroupIdentifier:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setImage:(id)arg1 forSearchBarIcon:(long long)arg2 state:(unsigned long long)arg3;
- (void)setInputAccessoryView:(id)arg1;
- (void)setKeyboardAppearance:(long long)arg1;
- (void)setLookToDictateEnabled:(bool)arg1;
- (void)setNeedsLayout;
- (void)setPlaceholder:(id)arg1;
- (void)setPositionAdjustment:(struct UIOffset { double x1; double x2; })arg1 forSearchBarIcon:(long long)arg2;
- (void)setPretendsIsInBar:(bool)arg1;
- (void)setPrompt:(id)arg1;
- (void)setScopeBarBackgroundImage:(id)arg1;
- (void)setScopeBarButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setScopeBarButtonDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3;
- (void)setScopeBarButtonTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)setScopeButtonTitles:(id)arg1;
- (void)setSearchBarStyle:(unsigned long long)arg1;
- (void)setSearchFieldBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setSearchFieldBackgroundPositionAdjustment:(struct UIOffset { double x1; double x2; })arg1;
- (void)setSearchFieldLeftViewMode:(long long)arg1;
- (void)setSearchResultsButtonSelected:(bool)arg1;
- (void)setSearchTextPositionAdjustment:(struct UIOffset { double x1; double x2; })arg1;
- (void)setSelectedScopeButtonIndex:(long long)arg1;
- (void)setSemanticContentAttribute:(long long)arg1;
- (void)setShowsBookmarkButton:(bool)arg1;
- (void)setShowsCancelButton:(bool)arg1;
- (void)setShowsCancelButton:(bool)arg1 animated:(bool)arg2;
- (void)setShowsScopeBar:(bool)arg1;
- (void)setShowsScopeBar:(bool)arg1 animated:(bool)arg2;
- (void)setShowsSearchResultsButton:(bool)arg1;
- (void)setText:(id)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTranslucent:(bool)arg1;
- (void)setUsesEmbeddedAppearance:(bool)arg1;
- (void)set_cancelButtonText:(id)arg1;
- (void)set_forceCenteredPlaceholderLayout:(bool)arg1;
- (bool)showsBookmarkButton;
- (bool)showsCancelButton;
- (bool)showsScopeBar;
- (bool)showsSearchResultsButton;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)takeTraitsFrom:(id)arg1;
- (void)tappedSearchBar:(id)arg1;
- (id)text;
- (id)textInputTraits;
- (void)traitCollectionDidChange:(id)arg1;
- (bool)usesEmbeddedAppearance;
- (void)willMoveToSuperview:(id)arg1;
- (void)willMoveToWindow:(id)arg1;

// Image: /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari

+ (id)sf_installSearchBarInTableView:(id)arg1 includeSeparator:(bool)arg2;

// Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI

- (void)pk_applyAppearance:(id)arg1;
- (id)pk_childrenForAppearance;

// Image: /System/Library/PrivateFrameworks/RemindersUICore.framework/RemindersUICore

- (bool)roundedFont;
- (void)setRoundedFont:(bool)arg1;

// Image: /System/Library/PrivateFrameworks/TeaUI.framework/TeaUI

- (void)setCancelButtonText:(id)arg1;
- (void)ts_clearBackdropStyle;

@end
