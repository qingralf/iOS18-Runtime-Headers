/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UITextInputTraits : NSObject <NSCopying, UITextInputTraits, UITextInputTraits_Private> {
    NSIndexSet * PINEntrySeparatorIndexes;
    UIColor * _insertionPointColor;
    UIColor * _matchHighlightColor;
    long long  _preferredKeyboardStyle;
    struct { 
        unsigned int customizedSelectionBarColor : 1; 
        unsigned int customizedSelectionHighlightColor : 1; 
        unsigned int customizedInsertionPointColor : 1; 
        unsigned int wasEverSecureTextEntry : 1; 
    }  _privateInputTraitFlags;
    UIColor * _selectionBarColor;
    UIColor * _selectionBorderColor;
    double  _selectionBorderWidth;
    double  _selectionCornerRadius;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _selectionEdgeInsets;
    UIColor * _selectionHighlightColor;
    bool  acceptsDictationSearchResults;
    bool  acceptsEmoji;
    bool  acceptsFloatingKeyboard;
    bool  acceptsInitialEmojiKeyboard;
    bool  acceptsPayloads;
    bool  acceptsSplitKeyboard;
    unsigned long long  allowedWritingToolsResultOptions;
    long long  allowsTextAnimationsType;
    long long  autocapitalizationType;
    NSString * autocorrectionContext;
    long long  autocorrectionType;
    bool  contentsIsSingleValue;
    bool  deferBecomingResponder;
    bool  devicePasscodeEntry;
    bool  disableHandwritingKeyboard;
    bool  disableInputBars;
    bool  disablePrediction;
    bool  displaySecureEditsUsingPlainText;
    bool  displaySecureTextUsingPlainText;
    int  emptyContentReturnKeyType;
    bool  enablesReturnKeyAutomatically;
    bool  enablesReturnKeyOnNonWhiteSpaceContent;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  floatingKeyboardEdgeInsets;
    bool  forceDefaultDictationInfo;
    long long  forceDictationKeyboardType;
    bool  forceDisableDictation;
    bool  forceEnableDictation;
    bool  forceFloatingKeyboard;
    bool  forceSpellingDictation;
    bool  hasDefaultContents;
    bool  hidePrediction;
    long long  inlinePredictionType;
    UIInputContextHistory * inputContextHistory;
    UIColor * insertionPointColor;
    unsigned long long  insertionPointWidth;
    bool  isCarPlayIdiom;
    bool  isSingleLineDocument;
    unsigned int  keyboardAppearance;
    unsigned int  keyboardType;
    bool  learnsCorrections;
    bool  loadKeyboardsForSiriLanguage;
    bool  manageRecentInputs;
    long long  mathExpressionCompletionType;
    UITextInputPasswordRules * passwordRules;
    bool  preferOnlineDictation;
    NSString * recentInputIdentifier;
    NSString * responseContext;
    bool  returnKeyGoesToNextResponder;
    long long  returnKeyType;
    bool  secureTextEntry;
    UIColor * selectionBarColor;
    UIImage * selectionDragDotImage;
    UIColor * selectionHighlightColor;
    int  shortcutConversionType;
    bool  showDictationButton;
    long long  smartDashesType;
    long long  smartInsertDeleteType;
    long long  smartQuotesType;
    long long  spellCheckingType;
    _UISupplementalLexicon * supplementalLexicon;
    UIImage * supplementalLexiconAmbiguousItemIcon;
    bool  suppressReturnKeyStyling;
    NSString * textContentType;
    int  textLoupeVisibility;
    long long  textScriptType;
    int  textSelectionBehavior;
    id  textSuggestionDelegate;
    struct __CFCharacterSet { } * textTrimmingSet;
    UIColor * underlineColorForSpelling;
    UIColor * underlineColorForTextAlternatives;
    bool  useAutomaticEndpointing;
    bool  useInterfaceLanguageForLocalization;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  validTextRange;
    long long  writingToolsBehavior;
}

@property (nonatomic, copy) NSIndexSet *PINEntrySeparatorIndexes;
@property (nonatomic) bool acceptsDictationSearchResults; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsEmoji; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsFloatingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsInitialEmojiKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsPayloads; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsSplitKeyboard; /* unknown property attribute: ? */
@property unsigned long long allowedWritingToolsResultOptions; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool allowsSuggestionsOnlyMode;
@property (nonatomic) long long allowsTextAnimationsType; /* unknown property attribute: ? */
@property (nonatomic) long long autocapitalizationType; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *autocorrectionContext; /* unknown property attribute: ? */
@property (nonatomic) long long autocorrectionType; /* unknown property attribute: ? */
@property (nonatomic) bool contentsIsSingleValue; /* unknown property attribute: ? */
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) bool deferBecomingResponder; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (getter=isDevicePasscodeEntry, nonatomic) bool devicePasscodeEntry; /* unknown property attribute: ? */
@property (nonatomic, readonly) long long dictationInfoKeyboardType;
@property (nonatomic, readonly) long long dictationKeyboardType;
@property (nonatomic) bool disableHandwritingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool disableInputBars; /* unknown property attribute: ? */
@property (nonatomic) bool disablePrediction; /* unknown property attribute: ? */
@property (nonatomic) bool displaySecureEditsUsingPlainText; /* unknown property attribute: ? */
@property (nonatomic) bool displaySecureTextUsingPlainText; /* unknown property attribute: ? */
@property (nonatomic) int emptyContentReturnKeyType; /* unknown property attribute: ? */
@property (nonatomic) bool enablesReturnKeyAutomatically; /* unknown property attribute: ? */
@property (nonatomic) bool enablesReturnKeyOnNonWhiteSpaceContent; /* unknown property attribute: ? */
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } floatingKeyboardEdgeInsets; /* unknown property attribute: ? */
@property (nonatomic) bool forceDefaultDictationInfo; /* unknown property attribute: ? */
@property (nonatomic) long long forceDictationKeyboardType; /* unknown property attribute: ? */
@property (nonatomic) bool forceDisableDictation; /* unknown property attribute: ? */
@property (nonatomic) bool forceEnableDictation; /* unknown property attribute: ? */
@property (nonatomic) bool forceFloatingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool forceSpellingDictation; /* unknown property attribute: ? */
@property (nonatomic) bool hasDefaultContents; /* unknown property attribute: ? */
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hidePrediction; /* unknown property attribute: ? */
@property (nonatomic) long long inlineCompletionType; /* unknown property attribute: ? */
@property (nonatomic) long long inlinePredictionType; /* unknown property attribute: ? */
@property (nonatomic, retain) UIInputContextHistory *inputContextHistory; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *insertionPointColor; /* unknown property attribute: ? */
@property (nonatomic) unsigned long long insertionPointWidth; /* unknown property attribute: ? */
@property (nonatomic) bool isCarPlayIdiom; /* unknown property attribute: ? */
@property (nonatomic) bool isSingleLineDocument; /* unknown property attribute: ? */
@property (nonatomic) long long keyboardAppearance; /* unknown property attribute: ? */
@property (nonatomic) long long keyboardType; /* unknown property attribute: ? */
@property (nonatomic) bool learnsCorrections; /* unknown property attribute: ? */
@property (nonatomic) bool loadKeyboardsForSiriLanguage; /* unknown property attribute: ? */
@property (nonatomic) bool manageRecentInputs;
@property (nonatomic, retain) UIColor *matchHighlightColor; /* unknown property attribute: ? */
@property (nonatomic) long long mathExpressionCompletionType; /* unknown property attribute: ? */
@property (nonatomic, copy) UITextInputPasswordRules *passwordRules; /* unknown property attribute: ? */
@property (nonatomic) bool preferOnlineDictation; /* unknown property attribute: ? */
@property (nonatomic) long long preferredKeyboardStyle;
@property (nonatomic, copy) NSString *recentInputIdentifier;
@property (nonatomic, copy) NSString *responseContext; /* unknown property attribute: ? */
@property (nonatomic) bool returnKeyGoesToNextResponder; /* unknown property attribute: ? */
@property (nonatomic) long long returnKeyType; /* unknown property attribute: ? */
@property (getter=isSecureTextEntry, nonatomic) bool secureTextEntry; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionBarColor; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionBorderColor; /* unknown property attribute: ? */
@property (nonatomic) double selectionBorderWidth; /* unknown property attribute: ? */
@property (nonatomic) double selectionCornerRadius; /* unknown property attribute: ? */
@property (nonatomic, retain) UIImage *selectionDragDotImage; /* unknown property attribute: ? */
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } selectionEdgeInsets; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionHighlightColor; /* unknown property attribute: ? */
@property (nonatomic) int shortcutConversionType; /* unknown property attribute: ? */
@property (nonatomic) bool showDictationButton; /* unknown property attribute: ? */
@property (nonatomic) long long smartDashesType; /* unknown property attribute: ? */
@property (nonatomic) long long smartInsertDeleteType; /* unknown property attribute: ? */
@property (nonatomic) long long smartQuotesType; /* unknown property attribute: ? */
@property (nonatomic) long long spellCheckingType; /* unknown property attribute: ? */
@property (readonly) Class superclass;
@property (nonatomic, retain) _UISupplementalLexicon *supplementalLexicon; /* unknown property attribute: ? */
@property (nonatomic, retain) UIImage *supplementalLexiconAmbiguousItemIcon; /* unknown property attribute: ? */
@property (nonatomic) bool suppressReturnKeyStyling; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *textContentType; /* unknown property attribute: ? */
@property (nonatomic) int textLoupeVisibility; /* unknown property attribute: ? */
@property (nonatomic, readonly) UITextRange *textRangeForServicesInteraction; /* unknown property attribute: ? */
@property (nonatomic) long long textScriptType; /* unknown property attribute: ? */
@property (nonatomic) int textSelectionBehavior; /* unknown property attribute: ? */
@property (nonatomic) id textSuggestionDelegate; /* unknown property attribute: ? */
@property (nonatomic) struct __CFCharacterSet { }*textTrimmingSet; /* unknown property attribute: ? */
@property (nonatomic) bool typingAdaptationDisabled; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *underlineColorForSpelling; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *underlineColorForTextAlternatives; /* unknown property attribute: ? */
@property (nonatomic) bool useAutomaticEndpointing; /* unknown property attribute: ? */
@property (nonatomic) bool useInterfaceLanguageForLocalization; /* unknown property attribute: ? */
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } validTextRange;
@property (nonatomic, readonly) bool wasEverSecureTextEntry; /* unknown property attribute: ? */
@property unsigned long long writingToolsAllowedInputOptions; /* unknown property attribute: ? */
@property long long writingToolsBehavior; /* unknown property attribute: ? */

+ (long long)accessibleAppearanceForAppearance:(long long)arg1;
+ (long long)configuredAppearanceForAppearance:(long long)arg1 withTraitEnvironment:(id)arg2;
+ (id)defaultTextInputTraits;
+ (bool)keyboardTypeRequiresASCIICapable:(long long)arg1;
+ (id)traitEnvironmentFromTraits:(id)arg1;
+ (id)traitsByAdoptingTraits:(id)arg1;
+ (id)traitsByAdoptingTraits:(id)arg1 lightweight:(bool)arg2;
+ (long long)translateToPublicUIKeyboardAppearance:(unsigned long long)arg1;
+ (long long)translateToUIAutocapitalizationType:(unsigned long long)arg1;
+ (long long)translateToUIAutocorrectionType:(unsigned long long)arg1;
+ (long long)translateToUIInlinePredictionType:(unsigned long long)arg1;
+ (long long)translateToUIKeyboardAppearance:(unsigned long long)arg1;
+ (long long)translateToUIKeyboardType:(unsigned long long)arg1;
+ (long long)translateToUIReturnKeyType:(unsigned long long)arg1;
+ (long long)translateToUISmartDashesType:(unsigned long long)arg1;
+ (long long)translateToUISmartInsertDeleteEnabled:(bool)arg1;
+ (long long)translateToUISmartQuotesType:(unsigned long long)arg1;
+ (long long)translateToUISpellCheckingType:(unsigned long long)arg1;
+ (long long)translateToUITextAllowsTextAnimationsType:(long long)arg1;
+ (long long)translateToUITextMathExpressionCompletionType:(long long)arg1;
+ (long long)translateToUITextScriptType:(unsigned long long)arg1;

- (void).cxx_destruct;
- (id)PINEntrySeparatorIndexes;
- (void)_setColorsToMatchTintColor:(id)arg1;
- (bool)acceptsDictationSearchResults;
- (bool)acceptsEmoji;
- (bool)acceptsFloatingKeyboard;
- (bool)acceptsInitialEmojiKeyboard;
- (bool)acceptsPayloads;
- (bool)acceptsSplitKeyboard;
- (unsigned long long)allowedWritingToolsResultOptions;
- (bool)allowsSuggestionsOnlyMode;
- (long long)allowsTextAnimationsType;
- (long long)autocapitalizationType;
- (id)autocorrectionContext;
- (long long)autocorrectionType;
- (bool)contentsIsSingleValue;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (bool)deferBecomingResponder;
- (id)description;
- (long long)dictationInfoKeyboardType;
- (long long)dictationKeyboardType;
- (id)dictionaryRepresentation;
- (bool)disableHandwritingKeyboard;
- (bool)disableInputBars;
- (bool)disablePrediction;
- (bool)displaySecureEditsUsingPlainText;
- (bool)displaySecureTextUsingPlainText;
- (int)emptyContentReturnKeyType;
- (bool)enablesReturnKeyAutomatically;
- (bool)enablesReturnKeyOnNonWhiteSpaceContent;
- (void)extendedPathToObtainTraitsFrom:(id)arg1 lightweight:(bool)arg2;
- (void)fastPathToObtainTraitsFrom:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })floatingKeyboardEdgeInsets;
- (bool)forceDefaultDictationInfo;
- (long long)forceDictationKeyboardType;
- (bool)forceDisableDictation;
- (bool)forceEnableDictation;
- (bool)forceFloatingKeyboard;
- (bool)forceSpellingDictation;
- (bool)hasDefaultContents;
- (bool)hidePrediction;
- (id)init;
- (long long)inlineCompletionType;
- (long long)inlinePredictionType;
- (id)inputContextHistory;
- (id)insertionPointColor;
- (unsigned long long)insertionPointWidth;
- (bool)isCarPlayIdiom;
- (bool)isDevicePasscodeEntry;
- (bool)isEqual:(id)arg1;
- (bool)isSecureTextEntry;
- (bool)isSingleLineDocument;
- (long long)keyboardAppearance;
- (long long)keyboardType;
- (bool)learnsCorrections;
- (bool)loadKeyboardsForSiriLanguage;
- (bool)manageRecentInputs;
- (id)matchHighlightColor;
- (long long)mathExpressionCompletionType;
- (void)overlayWithTITextInputTraits:(id)arg1;
- (void)overrideWithPrivateTraits:(id)arg1;
- (void)overrideWithTraits:(id)arg1;
- (id)passwordRules;
- (bool)preferOnlineDictation;
- (long long)preferredKeyboardStyle;
- (bool)publicTraitsMatchTraits:(id)arg1;
- (id)recentInputIdentifier;
- (id)responseContext;
- (bool)returnKeyGoesToNextResponder;
- (long long)returnKeyType;
- (id)selectionBarColor;
- (id)selectionBorderColor;
- (double)selectionBorderWidth;
- (double)selectionCornerRadius;
- (id)selectionDragDotImage;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })selectionEdgeInsets;
- (id)selectionHighlightColor;
- (void)setAcceptsDictationSearchResults:(bool)arg1;
- (void)setAcceptsEmoji:(bool)arg1;
- (void)setAcceptsFloatingKeyboard:(bool)arg1;
- (void)setAcceptsInitialEmojiKeyboard:(bool)arg1;
- (void)setAcceptsPayloads:(bool)arg1;
- (void)setAcceptsSplitKeyboard:(bool)arg1;
- (void)setAllowedWritingToolsResultOptions:(unsigned long long)arg1;
- (void)setAllowsTextAnimationsType:(long long)arg1;
- (void)setAutocapitalizationType:(long long)arg1;
- (void)setAutocorrectionContext:(id)arg1;
- (void)setAutocorrectionType:(long long)arg1;
- (void)setContentsIsSingleValue:(bool)arg1;
- (void)setDeferBecomingResponder:(bool)arg1;
- (void)setDevicePasscodeEntry:(bool)arg1;
- (void)setDisableHandwritingKeyboard:(bool)arg1;
- (void)setDisableInputBars:(bool)arg1;
- (void)setDisablePrediction:(bool)arg1;
- (void)setDisplaySecureEditsUsingPlainText:(bool)arg1;
- (void)setDisplaySecureTextUsingPlainText:(bool)arg1;
- (void)setEmptyContentReturnKeyType:(int)arg1;
- (void)setEnablesReturnKeyAutomatically:(bool)arg1;
- (void)setEnablesReturnKeyOnNonWhiteSpaceContent:(bool)arg1;
- (void)setFloatingKeyboardEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setForceDefaultDictationInfo:(bool)arg1;
- (void)setForceDictationKeyboardType:(long long)arg1;
- (void)setForceDisableDictation:(bool)arg1;
- (void)setForceEnableDictation:(bool)arg1;
- (void)setForceFloatingKeyboard:(bool)arg1;
- (void)setForceSpellingDictation:(bool)arg1;
- (void)setHasDefaultContents:(bool)arg1;
- (void)setHidePrediction:(bool)arg1;
- (void)setInlineCompletionType:(long long)arg1;
- (void)setInlinePredictionType:(long long)arg1;
- (void)setInputContextHistory:(id)arg1;
- (void)setInsertionPointColor:(id)arg1;
- (void)setInsertionPointWidth:(unsigned long long)arg1;
- (void)setIsCarPlayIdiom:(bool)arg1;
- (void)setIsSingleLineDocument:(bool)arg1;
- (void)setKeyboardAppearance:(long long)arg1;
- (void)setKeyboardType:(long long)arg1;
- (void)setLearnsCorrections:(bool)arg1;
- (void)setLoadKeyboardsForSiriLanguage:(bool)arg1;
- (void)setManageRecentInputs:(bool)arg1;
- (void)setMatchHighlightColor:(id)arg1;
- (void)setMathExpressionCompletionType:(long long)arg1;
- (void)setPINEntrySeparatorIndexes:(id)arg1;
- (void)setPasswordRules:(id)arg1;
- (void)setPreferOnlineDictation:(bool)arg1;
- (void)setPreferredKeyboardStyle:(long long)arg1;
- (void)setRecentInputIdentifier:(id)arg1;
- (void)setResponseContext:(id)arg1;
- (void)setReturnKeyGoesToNextResponder:(bool)arg1;
- (void)setReturnKeyType:(long long)arg1;
- (void)setSecureTextEntry:(bool)arg1;
- (void)setSelectionBarColor:(id)arg1;
- (void)setSelectionBorderColor:(id)arg1;
- (void)setSelectionBorderWidth:(double)arg1;
- (void)setSelectionCornerRadius:(double)arg1;
- (void)setSelectionDragDotImage:(id)arg1;
- (void)setSelectionEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setSelectionHighlightColor:(id)arg1;
- (void)setShortcutConversionType:(int)arg1;
- (void)setShowDictationButton:(bool)arg1;
- (void)setSmartDashesType:(long long)arg1;
- (void)setSmartInsertDeleteType:(long long)arg1;
- (void)setSmartQuotesType:(long long)arg1;
- (void)setSpellCheckingType:(long long)arg1;
- (void)setSupplementalLexicon:(id)arg1;
- (void)setSupplementalLexiconAmbiguousItemIcon:(id)arg1;
- (void)setSuppressReturnKeyStyling:(bool)arg1;
- (void)setTextContentType:(id)arg1;
- (void)setTextLoupeVisibility:(int)arg1;
- (void)setTextScriptType:(long long)arg1;
- (void)setTextSelectionBehavior:(int)arg1;
- (void)setTextSuggestionDelegate:(id)arg1;
- (void)setTextTrimmingSet:(struct __CFCharacterSet { }*)arg1;
- (void)setToDefaultValues;
- (void)setToSecureValues;
- (void)setUseAutomaticEndpointing:(bool)arg1;
- (void)setUseInterfaceLanguageForLocalization:(bool)arg1;
- (void)setValidTextRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setWritingToolsBehavior:(long long)arg1;
- (int)shortcutConversionType;
- (bool)showDictationButton;
- (long long)smartDashesType;
- (long long)smartInsertDeleteType;
- (long long)smartQuotesType;
- (long long)spellCheckingType;
- (id)supplementalLexicon;
- (id)supplementalLexiconAmbiguousItemIcon;
- (bool)suppressReturnKeyStyling;
- (void)takeTraitsFrom:(id)arg1;
- (void)takeTraitsFrom:(id)arg1 lightweight:(bool)arg2;
- (id)textContentType;
- (int)textLoupeVisibility;
- (long long)textScriptType;
- (int)textSelectionBehavior;
- (id)textSuggestionDelegate;
- (struct __CFCharacterSet { }*)textTrimmingSet;
- (long long)updateResultComparedToTraits:(id)arg1;
- (bool)useAutomaticEndpointing;
- (bool)useInterfaceLanguageForLocalization;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })validTextRange;
- (bool)wasEverSecureTextEntry;
- (long long)writingToolsBehavior;

@end
