/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UITextSelectionDisplayInteraction : NSObject <UIInteraction, UITextCursorAssertionControllerSubject, _UIAssertionControllerSubject, _UICursorAccessoryViewControllerDelegate, _UIGeometryChangeObserver> {
    <UITextCursorAssertion> * __dictationBlinkSuppressionAssertion;
    bool  __isDictationRunning;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  __previousCursorFrame;
    <UITextCursorAssertion> * _accessibilityNonBlinkingAssertion;
    bool  _activated;
    _UITextFloatingCursorSession * _activeFloatingCursorSession;
    unsigned long long  _activeIndicators;
    _UIAssertionController * _assertionController;
    UIStandardTextCursorView * _concreteCursorView;
    _UITextSelectionHighlightView * _concreteHighlightView;
    _UICursorAccessoryViewController * _cursorAccessoryViewController;
    bool  _cursorAccessoryViewHidden;
    UITextCursorAssertionController * _cursorAssertionController;
    bool  _cursorFadedHiddenForFloatingCursor;
    bool  _cursorHidden;
    _UIContainerWindowPortalInteraction * _cursorPortalInteraction;
    UIView<UITextCursorView> * _cursorView;
    <UITextSelectionDisplayInteractionDelegate> * _delegate;
    struct { 
        unsigned int selectionContainerViewBelowText : 1; 
        unsigned int activeSelection : 1; 
        unsigned int obtainBlinkSuppressionAssertion : 1; 
        unsigned int obtainGhostCursorAssertion : 1; 
        unsigned int convertPointToRenderSpace : 1; 
    }  _delegateRespondsTo;
    bool  _didInitializeManagedDictationViews;
    bool  _didInstallManagedSubviews;
    int  _glowViewMode;
    bool  _hiddenForApplicationSuspend;
    UIView<UITextSelectionHighlightView> * _highlightView;
    NSArray * _managedSubviewsAboveText;
    NSArray * _managedSubviewsBelowText;
    bool  _needsUpdate;
    _UITextUnderlineView * _proofreadingUnderlineView;
    NSMutableDictionary * _proofreadingUnderlines;
    _UITextSelectionRangeAdjustmentContainerView * _rangeAdjustmentViewContainer;
    int  _rangeViewMode;
    UIView<UITextSelectionHighlightView> * _savedHighlightView;
    bool  _selectionUIHiddenForAssertion;
    bool  _shouldAnimateSelectionUIHiddenAssertionState;
    bool  _shouldDisplayShimmerHighlights;
    <UITextCursorAssertion> * _showDeleteButtonCursorAssertion;
    <UITextCursorAssertion> * _showInputModesCursorAssertion;
    <UITextInput> * _textInput;
    struct { 
        unsigned int shouldSuppressSelectionHandles : 1; 
        unsigned int visibleRangeWithLayout : 1; 
        unsigned int nsrangeForTextRange : 1; 
        unsigned int unobscuredContentRect : 1; 
        unsigned int textLayoutManager : 1; 
        unsigned int caretTransformForPosition : 1; 
        unsigned int legacyCaretTransformForPosition : 1; 
    }  _textInputRespondsTo;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _textSelectionMenuSourceRect;
    _UITextCursorTrailingGlowView * _trailingGlowView;
    _UIContainerWindowPortalInteraction * _trailingPortalInteraction;
    _UITextUnderlineView * _underlineView;
    UIView * _view;
    struct { 
        unsigned int selectionContainerViewAboveText : 1; 
        unsigned int selectionContainerView : 1; 
        unsigned int selectionClipRect : 1; 
        unsigned int selectionClipRect_External : 1; 
    }  _viewRespondsTo;
}

@property (getter=_caretRect, nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _caretRect;
@property (nonatomic, readonly) _UICursorAccessoryViewController *_cursorAccessoryViewController;
@property (getter=_isCursorAccessoryViewEnabled, nonatomic, readonly) bool _cursorAccessoryViewEnabled;
@property (getter=_isCursorAccessoryViewVisible, nonatomic, readonly) bool _cursorAccessoryViewVisible;
@property (nonatomic, readonly) UITextCursorAssertionController *_cursorAssertionController;
@property (nonatomic, readonly) UIColor *_cursorTintColor;
@property (nonatomic, readonly) UIStandardTextCursorView *_cursorView;
@property (getter=_isCursorVisible, nonatomic, readonly) bool _cursorVisible;
@property (getter=_isDisplayingVerticalSelection, nonatomic, readonly) bool _displayingVerticalSelection;
@property (nonatomic, readonly) _UITextUnderlineView *_existingUnderlineView;
@property (setter=_setGlowViewMode:, nonatomic) int _glowViewMode;
@property (nonatomic, readonly) _UITextSelectionHighlightView *_highlightView;
@property (nonatomic) bool _isDictationRunning;
@property (nonatomic, readonly) NSArray *_preferredLayoutRectsForEditMenu;
@property (nonatomic, readonly) _UITextSelectionRangeAdjustmentContainerView *_rangeAdjustmentViewContainer;
@property (nonatomic, readonly) _UITextCursorTrailingGlowView *_trailingGlowView;
@property (nonatomic, readonly) _UITextUnderlineView *_underlineView;
@property (getter=_isVisible, nonatomic, readonly) bool _visible;
@property (getter=isActivated, nonatomic) bool activated;
@property (nonatomic) unsigned long long activeIndicators; /* unknown property attribute: ? */
@property (nonatomic) bool cursorBlinks;
@property (getter=isCursorHidden, nonatomic) bool cursorHidden;
@property (nonatomic, retain) _UIContainerWindowPortalInteraction *cursorPortalInteraction;
@property (nonatomic, retain) UIView<UITextCursorView> *cursorView;
@property (nonatomic) bool cursorVisible;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic, readonly) <UITextSelectionDisplayInteractionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool ghostAppearance;
@property (nonatomic, retain) NSArray *handleViews;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIView<UITextSelectionHighlightView> *highlightView;
@property (nonatomic) int rangeViewMode;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <UITextInput> *textInput;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } textSelectionMenuSourceRect;
@property (nonatomic, retain) _UIContainerWindowPortalInteraction *trailingPortalInteraction;
@property (nonatomic, readonly) UIView *view;

+ (bool)isModernSelectionViewEnabled;
+ (bool)isTextAccelerationUIEnabled;

- (void).cxx_destruct;
- (id)_activeSelection;
- (void)_addInteractiveUnderlines:(id)arg1 animated:(bool)arg2;
- (id)_allManagedSubviews;
- (id)_beginFloatingCursorSessionAtPoint:(struct CGPoint { double x1; double x2; })arg1 inContainer:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_caretRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_caretRectAtStartOfLine;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_caretRectForDictationTrailingGlowView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_caretRectForPosition:(id)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_caretTransform;
- (bool)_clientManagesSelectionViewSubviewOrder;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_contentBoundsForPlacement:(long long)arg1;
- (id)_cursorAccessoryViewController;
- (void)_cursorAccessoryViewController:(id)arg1 didActivateCursorAccessory:(id)arg2;
- (double)_cursorAlpha;
- (id)_cursorAssertionController;
- (id)_cursorTintColor;
- (id)_cursorView;
- (void)_dictationDidBeginNotification:(id)arg1;
- (void)_dictationDidFinishNotification:(id)arg1;
- (void)_dictationDidPauseNotification:(id)arg1;
- (void)_dictationDidResumeNotification:(id)arg1;
- (void)_dictationWillInsertHypothesisNotification:(id)arg1;
- (void)_didBeginRangeAdjustmentInteraction:(id)arg1;
- (void)_didEndRangeAdjustmentInteraction:(id)arg1;
- (void)_didReceiveAXNonBlinkingDidChangeNotification:(id)arg1;
- (void)_didReceiveApplicationWillResumeNotification:(id)arg1;
- (void)_didReceiveApplicationWillSuspendNotification:(id)arg1;
- (void)_enableDictationPortalViews;
- (id)_existingUnderlineView;
- (void)_filterArchivedSubviews:(id)arg1;
- (void)_geometryChanged:(const struct { unsigned long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; struct CATransform3D { double x_6_1_1; double x_6_1_2; double x_6_1_3; double x_6_1_4; double x_6_1_5; double x_6_1_6; double x_6_1_7; double x_6_1_8; double x_6_1_9; double x_6_1_10; double x_6_1_11; double x_6_1_12; double x_6_1_13; double x_6_1_14; double x_6_1_15; double x_6_1_16; } x6; long long x7; id x8; id x9; id x10; id x11; }*)arg1 forAncestor:(id)arg2;
- (int)_glowViewMode;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_grabberDotRectForTextRangeAdjustmentEdgeRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 isVertical:(bool)arg2 direction:(unsigned long long)arg3;
- (double)_highlightAndRangeAdjustmentAlpha;
- (id)_highlightView;
- (id)_hostViewAboveText;
- (id)_hostViewBelowText;
- (id)_initWithTextInput:(id)arg1 delegate:(id)arg2 activated:(bool)arg3;
- (void)_initializeDictationSupport;
- (void)_initializeManagedDictationViewsIfNecessary;
- (void)_installManagedSubviewsIfNecessary;
- (id)_internalDelegate;
- (bool)_isCursorAccessoryViewEnabled;
- (bool)_isCursorAccessoryViewVisible;
- (bool)_isCursorVisible;
- (bool)_isDictationRunning;
- (bool)_isDisplayingVerticalSelection;
- (bool)_isHighlightVisible;
- (bool)_isManagedSelectionSubview:(id)arg1;
- (bool)_isRangeAdjustmentUIVisible;
- (bool)_isVisible;
- (void)_layoutManagedSubviewsResettingBlinkingAnimation:(bool)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_lollipopTransformForSelectionRect:(id)arg1 view:(id)arg2;
- (id)_managedSubviewsAboveText;
- (id)_managedSubviewsBelowText;
- (id)_managedViewForType:(long long)arg1;
- (id)_obtainGhostCursorAssertion;
- (id)_obtainGrabberSuppressionAssertion;
- (id)_obtainHideCursorAccessoriesAssertionWithReason:(id)arg1;
- (id)_obtainSelectionUIHiddenAssertionForReason:(id)arg1 animated:(bool)arg2;
- (id)_obtainShimmerHighlightAssertion;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_paddedEdgeInsetsForGrabberDirection:(unsigned long long)arg1 isVertical:(bool)arg2 scale:(double)arg3;
- (void)_performCursorBulgeAnimation;
- (id)_preferredLayoutRectsForEditMenu;
- (id)_proofreadingUnderlineView;
- (id)_rangeAdjustmentViewContainer;
- (void)_removeAllInteractiveUnderlinesAnimated:(bool)arg1;
- (void)_removeAllProofreadingUnderlinesAnimated:(bool)arg1;
- (void)_removeInteractiveUndelines:(id)arg1 animiated:(bool)arg2;
- (void)_removeManagedSubviews;
- (void)_removeUnderlineWithIdentifier:(id)arg1 animated:(bool)arg2;
- (void)_resetDictationPortalViews;
- (id)_selectedRange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_selectionClipRectAt:(long long)arg1;
- (void)_setCursorFadedHiddenForFloatingCursor:(bool)arg1 animated:(bool)arg2;
- (void)_setGlowViewMode:(int)arg1;
- (bool)_shouldHitTestSelectionGrabbers;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_textInputRectInSelectionViewCoordinateSpace:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_textRangeAdjustmentRectForEdge:(unsigned long long)arg1 selectionRects:(id)arg2;
- (id)_tintColorOrDefault:(id)arg1;
- (id)_tintColorOrDefault:(id)arg1 alpha:(double)arg2;
- (void)_trackingViewportDidLayout:(id)arg1;
- (id)_trailingGlowView;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_transformRelativeToTextInputCoordinateSpace:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1 forView:(id)arg2;
- (id)_underlineRectsForRange:(id)arg1;
- (id)_underlineTextInRange:(id)arg1 animated:(bool)arg2;
- (id)_underlineTextInRange:(id)arg1 animated:(bool)arg2 preferredUUID:(id)arg3;
- (id)_underlineView;
- (void)_updateAccessibilityNonBlinkingAssertion;
- (void)_updateAnimatedUnderlinesIfNeeded;
- (void)_updateDelegateConformance;
- (void)_updateDictationUI;
- (void)_updateHighlightViewWithShimmerState;
- (void)_updateSelectionIfNeeded;
- (void)_updateSelectionIfNeededResettingBlinkingAnimation:(id)arg1;
- (void)_updateTextInputConformance;
- (void)_updateUnderlinesIfNeeded;
- (void)_updateViewConformance;
- (void)_viewVisibilityDidChange;
- (id)_visibleSelectionRectsForRange:(id)arg1;
- (unsigned long long)activeIndicators;
- (void)assertionActivationStateChangedToState:(bool)arg1 forType:(unsigned long long)arg2;
- (bool)assertionActivationStateForType:(unsigned long long)arg1;
- (void)cleanUpProofreading;
- (void)clearDeleteButtonCursorAssertion;
- (void)clearInputModeCursorAssertion;
- (void)cursorAccessoryViewController:(id)arg1 didActivateCursorAccessory:(id)arg2;
- (bool)cursorBlinks;
- (id)cursorPortalInteraction;
- (id)cursorView;
- (bool)cursorVisible;
- (void)dealloc;
- (id)defaultUnderlineColor;
- (id)delegate;
- (void)didMoveToView:(id)arg1;
- (bool)ghostAppearance;
- (id)handleViews;
- (id)highlightView;
- (id)initWithTextInput:(id)arg1 delegate:(id)arg2;
- (id)inputModeForDictationLanguage:(id)arg1;
- (bool)isActivated;
- (bool)isCursorHidden;
- (void)layoutManagedSubviews;
- (id)obtainBlinkSuppressionAssertionForReason:(id)arg1;
- (id)obtainGhostCursorAssertionForReason:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })paddedTextRangeAdjustmentHitRegionForEdge:(unsigned long long)arg1 precision:(unsigned long long)arg2;
- (int)rangeViewMode;
- (void)setActivated:(bool)arg1;
- (void)setActiveIndicators:(unsigned long long)arg1;
- (void)setActiveIndicators:(unsigned long long)arg1 animationStyle:(long long)arg2;
- (void)setCursorBlinks:(bool)arg1;
- (void)setCursorHidden:(bool)arg1;
- (void)setCursorPortalInteraction:(id)arg1;
- (void)setCursorView:(id)arg1;
- (void)setCursorVisible:(bool)arg1;
- (void)setGhostAppearance:(bool)arg1;
- (void)setHandleViews:(id)arg1;
- (void)setHighlightView:(id)arg1;
- (void)setNeedsSelectionUpdate;
- (void)setRangeViewMode:(int)arg1;
- (void)setTrailingPortalInteraction:(id)arg1;
- (void)set_isDictationRunning:(bool)arg1;
- (id)textInput;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })textRangeAdjustmentRectForEdge:(unsigned long long)arg1;
- (id)textRangeAdjustmentViewForEdge:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })textSelectionMenuSourceRect;
- (id)trailingPortalInteraction;
- (id)view;
- (void)willMoveToView:(id)arg1;

@end
