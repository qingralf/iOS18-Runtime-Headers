/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UIKeyboardStateManager : NSObject <BETextInputDelegate, TIKeyboardInputManagerToImplProtocol, TUIKeyboardCandidateReceiver, UIAsyncTextInputDelegate, UIInlineTextCompletionControllerDelegate, UIKBRTIPartnerDelegate, UIKeyboardAutocorrectionControllerDelegate, UIKeyboardCandidateControllerDelegate, UIKeyboardCandidateListDelegate, UIKeyboardInputModeIndicatorControllerDelegate, UIPopoverPresentationControllerDelegate, UITextInputDelegatePrivate, _UIIVCResponseDelegateImpl, _UIKeyboardTextSelectionGestureControllerDelegate, _UIStickerPickerKeyboardSessionDelegate, _UITextChoicesAssistantDelegate> {
    bool  __mimicShiftBeingHeld;
    NSString * _activeDictationLanguage;
    UITextInputArrowKeyHistory * _arrowKeyHistory;
    TIKeyboardCandidate * _autocorrectionToAcceptBeforeProgressiveCandidates;
    long long  _candidateViewOffset;
    NSArray * _characterRectsForCharacterRange;
    id /* block */  _chooseSupplementalCandidateCompletion;
    TICandidateRequestToken * _currentCandidateRequest;
    NSDictionary * _currentCandidateRequestInfo;
    _UITextChoiceAccelerationAssistant * _customInputDelegateChoiceAccelerationAssistant;
    _UIKeyboardTextSelectionController * _customInputDelegateSelectionController;
    _UIKeyboardTextSelectionInteraction * _customInputDelegateSelectionInteraction;
    id /* block */  _deferredUpdateTask;
    NSMutableDictionary * _delegateForCandidateRequest;
    double  _deleteWordLastDelete;
    NSString * _deletedString;
    id /* block */  _didTeardownExistingDelegate;
    id /* block */  _externalTask;
    bool  _floatingForced;
    bool  _forCustomInputView;
    bool  _handlingKeyCommandFromHardwareKeyboard;
    NSString * _hardwareKeyboardExclusivityIdentifier;
    bool  _hasNextKeyResponder;
    bool  _hasPreviousKeyResponder;
    _UISceneHostingController * _hostingController;
    long long  _id;
    NSAttributedString * _inlineCompletionAsMarkedText;
    UIKBInputDelegateManager * _inputDelegateManager;
    UIKeyboardInputModeIndicatorController * _inputModeIndicatorController;
    bool  _isCallingTextChangedDuringInputModeSwitch;
    bool  _isSettingDelegate;
    bool  _isSettingExtensionInputMode;
    bool  _keyboardDelegateStateNeedsRefresh;
    unsigned long long  _lastDeletionCountForFastDelete;
    _UIStringAndPositionPair * _lastMatchedSupplementalCandidate;
    bool  _needsUpdateAssistantView;
    UIView * _overlayContainerObserved;
    UITextRange * _pendingAutocorrectRange;
    _UIKeyboardImplHeldOperation * _pendingKeyupOperation;
    _UIStringAndPositionPair * _pendingSupplementalCandidateToInsert;
    UIView<_UIKeyboardPresentationDelegate> * _presentationDelegate;
    bool  _receivedCandidatesInCurrentInputMode;
    UIKBRTIPartner * _remoteTextInputPartner;
    UITextInputTraits * _remoteTextInputTraits;
    NSUUID * _resigningRTISessionIdentifier;
    bool  _restoresToEmojiInputMode;
    unsigned long long  _serviceRole;
    bool  _skipRecomputeInputMode;
    void * _skippedEndInputSession;
    NSUUID * _skippedEndInputSessionID;
    _UISmartReplyFeedbackManager * _smartReplyFeedbackManager;
    <TUISmartReplyGenerator_Staging> * _smartReplyGenerator;
    bool  _suppressUpdateAssistantView;
    bool  _suppressUpdateInputMode;
    bool  _syncingDictationLanguageForInputModeSwitch;
    UIKeyboardTaskQueue * _taskQueue;
    <_UITextInputUserInteractionDelegate> * _userInteractionDelegate;
    id /* block */  _waitingOnPerformAutocorrect;
    id /* block */  _willSetupNewDelegate;
    bool  committingCandidate;
    bool  m_acceptingCandidate;
    unsigned int  m_autoDeleteCount;
    double  m_autoDeleteCurrentForce;
    double  m_autoDeleteCurrentForceMultipler;
    double  m_autoDeleteInterval;
    double  m_autoDeleteLastDelete;
    bool  m_autoDeleteOK;
    unsigned int  m_autoDeleteShiftCharacter;
    UIKeyboardScheduledTask * m_autoDeleteTask;
    bool  m_autoDeleteUseForce;
    bool  m_autocapitalizationPreference;
    UIKeyboardAutocorrectionController * m_autocorrectionController;
    bool  m_autocorrectionPreference;
    UIKBAutofillController * m_autofillController;
    NSDictionary * m_autofillCustomInfo;
    long long  m_autofillSubMode;
    bool  m_autoshift;
    long long  m_cachedAutofillMode;
    <UIKeyboardCandidateList> * m_candidateList;
    TIKeyboardCandidateResultSet * m_candidateResultSet;
    int  m_changeCount;
    double  m_changeTime;
    id  m_changedDelegate;
    bool  m_correctionLearningAllowed;
    long long  m_currentDirection;
    UIPhysicalKeyboardEvent * m_currentEventForKeyCommand;
    UITextInputTraits * m_defaultTraits;
    _UIActionWhenIdle * m_deferredDidSetDelegateAction;
    UIKeyboardScheduledTask * m_delayDeleteTask;
    _UIActionWhenIdle * m_delayedCandidateRequest;
    bool  m_delegateRequiresKeyEvents;
    bool  m_delegateSupportsImagePaste;
    bool  m_didAutomaticallyInsertSpace;
    bool  m_didAutomaticallyInsertSpaceBeforeChangingInputMode;
    bool  m_didExtendLongPressDelayForContinuousPath;
    bool  m_didSyncDocumentStateToInputDelegate;
    bool  m_didUpdateCapsLockLanguageSwitchSetting;
    bool  m_disableAutocapitalization;
    bool  m_disableClearingTextSuggestions;
    bool  m_disableSmartInsertDelete;
    bool  m_disableSyncTextChanged;
    bool  m_doubleSpacePeriodPreference;
    bool  m_doubleSpacePeriodWasAppliedInCurrentContext;
    bool  m_editingTraitsMarkedDirty;
    bool  m_everPresentedPasswordAutofillPanel;
    NSMutableDictionary * m_hardwareKeyDownCodeToEventMap;
    bool  m_hardwareKeyboardAttached;
    bool  m_hasEditedMarkedTextInExtendedView;
    bool  m_hasInputOnAcceptCandidate;
    <_UIInvalidatable> * m_hideCursorAccessoriesAssertion;
    UIDelayedAction * m_idleDetection;
    bool  m_ignoreSelectionChange;
    _UIKeyboardImplProxy * m_implProxy;
    bool  m_inDealloc;
    bool  m_inHandleKeyAppCommandForCurrentEvent;
    bool  m_inHandleKeyTextCommandForCurrentEvent;
    bool  m_initializationDone;
    UIInlineTextCompletionController * m_inlineTextCompletionController;
    TIKeyboardInputManagerState * m_inputManagerState;
    bool  m_isAutoFillMenuPresented;
    bool  m_isAutofilling;
    bool  m_keyboardDelegateStateNeedsRefresh;
    TIKeyboardState * m_keyboardState;
    UIView * m_keyboardWindowSnapshot;
    unsigned long long  m_lastChooseSupplementalItemToInsertCallbackIdentifier;
    bool  m_layoutAllowsCP;
    bool  m_longPress;
    UIDelayedAction * m_longPressAction;
    bool  m_needsCandidates;
    bool  m_needsOneShotGenerateCandidatesAfterStoppingAutoDelete;
    bool  m_needsPasteSupportUpdate;
    bool  m_needsToRecomputeDesirableModes;
    unsigned long long  m_numCPwords;
    bool  m_originalShouldSkipCandidateSelection;
    UITextInputTraits * m_overrideTraits;
    long long  m_pendingAutofillIndex;
    bool  m_pendingRestoreTextSuggestions;
    int  m_predictionType;
    UIPhysicalKeyboardEvent * m_previousGlobeKeyEvent;
    NSString * m_previousInputString;
    bool  m_remoteDelegateSupportsImagePaste;
    bool  m_repeatDeleteFromHardwareKeyboard;
    bool  m_repeatDeleteWord;
    bool  m_replacingWord;
    bool  m_selecting;
    bool  m_selectionIsEmpty;
    bool  m_settingShift;
    bool  m_shift;
    bool  m_shiftHeldDownNeedsUpdated;
    bool  m_shiftLocked;
    bool  m_shiftLockedEnabled;
    bool  m_shiftNeedsUpdate;
    bool  m_shiftPreventAutoshift;
    bool  m_shouldClearTextSuggestions;
    bool  m_shouldEnableCapsLockLanguageSwitchByDefault;
    bool  m_shouldSkipCandidateGeneration;
    bool  m_shouldSuppressSelectionCommands;
    bool  m_shouldUpdateCacheOnInputModesChange;
    UIDelayedAction * m_showCursorAccessory;
    bool  m_skipAcceptAutocorrection;
    TISmartPunctuationController * m_smartPunctuationController;
    bool  m_suggestionsShownForCurrentDeletion;
    bool  m_suppressUpdateLayout;
    bool  m_suppressUpdateShiftState;
    bool  m_suppressingDocumentAssertions;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  m_textAlternativesRange;
    bool  m_textInputChangesIgnored;
    unsigned long long  m_textInputChangingCount;
    bool  m_textInputChangingDirection;
    bool  m_textInputChangingText;
    long long  m_textInputSource;
    bool  m_textInputUpdatingSelection;
    TIKeyboardTouchEvent * m_touchEventWaitingForKeyInputEvent;
    UITextInputTraits * m_traits;
    UITextInputTraits * m_traitsForPreviousDelegate;
    UIDelayedAction * m_updateCapsLockDelayOverrideForNonTyping;
    UIDelayedAction * m_updateLastUsedInputModeAction;
    int  m_updatingPreferences;
    bool  m_userChangedSelection;
    long long  m_userInteraction;
    bool  m_usesAutoShiftFor3PK;
    bool  m_usesCandidateSelection;
    bool  m_usesSystemKeyboardForASP;
    bool  m_wasDelegateSetupWithRTIClient;
    bool  m_webEventIsKeyDown;
    bool  m_webEventWasHandledAsKeyCommand;
    bool  m_webEventWasHandledByInputManager;
    bool  markedTextFromClient;
    bool  performingRemoteTextOperations;
}

@property (nonatomic, readonly) _UITextInteractionEditMenuAssistant *_editMenuAssistant;
@property (nonatomic) bool _mimicShiftBeingHeld;
@property (nonatomic, readonly) _UITextChoiceAccelerationAssistant *_textChoicesAssistant;
@property (nonatomic, retain) NSString *activeDictationLanguage;
@property (nonatomic, retain) UITextInputArrowKeyHistory *arrowKeyHistory;
@property (nonatomic) unsigned int autoDeleteCount;
@property (nonatomic, readonly) bool autoDeleteOK;
@property (nonatomic, readonly) UIKeyboardScheduledTask *autoDeleteTask;
@property (nonatomic) bool autocapitalizationPreference;
@property (nonatomic, readonly) UIKeyboardAutocorrectionController *autocorrectionController;
@property (nonatomic) bool autocorrectionPreference;
@property (nonatomic, retain) TIKeyboardCandidate *autocorrectionToAcceptBeforeProgressiveCandidates;
@property (nonatomic, retain) UIKBAutofillController *autofillController;
@property (nonatomic) bool autoshifted;
@property (nonatomic, readonly) TUIKeyboardBackendController *backendController;
@property (nonatomic, readonly) bool canShowPredictionBar;
@property (nonatomic) bool canSuggestSupplementalItemsForCurrentSelection;
@property (nonatomic) long long candidateViewOffset;
@property (nonatomic, retain) id changedDelegate;
@property (nonatomic, copy) NSArray *characterRectsForCharacterRange;
@property (nonatomic, copy) id /* block */ chooseSupplementalCandidateCompletion;
@property (nonatomic) bool committingCandidate;
@property (nonatomic, retain) TICandidateRequestToken *currentCandidateRequest;
@property (nonatomic, retain) NSDictionary *currentCandidateRequestInfo;
@property (nonatomic, retain) _UITextChoiceAccelerationAssistant *customInputDelegateChoiceAccelerationAssistant;
@property (nonatomic, retain) _UIKeyboardTextSelectionController *customInputDelegateSelectionController;
@property (nonatomic, retain) _UIKeyboardTextSelectionInteraction *customInputDelegateSelectionInteraction;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic, retain) _UIActionWhenIdle *deferredDidSetDelegateAction;
@property (nonatomic, retain) _UIActionWhenIdle *delayedCandidateRequest;
@property (nonatomic, retain) UIResponder<UIKeyInput> *delegate;
@property (nonatomic, retain) NSMutableDictionary *delegateForCandidateRequest;
@property (nonatomic, readonly) bool delegateRequiresKeyEvents;
@property (nonatomic, readonly) bool delegateSupportsCorrectionUI;
@property (nonatomic) double deleteWordLastDelete;
@property (nonatomic, retain) NSString *deletedString;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ didTeardownExistingDelegate;
@property (nonatomic) bool disableSmartInsertDelete;
@property (nonatomic, retain) TIDocumentState *documentState;
@property (nonatomic) bool editingTraitsMarkedDirty;
@property (nonatomic, retain) UIPhysicalKeyboardEvent *eventForCurrentWebEvent;
@property (nonatomic) bool everPresentedPasswordAutofillPanel;
@property (nonatomic, copy) id /* block */ externalTask;
@property (nonatomic) bool floatingForced;
@property (nonatomic) bool forCustomInputView;
@property (nonatomic) bool handlingKeyCommandFromHardwareKeyboard;
@property (nonatomic) bool hardwareKeyboardAttached;
@property (nonatomic, copy) NSString *hardwareKeyboardExclusivityIdentifier;
@property (nonatomic) bool hasNextKeyResponder;
@property (nonatomic) bool hasPreviousKeyResponder;
@property (readonly) unsigned long long hash;
@property (getter=isInHardwareKeyboardMode, nonatomic) bool inHardwareKeyboardMode;
@property (nonatomic, readonly) bool inlineTextCompletionAllowedForAutocorrectionType;
@property (nonatomic, readonly) UIInlineTextCompletionController *inlineTextCompletionController;
@property (nonatomic, readonly) <UIInlineTextCompletionLearning> *inlineTextCompletionLearner;
@property (nonatomic, retain) UIKBInputDelegateManager *inputDelegateManager;
@property (nonatomic, readonly) TIKeyboardInputManagerStub *inputManager;
@property (nonatomic, retain) TIKeyboardInputManagerState *inputManagerState;
@property (nonatomic, readonly) UIKeyboardInputModeIndicatorController *inputModeIndicatorController;
@property (nonatomic, readonly) UIView *inputOverlayContainer;
@property (nonatomic, readonly) bool isAutofillPrediction;
@property (nonatomic) bool isCallingTextChangedDuringInputModeSwitch;
@property (nonatomic, readonly) bool isDefaultPrediction;
@property (nonatomic, readonly) bool isSelecting;
@property (nonatomic, readonly) bool isSettingDelegate;
@property (nonatomic) bool keyboardDelegateStateNeedsRefresh;
@property (nonatomic, retain) TIKeyboardState *keyboardState;
@property (nonatomic) unsigned long long lastChooseSupplementalItemToInsertCallbackIdentifier;
@property (nonatomic) unsigned long long lastDeletionCountForFastDelete;
@property (nonatomic, retain) _UIStringAndPositionPair *lastMatchedSupplementalCandidate;
@property (nonatomic, retain) TIKeyboardLayout *layoutForKeyHitTest;
@property (nonatomic) bool markedTextFromClient;
@property (nonatomic, readonly) bool needAutofillLogin;
@property (nonatomic) bool originalShouldSkipCandidateSelection;
@property (nonatomic) UIView *overlayContainerObserved;
@property (nonatomic, retain) _UIStringAndPositionPair *pendingSupplementalCandidateToInsert;
@property (nonatomic) bool performingRemoteTextOperations;
@property (nonatomic) int predictionType;
@property (nonatomic) UIView<_UIKeyboardPresentationDelegate> *presentationDelegate;
@property (nonatomic) bool prewarmsPredictiveCandidates;
@property (nonatomic) bool receivedCandidatesInCurrentInputMode;
@property (nonatomic, readonly) UIKBRTIPartner *remoteTextInputPartner;
@property (nonatomic, readonly) UIKBRTIPartner *remoteTextInputPartnerPrivate;
@property (nonatomic, retain) NSUUID *resigningRTISessionIdentifier;
@property (getter=isSelectionChanging, nonatomic, readonly) bool selectionChanging;
@property (nonatomic) unsigned long long serviceRole;
@property (nonatomic) bool shiftLocked;
@property (nonatomic) bool shiftLockedEnabled;
@property (nonatomic) bool shiftNeedsUpdate;
@property (nonatomic) bool shiftPreventAutoshift;
@property (nonatomic) bool shifted;
@property (nonatomic) bool shouldIgnoreTextInputChanges;
@property (nonatomic, readonly) bool shouldShowCandidateBar;
@property (nonatomic) bool shouldSkipCandidateSelection;
@property (nonatomic) bool shouldSuppressSelectionCommands;
@property (nonatomic, readonly) bool showingEmojiSearch;
@property (nonatomic) bool skipRecomputeInputMode;
@property (nonatomic) void*skippedEndInputSession;
@property (nonatomic, retain) NSUUID *skippedEndInputSessionID;
@property (nonatomic, readonly) TISmartPunctuationController *smartPunctuationController;
@property (nonatomic, retain) _UISmartReplyFeedbackManager *smartReplyFeedbackManager;
@property (nonatomic, retain) <TUISmartReplyGenerator_Staging> *smartReplyGenerator;
@property (readonly) Class superclass;
@property (nonatomic) bool suppressUpdateAssistantView;
@property (nonatomic) bool suppressUpdateInputMode;
@property (nonatomic) bool suppressUpdateLayout;
@property (nonatomic) bool suppressUpdateShiftState;
@property (nonatomic) bool syncingDictationLanguageForInputModeSwitch;
@property (nonatomic, readonly) UIKeyboardTaskQueue *taskQueue;
@property (nonatomic) bool textInputChangesIgnored;
@property (nonatomic) unsigned long long textInputChangingCount;
@property (nonatomic) bool textInputChangingDirection;
@property (nonatomic) bool textInputChangingText;
@property (nonatomic) long long textInputSource;
@property (nonatomic, readonly) UITextInputTraits *textInputTraits;
@property (nonatomic) bool textInputUpdatingSelection;
@property (nonatomic, readonly) UITextInteractionAssistant *textInteractionAssistant;
@property (nonatomic, readonly) _UIKeyboardTextSelectionController *textSelectionController;
@property (nonatomic, readonly) double timestampOfLastTouchesEnded; /* unknown property attribute: ? */
@property (nonatomic, retain) TIKeyboardTouchEvent *touchEventWaitingForKeyInputEvent;
@property (nonatomic, retain) UITextInputTraits *traitsForPreviousDelegate;
@property (nonatomic, retain) UIDelayedAction *updateCapsLockDelayOverrideForNonTyping;
@property (nonatomic, readonly) bool updatingPreferences;
@property (nonatomic) <_UITextInputUserInteractionDelegate> *userInteractionDelegate;
@property (nonatomic) bool userSelectedCurrentCandidate;
@property (nonatomic, copy) id /* block */ willSetupNewDelegate;

+ (bool)_isInputEligibleForSpaceAutodelete:(id)arg1;
+ (bool)isHardwareCommandKeyBeingHeld;
+ (bool)isHardwareShiftKeyBeingHeld;
+ (Class)layoutClassForInputMode:(id)arg1 keyboardType:(long long)arg2 screenTraits:(id)arg3;

- (void).cxx_destruct;
- (id)UILanguagePreference;
- (void)_acceptAutocorrection;
- (void)_acceptAutofillCandidateRequiringAuthentication:(id)arg1 payloadDelegate:(id)arg2 executionContext:(id)arg3;
- (void)_acceptSupplementalCandidate:(id)arg1 completion:(id /* block */)arg2;
- (id /* block */)_acquireWaitingOnPerformAutocorrect;
- (id)_activeAssertionController;
- (void)_addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 withInputSource:(long long)arg4;
- (void)_attemptAuthenticationWithMessage:(id)arg1;
- (id)_attributedCorrectionTextEffectAnimation:(id)arg1;
- (id)_attributedCorrectionTextEffectStyle:(id)arg1;
- (id)_autocorrectionListDemotingAutocorrectionFromList:(id)arg1;
- (id)_autofillContext;
- (id)_autofillGroup;
- (bool)_canDeleteForward;
- (bool)_canHandleResponderCommand:(SEL)arg1;
- (bool)_canHandleResponderCommandConservatively:(SEL)arg1;
- (bool)_cancelOperation:(bool)arg1 testOnly:(bool)arg2;
- (void)_cancelPendingSupplementalCandidateInsertion;
- (void)_clearAutofillGroup;
- (void)_completePerformInputViewControllerOutput:(id)arg1 executionContext:(id)arg2;
- (void)_conditionallyNotifyPredictionsAreAvailableForCandidates:(id)arg1 containingProactiveTriggers:(bool)arg2;
- (void)_configureMarkedTextAttributesForConversion:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 highlightRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (bool)_containsUsernamePasswordPairsInAutofillGroup:(id)arg1;
- (id)_contentsOfUsernameField;
- (void)_deactiveActiveKeys;
- (bool)_delegateRequiresKeyEvents;
- (void)_deleteFromInputWithFlags:(unsigned long long)arg1;
- (void)_didReplaceText:(id)arg1 withSupplementalCandidate:(id)arg2;
- (void)_dispatchInsertionPointEnteredText:(id)arg1 range:(id)arg2 withSupplementalCandidate:(id)arg3;
- (void)_dispatchInsertionPointExitedRangeWithSupplementalCandidate;
- (void)_dynamicUserInterfaceTraitDidChange;
- (id)_editMenuAssistant;
- (void)_ensureRTIConnection;
- (id)_fallbackAutofillGroup;
- (void)_forwardNeededShiftStatesToDestination;
- (void)_generateTextSuggestionForKeyboardCamera;
- (id)_getAutocorrection;
- (id)_getAutocorrectionList;
- (id)_getCandidateList;
- (id)_getCurrentKeyboardName;
- (id)_getCurrentKeyplaneName;
- (id)_getLocalizedInputMode;
- (void)_handleKeyBehavior:(unsigned long long)arg1 forKeyType:(id)arg2;
- (bool)_handleKeyCommand:(id)arg1;
- (unsigned long long)_handleKeyCommandCommon:(id)arg1 options:(unsigned long long)arg2;
- (void)_handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (bool)_handleKeyInputMethodCommandForEvent:(id)arg1 canHandleAppKeyCommand:(bool)arg2;
- (void)_handleWebKeyEvent:(id)arg1 withEventType:(unsigned long long)arg2 withInputString:(id)arg3 withInputStringIgnoringModifiers:(id)arg4;
- (void)_handleWebKeyEvent:(id)arg1 withEventType:(int)arg2 withInputString:(id)arg3 withInputStringIgnoringModifiers:(id)arg4 executionContext:(id)arg5;
- (void)_handleWebKeyEvent:(id)arg1 withIndex:(unsigned long long)arg2 inInputString:(id)arg3;
- (void)_handleWebKeyEvent:(id)arg1 withIndex:(unsigned long long)arg2 inInputString:(id)arg3 executionContext:(id)arg4;
- (void)_handleWebKeyEvent:(id)arg1 withInputString:(id)arg2 executionContext:(id)arg3;
- (bool)_handlesKeyCommandForEvent:(id)arg1;
- (bool)_hasCandidates;
- (bool)_hasMarkedText;
- (void)_inputManagerDidGenerateSupplementalCandidates:(id)arg1;
- (void)_insertStickerAsNonTextAttachment:(id)arg1;
- (bool)_insertSupplementalCandidate:(id)arg1 overridingCandidateText:(id)arg2;
- (void)_insertionPointExitedRangeWithSupplementalCandidate;
- (bool)_isKeyCommand:(id)arg1;
- (bool)_isSelecting;
- (bool)_isShowingCandidateUIWithAvailableCandidates;
- (bool)_isShowingSuggestionForKeyboardCamera;
- (bool)_isValidKeyInput:(id)arg1;
- (id)_keyboardBehaviorState;
- (void)_local_acceptAutocorrection;
- (id)_markedText;
- (bool)_mimicShiftBeingHeld;
- (long long)_needAutofillCandidate:(id)arg1;
- (bool)_needsCandidates;
- (void)_noteInlineCompletionAsMarkedText:(id)arg1;
- (void)_notifyDidTeardownExistingDelegate:(id)arg1 newDelegate:(id)arg2;
- (void)_notifyWillSetupNewDelegate:(id)arg1 existingDelegate:(id)arg2;
- (void)_performInputViewControllerOutput:(id)arg1;
- (void)_performKeyboardOutput:(id /* block */)arg1 respectingForwardingDelegate:(bool)arg2;
- (void)_performTextOperationsForAutoFill:(id)arg1;
- (long long)_positionInCandidateList:(id)arg1;
- (void)_postInputResponderCapabilitiesChangedNotificationWithOutput:(id)arg1 selectionChanged:(bool)arg2;
- (void)_postInputResponderChangedNotification;
- (void)_processInputViewControllerKeyboardOutput:(id)arg1 executionContext:(id)arg2;
- (id)_rangeForAutocorrectionText:(id)arg1;
- (id)_rangeForSupplementalItemText:(id)arg1;
- (void)_reloadInputViewsForSameDelegate:(id)arg1 existingDelegate:(id)arg2 force:(bool)arg3 delayEndInputSession:(bool)arg4;
- (void)_remapKeyEvent:(id)arg1 withKeyEventMap:(id)arg2;
- (id)_remoteAppId;
- (id)_remoteAssociatedDomains;
- (id)_remoteLocalizedAppName;
- (id)_remoteUnlocalizedAppName;
- (void)_requestInputManagerSync;
- (id)_rtiDocumentStateForAutoFillPopover;
- (void)_scheduleInputAdditionOrDeletion:(id /* block */)arg1;
- (id)_sessionIdentifier;
- (unsigned int)_setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 inputString:(id)arg3 lastInputString:(id)arg4 searchString:(id)arg5 compareAttributes:(bool)arg6;
- (void)_setAutocorrects:(bool)arg1;
- (void)_setAutofillGroup:(id)arg1;
- (void)_setCandidateList:(id)arg1;
- (void)_setDelegate:(id)arg1 existingDelegate:(id)arg2 force:(bool)arg3 delayEndInputSession:(bool)arg4;
- (void)_setInputManager:(id)arg1;
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(bool)arg2 force:(bool)arg3;
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(bool)arg2 updateIndicator:(bool)arg3 force:(bool)arg4 executionContext:(id)arg5;
- (void)_setNeedsCandidates:(bool)arg1;
- (void)_setShiftLockedEnabled:(bool)arg1;
- (void)_setShiftNeedsUpdate:(bool)arg1;
- (void)_setSuggestions:(id)arg1;
- (void)_setTransientSelectionModeEnabled:(bool)arg1 forInputDelegate:(id)arg2;
- (void)_setWaitingOnPerformAutocorrect:(id /* block */)arg1;
- (void)_setupDelegate:(id)arg1 delegateSame:(bool)arg2 hardwareKeyboardStateChanged:(bool)arg3 endingInputSessionIdentifier:(id)arg4 force:(bool)arg5 delayEndInputSession:(bool)arg6;
- (bool)_shouldAcceptAutocorrectionOnSelectionChange;
- (void)_shouldClearTextSuggestions:(bool)arg1;
- (bool)_shouldEmitString:(id)arg1 forKeyEvent:(id)arg2;
- (bool)_shouldLoadAutofillSignUpInputViewController;
- (bool)_shouldLoadPredictionsBasedOnCurrentTraits;
- (bool)_shouldRequestInputManagerSyncForKeyboardOutputCallbacks:(id)arg1;
- (void)_showAutofillExtras;
- (void)_stopAutoDeleteAtDocumentStart;
- (id)_supplementalCandidateIcon:(id)arg1;
- (void)_tagTouchForTypingMenu:(unsigned int)arg1;
- (id)_targetForResponderCommand:(SEL)arg1;
- (void)_teardownExistingDelegate:(id)arg1 forSetDelegate:(id)arg2 force:(bool)arg3 delayEndInputSession:(bool)arg4;
- (id)_textChoicesAssistant;
- (long long)_textInputSourceForDelegate:(id)arg1;
- (unsigned long long)_updateAutocorrectionPreferenceForTraitsWithCurrentPreference:(bool)arg1;
- (void)_updateCanSuggestSupplementalItemsForCurrentSelection;
- (void)_updateDelegateRequiresKeyEventsFromRemoteTextInput;
- (void)_updateInputViewControllerOutput:(id)arg1 forKeyboardOutput:(id)arg2;
- (void)_updateKeyboardConfigurations;
- (void)_willReplaceText:(id)arg1 withSupplementalCandidate:(id)arg2;
- (void)acceptAutocorrection;
- (void)acceptAutocorrection:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (void)acceptAutocorrectionAndEndComposition;
- (id)acceptAutocorrectionForWordTerminator:(id)arg1;
- (void)acceptAutocorrectionForWordTerminator:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (void)acceptAutocorrectionWithCompletionHandler:(id /* block */)arg1;
- (void)acceptAutocorrectionWithCompletionHandler:(id /* block */)arg1 requestedByRemoteInputDestination:(bool)arg2;
- (bool)acceptAutofillExtraCandidateIfNeeded:(id)arg1;
- (void)acceptCandidate:(id)arg1;
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2;
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2 executionContext:(id)arg3;
- (id)acceptCurrentCandidate;
- (id)acceptCurrentCandidateForInput:(id)arg1;
- (void)acceptCurrentCandidateIfSelected;
- (void)acceptCurrentCandidateIfSelectedWithExecutionContext:(id)arg1;
- (void)acceptFirstCandidate;
- (void)acceptHandwritingCandidate;
- (id)acceptInlineCandidate;
- (id)acceptInlineCandidateForInput:(id)arg1;
- (void)acceptInlineCompletionWithCompletionHandler:(id /* block */)arg1;
- (bool)acceptInputString:(id)arg1;
- (void)acceptPredictiveInput:(id)arg1;
- (void)acceptPredictiveInput:(id)arg1 appendSeparator:(bool)arg2;
- (void)acceptPredictiveInput:(id)arg1 appendSeparator:(bool)arg2 executionContext:(id)arg3;
- (void)acceptPredictiveInput:(id)arg1 executionContext:(id)arg2;
- (void)acceptRecentInput:(id)arg1;
- (bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2;
- (bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2 forInput:(id)arg3;
- (void)acceptingCandidateWithTrigger:(id)arg1;
- (id)activeDictationLanguage;
- (id)activeLayout;
- (void)addInputEvent:(id)arg1 executionContext:(id)arg2;
- (void)addInputObject:(id)arg1;
- (void)addInputObject:(id)arg1 executionContext:(id)arg2;
- (void)addInputString:(id)arg1;
- (void)addInputString:(id)arg1 fromVariantKey:(bool)arg2;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 withInputSource:(long long)arg4 executionContext:(id)arg5;
- (void)addSupplementalLexicon:(id)arg1;
- (void)addWordTerminator:(id)arg1 afterSpace:(bool)arg2 afterAcceptingCandidate:(id)arg3 elapsedTime:(double)arg4 executionContext:(id)arg5;
- (void)adjustAutoDeleteTimerForForce:(double)arg1;
- (void)adjustCapsLockDelayOverride;
- (void)adjustPhraseBoundaryInForwardDirection:(bool)arg1 granularity:(int)arg2 executionContext:(id)arg3;
- (void)adjustSegmentSize:(long long)arg1;
- (bool)allowsReachableKeyboard;
- (void)animateAutocorrectionToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)animateAutocorrectionToText:(id)arg1 fromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)applyAssistantItem:(id)arg1;
- (bool)applyAutocorrection:(id)arg1;
- (id)arrowKeyHistory;
- (unsigned int)assertIntermediateText:(id)arg1;
- (bool)assertTextForRemoteDocument:(id)arg1 withSelectionDelta:(struct { long long x1; long long x2; })arg2 updatingSelection:(bool)arg3;
- (id)asyncCapableInputDelegate;
- (id)asyncInputDelegate;
- (id)asyncWebKitInteractionDelegate;
- (id)attributedCorrectionFromTextAnimationCandidate:(id)arg1;
- (id)attributedText;
- (unsigned int)autoDeleteCount;
- (bool)autoDeleteOK;
- (id)autoDeleteTask;
- (bool)autocapitalizationPreference;
- (id)autocorrectPromptRectsFromFirstDelegateRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 lastDelegateRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)autocorrectSpellingEnabled;
- (id)autocorrectionController;
- (bool)autocorrectionPreference;
- (unsigned long long)autocorrectionPreferenceForTraits;
- (id)autocorrectionRecordForWord:(id)arg1;
- (id)autocorrectionToAcceptBeforeProgressiveCandidates;
- (id)autofillController;
- (long long)autofillSubMode;
- (bool)automaticMinimizationEnabled;
- (bool)autoshifted;
- (id)backendController;
- (void)becomeFirstResponderAndMakeVisible:(bool)arg1;
- (void)beginAcceptingInlineCompletionByDirectTap;
- (double)biasedKeyboardWidthRatio;
- (id)buildInputSourceState;
- (long long)cachedAutofillMode;
- (void)callChangedDelegate;
- (bool)callLayoutIgnoresShiftState;
- (bool)callLayoutIsShiftKeyBeingHeld;
- (bool)callLayoutIsShiftKeyPlaneChooser;
- (void)callLayoutLongPressAction;
- (void)callLayoutSetAutoshift:(bool)arg1;
- (void)callLayoutSetShift:(bool)arg1;
- (void)callLayoutUpdateAllLocalizedKeys;
- (void)callLayoutUpdateLocalizedKeys;
- (bool)callLayoutUsesAutoShift;
- (bool)callShouldDeleteWithWordCountForRapidDelete:(int)arg1 characterCountForRapidDelete:(int)arg2;
- (bool)callShouldInsertText:(id)arg1;
- (bool)callShouldInsertText:(id)arg1 onDelegate:(id)arg2;
- (bool)canHandleDelete;
- (bool)canHandleKeyHitTest;
- (bool)canInsertAdaptiveImageGlyph;
- (bool)canInsertEmojiImageTextAttachment;
- (bool)canInsertStickerAsTextInputPayload;
- (bool)canPasteImage;
- (bool)canPresentPressAndHoldPopover:(id)arg1;
- (bool)canShowAppConnections;
- (bool)canShowPredictionBar;
- (bool)canSuggestSupplementalItemsForCurrentSelection;
- (bool)canUseCandidateBarAsSupplementToInlineView;
- (void)cancelAllKeyEvents;
- (void)cancelCandidateRequests;
- (void)cancelDictationOnSendReturnKeyPressed;
- (void)candidateBarDidExtendWithGesture;
- (id)candidateList;
- (void)candidateListAcceptCandidate:(id)arg1;
- (void)candidateListInvalidateSelection:(id)arg1;
- (void)candidateListSelectionDidChange:(id)arg1;
- (id)candidateResultSet;
- (bool)candidateSelectionPredictionForTraits;
- (long long)candidateViewOffset;
- (bool)capsLockKeyHasLanguageSwitchLabel;
- (int)changeCount;
- (id)changedDelegate;
- (void)changingContextWithTrigger:(id)arg1;
- (id)characterRectsForCharacterRange;
- (bool)checkSpellingPreference;
- (bool)checkSpellingPreferenceForTraits;
- (id /* block */)chooseSupplementalCandidateCompletion;
- (void)cleanUpBeforeInputModeSwitch;
- (void)clearAutoDeleteTimer;
- (void)clearAutocorrectPromptTimer;
- (void)clearAutofillGroup;
- (void)clearCapsLockDelayOverrideTimer;
- (void)clearChangeTimeAndCount;
- (void)clearDelayDeleteTimer;
- (void)clearDelegate;
- (void)clearForwardingInputDelegateAndResign:(bool)arg1;
- (void)clearIdleDetectionAction;
- (void)clearInput;
- (void)clearInputForMarkedText;
- (void)clearInputWithCandidatesCleared:(bool)arg1;
- (void)clearKeyboardWindowSnapshot;
- (void)clearLongPressTimer;
- (void)clearRemoteTextInputPartner;
- (void)clearSelection;
- (void)clearShiftState;
- (void)clearTextAlternativesRange;
- (void)clearTimers;
- (void)clearTransientState;
- (void)clearUpdateLastUsedInputModeAction;
- (void)collapseSelection;
- (bool)committingCandidate;
- (void)completeAcceptCandidate:(id)arg1;
- (void)completeAcceptCandidateBeforeAddingInputObject:(id)arg1 executionContext:(id)arg2;
- (void)completeAddInputString:(id)arg1;
- (void)completeAddInputString:(id)arg1 generateCandidates:(bool)arg2;
- (void)completeDelete;
- (void)completeDeleteFromInput;
- (void)completeDeleteOnceFromInputWithCharacterBefore:(unsigned int)arg1;
- (void)completeHandleAutoDelete;
- (void)completeHandleKeyEvent:(id)arg1;
- (void)completeUpdateForChangedSelection:(bool)arg1;
- (bool)continuousPathUnderway;
- (double)convertForceToGrams:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })correctionRect;
- (void)createTypoTrackerReport;
- (id)currentCandidateRequest;
- (id)currentCandidateRequestInfo;
- (long long)currentHandBias;
- (bool)currentInputModeRequiresLTRMathExpression;
- (bool)currentKeyboardTraitsAllowCandidateBarWhileIgnoringHidePredictionTrait:(bool)arg1;
- (bool)cursorIsAtEndOfMarkedText;
- (bool)cursorIsAtStartOfInlineCompletionMarkedText;
- (id)customInputDelegateChoiceAccelerationAssistant;
- (id)customInputDelegateSelectionController;
- (id)customInputDelegateSelectionInteraction;
- (void)deactivateLayout;
- (void)dealloc;
- (bool)deferEventHandlingToSystemWithContext:(id)arg1;
- (void)deferReplaceTextActionToSystem:(id)arg1;
- (id)deferredDidSetDelegateAction;
- (bool)delayedCandidateList;
- (id)delayedCandidateRequest;
- (id)delegate;
- (bool)delegateAlreadyInAutofillGroup;
- (id)delegateAsResponder;
- (unsigned long long)delegateConformanceType;
- (id)delegateForCandidateRequest;
- (bool)delegateRequiresKeyEvents;
- (bool)delegateSuggestionsForCurrentInput;
- (bool)delegateSupportsCorrectionUI;
- (bool)delegateSupportsImagePaste;
- (void)deleteBackward;
- (void)deleteBackwardAndNotify:(bool)arg1;
- (void)deleteBackwardAndNotifyAtEnd:(bool)arg1 deletionCount:(unsigned long long)arg2 reinsertTextInLoop:(bool)arg3;
- (bool)deleteForwardAndNotify:(bool)arg1;
- (bool)deleteForwardAndNotify:(bool)arg1 producedByDeleteInput:(bool)arg2;
- (void)deleteFromInput;
- (void)deleteFromInputWithFlags:(unsigned long long)arg1;
- (void)deleteFromInputWithFlags:(unsigned long long)arg1 executionContext:(id)arg2;
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;
- (void)deleteOnceFromInputWithExecutionContext:(id)arg1;
- (double)deleteWordLastDelete;
- (id)deletedString;
- (id)desirableInputModesWithExtensions:(bool)arg1;
- (void)detach;
- (void)didAcceptAutocorrection:(id)arg1 inputCandidate:(id)arg2 wordTerminator:(id)arg3;
- (void)didAcceptAutocorrection:(id)arg1 inputCandidate:(id)arg2 wordTerminator:(id)arg3 learningFlagsMask:(unsigned long long)arg4;
- (void)didApplyAutocorrection:(id)arg1 autocorrectPromptFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)didChangeForwardingInputDelegate:(id)arg1;
- (void)didChangePhraseBoundary;
- (void)didClearText;
- (void)didSetDelegate;
- (id /* block */)didTeardownExistingDelegate;
- (bool)disableInputBars;
- (bool)disableSmartInsertDelete;
- (void)disableTransientSelectionMode;
- (void)dismissAutoFillMenu;
- (void)dismissKeyboard;
- (void)dismissTextChoicePrompt;
- (void)displayAutoFillPopoverIfAutoFillModeDetected;
- (bool)displaysCandidates;
- (id)documentIdentifierForInputDelegate:(id)arg1;
- (id)documentState;
- (void)documentStateFromInputDelegate:(id /* block */)arg1;
- (bool)dontPushOneTimeCode;
- (bool)doubleSpacePeriodPreference;
- (id)dynamicCaretList;
- (bool)editingTraitsMarkedDirty;
- (void)ejectKeyDown;
- (id)emojiCandidate:(id)arg1;
- (void)emojiSearchWillInsertEmoji:(id)arg1 forSearchQuery:(id)arg2;
- (void)emojiSearchWillInsertEmoji:(id)arg1 forSearchQuery:(id)arg2 selectionMethod:(id)arg3 inputType:(id)arg4;
- (void)enableTransientInputDelegateSelectionMode;
- (void)enableTransientSelectionMode;
- (void)endAcceptingInlineCompletionByDirectTap;
- (id)eventForCurrentWebEvent;
- (bool)everPresentedPasswordAutofillPanel;
- (bool)exclusivityIdentifierMatched;
- (id /* block */)externalTask;
- (void)fadeAutocorrectPrompt;
- (void)finishSetExtensionInputMode:(id)arg1 didChangeDirection:(bool)arg2;
- (void)finishSetInputMode:(id)arg1 didChangeDirection:(bool)arg2;
- (void)finishSetInputModeToNextInPreferredListWithExecutionContext:(id)arg1 withPreviousInputMode:(id)arg2;
- (void)finishSetKeyboardInputMode:(id)arg1 previousInputMode:(id)arg2 didChangeDirection:(bool)arg3;
- (void)finishTextChanged;
- (bool)floatingForced;
- (void)flushDelayedTasks;
- (void)flushKeyboardOutputOnInputSourceSession;
- (void)flushTouchEventWaitingForKeyInputEventIfNecessary;
- (bool)forCustomInputView;
- (void)forceShiftUpdate;
- (void)forceShiftUpdateIfKeyboardStateChanged;
- (void)forwardDictationEvent_cancelDictation;
- (void)forwardDictationEvent_handleDictationShouldPause:(bool)arg1 withNewDelagate:(bool)arg2;
- (void)forwardDictationEvent_handleTip:(id)arg1 title:(id)arg2;
- (void)forwardDictationEvent_movePopoverView:(id)arg1;
- (void)forwardDictationEvent_resumeDictation;
- (void)forwardDictationEvent_startDictation;
- (void)forwardDictationEvent_stopDictation:(bool)arg1;
- (void)forwardDictationEvent_stopDictationIgnoreFinalizePhrases;
- (void)forwardDictationEvent_switchToDictationInputModeWithOptions:(id)arg1;
- (void)forwardDictationEvent_switchToDictationLanguage:(id)arg1;
- (void)forwardDictationEvent_updateIdleDetection:(long long)arg1;
- (void)forwardKeyboardCameraEvent_selfDestruct;
- (void)forwardKeyboardCameraEvent_startCameraInput:(id)arg1;
- (void)forwardKeyboardCameraEvent_updatePreviewText:(id)arg1 asMarkedText:(bool)arg2;
- (void)forwardKeyboardEventBackToDestination:(id)arg1;
- (id)generateAutocorrectionListForSelectedText;
- (id)generateAutocorrectionReplacements:(id)arg1;
- (void)generateAutocorrectionWithExecutionContext:(id)arg1;
- (void)generateAutocorrectionsWithCompletionHandler:(id /* block */)arg1;
- (void)generateAutofillCandidate;
- (void)generateAutofillCandidateByAddingTask:(bool)arg1;
- (void)generateCandidates;
- (void)generateCandidatesAsynchronously;
- (void)generateCandidatesAsynchronouslyWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 selectedCandidate:(id)arg2;
- (void)generateCandidatesFromReplacements;
- (void)generateCandidatesWithOptions:(int)arg1;
- (void)generateReplacementsForString:(id)arg1 candidatesHandler:(id /* block */)arg2 executionContext:(id)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })getCorrectionRectIsVertical:(bool*)arg1;
- (void)handleAcceptedCandidate:(id)arg1 executionContext:(id)arg2;
- (void)handleAutoDeleteContinuationOnDestinationWithDeletionCount:(unsigned long long)arg1;
- (void)handleAutoDeleteWithExecutionContext:(id)arg1;
- (void)handleAutoFillContactDetected;
- (void)handleAutoFillContactPopoverCommand;
- (void)handleAutoFillCreditCardDetected;
- (void)handleAutoFillCreditCardPopoverCommand;
- (void)handleAutoFillPasswordDetected;
- (void)handleAutoFillPasswordPopoverCommand;
- (void)handleAutofillCredentialSaveIfNeeded:(id)arg1;
- (bool)handleCandidateListNavigation:(unsigned int)arg1 hasCandidatesForTypedInput:(bool)arg2 shiftDown:(bool)arg3 keyCommandTypeHandled:(unsigned long long*)arg4 allowRepeat:(bool*)arg5 beforePublic:(bool)arg6 keyEvent:(id)arg7;
- (void)handleClear;
- (void)handleClearWithExecutionContext:(id)arg1;
- (void)handleClearWithInsertBeforeAdvance:(id)arg1;
- (void)handleDelayedActionLongPress:(id)arg1;
- (void)handleDelete;
- (void)handleDeleteAsRepeat:(bool)arg1 executionContext:(id)arg2;
- (id)handleDeleteAutospaceForInputString:(id)arg1 afterSpace:(bool)arg2;
- (void)handleDeleteWithExecutionContext:(id)arg1;
- (void)handleDeleteWordWithExecutionContext:(id)arg1;
- (void)handleDeletionForCandidate:(id)arg1;
- (void)handleEmojiInput:(id)arg1 keyboardState:(id)arg2;
- (void)handleEmojiPopoverKeyCommand;
- (void)handleEventCallbackFromRemoteDestination_didChooseSupplementalItem:(id)arg1 toReplaceText:(id)arg2;
- (void)handleEventFromRemoteDestination_canSuggestSupplementalItemsForCurrentSelection:(bool)arg1;
- (void)handleEventFromRemoteSource_autoFillIsMenuPresented:(bool)arg1;
- (void)handleEventFromRemoteSource_cancelChooseSupplementalItemToInsert;
- (void)handleEventFromRemoteSource_chooseSupplementalItem:(id)arg1 toReplaceText:(id)arg2;
- (void)handleEventFromRemoteSource_insertAutofillContent:(id)arg1;
- (void)handleEventFromRemoteSource_insertSupplementalCandidate:(id)arg1 textToCommit:(id)arg2;
- (void)handleEventFromRemoteSource_insertionPointEnteredText:(id)arg1 withSupplementalCandidate:(id)arg2;
- (void)handleEventFromRemoteSource_insertionPointExitedTextWithSupplementalItems;
- (void)handleGrammarCorrectionEntries:(id)arg1;
- (bool)handleHorizontalArrow:(bool)arg1 shiftDown:(bool)arg2 beforePublicKeyCommands:(bool)arg3 testOnly:(bool)arg4 isVerticalCandidate:(bool)arg5 hasCandidatesForTypedInput:(bool)arg6 shouldNavigateCandidateList:(bool)arg7 canHandleInputDelegateCommand:(id /* block */)arg8 savedHistory:(id)arg9 keyCommandTypeHandled:(unsigned long long*)arg10 keyEvent:(id)arg11;
- (void)handleIdleDetectionAction;
- (bool)handleInputManagerBasedKeybind:(id)arg1 testOnly:(bool)arg2;
- (bool)handleInputSwitcherForKeyEvent:(id)arg1;
- (bool)handleKeyAppCommandForCurrentEvent;
- (bool)handleKeyCommand:(id)arg1 repeatOkay:(bool*)arg2 beforePublicKeyCommands:(bool)arg3;
- (unsigned long long)handleKeyCommand:(id)arg1 repeatOkay:(bool*)arg2 options:(unsigned long long)arg3;
- (bool)handleKeyCommandsBeforePublicAsInputUIHost:(id)arg1;
- (void)handleKeyEvent:(id)arg1;
- (void)handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (bool)handleKeyInputMethodCommandForCurrentEvent;
- (bool)handleKeyTextCommandForCurrentEvent;
- (void)handleKeyWithString:(id)arg1 forKeyEvent:(id)arg2 executionContext:(id)arg3;
- (void)handleKeyboardInput:(id)arg1 executionContext:(id)arg2;
- (void)handleModifiersChangeForKeyEvent:(id)arg1 executionContext:(id)arg2;
- (bool)handleMoveCursorToEndOfLine:(bool)arg1 beforePublicKeyCommands:(bool)arg2 testOnly:(bool)arg3 savedHistory:(id)arg4 force:(bool)arg5 canHandleSelectableInputDelegateCommand:(id /* block */)arg6 keyEvent:(id)arg7;
- (bool)handleMoveCursorToStartOfLine:(bool)arg1 beforePublicKeyCommands:(bool)arg2 testOnly:(bool)arg3 savedHistory:(id)arg4 force:(bool)arg5 canHandleSelectableInputDelegateCommand:(id /* block */)arg6 keyEvent:(id)arg7;
- (bool)handleMoveResponderWithShift:(bool)arg1;
- (void)handleRemoteDictationEvent_cancelDictation;
- (void)handleRemoteDictationEvent_handleTip:(id)arg1;
- (void)handleRemoteDictationEvent_movePopoverView:(id)arg1;
- (void)handleRemoteDictationEvent_resumeDictation;
- (void)handleRemoteDictationEvent_setEditMenuFrame:(id)arg1;
- (void)handleRemoteDictationEvent_startDictation;
- (void)handleRemoteDictationEvent_stopDictation:(bool)arg1;
- (void)handleRemoteDictationEvent_stopDictationIgnoreFinalizePhrases;
- (void)handleRemoteDictationEvent_switchToDictationInputModeWithOptions:(id)arg1;
- (void)handleRemoteDictationEvent_switchToDictationLanguage:(id)arg1;
- (void)handleRemoteDictationEvent_updateIdleDetection:(long long)arg1;
- (void)handleRemoteIndirectGestureWithState:(id)arg1;
- (void)handleRemoteKeyboardCameraEvent_startCameraInput:(id)arg1;
- (id)handleReplacement:(id)arg1 forSpaceAndInput:(id)arg2;
- (bool)handleReturnKey:(bool)arg1;
- (void)handleStringInput:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;
- (bool)handleTabWithShift:(bool)arg1;
- (bool)handleTabWithShift:(bool)arg1 beforePublicKeyCommands:(bool)arg2;
- (bool)handleTabWithShift:(bool)arg1 beforePublicKeyCommands:(bool)arg2 isMoveAction:(bool)arg3 testOnly:(bool)arg4;
- (void)handleTextChoiceBubbleTapped;
- (void)handleUpdateLastUsedInputModeAction:(id)arg1;
- (bool)handleVerticalArrow:(bool)arg1 shiftDown:(bool)arg2 beforePublicKeyCommands:(bool)arg3 testOnly:(bool)arg4 isVerticalCandidate:(bool)arg5 hasCandidatesForTypedInput:(bool)arg6 inputDelegateCommandEnabled:(bool)arg7 canHandleInputDelegateCommand:(id /* block */)arg8 savedHistory:(id)arg9 keyCommandTypeHandled:(unsigned long long*)arg10 keyEvent:(id)arg11;
- (void)handleWebViewCredentialsSaveForWebsiteURL:(id)arg1 user:(id)arg2 password:(id)arg3 passwordIsAutoGenerated:(bool)arg4;
- (bool)handlingKeyCommandFromHardwareKeyboard;
- (bool)hardwareKeyboardAttached;
- (id)hardwareKeyboardExclusivityIdentifier;
- (id)hardwareKeyboardsSeenPreference;
- (bool)hasAdvancedInputDelegate;
- (bool)hasAsyncCapableInputDelegate;
- (bool)hasAutocorrectPrompt;
- (bool)hasDelegate;
- (bool)hasEditableMarkedText;
- (bool)hasInlineCompletionAsMarkedText;
- (bool)hasNextKeyResponder;
- (bool)hasPreviousKeyResponder;
- (void)hostApplicationDidEnterBackground;
- (void)hostApplicationWillEnterForeground;
- (bool)imageSuggestionEnabled;
- (id)implProxy;
- (id)initWithPresentationDelegateView:(id)arg1 forCustomInputView:(bool)arg2;
- (bool)initializationDone;
- (id)inlineCompletionAsMarkedText;
- (bool)inlineTextCompletionAllowedForAutocorrectionType;
- (bool)inlineTextCompletionAllowedForTraits;
- (id)inlineTextCompletionController;
- (id)inlineTextCompletionLearner;
- (id)inputDelegate;
- (id)inputDelegateManager;
- (id)inputEventForInputString:(id)arg1;
- (id)inputForMarkedText;
- (id)inputManager;
- (void)inputManagerDidGenerateAutocorrections:(id)arg1 executionContext:(id)arg2;
- (void)inputManagerDidGenerateAutocorrections:(id)arg1 forPredictiveInput:(id)arg2 executionContext:(id)arg3;
- (void)inputManagerDidGenerateCandidateResultSet:(id)arg1;
- (id)inputManagerState;
- (id)inputModeIndicatorController;
- (id)inputModePreference;
- (bool)inputModeSwitcherVisible;
- (id)inputOverlayContainer;
- (id)inputOverlayContainerForCandidateView:(bool)arg1;
- (id)inputStringFromPhraseBoundary;
- (id)inputSystemSourceSession;
- (bool)inputUIHandleTabWithShift:(bool)arg1 testOnly:(bool)arg2;
- (id)inputWordForTerminatorAtSelection;
- (void)insertAdaptiveImageGlyph:(id)arg1;
- (void)insertAttributedText:(id)arg1;
- (bool)insertAutoFillTextSuggestion:(id)arg1;
- (void)insertCustomTextSuggestion:(id)arg1;
- (void)insertDictationResult:(id)arg1;
- (void)insertEmojiImageTextAttachment:(id)arg1;
- (void)insertSticker:(id)arg1;
- (void)insertText:(id)arg1 withAlternativePredictions:(id)arg2;
- (bool)insertTextIfShould:(id)arg1;
- (void)insertTextSuggestionCandidate:(id)arg1;
- (void)insertedAccentVariantFromPopover:(id)arg1;
- (void)insertedEmojiFromPopover:(id)arg1 selectionMethod:(id)arg2;
- (bool)insertsSpaceAfterPredictiveInput;
- (id)internationalKeyDisplayStringOnEmojiKeyboard;
- (void)invalidateTextEntryContext;
- (void)invalidateTextEntryContextForTextInput:(id)arg1;
- (bool)isAutoDeleteActive;
- (bool)isAutoFillMode;
- (bool)isAutoShifted;
- (bool)isAutofillPrediction;
- (bool)isCallingInputDelegate;
- (bool)isCallingTextChangedDuringInputModeSwitch;
- (bool)isCapsLockASCIIToggle;
- (bool)isCapsLockSwitchEnabled;
- (bool)isCurrentEditResponderInEditingMode;
- (bool)isCurrentEditResponderWebKit;
- (bool)isDefaultPrediction;
- (bool)isInHardwareKeyboardMode;
- (bool)isInlineCompletionEnabled;
- (bool)isLongPress;
- (bool)isMemberOfAutofillGroup:(id)arg1;
- (bool)isMemberOfPossibleAutofillGroup:(id)arg1;
- (bool)isMinimized;
- (bool)isOutOfProcess;
- (bool)isPredictionViewControllerVisible;
- (bool)isRTIClient;
- (bool)isRotating;
- (bool)isSelecting;
- (bool)isSelectionAtSentenceAutoshiftBoundary:(bool)arg1;
- (bool)isSelectionChanging;
- (bool)isSettingDelegate;
- (bool)isShiftKeyBeingHeld;
- (bool)isShiftLocked;
- (bool)isShifted;
- (bool)isTrackpadMode;
- (bool)keyboardDelegateStateNeedsRefresh;
- (void)keyboardInputModeIndicatorControllerDismissIndicator:(id)arg1;
- (void)keyboardInputModeIndicatorControllerPresentIndicator:(id)arg1 reason:(id)arg2;
- (bool)keyboardInputModeIndicatorControllerShouldPresentIndicator:(id)arg1;
- (bool)keyboardIsInPencilTextInputMode;
- (bool)keyboardIsKeyPad;
- (bool)keyboardLayoutIsInAnotherProcess;
- (void)keyboardSceneDelegate:(id)arg1 startedPinningInputViewsOnBehalfOfResponder:(id)arg2;
- (void)keyboardSceneDelegate:(id)arg1 stoppedPinningInputViewsOnBehalfOfResponder:(id)arg2;
- (id)keyboardState;
- (id)keyboardWindowSnapshot;
- (bool)keyboardsExpandedPreference;
- (unsigned long long)lastChooseSupplementalItemToInsertCallbackIdentifier;
- (unsigned long long)lastDeletionCountForFastDelete;
- (id)lastMatchedSupplementalCandidate;
- (void)layoutDidResize;
- (id)layoutForKeyHitTest;
- (void)layoutHasChanged;
- (id)layoutState;
- (bool)liveConversionEnabled;
- (void)longPressAction;
- (void)longPressAction:(id)arg1;
- (void)lookUpResponderChainForCustomInputView;
- (bool)markedTextFromClient;
- (unsigned long long)maxNumberOfProactiveCells;
- (bool)maximizing;
- (void)modifyTextInputTraits:(id /* block */)arg1 forceSync:(bool)arg2;
- (void)moveCursorByAmount:(long long)arg1;
- (void)movePhraseBoundaryToDirection:(long long)arg1 granularity:(long long)arg2;
- (long long)needAutofill;
- (long long)needAutofillCandidate:(id)arg1;
- (bool)needAutofillLogin;
- (bool)needCellularAutofill;
- (bool)needOneTimeCodeAutofill;
- (bool)needsToDeferUpdateTextCandidateView;
- (bool)nextCharacterIsWordCharacter;
- (bool)nextInputWouldStartSentence;
- (bool)noContent;
- (void)nonDestructivelyDismissKeyboard;
- (void)notifyInputSourceStateChangeIfNeeded;
- (void)notifyShiftState;
- (void)optOutASPInTextField;
- (bool)originalShouldSkipCandidateSelection;
- (id)overlayContainerObserved;
- (id)pendingSupplementalCandidateToInsert;
- (void)performAutoDeleteNumberOfTimes:(unsigned long long)arg1 deleteOneWord:(bool)arg2 forwardToInputSource:(bool)arg3;
- (void)performBlockWithTextInputChangesIgnoredForNonMacOS:(id /* block */)arg1;
- (void)performDelete;
- (void)performHitTestForTouchEvent:(id)arg1 executionContextPassingNSNumber:(id)arg2;
- (void)performHitTestForTouchEvents:(id)arg1 executionContextPassingNSNumber:(id)arg2;
- (void)performKeyBehaviorCommitInline;
- (void)performKeyBehaviorConfirm;
- (void)performKeyBehaviorConfirmFirstCandidate;
- (void)performKeyboardActionButtonAction;
- (bool)performKeyboardEvent:(id)arg1;
- (void)performKeyboardOutput:(id)arg1;
- (void)performKeyboardOutput:(id)arg1 checkingDelegate:(bool)arg2;
- (bool)performKeyboardOutput:(id)arg1 checkingDelegate:(bool)arg2 forwardToRemoteInputSource:(bool)arg3;
- (void)performKeyboardOutput:(id)arg1 forwardToRemoteInputSource:(bool)arg2;
- (void)performKeyboardOutputAsInputViewControllerOutput:(id)arg1;
- (void)performKeyboardOutputAsInputViewControllerOutput:(id)arg1 textInputSource:(long long)arg2;
- (void)performKeyboardOutputAsRTIClient:(id)arg1;
- (void)performKeyboardOutputInfo:(id)arg1;
- (void)performKeyboardOutputOnInputSourceSession:(id /* block */)arg1;
- (void)performKeyboardOutputOnInputSourceSession:(id /* block */)arg1 shouldFlush:(bool)arg2;
- (void)performOnInputSourceSessionActionSelector:(SEL)arg1;
- (void)performOperations:(id /* block */)arg1 withTextInputSource:(long long)arg2;
- (void)performReturn;
- (void)performSendAction;
- (void)performSendCurrentLocation;
- (void)performStopAutoDeleteAtDocumentStart;
- (void)performTextOperationActionSelector:(SEL)arg1;
- (bool)performingRemoteTextOperations;
- (unsigned long long)phraseBoundary;
- (id)physicalKeyboardEventWithInput:(id)arg1 inputFlags:(int)arg2;
- (void)populateEuclidCandidates:(bool)arg1;
- (void)postInputResponderCapabilitiesChangedNotification;
- (void)postInputViewControllerShouldUpdateNotification:(id)arg1;
- (bool)predictionFromPreference;
- (int)predictionType;
- (bool)preferFallbackAutofillGroup;
- (long long)preferredCandidateViewTypeForCandidateResultSet:(id)arg1;
- (void)prepareForSelectionChange;
- (void)prepareKeyboardInputModeFromPreferences:(id)arg1;
- (void)presentContinuousPathIntroductionView;
- (void)presentKeyboardFeedbackAssistantViewControllerForLogURL:(id)arg1;
- (void)presentTextChoicePromptForRange:(id)arg1;
- (bool)presentTextCompletionAsMarkedText:(id)arg1;
- (id)presentationDelegate;
- (void)presentationDelegateWillDetach;
- (void)presentationDelegateWillRemoveFromSuperview;
- (bool)prewarmsPredictiveCandidates;
- (void)proceedShouldReturnIfNeededForASP;
- (void)processPayloadInfo:(id)arg1;
- (void)provideAutoFillTypingUpdatesIfNecessary;
- (void)provideCandidateUISuggestions:(id)arg1;
- (void)pushAutocorrections:(id)arg1 requestToken:(id)arg2;
- (void)pushCandidateResultSet:(id)arg1 requestToken:(id)arg2;
- (void)queueDelayedTask:(id /* block */)arg1;
- (id)rangeForTextCompletionInput:(id)arg1;
- (bool)receivedCandidatesInCurrentInputMode;
- (void)recomputeActiveInputModesWithExtensions:(bool)arg1;
- (void)recomputeActiveInputModesWithExtensions:(bool)arg1 allowNonLinguisticInputModes:(bool)arg2;
- (void)refreshAutofillModeIfNecessary;
- (void)refreshKeyboardState;
- (void)refreshKeyboardStateUpdatingSecureCandidateRenderTraits:(bool)arg1;
- (void)refreshSecureCandidatesIfNecessary;
- (void)reinitializeAfterInputModeSwitch:(bool)arg1;
- (void)rejectAutocorrection:(id)arg1;
- (void)rejectAutocorrectionForPromptFade;
- (void)releaseInputManager;
- (void)releaseInputManagerIfInactive;
- (void)reloadCurrentInputMode;
- (id)remoteTextEditingMetadata;
- (id)remoteTextInputPartner;
- (id)remoteTextInputPartnerPrivate;
- (void)removeASPVisualEffectsIfNecessary:(id)arg1;
- (void)removeAllDynamicDictionaries;
- (void)removeAutocorrectPrompt;
- (void)removeAutocorrectPromptAndCandidateList;
- (void)removeAutocorrection;
- (void)removeCandidateList;
- (void)removeCapsLockDelayOverride;
- (void)removeInlineTextCompletionPrompt;
- (void)removeRecentInput:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeSpaceAfterEmojiForInputString:(id)arg1;
- (void)removeSupplementalLexicon:(id)arg1;
- (void)removeTextChoicePrompt;
- (void)removeTextChoicePromptAndAutocorrection;
- (void)removeTextChoicePromptWithUnderline;
- (void)removeTextChoiceUnderlines;
- (void)removeTextChoiceUnderlinesInRange:(id)arg1;
- (void)removeTextCompletionFromMarkedText:(id)arg1;
- (void)replaceAllTextInResponder:(id)arg1 withText:(id)arg2;
- (void)replaceRange:(id)arg1 oldText:(id)arg2 withText:(id)arg3;
- (void)replaceText:(id)arg1;
- (id)replacementsFromSelectedText;
- (void)resetInputDelegate;
- (id)resigningRTISessionIdentifier;
- (id)responderForSendCurrentLocation;
- (void)responseContextDidChange;
- (void)restoreTextSuggestions;
- (void)resumeDictationForResponderChange;
- (bool)returnKeyEnabled;
- (int)returnKeyType;
- (id)savedAutocorrectionListForCandidate:(id)arg1;
- (double)scaleCurrentForceFrom:(double)arg1 to:(double)arg2;
- (void)scheduleReplacementsAfterDeletionToEndOfWord;
- (void)scheduleReplacementsWithOptions:(unsigned long long)arg1;
- (id)searchStringForMarkedText;
- (void)selectionDidChange:(id)arg1;
- (void)selectionDidChangeForTextInput:(id)arg1;
- (bool)selectionScrolling;
- (void)selectionWillChange:(id)arg1;
- (void)selectionWillChangeForTextInput:(id)arg1;
- (void)sendCallbacksForPostCorrectionsRemoval;
- (void)sendCallbacksForPreCorrectionsDisplay;
- (unsigned long long)serviceRole;
- (void)setActiveDictationLanguage:(id)arg1;
- (void)setArrowKeyHistory:(id)arg1;
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 inputString:(id)arg3 searchString:(id)arg4;
- (void)setAutoDeleteCount:(unsigned int)arg1;
- (void)setAutocapitalizationPreference:(bool)arg1;
- (void)setAutocorrectSpellingEnabled:(bool)arg1;
- (void)setAutocorrection:(id)arg1;
- (void)setAutocorrectionList:(id)arg1;
- (void)setAutocorrectionPreference:(bool)arg1;
- (void)setAutocorrectionToAcceptBeforeProgressiveCandidates:(id)arg1;
- (void)setAutofillController:(id)arg1;
- (void)setAutomaticMinimizationEnabled:(bool)arg1;
- (void)setAutoshifted:(bool)arg1;
- (void)setCanSuggestSupplementalItemsForCurrentSelection:(bool)arg1;
- (void)setCandidateDisplayIsExtended:(bool)arg1;
- (void)setCandidateList:(id)arg1;
- (void)setCandidateViewOffset:(long long)arg1;
- (void)setCandidates:(id)arg1;
- (void)setCapsLockIfNeeded;
- (void)setCaretVisible:(bool)arg1;
- (void)setChangedDelegate;
- (void)setChangedDelegate:(id)arg1;
- (void)setCharacterRectsForCharacterRange:(id)arg1;
- (void)setChooseSupplementalCandidateCompletion:(id /* block */)arg1;
- (void)setCommittingCandidate:(bool)arg1;
- (void)setCorrectionLearningAllowed:(bool)arg1;
- (void)setCurrentCandidateRequest:(id)arg1;
- (void)setCurrentCandidateRequestInfo:(id)arg1;
- (void)setCustomInputDelegateChoiceAccelerationAssistant:(id)arg1;
- (void)setCustomInputDelegateSelectionController:(id)arg1;
- (void)setCustomInputDelegateSelectionInteraction:(id)arg1;
- (void)setDefaultTextInputTraits:(id)arg1;
- (void)setDeferredDidSetDelegateAction:(id)arg1;
- (void)setDelayedCandidateRequest:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegate:(id)arg1 force:(bool)arg2;
- (void)setDelegate:(id)arg1 force:(bool)arg2 delayEndInputSession:(bool)arg3;
- (void)setDelegateForCandidateRequest:(id)arg1;
- (void)setDeleteWordLastDelete:(double)arg1;
- (void)setDeletedString:(id)arg1;
- (void)setDidTeardownExistingDelegate:(id /* block */)arg1;
- (void)setDisableSmartInsertDelete:(bool)arg1;
- (void)setDocumentState:(id)arg1;
- (void)setDocumentStateForAutocorrection:(id)arg1;
- (void)setEditingTraitsMarkedDirty:(bool)arg1;
- (void)setEventForCurrentWebEvent:(id)arg1;
- (void)setEverPresentedPasswordAutofillPanel:(bool)arg1;
- (void)setExternalTask:(id /* block */)arg1;
- (void)setFloatingForced:(bool)arg1;
- (void)setForCustomInputView:(bool)arg1;
- (void)setHandlingKeyCommandFromHardwareKeyboard:(bool)arg1;
- (void)setHardwareKeyboardAttached:(bool)arg1;
- (void)setHardwareKeyboardExclusivityIdentifier:(id)arg1;
- (void)setHardwareKeyboardsSeenPreference:(id)arg1;
- (void)setHasNextKeyResponder:(bool)arg1;
- (void)setHasPreviousKeyResponder:(bool)arg1;
- (void)setInHardwareKeyboardMode:(bool)arg1;
- (void)setInHardwareKeyboardMode:(bool)arg1 forceRebuild:(bool)arg2;
- (void)setInHardwareKeyboardMode:(bool)arg1 forceRebuild:(bool)arg2 shouldMoveKeyboard:(bool)arg3;
- (void)setInHardwareKeyboardMode:(bool)arg1 shouldMoveKeyboard:(bool)arg2;
- (void)setInitialDirection;
- (void)setInitialDirectionIgnoreRangeCheck:(bool)arg1;
- (void)setInlineCompletionAsMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 inputString:(id)arg3 searchString:(id)arg4;
- (void)setInputDelegateManager:(id)arg1;
- (void)setInputManagerFromCurrentInputMode;
- (void)setInputManagerState:(id)arg1;
- (void)setInputMode:(id)arg1;
- (void)setInputMode:(id)arg1 userInitiated:(bool)arg2;
- (void)setInputMode:(id)arg1 userInitiated:(bool)arg2 updateIndicator:(bool)arg3 executionContext:(id)arg4;
- (void)setInputModeFromPreferences;
- (void)setInputModeSwitcherVisibleInRemote:(bool)arg1;
- (void)setInputModeToNextASCIICapableInPreferredList;
- (void)setInputModeToNextInPreferredListWithExecutionContext:(id)arg1;
- (void)setIsCallingTextChangedDuringInputModeSwitch:(bool)arg1;
- (void)setKeyboardDelegateStateNeedsRefresh:(bool)arg1;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(bool)arg2;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(bool)arg2 updateIndicator:(bool)arg3 executionContext:(id)arg4;
- (void)setKeyboardInputModeFromPreferences:(id)arg1;
- (void)setKeyboardMinimizedByDictation:(bool)arg1;
- (void)setKeyboardState:(id)arg1;
- (void)setLastChooseSupplementalItemToInsertCallbackIdentifier:(unsigned long long)arg1;
- (void)setLastDeletionCountForFastDelete:(unsigned long long)arg1;
- (void)setLastMatchedSupplementalCandidate:(id)arg1;
- (void)setLayoutAllowsContinuousPath:(bool)arg1;
- (void)setLayoutForKeyHitTest:(id)arg1;
- (void)setLayoutRenderConfig:(id)arg1;
- (unsigned int)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 inputString:(id)arg3 lastInputString:(id)arg4 searchString:(id)arg5 candidateOffset:(long long)arg6 liveConversionSegments:(id)arg7 highlighSegmentIndex:(unsigned long long)arg8;
- (void)setMarkedTextFromClient:(bool)arg1;
- (void)setOriginalShouldSkipCandidateSelection:(bool)arg1;
- (void)setOverlayContainerObserved:(id)arg1;
- (void)setOverrideTextInputTraits:(id)arg1;
- (void)setPendingAutofillIndex:(long long)arg1;
- (void)setPendingSupplementalCandidateToInsert:(id)arg1;
- (void)setPerformingRemoteTextOperations:(bool)arg1;
- (void)setPredictionType:(int)arg1;
- (void)setPresentationDelegate:(id)arg1;
- (void)setPreviousGlobeKeyEvent:(id)arg1;
- (void)setPreviousInputString:(id)arg1;
- (void)setPrewarmsPredictiveCandidates:(bool)arg1;
- (void)setReceivedCandidatesInCurrentInputMode:(bool)arg1;
- (void)setRemoteDelegateSupportsImagePaste:(bool)arg1;
- (void)setResigningRTISessionIdentifier:(id)arg1;
- (void)setRestoresToEmojiInputMode;
- (void)setReturnKeyEnabled:(bool)arg1;
- (void)setSelectionWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setServiceRole:(unsigned long long)arg1;
- (void)setShift:(bool)arg1;
- (void)setShift:(bool)arg1 autoshift:(bool)arg2;
- (void)setShiftLocked:(bool)arg1;
- (void)setShiftLockedEnabled:(bool)arg1;
- (void)setShiftLockedForced:(bool)arg1;
- (void)setShiftNeedsUpdate;
- (void)setShiftNeedsUpdate:(bool)arg1;
- (void)setShiftOffIfNeeded;
- (void)setShiftPreventAutoshift:(bool)arg1;
- (void)setShiftStatesNeededInDestination:(bool)arg1 autoShifted:(bool)arg2 shiftLocked:(bool)arg3;
- (void)setShifted:(bool)arg1;
- (void)setShouldIgnoreTextInputChanges:(bool)arg1;
- (void)setShouldSkipCandidateSelection:(bool)arg1;
- (void)setShouldSkipCandidateSelection:(bool)arg1 userInitiated:(bool)arg2;
- (void)setShouldSuppressSelectionCommands:(bool)arg1;
- (void)setShouldUpdateCacheOnInputModesChange:(bool)arg1;
- (void)setShowsCandidateBar:(bool)arg1;
- (void)setSkipRecomputeInputMode:(bool)arg1;
- (void)setSkippedEndInputSession:(void*)arg1;
- (void)setSkippedEndInputSessionID:(id)arg1;
- (void)setSmartReplyFeedbackManager:(id)arg1;
- (void)setSmartReplyGenerator:(id)arg1;
- (void)setSuggestions:(id)arg1;
- (void)setSuppressUpdateAssistantView:(bool)arg1;
- (void)setSuppressUpdateInputMode:(bool)arg1;
- (void)setSuppressUpdateLayout:(bool)arg1;
- (void)setSuppressUpdateShiftState:(bool)arg1;
- (void)setSyncingDictationLanguageForInputModeSwitch:(bool)arg1;
- (void)setTextInputChangesIgnored:(bool)arg1;
- (void)setTextInputChangingCount:(unsigned long long)arg1;
- (void)setTextInputChangingDirection:(bool)arg1;
- (void)setTextInputChangingText:(bool)arg1;
- (void)setTextInputSource:(long long)arg1;
- (void)setTextInputUpdatingSelection:(bool)arg1;
- (void)setTouchEventWaitingForKeyInputEvent:(id)arg1;
- (void)setTraitsForPreviousDelegate:(id)arg1;
- (void)setTwoFingerTapTimestamp:(double)arg1;
- (void)setUpdateCapsLockDelayOverrideForNonTyping:(id)arg1;
- (void)setUserInteractionDelegate:(id)arg1;
- (void)setUserSelectedCurrentCandidate:(bool)arg1;
- (void)setUsesCandidateSelection:(bool)arg1;
- (void)setWillSetupNewDelegate:(id /* block */)arg1;
- (void)set_mimicShiftBeingHeld:(bool)arg1;
- (bool)shiftLockPreference;
- (bool)shiftLocked;
- (bool)shiftLockedEnabled;
- (bool)shiftNeedsUpdate;
- (bool)shiftPreventAutoshift;
- (bool)shifted;
- (bool)shouldAcceptCandidate:(id)arg1 beforeInputString:(id)arg2;
- (bool)shouldAcceptContinuousPathConversion:(id)arg1;
- (bool)shouldAccessInputManagerService;
- (bool)shouldAllowRepeatEvent:(id)arg1;
- (bool)shouldAllowSelectionGestures:(bool)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2 toBegin:(bool)arg3;
- (bool)shouldApplyAcceptedAutocorrection:(id)arg1;
- (bool)shouldApplyKeyboardCommandToUIHost;
- (bool)shouldApplyKeyboardInputToUIHost;
- (bool)shouldDeferEventHandlingToSystemForTextInput:(id)arg1 context:(id)arg2;
- (bool)shouldDeleteAutospaceBeforeTerminator:(id)arg1;
- (double)shouldExtendLongPressAction:(id)arg1;
- (bool)shouldForwardInsertSpaceAfterAcceptingPredictiveInput:(id)arg1;
- (bool)shouldGenerateCandidatesAfterSelectionChange;
- (bool)shouldIgnoreTextInputChanges;
- (bool)shouldLoadAutofillSignUpInputViewController;
- (bool)shouldPrioritizeTextSuggestionsOverCandidateResultSet:(id)arg1;
- (bool)shouldRapidDelete;
- (bool)shouldRapidDeleteWithDelegate;
- (bool)shouldShowCandidateBar;
- (bool)shouldShowKeyboardMenu;
- (bool)shouldShowLongPredictionList;
- (bool)shouldSkipCandidateSelection;
- (bool)shouldSuppressSelectionCommands;
- (bool)shouldSwitchFromInputManagerMode:(id)arg1 toInputMode:(id)arg2;
- (bool)shouldSwitchInputMode:(id)arg1;
- (bool)shouldUnderlineCandidate:(id)arg1;
- (bool)shouldUseAdaptiveDelete;
- (bool)shouldUseCarPlayModes;
- (bool)shouldUsePinyinStyleRowNavigation;
- (void)showCursorAccessory;
- (void)showFirstTextAlternativeWithRangeAdjustment:(long long)arg1;
- (void)showSelectionCommands;
- (void)showTextAlternativesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)showTextChoicesPrompt;
- (bool)showingEmojiSearch;
- (bool)showsCandidateBar;
- (bool)showsCandidateInline;
- (void)skipHitTestForTouchEvent:(id)arg1;
- (void)skipHitTestForTouchEvent:(id)arg1 delayed:(bool)arg2;
- (void)skipHitTestForTouchEvents:(id)arg1;
- (bool)skipRecomputeInputMode;
- (void*)skippedEndInputSession;
- (id)skippedEndInputSessionID;
- (bool)smartInsertDeleteIsEnabled;
- (id)smartPunctuationController;
- (id)smartReplyFeedbackManager;
- (id)smartReplyGenerator;
- (void)smartSelectionForTextInDocument:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 options:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (void)startAutoDeleteTimer;
- (void)startAutoDeleteTimerForForce:(double)arg1;
- (void)startDelayDeleteTimer;
- (void)stopAutoDelete;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })subtractKeyboardFrameFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2;
- (bool)suppliesCompletions;
- (bool)supportsNumberKeySelection;
- (bool)supportsScheduleReplacementsAfterDeletionToEndOfWord;
- (bool)supportsSetPhraseBoundary;
- (bool)suppressOptOutASPCandidateUpdateForDelegate:(id)arg1;
- (bool)suppressUpdateAssistantView;
- (bool)suppressUpdateInputMode;
- (bool)suppressUpdateLayout;
- (bool)suppressUpdateShiftState;
- (bool)switchMode:(id)arg1 withHUD:(bool)arg2 withDelay:(bool)arg3 fromCapsLock:(bool)arg4;
- (void)syncDocumentStateToInputDelegate;
- (void)syncDocumentStateToInputDelegateWithExecutionContext:(id)arg1;
- (void)syncInputManagerToAcceptedAutocorrection:(id)arg1 forInput:(id)arg2;
- (void)syncInputManagerToKeyboardState;
- (void)syncInputManagerToKeyboardStateWithExecutionContext:(id)arg1;
- (void)syncKeyboardToConfiguration:(id)arg1;
- (bool)syncingDictationLanguageForInputModeSwitch;
- (void)takeTextInputTraitsFromDelegate;
- (id)taskQueue;
- (void)textAccepted:(id)arg1;
- (void)textAccepted:(id)arg1 executionContext:(id)arg2;
- (void)textChanged:(id)arg1;
- (void)textChanged:(id)arg1 executionContext:(id)arg2;
- (id)textCompletionInputRectsFromFirstRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 lastRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)textContentTypeForCurrentInputDelegate;
- (void)textDidChange:(id)arg1;
- (void)textDidScroll;
- (void)textInput:(id)arg1 deferReplaceTextActionToSystem:(id)arg2;
- (void)textInput:(id)arg1 setCandidateSuggestions:(id)arg2;
- (bool)textInputChangesIgnored;
- (unsigned long long)textInputChangingCount;
- (bool)textInputChangingDirection;
- (bool)textInputChangingText;
- (long long)textInputSource;
- (id)textInputTraits;
- (bool)textInputTraitsNeedAutofill;
- (bool)textInputTraitsNeedAutofillExcludeOneTimeCodeAndContact;
- (bool)textInputTraitsNeedContactAutoFill;
- (bool)textInputTraitsNeedOneTimeCode;
- (bool)textInputTraitsNeedSignup;
- (bool)textInputUpdatingSelection;
- (id)textInteractionAssistant;
- (unsigned long long)textLengthToDeleteBeforeSelectedRangeForSmartDelete;
- (id)textSelectionController;
- (void)textSuggestionDidChange:(id)arg1;
- (id)textSuggestions;
- (void)textWillChange:(id)arg1;
- (void)textWillScroll;
- (double)timeoutForCurrentForce;
- (double)timestampOfLastTouchesEnded;
- (void)toggleShift;
- (void)toggleSoftwareKeyboard;
- (void)touchAutoDeleteTimerWithThreshold:(double)arg1 adjustForPartialCompletion:(bool)arg2;
- (void)touchAutocorrectPromptTimer;
- (void)touchDelayDeleteTimerWithThreshold:(double)arg1;
- (id)touchEventWaitingForKeyInputEvent;
- (void)touchLongPressTimer;
- (void)touchLongPressTimerWithDelay:(double)arg1;
- (void)touchLongPressTimerWithDelay:(double)arg1 userInfo:(id)arg2;
- (void)touchUpdateLastUsedInputModeAction;
- (void)trackUsageForAcceptedAutocorrection:(id)arg1 promptWasShowing:(bool)arg2;
- (void)trackUsageForCandidateAcceptedAction:(id)arg1;
- (void)trackUsageForPromptedCorrection:(id)arg1 inputString:(id)arg2 previousPrompt:(id)arg3;
- (void)traitCollectionDidChange;
- (id)traitsForPreviousDelegate;
- (void)triggerPendingKeyup;
- (bool)uncachedDelegateSupportsImagePaste;
- (void)underlineCandidate:(id)arg1;
- (void)undoWithKeyboardInput:(id)arg1;
- (void)unmarkText:(id)arg1;
- (void)unsetDidUpdateCapsLockLanguageSwitchSetting;
- (void)updateAssistantView;
- (void)updateAssistantViewInfo:(id)arg1;
- (void)updateAutocorrectPrompt:(id)arg1;
- (void)updateAutocorrectPrompt:(id)arg1 executionContext:(id)arg2;
- (void)updateCandidateDisplay;
- (void)updateCandidateDisplayAsyncWithCandidateSet:(id)arg1;
- (id)updateCapsLockDelayOverrideForNonTyping;
- (void)updateChangeTimeAndIncrementCount;
- (void)updateDefaultsWithResults:(id /* block */)arg1;
- (void)updateDelegatePasteSupport;
- (void)updateDocumentViewsAfterKeyboardOutput:(id)arg1;
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned int)arg1;
- (void)updateDoubleSpacePeriodStateForString:(id)arg1;
- (void)updateForChangedSelection;
- (void)updateForChangedSelectionWithExecutionContext:(id)arg1;
- (void)updateForExpectedRemoteDocumentStateChange:(id)arg1 selectedTextRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 forceSync:(bool)arg3;
- (void)updateFromTextInputTraits;
- (void)updateHardwareKeyboardExclusivityIdentifier;
- (void)updateHardwareKeyboardLayout;
- (void)updateHardwareKeyboardLayout:(bool)arg1;
- (void)updateIdleDetection:(long long)arg1;
- (void)updateInputAssistantButtonItems;
- (void)updateInputDelegateForRemoteDocumentStateChange:(id)arg1 selectedTextRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 hasText:(bool)arg3 forceSync:(bool)arg4;
- (void)updateInputDelegateForRemoteTraitChange:(id)arg1 forceSync:(bool)arg2;
- (void)updateInputManagerAutocapitalizationType;
- (void)updateInputManagerMode;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(bool)arg1;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(bool)arg1 preserveIfPossible:(bool)arg2;
- (void)updateInputModeLastChosenPreference;
- (void)updateInputOverlayForContainerFrameChange;
- (id)updateKeyBehaviors:(id)arg1 withBehaviors:(id)arg2 forState:(id)arg3;
- (void)updateKeyboardConfigurations;
- (void)updateKeyboardEventsLagging:(id)arg1;
- (void)updateKeyboardOutput:(id)arg1 withInputForSmartPunctuation:(id)arg2 keyboardConfiguration:(id)arg3;
- (void)updateKeyboardStateForDeletion;
- (void)updateKeyboardStateForInsertion:(id)arg1;
- (void)updateKeyboardStateForReplacingText:(id)arg1 withText:(id)arg2;
- (void)updateLayoutAndSetShift;
- (void)updateNoContentViews;
- (void)updatePreferencesWithBlock:(id /* block */)arg1;
- (void)updateReturnKey;
- (void)updateReturnKey:(bool)arg1;
- (id)updateSecureCandidateRenderTraits;
- (void)updateShiftState;
- (void)updateShiftStateAfterAsyncSelectionChange;
- (void)updateShowCandidateBar;
- (void)updateSmartPunctuationOptionsForLocaleIdentifier:(id)arg1;
- (void)updateTextCandidateView;
- (void)updateTextChoicePromptSelection:(id)arg1 toRange:(id)arg2;
- (void)updateTextInputKeyboardSource;
- (void)updateTextInputKeyboardSource:(id)arg1;
- (id)updatedKeyBehaviors;
- (bool)updatingPreferences;
- (id)userInteractionDelegate;
- (bool)userSelectedCurrentCandidate;
- (bool)usesAutoDeleteWord;
- (bool)usesAutocorrectionLists;
- (bool)usesCandidateSelection;
- (bool)usesContinuousPath;
- (bool)usesContinuousPathProgressiveCandidates;
- (bool)utlizeEuclidModelForDictationReplacement;
- (id)webInputDelegate;
- (bool)willDoubleSpacePeriodForInputString:(id)arg1 afterSpace:(bool)arg2 elapsedTime:(double)arg3;
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;
- (id /* block */)willSetupNewDelegate;

@end
