/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UINavigationBarTransitionContext : NSObject {
    long long  _apiVersion;
    double  _backgroundAlpha;
    _UIBarBackground * _backgroundView;
    NSMutableSet * _clippingViews;
    id /* block */  _completionHandler;
    _UINavigationBarContentView * _contentView;
    struct { 
        unsigned int isPushOperation : 1; 
        unsigned int isRTL : 1; 
        unsigned int compact : 1; 
        unsigned int allowLargeTitles : 1; 
        unsigned int twoPart : 1; 
        unsigned int beginWithLargeTitle : 1; 
        unsigned int endWithLargeTitle : 1; 
        unsigned int observedScrollViewOffsetIsApplicable : 1; 
        unsigned int sharesContentViewLayouts : 1; 
        unsigned int beginWithTransparencyAllowed : 1; 
        unsigned int endWithTransparencyAllowed : 1; 
        unsigned int usesBarBackground : 1; 
    }  _flags;
    _UINavigationBarContentViewLayout * _fromContentLayout;
    _UINavigationBarLargeTitleViewLayout * _fromLargeTitleLayout;
    _UINavigationBarLayout * _fromLayout;
    long long  _largeTitleTransitionType;
    _UINavigationBarLargeTitleView * _largeTitleView;
    UINavigationBar * _navigationBar;
    _UINavigationBarModernPromptView * _promptView;
    _UINavigationBarItemStack * _stack;
    struct CGPoint { 
        double x; 
        double y; 
    }  _startingContentOffsetForObservedScrollView;
    UIView * _tabBarHostedView;
    _UINavigationBarContentViewLayout * _toContentLayout;
    _UINavigationBarLargeTitleViewLayout * _toLargeTitleLayout;
    _UINavigationBarLayout * _toLayout;
    UIView * _transitionOverlayView;
    double  _twoPartAnimationBaseDuration;
    double  _twoPartAnimationOverlapDuration;
}

@property (nonatomic) bool allowLargeTitles;
@property (nonatomic) long long apiVersion;
@property (nonatomic) double backgroundAlpha;
@property (nonatomic, readonly) _UIBarBackground *backgroundView;
@property (nonatomic) bool beginWithLargeTitle;
@property (nonatomic) bool beginWithTransparencyAllowed;
@property (nonatomic) bool compact;
@property (nonatomic, copy) id /* block */ completionHandler;
@property (nonatomic, retain) _UINavigationBarContentView *contentView;
@property (nonatomic) bool endWithLargeTitle;
@property (nonatomic) bool endWithTransparencyAllowed;
@property (nonatomic, retain) _UINavigationBarLayout *fromLayout;
@property (setter=setPushOperation:, nonatomic) bool isPushOperation;
@property (setter=setRTL:, nonatomic) bool isRTL;
@property (nonatomic, retain) _UINavigationBarLargeTitleView *largeTitleView;
@property (nonatomic) UINavigationBar *navigationBar;
@property (nonatomic) bool observedScrollViewOffsetIsApplicable;
@property (nonatomic, retain) _UINavigationBarModernPromptView *promptView;
@property (nonatomic) bool sharesContentViewLayouts;
@property (nonatomic, retain) _UINavigationBarItemStack *stack;
@property (nonatomic) struct CGPoint { double x1; double x2; } startingContentOffsetForObservedScrollView;
@property (nonatomic, retain) UIView *tabBarHostedView;
@property (nonatomic, retain) _UINavigationBarLayout *toLayout;
@property (nonatomic, readonly) long long transition;
@property (nonatomic, retain) UIView *transitionOverlayView;
@property (nonatomic) bool twoPart;
@property (nonatomic, readonly) UIView *viewFadingInFromCustomAlpha;
@property (nonatomic, readonly) UIView *viewUsingEaseInCurve;

+ (id)contextForTransition:(long long)arg1 withIdiom:(long long)arg2 completion:(id /* block */)arg3;
+ (id)fadeInFunction;
+ (id)fadeOutFunction;

- (void).cxx_destruct;
- (void)_animateAsTwoPartsWithOverlap:(double)arg1 partOne:(id /* block */)arg2 partTwo:(id /* block */)arg3;
- (void)_animateAsTwoPartsWithOverlapIfNecessaryPartOne:(id /* block */)arg1 partTwo:(id /* block */)arg2;
- (void)_animateAsTwoPartsWithoutOverlap:(id /* block */)arg1 partTwo:(id /* block */)arg2;
- (void)_animateBackgroundView;
- (void)_animateFromPalette:(id)arg1 fromPaletteFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 toPalette:(id)arg3 toPaletteFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4;
- (void)_animateInProcessAsTwoPartsWithKeyframeID:(id)arg1 overlap:(double)arg2 partOne:(id /* block */)arg3 partTwo:(id /* block */)arg4;
- (void)_animateInProcessAsTwoPartsWithOverlapIfNecessaryWithKeyframeID:(id)arg1 fractionComplete:(double)arg2 partOne:(id /* block */)arg3 partTwo:(id /* block */)arg4;
- (unsigned long long)_animationOptions;
- (void)_prepareTransitionFromPalette:(id)arg1 toPalette:(id)arg2 toPaletteFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)_resetContentAndLargeTitleViewCompleted:(bool)arg1;
- (void)_updateIncomingLayoutWidthToMatchOutgoingLayout;
- (bool)allowLargeTitles;
- (void)animate;
- (long long)apiVersion;
- (double)backgroundAlpha;
- (id)backgroundView;
- (bool)beginWithLargeTitle;
- (bool)beginWithTransparencyAllowed;
- (void)cancel;
- (bool)compact;
- (void)complete;
- (id /* block */)completionHandler;
- (id)contentView;
- (id)description;
- (bool)endWithLargeTitle;
- (bool)endWithTransparencyAllowed;
- (id)fromLayout;
- (bool)isPushOperation;
- (bool)isRTL;
- (id)largeTitleView;
- (id)navigationBar;
- (bool)observedScrollViewOffsetIsApplicable;
- (void)prepare;
- (id /* block */)prepareForInterruption;
- (id)promptView;
- (void)recordUpdates:(id /* block */)arg1;
- (void)setAllLargeTitleLayoutsVisible;
- (void)setAllowLargeTitles:(bool)arg1;
- (void)setApiVersion:(long long)arg1;
- (void)setBackgroundAlpha:(double)arg1;
- (void)setBackgroundView:(id)arg1 isBarBackground:(bool)arg2;
- (void)setBeginWithLargeTitle:(bool)arg1;
- (void)setBeginWithTransparencyAllowed:(bool)arg1;
- (void)setCompact:(bool)arg1;
- (void)setCompletionHandler:(id /* block */)arg1;
- (void)setContentView:(id)arg1;
- (void)setEndWithLargeTitle:(bool)arg1;
- (void)setEndWithTransparencyAllowed:(bool)arg1;
- (void)setFromLayout:(id)arg1;
- (void)setLargeTitleView:(id)arg1;
- (void)setNavigationBar:(id)arg1;
- (void)setObservedScrollViewOffsetIsApplicable:(bool)arg1;
- (void)setPromptView:(id)arg1;
- (void)setPushOperation:(bool)arg1;
- (void)setRTL:(bool)arg1;
- (void)setSharesContentViewLayouts:(bool)arg1;
- (void)setStack:(id)arg1;
- (void)setStartingContentOffsetForObservedScrollView:(struct CGPoint { double x1; double x2; })arg1;
- (void)setTabBarHostedView:(id)arg1;
- (void)setToLayout:(id)arg1;
- (void)setTransitionOverlayView:(id)arg1;
- (void)setTwoPart:(bool)arg1;
- (bool)sharesContentViewLayouts;
- (bool)shouldPerformTwoPartCrossfadeTransition;
- (bool)shouldSlideBarBackground;
- (id)stack;
- (struct CGPoint { double x1; double x2; })startingContentOffsetForObservedScrollView;
- (id)tabBarHostedView;
- (id)toLayout;
- (id)transitionOverlayView;
- (bool)twoPart;
- (id)viewFadingInFromCustomAlpha;
- (id)viewUsingEaseInCurve;

@end
