/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UISticker : NSObject <NSSecureCoding> {
    NSString * _accessibilityLabel;
    NSString * _accessibilityName;
    NSDictionary * _attributionInfo;
    _UIStickerRepresentation * _bakedInRep;
    long long  _effectType;
    NSString * _externalURI;
    NSString * _identifier;
    NSData * _metadata;
    NSString * _name;
    NSArray * _representations;
    NSString * _sanitizedPrompt;
    NSString * _searchText;
}

@property (nonatomic, readonly) NSString *_ck_plainStringEmojiText;
@property (nonatomic, readonly) bool _ck_shouldInsertInCompositionAsAdaptiveImageGlyph;
@property (nonatomic, readonly) bool _ck_shouldInsertInTapbackAsAdaptiveImageGlyph;
@property (nonatomic, readonly) long long _ck_stickerType;
@property (nonatomic, retain) NSString *accessibilityLabel;
@property (nonatomic, retain) NSString *accessibilityName;
@property (nonatomic, retain) NSDictionary *attributionInfo;
@property (nonatomic, retain) _UIStickerRepresentation *bakedInRep;
@property (nonatomic) long long effectType;
@property (nonatomic, retain) NSString *externalURI;
@property (nonatomic, readonly) bool hasLiveEffect;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, readonly) bool isAnimated;
@property (nonatomic, retain) NSData *metadata;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) NSArray *representations;
@property (nonatomic, retain) NSString *sanitizedPrompt;
@property (nonatomic, retain) NSString *searchText;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)accessibilityLabel;
- (id)accessibilityName;
- (id)attributionInfo;
- (id)bakedInRep;
- (long long)effectType;
- (void)encodeWithCoder:(id)arg1;
- (id)externalURI;
- (bool)hasLiveEffect;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isAnimated;
- (id)metadata;
- (id)name;
- (id)representations;
- (id)sanitizedPrompt;
- (id)searchText;
- (void)setAccessibilityLabel:(id)arg1;
- (void)setAccessibilityName:(id)arg1;
- (void)setAttributionInfo:(id)arg1;
- (void)setBakedInRep:(id)arg1;
- (void)setEffectType:(long long)arg1;
- (void)setExternalURI:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setName:(id)arg1;
- (void)setRepresentations:(id)arg1;
- (void)setSanitizedPrompt:(id)arg1;
- (void)setSearchText:(id)arg1;

// Image: /System/Library/Frameworks/StickerKit.framework/StickerKit

- (id)stk_asEmojiTextAttachmentWithError:(id*)arg1;
- (id)stk_emojiRoles;
- (void)stk_renderBakedInRepIfNecessaryWithCompletion:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

- (id)__ck_representationWithRole:(id)arg1;
- (id)_ck_plainStringEmojiText;
- (bool)_ck_shouldInsertInCompositionAsAdaptiveImageGlyph;
- (bool)_ck_shouldInsertInTapbackAsAdaptiveImageGlyph;
- (long long)_ck_stickerType;

@end
