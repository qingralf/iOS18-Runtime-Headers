/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UITextChoiceAccelerationBubble : UIControl {
    NSArray * _aboveTextConstraints;
    NSLayoutConstraint * _anchorHeight;
    NSLayoutConstraint * _anchorLeading;
    NSLayoutConstraint * _anchorTop;
    NSLayoutConstraint * _anchorWidth;
    BKSHIDEventAuthenticationMessage * _authenticationMessage;
    CAShapeLayer * _backgroundMaskLayer;
    UIVisualEffectView * _backgroundView;
    UIScrollView * _backingScrollView;
    NSArray * _belowTextConstraints;
    NSArray * _boundaryConstraints;
    NSArray * _buttonConstraints;
    long long  _buttonType;
    TIKeyboardCandidate * _candidate;
    UIStackView * _contentsView;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _deltaRange;
    UIDictationGlowEffect * _dictationGlowEffect;
    bool  _isDismissing;
    unsigned long long  _labelNumber;
    NSLayoutConstraint * _leadingSpacing;
    bool  _needsRTLCheck;
    UIColor * _optionalTintColor;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _originalSelectedRange;
    UIView * _parentView;
    long long  _promptStyle;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _referenceRect;
    _UIReplacementCandidate * _replacement;
    double  _secureCandidateHeight;
    TIKeyboardCandidate * _selectedCandidateChoice;
    NSString * _selectedChoice;
    bool  _shouldRejectCandidate;
    _UITextOption * _sideButton;
    UILayoutGuide * _textAnchor;
    UIView * _textHighlightView;
}

@property (nonatomic, retain) NSArray *aboveTextConstraints;
@property (nonatomic, retain) NSLayoutConstraint *anchorHeight;
@property (nonatomic, retain) NSLayoutConstraint *anchorLeading;
@property (nonatomic, retain) NSLayoutConstraint *anchorTop;
@property (nonatomic, retain) NSLayoutConstraint *anchorWidth;
@property (nonatomic, retain) BKSHIDEventAuthenticationMessage *authenticationMessage;
@property (nonatomic, retain) CAShapeLayer *backgroundMaskLayer;
@property (nonatomic, retain) UIVisualEffectView *backgroundView;
@property (nonatomic, retain) UIScrollView *backingScrollView;
@property (nonatomic, retain) NSArray *belowTextConstraints;
@property (nonatomic, retain) NSArray *boundaryConstraints;
@property (nonatomic, retain) NSArray *buttonConstraints;
@property (nonatomic) long long buttonType;
@property (nonatomic, retain) TIKeyboardCandidate *candidate;
@property (nonatomic, retain) UIStackView *contentsView;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } deltaRange;
@property (nonatomic, retain) UIDictationGlowEffect *dictationGlowEffect;
@property (nonatomic) bool isDismissing;
@property (nonatomic) unsigned long long labelNumber;
@property (nonatomic, retain) NSLayoutConstraint *leadingSpacing;
@property (nonatomic) bool needsRTLCheck;
@property (nonatomic) UIColor *optionalTintColor;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } originalSelectedRange;
@property (nonatomic) UIView *parentView;
@property long long promptStyle;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } referenceRect;
@property (nonatomic, retain) _UIReplacementCandidate *replacement;
@property (nonatomic) double secureCandidateHeight;
@property (nonatomic, readonly) TIKeyboardCandidate *selectedCandidateChoice;
@property (nonatomic, readonly) NSString *selectedChoice;
@property (nonatomic) bool shouldRejectCandidate;
@property (nonatomic, retain) _UITextOption *sideButton;
@property (nonatomic, retain) UILayoutGuide *textAnchor;
@property (nonatomic, retain) UIView *textHighlightView;

- (void).cxx_destruct;
- (id)aboveTextConstraints;
- (id)anchorHeight;
- (id)anchorLeading;
- (void)anchorToTextIfNeeded;
- (id)anchorTop;
- (id)anchorWidth;
- (id)authenticationMessage;
- (id)backgroundImageView;
- (id)backgroundMaskLayer;
- (id)backgroundView;
- (id)backingScrollView;
- (bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (id)belowTextConstraints;
- (id)boundaryConstraints;
- (id)bubblePathInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)buttonConstraints;
- (long long)buttonType;
- (id)candidate;
- (id)contentsView;
- (bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })deltaRange;
- (id)dictationGlowEffect;
- (id)dictationHighlightViewForPoint:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)dismissWithCancel;
- (void)dismissWithCandidate:(id)arg1;
- (void)dismissWithRevert:(id)arg1;
- (void)dismissWithText:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)hideForNow;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)inputModeDidChange:(id)arg1;
- (bool)isDismissing;
- (unsigned long long)labelNumber;
- (void)layoutSubviews;
- (id)leadingSpacing;
- (bool)needsRTLCheck;
- (id)optionForPoint:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)optionalTintColor;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })originalSelectedRange;
- (id)parentView;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (long long)promptStyle;
- (bool)promptWillCollideWithKeyboard:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })referenceRect;
- (void)removeAnimated:(bool)arg1;
- (void)removeFromSuperview;
- (id)replacement;
- (void)reset;
- (double)secureCandidateHeight;
- (id)selectedCandidateChoice;
- (id)selectedChoice;
- (void)setAboveTextConstraints:(id)arg1;
- (void)setAnchorHeight:(id)arg1;
- (void)setAnchorLeading:(id)arg1;
- (void)setAnchorTop:(id)arg1;
- (void)setAnchorWidth:(id)arg1;
- (void)setAuthenticationMessage:(id)arg1;
- (void)setBackgroundMaskLayer:(id)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setBackingScrollView:(id)arg1;
- (void)setBelowTextConstraints:(id)arg1;
- (void)setBoundaryConstraints:(id)arg1;
- (void)setButtonConstraints:(id)arg1;
- (void)setButtonType:(long long)arg1;
- (void)setCandidate:(id)arg1;
- (void)setContentsView:(id)arg1;
- (void)setDeltaRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setDictationGlowEffect:(id)arg1;
- (void)setIsDismissing:(bool)arg1;
- (void)setLabelNumber:(unsigned long long)arg1;
- (void)setLeadingSpacing:(id)arg1;
- (void)setNeedsRTLCheck:(bool)arg1;
- (void)setOptionalTintColor:(id)arg1;
- (void)setOriginalSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setParentView:(id)arg1;
- (void)setPromptStyle:(long long)arg1;
- (void)setReferenceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setReplacement:(id)arg1;
- (void)setSecureCandidateHeight:(double)arg1;
- (void)setShouldRejectCandidate:(bool)arg1;
- (void)setSideButton:(id)arg1;
- (void)setTextAnchor:(id)arg1;
- (void)setTextHighlightView:(id)arg1;
- (bool)shouldRejectCandidate;
- (void)showChoices:(bool)arg1;
- (void)showTextHighlightView:(bool)arg1;
- (bool)showingAutocorrectHighlight;
- (id)sideButton;
- (id)squaredOffBubblePathInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)textAnchor;
- (int)textEffectsVisibilityLevel;
- (int)textEffectsVisibilityLevelInKeyboardWindow;
- (id)textHighlightView;
- (id)textOptionWithText:(id)arg1 type:(long long)arg2;
- (void)updateButtonForType:(long long)arg1;
- (void)updateButtonName:(id)arg1 placement:(long long)arg2 originalText:(id)arg3;
- (void)updateForSingleWord:(id)arg1 textAnchorRect:(id)arg2 inTextView:(id)arg3 parentView:(id)arg4 highlightColor:(id)arg5;
- (void)updateSelfWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)updateTextAnchorForParentView:(id)arg1;
- (void)updateTextBoxHighlightForRect:(id)arg1 inTextView:(id)arg2 parentView:(id)arg3 highlightColor:(id)arg4;
- (void)updateTextHighlightViewWithColor:(id)arg1 convertedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)updateViewForOptions:(id)arg1;
- (void)updateWithChoices:(id)arg1 fromParentView:(id)arg2 referenceTextView:(id)arg3 presentedFromRect:(id)arg4 textHighlightColor:(id)arg5;
- (bool)usingRTLInputMode;

@end
