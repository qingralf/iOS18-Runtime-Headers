/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UIViewControllerTransitionConductor : NSObject {
    double  _customNavigationTransitionDuration;
    int  _deferredTransitionType;
    UIViewController<_UIViewControllerTransitionConductorDelegate> * _delegate;
    bool  _hostIsAppearingAnimated;
    bool  _interactiveTransition;
    <UIViewControllerInteractiveTransitioning> * _interactiveTransitionController;
    bool  _needsDeferredTransition;
    _UIViewControllerAnimatedTransitionHandoffData * _pendingPreemptionHandoffData;
    UIView * _transitionContainerView;
    <UIViewControllerAnimatedTransitioning> * _transitionController;
    _UIViewControllerTransitionManager * _transitionManager;
}

@property (nonatomic) double customNavigationTransitionDuration;
@property (nonatomic) int deferredTransitionType;
@property (nonatomic, readonly) UIViewController<_UIViewControllerTransitionConductorDelegate> *delegate;
@property (nonatomic) bool hostIsAppearingAnimated;
@property (getter=isInteractiveTransition, nonatomic) bool interactiveTransition;
@property (nonatomic, retain) <UIViewControllerInteractiveTransitioning> *interactiveTransitionController;
@property (nonatomic) bool needsDeferredTransition;
@property (nonatomic, retain) _UIViewControllerAnimatedTransitionHandoffData *pendingPreemptionHandoffData;
@property (nonatomic, retain) UIView *transitionContainerView;
@property (nonatomic, readonly) _UIViewControllerOneToOneTransitionContext *transitionContext;
@property (nonatomic, retain) <UIViewControllerAnimatedTransitioning> *transitionController;
@property (nonatomic, readonly) <UIViewControllerTransitionCoordinator> *transitionCoordinator;
@property (nonatomic, retain) _UIViewControllerTransitionManager *transitionManager;

- (void).cxx_destruct;
- (void)_beginAnimationTrackingInteractive:(bool)arg1;
- (void)_finishAnimationTracking;
- (void)_startCustomTransition:(id)arg1;
- (void)_startTransition:(int)arg1 fromViewController:(id)arg2 toViewController:(id)arg3;
- (double)customNavigationTransitionDuration;
- (int)deferredTransitionType;
- (id)delegate;
- (bool)hasInterruptibleNavigationTransition;
- (bool)hostIsAppearingAnimated;
- (id)initWithDelegate:(id)arg1 transitionManager:(id)arg2;
- (id)interactiveTransitionController;
- (id)interruptibleNavigationTransitionAnimator;
- (bool)isInteractiveTransition;
- (double)navigationBarHidingDurationWithDefaultDuration:(double)arg1;
- (id)navigationBarTransitionOverlay;
- (long long)navigationBarTransitionVariant;
- (id)navigationToolbarTransitionController;
- (bool)needsDeferredTransition;
- (id)pendingPreemptionHandoffData;
- (void)setCustomNavigationTransitionDuration:(double)arg1;
- (void)setDeferredTransitionType:(int)arg1;
- (void)setHostIsAppearingAnimated:(bool)arg1;
- (void)setInteractiveTransition:(bool)arg1;
- (void)setInteractiveTransitionController:(id)arg1;
- (void)setNeedsDeferredTransition;
- (void)setNeedsDeferredTransition:(bool)arg1;
- (void)setPendingPreemptionHandoffData:(id)arg1;
- (void)setTransitionContainerView:(id)arg1;
- (void)setTransitionController:(id)arg1;
- (void)setTransitionManager:(id)arg1;
- (bool)shouldAnimateBottomBarVisibility;
- (bool)shouldCrossFadeBottomBars;
- (bool)shouldCrossFadeNavigationBar;
- (bool)shouldCrossFadeNavigationBarVisibility;
- (void)startDeferredTransitionIfNeeded;
- (void)stopTransitionsImmediately;
- (id)transitionContainerView;
- (id)transitionContext;
- (id)transitionController;
- (id)transitionCoordinator;
- (id)transitionManager;
- (bool)willPerformCustomTransition;

@end
