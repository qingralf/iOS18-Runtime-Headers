/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UnifiedAssetFramework.framework/UnifiedAssetFramework
 */

@interface UAFAssetSet : NSObject {
    NSDictionary * _assetNameToAutoAsset;
    NSDictionary * _assetNameToTrial;
    NSDictionary * _assets;
    UAFAutoAssetSet * _autoAssetSet;
    NSError * _autoAssetSetError;
    UAFAutoAssetSet * _cachingAutoAssetSet;
    UAFAssetSetConfiguration * _cfg;
    TRIClient * _client;
    UAFAssetSetConsistencyToken * _consistencyToken;
    UAFAssetSetExperiment * _experiment;
    NSString * _experimentId;
    bool  _experimentationEnabled;
    bool  _factoryAssetsPresent;
    NSDictionary * _minVersions;
    NSString * _name;
    bool  _rootsPresent;
    NSDictionary * _usages;
    NSUUID * _uuid;
}

@property (readonly, copy) NSString *assetSetId;
@property (nonatomic, retain) UAFAutoAssetSet *autoAssetSet;
@property (nonatomic, retain) NSError *autoAssetSetError;
@property (readonly, copy) UAFAssetSetConsistencyToken *consistencyToken;
@property (nonatomic, retain) UAFAssetSetExperiment *experiment;
@property (readonly, copy) NSString *experimentId;
@property (nonatomic, readonly) bool experimentationEnabled;
@property (readonly, copy) NSString *name;
@property (nonatomic, readonly) NSDictionary *usages;

+ (id)autoAssetSet:(id)arg1 usages:(id)arg2 uuid:(id)arg3 autoAssets:(id)arg4 experiment:(id)arg5 atomicInstance:(id)arg6 error:(id*)arg7;
+ (id)autoAssets:(id)arg1 usages:(id)arg2;
+ (id)getEntitledTrialAssets:(id)arg1 usages:(id)arg2;
+ (id)getTrialPurgeabilityLevel:(unsigned long long)arg1;

- (void).cxx_destruct;
- (id)_createAssetFromTrialInfo:(id)arg1 assetName:(id)arg2 fallback:(bool)arg3 validPathOnly:(bool)arg4;
- (id)applyAssetTransformations:(id)arg1;
- (id)applyMinVersions:(id)arg1;
- (id)applyOSCompatibility:(id)arg1;
- (id)assetNamed:(id)arg1;
- (id)assetNamed:(id)arg1 withUsage:(id)arg2;
- (id)assetNamed:(id)arg1 withUsage:(id)arg2 disableExperimentation:(bool)arg3;
- (id)assetSetId;
- (id)assetSetIdForSELF:(bool)arg1;
- (id)assets;
- (id)autoAssetSet;
- (id)autoAssetSetError;
- (id)consistencyToken;
- (id)createAssetFromMAAsset:(id)arg1 assetName:(id)arg2 experimentationEnabled:(bool)arg3 experimentId:(id)arg4;
- (id)createAssetFromPreinstalledWithAutoAssetInfo:(id)arg1 assetName:(id)arg2 experimentationEnabled:(bool)arg3 experimentId:(id)arg4;
- (id)createAssetFromTrialInfo:(id)arg1 assetName:(id)arg2;
- (id)createAssets;
- (void)dealloc;
- (id)experiment;
- (id)experimentId;
- (bool)experimentationEnabled;
- (id)getAutoAssetPreinstalled;
- (id)getTrialAssets;
- (id)initWithAssetSet:(id)arg1 usages:(id)arg2;
- (id)initWithAssetSet:(id)arg1 usages:(id)arg2 configurationDirURLs:(id)arg3;
- (id)initWithAssetSet:(id)arg1 usages:(id)arg2 configurationDirURLs:(id)arg3 disableExperimentation:(bool)arg4 consistencyToken:(id)arg5;
- (id)initWithAssetSet:(id)arg1 usages:(id)arg2 disableExperimentation:(bool)arg3;
- (void)invalidateWithQueue:(id)arg1 completion:(id /* block */)arg2;
- (void)mapAsset:(id)arg1 queue:(id)arg2 completion:(id /* block */)arg3;
- (bool)markAssetsPromoted:(id)arg1 error:(id*)arg2;
- (bool)markAssetsProvisional:(id)arg1 error:(id*)arg2;
- (id)name;
- (id)namespacesOfAssetNames:(id)arg1 error:(id*)arg2;
- (id)overlayRoots:(id)arg1;
- (void)setAutoAssetSet:(id)arg1;
- (void)setAutoAssetSetError:(id)arg1;
- (void)setExperiment:(id)arg1;
- (id)usages;

@end
