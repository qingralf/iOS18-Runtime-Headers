/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFX.VFXScene : NSObject {
    void _version;
    void debugUIOptions;
    void effects;
    void entityManager;
    void entityObjects;
    void hasSharedEntityManager;
    void internalPixelFormat;
    void internalPixelFormatDepth;
    void isInsideRE;
    void isREAssetScene;
    void loadOptions;
    void loader;
    void metalBinaryArchiveURLs;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  recordedMetalBinaryArchiveURL;
    void templateRemapTable;
    void templateWasPrepared;
    void transientDrawCall;
    void useGammaBlending;
}

@property (nonatomic) bool additiveWritesToAlpha;
@property (nonatomic) bool allowsCameraControl;
@property (nonatomic, retain) NSObject *assetManager;
@property (nonatomic, readonly) NSArray *bindings;
@property (nonatomic, readonly) float deltaTime;
@property (nonatomic) id destinationReplicationDelegate;
@property (nonatomic, copy) NSArray *effects;
@property (nonatomic) bool imGUIEnabled;
@property (nonatomic) unsigned long long internalPixelFormat;
@property (nonatomic) BOOL internalPixelFormatDepth;
@property (nonatomic) bool isFrozen;
@property (nonatomic) bool isPlaying;
@property (nonatomic, copy) NSArray *metalBinaryArchiveURLs;
@property (nonatomic, readonly) void*opaqueEntityManager;
@property (nonatomic) bool paused;
@property (nonatomic, copy) NSURL *recordedMetalBinaryArchiveURL;
@property (nonatomic, readonly) VFXMTLResourceManager *resourceManager;
@property (nonatomic) bool showStatistics;
@property (nonatomic) id sourceReplicationDelegate;
@property (nonatomic) float speedFactor;
@property (nonatomic) float time;
@property (nonatomic) float timeScale;
@property (nonatomic) bool useGammaBlending;
@property (nonatomic, readonly) long long version;

+ (void)appendWithTrigger:(id)arg1 touchEvent:(id)arg2 view:(id)arg3 inWorld:(id)arg4;
+ (void)applicationDidEnterBackground;
+ (void)applicationWillEnterForeground;
+ (id)builtinEffectIdentifiers;
+ (id)cloneAndSetupReplicationWithModelWorld:(id)arg1;
+ (void)registerWithTriggerManager:(id)arg1 inWorld:(id)arg2;
+ (void)setBuiltinEffectIdentifiers:(id)arg1;
+ (void)stopReplicationWithModel:(id)arg1 runtime:(id)arg2;
+ (id)vfxAssetsFrameworkBundle;
+ (id)vfxLibraryURLFor:(id)arg1;

- (void).cxx_destruct;
- (id)addEffectFrom:(id)arg1 error:(id*)arg2;
- (id)addEffectFromTemplate:(id)arg1;
- (id)addEffectWithEffectID:(int)arg1;
- (void)addEntityObject:(id)arg1;
- (long long)addLightWithType:(long long)arg1;
- (bool)additiveWritesToAlpha;
- (bool)allowsCameraControl;
- (id)assetManager;
- (bool)beginImgUIFrameWithViewportSize:(struct CGSize { double x1; double x2; })arg1 backingScaleFactor:(double)arg2;
- (void)beginTransaction:(void*)arg1;
- (id)bindingOf:(id)arg1 named:(id)arg2;
- (id)bindings;
- (id)buildAccelerationStructureDescriptorsWithEntity:(long long)arg1;
- (void)clearCaches;
- (long long)createSkyboxWithParameters:(id)arg1;
- (void)dealloc;
- (float)deltaTime;
- (id)destinationReplicationDelegate;
- (void)destroyObject:(long long)arg1;
- (long long)drawCallCount;
- (id)effects;
- (void)encodeAuthoringWithEncoder:(id)arg1 colorFormat:(unsigned long long)arg2 depthStencilFormat:(unsigned long long)arg3 sampleCount:(long long)arg4;
- (bool)endImgUIFrame;
- (bool)endImgUIFrameWithCommandBuffer:(id)arg1 encoder:(id)arg2 renderPassDescriptor:(id)arg3;
- (void)endTransaction;
- (void)enterBackground;
- (void)enterForeground;
- (long long)entityWithTag:(id)arg1;
- (void)enumerateDrawCall:(id /* block */)arg1;
- (void)evaluateForceFieldsAtPosition:(void *)arg1 velocity:(void *)arg2 mass:(void *)arg3 charge:(void *)arg4 time:(void *)arg5 dt:(void *)arg6 categoryMask:(void *)arg7; // needs 7 arg types, found 5: float, float, float, float, unsigned int
- (id)fetchEntityObjectWithTag:(id)arg1;
- (id)firstBindingWithName:(id)arg1;
- (bool)imGUIEnabled;
- (id)init;
- (id)initForEngineNamed:(id)arg1;
- (id)initWithContentsOf:(id)arg1 error:(id*)arg2;
- (id)initWithContentsOf:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)initWithIdentifier:(id)arg1 error:(id*)arg2;
- (id)initWithOptions:(id)arg1;
- (void)initializeAssetManagerWithBundleURL:(id)arg1;
- (unsigned long long)internalPixelFormat;
- (BOOL)internalPixelFormatDepth;
- (void)invalidateCachedScriptParams;
- (bool)isEnabled:(id)arg1;
- (bool)isFrozen;
- (bool)isPlaying;
- (bool)loadWithUrl:(id)arg1 loadingForAuthoring:(bool)arg2 infoOut:(id)arg3 presentationScene:(id)arg4 error:(id*)arg5;
- (id)makeDefaultCamera;
- (id)metalBinaryArchiveURLs;
- (long long)newObject;
- (void*)opaqueEntityManager;
- (id)parameterOf:(id)arg1 named:(id)arg2;
- (bool)paused;
- (void)performTransaction:(id /* block */)arg1;
- (void)prepare;
- (id)recordedMetalBinaryArchiveURL;
- (id /* block */)recycleBuffersGetCompletion;
- (void)remapEntityReferences:(id)arg1;
- (void)removeAllEffects;
- (void)removeEffect:(id)arg1;
- (void)removeEntityObject:(id)arg1;
- (void)removeLightWithId:(long long)arg1;
- (void)removeSkyboxes;
- (void)resolveObjectReferencesWithRemapTableWithWorld:(id)arg1 objectsByIdentifier:(id)arg2;
- (id)resourceManager;
- (void)restart;
- (void)selectObject:(long long)arg1 selected:(bool)arg2;
- (void)setAdditiveWritesToAlpha:(bool)arg1;
- (void)setAllowsCameraControl:(bool)arg1;
- (void)setAssetManager:(id)arg1;
- (void)setDebugUIOptions:(unsigned long long)arg1;
- (void)setDestinationReplicationDelegate:(id)arg1;
- (void)setDirectionalLightUniformOverridesOn:(long long)arg1 world:(void*)arg2 proj:(void*)arg3;
- (void)setEffects:(id)arg1;
- (void)setEnabled:(id)arg1 enabled:(bool)arg2;
- (void)setImGUIEnabled:(bool)arg1;
- (void)setInternalPixelFormat:(unsigned long long)arg1;
- (void)setInternalPixelFormatDepth:(BOOL)arg1;
- (void)setIsFrozen:(bool)arg1;
- (void)setIsPlaying:(bool)arg1;
- (void)setLightParametersOn:(long long)arg1 parameters:(id)arg2;
- (void)setMetalBinaryArchiveURLs:(id)arg1;
- (void)setParameterOf:(id)arg1 named:(id)arg2 :(id)arg3;
- (void)setPaused:(bool)arg1;
- (void)setRecordedMetalBinaryArchiveURL:(id)arg1;
- (void)setShadowParametersOn:(long long)arg1 castsShadows:(bool)arg2 tiles:(void*)arg3 count:(long long)arg4 depthBias:(float)arg5;
- (void)setShowStatistics:(bool)arg1;
- (void)setSourceReplicationDelegate:(id)arg1;
- (void)setSpeedFactor:(float)arg1;
- (void)setTime:(float)arg1;
- (void)setTimeScale:(float)arg1;
- (void)setUseGammaBlending:(bool)arg1;
- (void)setValue:(id)arg1 atPath:(id)arg2;
- (void)setWorld:(struct __CFXWorld { }*)arg1;
- (bool)showStatistics;
- (id)sourceReplicationDelegate;
- (float)speedFactor;
- (void)startRuntimeThread;
- (void)stopRuntimeThread;
- (id)textureForEntity:(long long)arg1 isFallback:(bool*)arg2 isDynamic:(bool*)arg3;
- (float)time;
- (float)timeScale;
- (void)triggerRenderWith:(id /* block */)arg1 renderer:(unsigned long long)arg2;
- (void)updateAtTime:(double)arg1 deltaTime:(double)arg2 frameIndex:(long long)arg3;
- (void)updateForceField:(void*)arg1 of:(long long)arg2;
- (void)updateVFX2RenderOutputWithPointOfView:(id)arg1 commandBuffer:(id)arg2;
- (void)updateWithDeltaTime:(double)arg1;
- (void)updateWorldTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1 of:(long long)arg2;
- (bool)useGammaBlending;
- (id)valueAtPath:(id)arg1;
- (long long)version;
- (void)withPointerToParameterOf:(id)arg1 named:(id)arg2 block:(id /* block */)arg3;
- (void)withPointerToValueAtPath:(id)arg1 block:(id /* block */)arg2;

@end
