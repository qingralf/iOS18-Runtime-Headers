/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXAuthoringEnvironment : NSObject {
    unsigned short  _arrowIndicesCount;
    const void * _arrowIndicesOffset;
    VFXAuthoringEnvironment2 * _authEnv2;
    struct { 
        struct __CFXFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __CFXImage {} *textureImage; 
        struct __CFXTexture {} *texture; 
        unsigned char drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __CFXMesh {} *mesh; 
        struct __CFXMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _boldLogsInfo;
    struct { 
        struct { 
            struct __CFXImage {} *texture; 
            struct CGSize { 
                double width; 
                double height; 
            } textureSize; 
            bool isRetina; 
        } textureInfo; 
        float lineHeight; 
        short characterWidth_texture; 
        float *characterWidth_typography; 
        short characterHeight_texture; 
        struct { /* ? */ } *symbolRects; 
    }  _boldTextInfo;
    struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2 : 1; unsigned int x3 : 1; struct __CFXFXProgramDelegate {} *x4; struct __CFString {} *x5[2]; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFDictionary {} *x8; struct __CFSet {} *x9; void *x10; struct __CFDictionary {} *x11; void *x12; unsigned long long x13; unsigned int x14; } * _colorAndTextureProgram;
    struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2 : 1; unsigned int x3 : 1; struct __CFXFXProgramDelegate {} *x4; struct __CFString {} *x5[2]; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFDictionary {} *x8; struct __CFSet {} *x9; void *x10; struct __CFDictionary {} *x11; void *x12; unsigned long long x13; unsigned int x14; } * _colorOnlyProgram;
    unsigned int  _consoleLineCount;
    id  _delegate;
    struct __CFXRasterizerStates { } * _depthOffCullOffStates;
    struct __CFXRasterizerStates { } * _depthOffCullOnStates;
    struct __CFXRasterizerStates { } * _depthOnCullOffStates;
    struct __CFXRasterizerStates { } * _depthOnCullOnStates;
    float  _drawScale;
    struct { 
        struct __CFXFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __CFXImage {} *textureImage; 
        struct __CFXTexture {} *texture; 
        unsigned char drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __CFXMesh {} *mesh; 
        struct __CFXMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _dynamicLinesInfo;
    struct { 
        struct __CFXFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __CFXImage {} *textureImage; 
        struct __CFXTexture {} *texture; 
        unsigned char drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __CFXMesh {} *mesh; 
        struct __CFXMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _dynamicLinesNoDepthTestInfo;
    struct { 
        struct __CFXFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __CFXImage {} *textureImage; 
        struct __CFXTexture {} *texture; 
        unsigned char drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __CFXMesh {} *mesh; 
        struct __CFXMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _dynamicTrianglesInfo;
    long long  _editingSpace;
    struct __CFXEngineContext { } * _engineContext;
    bool  _graphicalSelectionEnabled;
    float  _gridUnit;
    unsigned int  _hasLighting;
    NSSet * _initialSelection;
    bool  _isOrbiting;
    float  _lastGridDistance;
    struct { 
        struct __CFXFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __CFXImage {} *textureImage; 
        struct __CFXTexture {} *texture; 
        unsigned char drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __CFXMesh {} *mesh; 
        struct __CFXMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _lightProbesInfo;
    struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2 : 1; unsigned int x3 : 1; struct __CFXFXProgramDelegate {} *x4; struct __CFString {} *x5[2]; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFDictionary {} *x8; struct __CFSet {} *x9; void *x10; struct __CFDictionary {} *x11; void *x12; unsigned long long x13; unsigned int x14; } * _lightProbesProgram;
    struct { 
        struct __CFXFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __CFXImage {} *textureImage; 
        struct __CFXTexture {} *texture; 
        unsigned char drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __CFXMesh {} *mesh; 
        struct __CFXMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _logsInfo;
    struct { 
        long long modifierFlags; 
        struct CGPoint { 
            double x; 
            double y; 
        } location; 
        struct CGPoint { 
            double x; 
            double y; 
        } locationInPoints; 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*rayOrigin; 
    }  _manipulatorEvent;
    struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2 : 1; unsigned int x3 : 1; struct __CFXFXProgramDelegate {} *x4; struct __CFString {} *x5[2]; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFDictionary {} *x8; struct __CFSet {} *x9; void *x10; struct __CFDictionary {} *x11; void *x12; unsigned long long x13; unsigned int x14; } * _noColorProgram;
    struct { 
        struct { 
            struct __CFXImage {} *texture; 
            struct CGSize { 
                double width; 
                double height; 
            } textureSize; 
            bool isRetina; 
        } textureInfo; 
        float lineHeight; 
        short characterWidth_texture; 
        float *characterWidth_typography; 
        short characterHeight_texture; 
        struct { /* ? */ } *symbolRects; 
    }  _normalTextInfo;
    struct { 
        struct __CFXFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __CFXImage {} *textureImage; 
        struct __CFXTexture {} *texture; 
        unsigned char drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __CFXMesh {} *mesh; 
        struct __CFXMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _overlayDynamicLinesInfo;
    struct { 
        struct __CFXFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __CFXImage {} *textureImage; 
        struct __CFXTexture {} *texture; 
        unsigned char drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __CFXMesh {} *mesh; 
        struct __CFXMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _overlayDynamicTriangleInfo;
    struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; float x4; } * _pendingMoveEvent;
    unsigned short  _quadrantIndicesCount;
    const void * _quadrantIndicesOffset;
    unsigned short  _quadrantRingIndicesCount;
    const void * _quadrantRingIndicesOffset;
    NSArray * _selectedNodes;
    bool  _selecting;
    NSMutableOrderedSet * _selection;
    bool  _selectionIsReadonly;
    void _selectionP0;
    void _selectionP1;
    long long  _selectionTransformMode;
    bool  _shouldSnapOnGrid;
    bool  _shouldSnapToAlign;
    struct { 
        bool initialized; 
        bool showFullStatistics; 
        bool showRenderOptionsPanel; 
        float fps; 
        float waitDisplayLinkTime; 
        long long pressedButtonIndex; 
        struct __CFString {} *fpsString; 
        struct __CFString {} *shortString; 
        struct __CFString {} *internalString; 
        unsigned int lightingStatistics[9]; 
        struct __CFXEngineStats { 
            unsigned int verticesProcessed; 
            unsigned int primitivesProcessed; 
            unsigned int drawCount; 
            unsigned int drawStep; 
            unsigned int frameCount; 
            unsigned int fboSwitches; 
            unsigned int vboSwitches; 
            unsigned int attSwitches; 
            unsigned int attEnabling; 
            unsigned int iboSwitches; 
            unsigned int vaoSwitches; 
            unsigned int prgSwitches; 
            unsigned int texSwitches; 
            unsigned int rssSwitches; 
            unsigned int getCount; 
            unsigned int uniformFloatSent; 
            unsigned int uniformIntSent; 
            unsigned int uniformVector2Sent; 
            unsigned int uniformVector3Sent; 
            unsigned int uniformVector4Sent; 
            unsigned int uniformMatrix4Sent; 
            unsigned int vboUploaded; 
            unsigned int iboUploaded; 
            unsigned int texUploaded; 
            double cpuTime; 
            double cstrTime; 
            double phyTime; 
            double prtTime; 
            double animTime; 
            double skinTime; 
            double mrphTime; 
            double rendTime; 
            double twoDTime; 
            double delegateTime; 
            double glFlushTime; 
            double waitDisplayLinkTime; 
            double drawableWaitTime; 
            double gpuTime; 
            double lastDisplayLinkTime; 
            unsigned int prgCount; 
            unsigned int texCount; 
            unsigned int fboCount; 
            unsigned int vboCount; 
            unsigned int rboCount; 
            unsigned int iboCount; 
            unsigned int cboCount; 
            unsigned int vaoCount; 
            unsigned int fboMemory; 
            unsigned int rboMemory; 
            unsigned int vboMemory; 
            unsigned int iboMemory; 
            unsigned int cboMemory; 
            unsigned int texMemory; 
            unsigned int backBufferMemory; 
            unsigned int depthBuffersMemory; 
            unsigned int onlineShaderCount; 
            double onlineShaderCompilationTime; 
            unsigned int renderPipelineCount; 
            double renderPipelineCompilationTime; 
            unsigned int computePipelineCount; 
            double computePipelineCompilationTime; 
            double frmAvgTime; 
            double frmMinTime; 
            double frmMaxTime; 
            double frameTimeHistory[60]; 
            unsigned int frameTimeCurrentIndex; 
            double startTime; 
            double lastFrameTime; 
        } stats; 
    }  _statisticsInfo;
    bool  _surroundToSelect;
    struct { 
        struct __CFXFXProgram {} *weakProgram; 
        unsigned int baseIndex; 
        unsigned int baseVertex; 
        unsigned int vertexSize; 
        unsigned int allocatedVerticesSize; 
        unsigned int allocatedIndicesSize; 
        struct __CFXImage {} *textureImage; 
        struct __CFXTexture {} *texture; 
        unsigned char drawMode; 
        bool orthographic; 
        bool clearDepthBuffer; 
        bool enableDepthTest; 
        bool enableCulling; 
        bool isDynamic; 
        struct __CFXMesh {} *mesh; 
        struct __CFXMeshElement {} *meshElement; 
        struct { 
            unsigned long long verticesStride; 
            unsigned long long colorsStride; 
            unsigned long long uvsStride; 
            char *verticesData; 
            char *colorsData; 
            char *uvsData; 
        } _cache; 
        NSMutableSet *_usedMeshes; 
        NSMutableSet *_freeMeshes; 
        NSMutableSet *_usedMeshElements; 
        NSMutableSet *_freeMeshElements; 
    }  _textInfo;
    unsigned char  _timedRecordingBuffer;
    unsigned int  _timedRecordingBufferEnd;
    unsigned int  _timedRecordingBufferStart;
    double  _timedRecordingExpirationTime;
    struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2 : 1; unsigned int x3 : 1; struct __CFXFXProgramDelegate {} *x4; struct __CFString {} *x5[2]; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFDictionary {} *x8; struct __CFSet {} *x9; void *x10; struct __CFDictionary {} *x11; void *x12; unsigned long long x13; unsigned int x14; } * _wireframeProgram;
    void * _wireframeRenderer;
    <VFXWorldRenderer> * _worldRenderer;
    bool  _worldRendererIsVFXView;
}

@property (nonatomic, readonly) VFXNode *authoringOverlayLayer;
@property (nonatomic) <VFXAuthoringEnvironmentDelegate> *delegate;
@property (nonatomic) long long editingSpace;
@property (nonatomic) bool graphicalSelectionEnabled;
@property (nonatomic, readonly) float gridUnit;
@property (nonatomic, readonly) VFXManipulator *manipulator;
@property (nonatomic, readonly) NSArray *selectedNodes;
@property (nonatomic) bool selectionIsReadonly;
@property (nonatomic) long long selectionTransformMode;
@property (nonatomic) bool shouldSnapOnGrid;
@property (nonatomic) bool shouldSnapToAlign;
@property (nonatomic) bool surroundToSelect;
@property (nonatomic, readonly) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } viewMatrix;
@property (readonly) <VFXWorldRenderer> *worldRenderer;

+ (id)authoringEnvironmentForWorldRenderer:(id)arg1;
+ (id)authoringEnvironmentForWorldRenderer:(id)arg1 createIfNeeded:(bool)arg2;
+ (id)rendererForWorldRenderer:(id)arg1;

- (id)_initWithEngineContext:(struct __CFXEngineContext { }*)arg1;
- (void)_setupAuthoringEnv2:(id)arg1;
- (id)authoringEnvironment2;
- (id)authoringOverlayLayer;
- (void)beginEditingNodes:(id)arg1;
- (void)beginOrbiting;
- (void)cancelEdition;
- (void)dealloc;
- (void)debugOptionsDidChange:(unsigned long long)arg1;
- (id)delegate;
- (bool)didTapAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)drawLineFromPoint:(void *)arg1 toPoint:(void *)arg2 color:(void *)arg3; // needs 3 arg types, found 1: id
- (void)drawString:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2 color:(id)arg3;
- (long long)editingSpace;
- (void)endOrbiting;
- (bool)graphicalSelectionEnabled;
- (float)gridUnit;
- (id)init;
- (bool)isEditingSubComponent;
- (id)manipulator;
- (id)renderer;
- (void)saveInitialSelection;
- (id)selectedItems;
- (id)selectedNodes;
- (bool)selectionIsReadonly;
- (long long)selectionTransformMode;
- (void)setDelegate:(id)arg1;
- (void)setEditingSpace:(long long)arg1;
- (void)setGraphicalSelectionEnabled:(bool)arg1;
- (void)setSelectionIsReadonly:(bool)arg1;
- (void)setSelectionTransformMode:(long long)arg1;
- (void)setShouldSnapOnGrid:(bool)arg1;
- (void)setShouldSnapToAlign:(bool)arg1;
- (void)setSurroundToSelect:(bool)arg1;
- (void)setupAuthoringEnv2;
- (bool)shouldSnapOnGrid;
- (bool)shouldSnapToAlign;
- (bool)surroundToSelect;
- (void)update;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })viewMatrix;
- (void)worldDidChange:(id)arg1;
- (id)worldRenderer;

@end
