/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXCameraEffectChromaticTransform : VFXCameraEffect {
    void _center;
    void _color1;
    void _color2;
    void _color3;
    float  _fromAngle;
    void _fromShift;
    float  _fromZ;
    float  _intensity;
    void _maskCenter;
    bool  _maskEnabled;
    float  _maskRadius;
    long long  _sampleCount;
    float  _toAngle;
    void _toShift;
    float  _toZ;
    float  _unMultBlending;
}

@property (nonatomic) void center;
@property (nonatomic) void color1;
@property (nonatomic) void color2;
@property (nonatomic) void color3;
@property (nonatomic) float fromAngle;
@property (nonatomic) void fromShift;
@property (nonatomic) float fromZ;
@property (nonatomic) float intensity;
@property (nonatomic) void maskCenter;
@property (nonatomic) bool maskEnabled;
@property (nonatomic) float maskRadius;
@property (nonatomic) long long sampleCount;
@property (nonatomic) float toAngle;
@property (nonatomic) void toShift;
@property (nonatomic) float toZ;
@property (nonatomic) float unMultBlending;

+ (id)chromaticTransform;
+ (bool)supportsSecureCoding;

- (void)_syncObjCModel;
- (void)center;
- (struct __CFXCameraEffectChromaticTransform { }*)cfxObject;
- (void)color1;
- (void)color2;
- (void)color3;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void*)createCFXObject;
- (void)encodeWithCoder:(id)arg1;
- (float)fromAngle;
- (void)fromShift;
- (float)fromZ;
- (id)initWithCoder:(id)arg1;
- (float)intensity;
- (void)maskCenter;
- (bool)maskEnabled;
- (float)maskRadius;
- (bool)rawFloat2ForKey:(id)arg1 value:(/* Warning: Unrecognized filer type: '2' using 'void*' */ void**)arg2;
- (bool)rawFloat3ForKey:(id)arg1 value:(/* Warning: Unrecognized filer type: '2' using 'void*' */ void**)arg2;
- (long long)sampleCount;
- (void)setCenter;
- (void)setColor1;
- (void)setColor2;
- (void)setColor3;
- (void)setFromAngle:(float)arg1;
- (void)setFromShift;
- (void)setFromZ:(float)arg1;
- (void)setIntensity:(float)arg1;
- (void)setMaskCenter;
- (void)setMaskEnabled:(bool)arg1;
- (void)setMaskRadius:(float)arg1;
- (void)setSampleCount:(long long)arg1;
- (void)setToAngle:(float)arg1;
- (void)setToShift;
- (void)setToZ:(float)arg1;
- (void)setUnMultBlending:(float)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (float)toAngle;
- (void)toShift;
- (float)toZ;
- (float)unMultBlending;
- (id)valueForKey:(id)arg1;

@end
