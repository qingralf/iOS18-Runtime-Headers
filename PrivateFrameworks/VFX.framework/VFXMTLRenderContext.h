/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXMTLRenderContext : NSObject <VFXBufferStream> {
    struct __CFXEngineStats { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; double x33; double x34; double x35; double x36; double x37; double x38; double x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; unsigned int x56; double x57; unsigned int x58; double x59; unsigned int x60; double x61; double x62; double x63; double x64; double x65[60]; } * __engineStats;
    <VFXTextureAttachmentProvider> * _attachmentProvider;
    struct __CFXFXProgram {} * _background2DProgram;
    struct __CFXFXProgram {} * _backgroundCubeProgram;
    struct __CFXRasterizerStates { } * _backgroundRasterizerStates;
    struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2 : 1; unsigned int x3 : 1; struct __CFXFXProgramDelegate {} *x4; struct __CFString {} *x5[2]; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFDictionary {} *x8; struct __CFSet {} *x9; void *x10; struct __CFDictionary {} *x11; void *x12; unsigned long long x13; unsigned int x14; } * _backgroundVideoAlpha0Program;
    struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2 : 1; unsigned int x3 : 1; struct __CFXFXProgramDelegate {} *x4; struct __CFString {} *x5[2]; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFDictionary {} *x8; struct __CFSet {} *x9; void *x10; struct __CFDictionary {} *x11; void *x12; unsigned long long x13; unsigned int x14; } * _backgroundVideoProgram;
    NSMutableArray * _bufferPool;
    struct Cache { 
        struct __CFXRasterizerStates {} *rasterizerStates; 
        struct __CFXMesh {} *mesh; 
        VFXMTLMesh *metalMesh; 
        struct __CFXMeshElement {} *meshElement; 
        VFXMTLMeshElement *metalMeshElement; 
        struct __CFXFXProgram {} *program; 
        struct __CFXMaterial {} *material; 
        struct __CFXGeometry {} *geometry; 
        VFXMTLShadable *metalShadable; 
        struct __CFXCommonProfile {} *commonProfile; 
        struct __CFXBlendStates {} *blendStates; 
        unsigned char colorBufferWriteMask; 
        unsigned char primitiveTopologyClass; 
        struct __CFXNode {} *node; 
        struct __CFXNode {} *pointOfView; 
        struct __CFXDeformerStack {} *deformers; 
        struct { 
            /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
        } viewTransform; 
        unsigned long long vertexDescriptorHash; 
        unsigned char tessellationPipelineStateHash; 
        VFXMTLRenderPipeline *renderPipeline; 
    }  _cache;
    bool  _canRecycleParticleBuffers;
    bool  _captureStarted;
    <MTLCommandBuffer> * _clientCommandBuffer;
    <MTLCommandQueue> * _clientCommandQueue;
    <MTLRenderCommandEncoder> * _clientRenderCommandEncoder;
    MTLRenderPassDescriptor * _clientRenderPassDescriptor;
    id  _commandBufferCompletedHandlers;
    id  _commandBufferScheduledHandlers;
    <VFXMTLRenderContextCommandBufferStatusMonitor> * _commandBufferStatusMonitor;
    unsigned short  _commonProfileConditioner;
    struct { 
        bool collectEnabled; 
        NSMutableDictionary *errors; 
    }  _compilationIssues;
    struct { 
        unsigned long long hash; 
        VFXMTLRenderPipeline *pipeline; 
    }  _compositeRendering;
    struct VFXMTLBufferPool {} ** _constantBufferPools;
    struct { 
        unsigned int modelTransformBindingCount; 
        unsigned int modelViewTransformBindingCount; 
        unsigned int normalTransformBindingCount; 
        unsigned int nodeOpacityBindingCount; 
    }  _counters;
    <MTLCommandBuffer> * _currentCommandBuffer;
    unsigned long long  _currentFrameIndex;
    MTLRenderPassDescriptor * _currentRenderPassDescriptor;
    struct { 
        BOOL vertexIndex; 
        BOOL fragmentIndex; 
    }  _currentStreamBufferIndices;
    struct { 
        unsigned long long pixelFormat; 
        unsigned long long sampleCount; 
        VFXMTLRenderPipeline *displayCubemapPipeline; 
        VFXMTLRenderPipeline *displayTexture2DPipeline; 
        VFXMTLRenderPipeline *displayDepth2DPipeline; 
        VFXMTLRenderPipeline *displayDepthCubePipeline; 
    }  _debug;
    unsigned long long  _debugOptions;
    <MTLDepthStencilState> * _defaultDepthStencilState;
    <MTLSamplerState> * _defaultSamplerState;
    bool  _depthOnly;
    <MTLDevice> * _device;
    VFXMTLRenderPipeline * _downSamplePipeline;
    <CAMetalDrawable> * _drawable;
    id  _drawablePresentedHandlers;
    unsigned int  _enableARMode;
    struct __CFXEngineContext { } * _engineContext;
    unsigned int  _features;
    unsigned int  _forceAsyncShaderCompilation;
    void * _frameConstantBufferPool;
    void * _frameTexturePool;
    struct VFXWorldBuffer { 
        struct float4x4 { 
            /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
        } viewTransform; 
        struct float4x4 { 
            void*columns[4]; 
        } projectionTransform; 
        struct float4x4 { 
            void*columns[4]; 
        } viewToCubeTransform; 
        void*ambientLightingColor; 
    }  _frameUniforms;
    void * _frameVolatileBufferPool;
    NSMutableArray * _freeVolatileMeshElements;
    NSString * _generatedTexturePath;
    NSObject<OS_dispatch_semaphore> * _inFlightSemaphore;
    unsigned int  _isOpaque;
    bool  _isValidationEnabled;
    CAMetalLayer * _layerTarget;
    struct { 
        struct unordered_map<unsigned long long, VFXMTLLightSetData, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, VFXMTLLightSetData>>> { 
            struct __hash_table<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>>> { 
                struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *>>> { 
                    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *>>> { 
                        void **__value_; 
                        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *>> { 
                            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> *>> { 
                                unsigned long long __value_; 
                            } __data_; 
                        } __value_; 
                    } __ptr_; 
                } __bucket_list_; 
                struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *>>> { 
                    struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, void *> *> { 
                        void *__next_; 
                    } __value_; 
                } __p1_; 
                struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>> { 
                    unsigned long long __value_; 
                } __p2_; 
                struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, VFXMTLLightSetData>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>> { 
                    float __value_; 
                } __p3_; 
            } __table_; 
        } frameLightingSetDatas; 
        unsigned long long currentLightingHashKey; 
        struct { 
            long long count; 
            struct __CFXLight {} *lights[8]; 
            struct __CFXLightRuntimeData {} *lightsData[8]; 
        } currentLightingDesc; 
        struct { 
            /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
        } currentLightingSpace; 
        bool needLightingSpaceTransformation; 
        struct VFXMTLClusterSystem { 
            void*clustersCount; 
        } clusterSystem; 
    }  _lighting;
    long long  _maxInFlightFrameCount;
    bool  _needSuperSampling;
    struct { 
        struct float4x4 { 
            /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
        } modelTransform; 
        struct float4x4 { 
            void*columns[4]; 
            struct float4x4 { 
                void*columns[4]; 
                struct float4x4 { 
                    void*columns[4]; 
                    struct float2x3 { 
                        void*columns[2]; 
                    } boundingBox; 
                    struct __CFXNode {} *instanceNode; 
                    unsigned int flags; 
                    unsigned int *probeCacheIndex; 
                } modelViewProjectionTransforms[16]; 
            } modelViewTransforms[16]; 
        } normalTransforms[16]; 
    }  _nodeUniforms;
    MTLRenderPassDescriptor * _originalRenderPassDescriptor;
    <MTLCommandQueue> * _ownedCommandQueue;
    struct atomic<int> { 
        struct __cxx_atomic_impl<int, std::__cxx_atomic_base_impl<int>> { 
            _Atomic int __a_value; 
        } __a_; 
    }  _pendingGPUFrameCount;
    struct { 
        struct __CFXFXPassInstance {} *passInstance; 
        struct __CFXLightingSystem {} *lightingSystem; 
        struct __CFXDynamicBatchingSystem {} *dynamicBatchingSystem; 
        struct __CFXFXPass {} *pass; 
        void *renderGraphPass; 
        bool passRequiresLighting; 
        bool isMainPass; 
        struct __CFXTransformTree {} *transformTree; 
        unsigned long long programHashCodeStoreKey; 
    }  _processingContext;
    int  _profile;
    struct VFXMTLRenderCommandEncoder { unsigned int x1; unsigned char x2; id x3; id x4; struct VFXMTLBufferPool {} *x5; bool x6; } * _renderEncoder;
    struct { 
        unsigned long long passHash; 
        struct __CFXMaterial {} *material; 
    }  _renderGraph;
    unsigned int  _renderMode;
    struct { 
        unsigned char renderSliceIndex; 
        unsigned char eyeCount; 
        unsigned char viewMapping; 
        unsigned char multiVertexOutputStreamGenerator; 
        bool isMainPass; 
    }  _renderPassParameters;
    void _renderSize;
    CFXVFXRenderTargetInfo * _renderTargetInfo;
    bool  _requireLoadFinalTexture;
    struct VFXMTLBlitCommandEncoder { 
        <MTLBlitCommandEncoder> *_encoder; 
        <MTLCommandBuffer> *_commandBuffer; 
    }  _resourceBlitEncoder;
    <MTLCommandBuffer> * _resourceCommandBuffer;
    struct VFXMTLComputeCommandEncoder { 
        RGCachedComputeCommandEncoder *_encoder; 
        <MTLCommandBuffer> *_commandBuffer; 
        struct VFXMTLBufferPool {} *_bufferPool; 
        unsigned int _features; 
    }  _resourceComputeEncoder;
    NSObject<OS_dispatch_group> * _resourceGroup;
    VFXMTLResourceManager * _resourceManager;
    <VFXMTLRenderContextResourceManagerMonitor> * _resourceManagerMonitor;
    NSObject<OS_dispatch_queue> * _resourceQueue;
    long long  _sampleCount;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _screenTransform;
    unsigned int  _seed;
    <MTLBuffer> * _shadowKernelBuffer;
    bool  _shouldCaptureNextFrame;
    unsigned int  _shouldDelegateARCompositing;
    bool  _shouldPresentAfterMinimumDuration;
    bool  _shouldPresentWithTransaction;
    bool  _showsAuthoringEnvironment;
    bool  _simulateCommandBufferFailure;
    float  _superSamplingFactor;
    float  _targetedFrameInterval;
    <MTLTexture> * _textureTarget;
    NSMutableArray * _usedVolatileMeshElements;
    struct { 
        struct { 
            /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
            struct { 
                void*columns[4]; 
                struct { 
                    void*columns[4]; 
                    struct { 
                        void*columns[4]; 
                        void*crws_camera_pos[2]; 
                    } view_from_proj[2]; 
                } proj_from_view[2]; 
            } proj_from_crworld[2]; 
        } view_from_crworld[2]; 
    }  _vfxCoreViewConstants;
    struct { 
        double originX; 
        double originY; 
        double width; 
        double height; 
        double znear; 
        double zfar; 
    }  _vfxCoreViewports;
    struct VFXMTLBufferPool {} ** _volatileBufferPools;
    NSMutableArray * _volatileMeshes;
    unsigned int  _wantsWideGamut;
    struct { 
        <MTLBuffer> *buffer; 
        unsigned long long offset; 
    }  _worldUniforms;
}

@property (nonatomic, retain) <VFXTextureAttachmentProvider> *attachmentProvider;
@property (nonatomic) bool canRecycleParticleBuffers;
@property (nonatomic, retain) <MTLCommandBuffer> *clientCommandBuffer;
@property (nonatomic, retain) <MTLCommandQueue> *clientCommandQueue;
@property (nonatomic, retain) <MTLRenderCommandEncoder> *clientRenderCommandEncoder;
@property (nonatomic, retain) MTLRenderPassDescriptor *clientRenderPassDescriptor;
@property (nonatomic) bool collectsCompilationErrors;
@property (nonatomic) <VFXMTLRenderContextCommandBufferStatusMonitor> *commandBufferStatusMonitor;
@property (nonatomic, readonly) <MTLCommandQueue> *commandQueue;
@property (nonatomic, readonly) NSMutableDictionary *compilationErrors;
@property (nonatomic, readonly) <MTLCommandBuffer> *currentCommandBuffer;
@property (nonatomic, readonly) long long currentFrameIndex;
@property (nonatomic, readonly) <MTLRenderCommandEncoder> *currentRenderCommandEncoder;
@property (nonatomic, readonly) MTLRenderPassDescriptor *currentRenderPassDescriptor;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) unsigned long long debugOptions;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (nonatomic) bool enableARMode;
@property (nonatomic, readonly) struct __CFXEngineContext { }*engineContext;
@property (nonatomic, readonly) unsigned int features;
@property (nonatomic) bool forceAsyncShaderCompilation;
@property (nonatomic, readonly) void*frameConstantBufferPool;
@property (nonatomic, readonly) void*frameTexturePool;
@property (nonatomic, retain) NSString *generatedTexturePath;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isOpaque;
@property (nonatomic, readonly) CAMetalLayer *layerTarget;
@property (nonatomic, readonly) long long pendingGPUFrameCount;
@property (nonatomic) long long preferredFramesPerSecond;
@property (nonatomic, readonly) int profile;
@property (nonatomic, readonly) void*renderEncoder;
@property (nonatomic, readonly) CFXVFXRenderTargetInfo *renderTargetInfo;
@property (nonatomic) bool requireLoadFinalTexture;
@property (nonatomic, readonly) struct VFXMTLBlitCommandEncoder { id x1; id x2; }*resourceBlitEncoder;
@property (nonatomic, readonly) <MTLCommandBuffer> *resourceCommandBuffer;
@property (nonatomic, readonly) struct VFXMTLComputeCommandEncoder { id x1; id x2; struct VFXMTLBufferPool {} *x3; unsigned int x4; }*resourceComputeEncoder;
@property (nonatomic, readonly) NSObject<OS_dispatch_group> *resourceGroup;
@property (nonatomic, readonly) VFXMTLResourceManager *resourceManager;
@property (nonatomic) <VFXMTLRenderContextResourceManagerMonitor> *resourceManagerMonitor;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *resourceQueue;
@property (nonatomic) long long sampleCount;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } screenTransform;
@property (nonatomic) bool shouldDelegateARCompositing;
@property (nonatomic) bool shouldPresentAfterMinimumDuration;
@property (nonatomic) bool showsAuthoringEnvironment;
@property (nonatomic) bool simulateCommandBufferFailure;
@property (nonatomic) float superSamplingFactor;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <MTLTexture> *textureTarget;
@property (nonatomic) bool wantsWideGamut;

+ (void)registerBindings;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_VFXWorldRendererMainPassCustomPostProcessSupportDrawSceneBackgroundUsingEncoder:(id)arg1 commandBuffer:(id)arg2 renderPassDescriptor:(id)arg3;
- (void)_allowGPUBackgroundExecution;
- (void)_clearRenderCaches;
- (void)_clearUnusedBindingPoints;
- (void*)_clusterInfo;
- (void)_createResourceCommandBufferIfNeeded;
- (void)_drawFullScreenTexture:(id)arg1;
- (void)_drawMeshElement:(id)arg1 instanceCount:(unsigned long long)arg2;
- (void)_drawPBRTextures;
- (void)_drawPatchForMeshElement:(id)arg1 instanceCount:(unsigned long long)arg2;
- (void)_drawShadowMaps;
- (void)_executeDrawCommand:(struct { struct __CFXFXProgram {} *x1; struct __CFXMaterial {} *x2; struct __CFXGeometry {} *x3; struct __CFXNode {} *x4; struct __CFXMesh {} *x5; struct __CFXMeshElement {} *x6; struct { unsigned char x_7_1_1[8]; } x7; struct __CFXFXPass {} *x8; unsigned int *x9; bool x10; bool x11; bool x12; bool x13; bool x14; unsigned int x15 : 3; })arg1;
- (id)_finalRenderTexture;
- (void)_logLightingInformation;
- (id)_newMTLBufferFromPoolWithLength:(unsigned long long)arg1;
- (void)_prepareMaterialTextures:(struct __CFXMaterial { }*)arg1;
- (void)_recycleMTLBufferToPool:(id)arg1;
- (void)_reduceStatsOfConstantBuffer:(id)arg1;
- (id)_reflectionProbeArrayTexture;
- (void)_setMeshBuffers:(id)arg1;
- (void)_setReflectionProbeArrayTexture:(id)arg1;
- (void)_setWorldBufferAtVertexIndex:(long long)arg1 fragmentIndex:(long long)arg2;
- (void)_updateProjectionMatrixForOrthographicSkyboxRenderingIfNeeded:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; }*)arg1;
- (float)_zFarForSkyboxRenderingProjectionMatrix:(const struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; }*)arg1 defaultZFar:(float)arg2;
- (void)addCommandBufferCompletedHandler:(id /* block */)arg1;
- (void)addCommandBufferScheduledHandler:(id /* block */)arg1;
- (void)addDrawablePresentedHandler:(id /* block */)arg1;
- (id)attachmentProvider;
- (void)beginFrame:(id)arg1;
- (void)beginRenderPass:(id)arg1 renderEncoder:(void*)arg2;
- (void)beginRenderPass:(id)arg1 renderEncoder:(void*)arg2 parameters:(struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; bool x5; })arg3;
- (id)buffer:(int)arg1 :(id)arg2 :(long long*)arg3 :(long long*)arg4;
- (bool)canRecycleParticleBuffers;
- (void)captureNextFrame;
- (id)clientCommandBuffer;
- (id)clientCommandQueue;
- (id)clientRenderCommandEncoder;
- (id)clientRenderPassDescriptor;
- (bool)collectsCompilationErrors;
- (id)commandBufferStatusMonitor;
- (id)commandQueue;
- (id)compilationErrors;
- (const char *)constantData:(int)arg1;
- (bool)constantOffsetAndSize:(int)arg1 :(id)arg2 :(long long*)arg3 :(long long*)arg4;
- (struct __CFXMeshElement { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2; unsigned int x3; struct __CFXMeshElement {} *x4; unsigned char x5; unsigned char x6; unsigned char x7; struct { BOOL x_8_1_1; struct __CFData {} *x_8_1_2; unsigned int x_8_1_3; unsigned int *x_8_1_4; struct { /* ? */ } *x_8_1_5; unsigned short x_8_1_6; unsigned char x_8_1_7; bool x_8_1_8; } x8; void *x9; float x10; float x11; float x12; void *x13; struct __CFXMeshSource {} *x14; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x15[2]; }*)createVolatileMeshElementOfType:(BOOL)arg1 primitiveCount:(long long)arg2 bytesPerIndex:(long long)arg3;
- (unsigned long long)cubeArrayTypeIfSupported;
- (id)currentCommandBuffer;
- (long long)currentFrameIndex;
- (id)currentRenderCommandEncoder;
- (id)currentRenderPassDescriptor;
- (void)dealloc;
- (unsigned long long)debugOptions;
- (bool)depthOnly;
- (id)device;
- (void)drawFullScreenQuadForPass:(struct __CFXFXPass { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __CFString {} *x2; int x3; int x4; bool x5; struct __CFXFXRenderGraph {} *x6; struct __CFString {} *x7; struct __CFString {} *x8; struct __CFString {} *x9; struct __CFString {} *x10; bool x11; struct __CFXFXProgram {} *x12; struct __CFXMaterial {} *x13; struct __CFXBlendStates {} *x14; struct __CFXRasterizerStates {} *x15; struct CFXColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_16_1_1; } x16; unsigned char x17; unsigned int x18; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; }*)arg1;
- (void)drawRenderElement:(struct __CFXRendererElement { unsigned int x1; struct __CFXNode {} *x2; union { struct __CFXRendererElementAttributes { struct __CFXGeometry {} *x_1_2_1; struct __CFXMesh {} *x_1_2_2; struct __CFXMaterial {} *x_1_2_3; struct __CFXFXRenderGraph {} *x_1_2_4; void *x_1_2_5; } x_3_1_1; struct __CFXRendererElementHandler { struct { } x_2_2_1; id /* block */ x_2_2_2; } x_3_1_2; } x3; struct { unsigned char x_4_1_1[8]; } x4; int x5; unsigned int x6; unsigned int x7 : 3; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 3; unsigned int x13 : 1; unsigned int x14 : 3; unsigned int x15 : 1; unsigned int x16 : 1; }*)arg1 withPass:(struct __CFXFXPass { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __CFString {} *x2; int x3; int x4; bool x5; struct __CFXFXRenderGraph {} *x6; struct __CFString {} *x7; struct __CFString {} *x8; struct __CFString {} *x9; struct __CFString {} *x10; bool x11; struct __CFXFXProgram {} *x12; struct __CFXMaterial {} *x13; struct __CFXBlendStates {} *x14; struct __CFXRasterizerStates {} *x15; struct CFXColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_16_1_1; } x16; unsigned char x17; unsigned int x18; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; }*)arg2;
- (void)drawWireframeOverlayForElements:(struct { unsigned short x1; unsigned short x2; }*)arg1 range:(struct { long long x1; long long x2; })arg2 store:(struct __CFXRendererElementStore { }*)arg3 passInstance:(struct __CFXFXPassInstance { struct __CFXFXPass {} *x1; long long x2; struct __CFXFXPassInstance {} *x3; unsigned char x4; unsigned char x5; bool x6; unsigned char x7; unsigned char x8; struct __CFXArray {} *x9[16]; struct __CFXCullingContext { struct __CFXEnginePipeline {} *x_10_1_1; struct { struct { } x_2_2_1[6]; } x_10_1_2[16]; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_3_2_1[4]; struct { void*x_2_3_1[4]; struct { void*x_2_4_1[4]; struct { void*x_2_5_1[4]; struct { struct { } x_2_6_1[6]; } x_2_5_2[16]; struct { void*x_3_6_1[4]; struct { void*x_2_7_1[4]; struct { void*x_2_8_1[4]; struct { void*x_2_9_1[4]; void*x_2_9_2[16]; } x_2_8_2[16]; unsigned char x_2_8_3; unsigned char x_2_8_4; unsigned char x_2_8_5; unsigned char x_2_8_6; bool x_2_8_7; struct __CFXFXPass {} *x_2_8_8; void *x_2_8_9; struct __CFXNode {} *x_2_8_10; struct __CFXNode {} *x_2_8_11; struct __CFXNode {} *x_2_8_12; bool x_2_8_13; bool x_2_8_14; bool x_2_8_15; bool x_2_8_16; bool x_2_8_17; bool x_2_8_18; bool x_2_8_19; unsigned char x_2_8_20; unsigned long long x_2_8_21; unsigned long long x_2_8_22; void *x_2_8_23; struct __CFXWorld {} *x_2_8_24; struct __CFXEngineContext {} *x_2_8_25; double x_2_8_26; double x_2_8_27; struct { } x_2_8_28; struct { void*x_29_9_1[4]; } x_2_8_29; struct { struct { /* ? */ } *x_30_9_1; unsigned int x_30_9_2; unsigned int x_30_9_3; } x_2_8_30[16]; bool x_2_8_31; int (*x_2_8_32)(); } x_2_7_2[16]; } x_3_6_2[16]; } x_2_5_3[16]; } x_2_4_2[16]; } x_2_3_2[16]; } x_3_2_2[16]; } x_10_1_3[16]; } x10; }*)arg4;
- (bool)enableARMode;
- (void)endFrameWaitingUntilCompleted:(bool)arg1 status:(unsigned long long*)arg2 error:(id*)arg3;
- (void)endFrameWorldSpecifics;
- (void)endRenderPass;
- (struct __CFXEngineContext { }*)engineContext;
- (unsigned int)features;
- (bool)forceAsyncShaderCompilation;
- (void*)frameConstantBufferPool;
- (void*)frameTexturePool;
- (id)generatedTexturePath;
- (unsigned long long)getCurrentPassHash;
- (struct __CFXMaterial { }*)getCurrentPassMaterial;
- (id)initWithDevice:(id)arg1 engineContext:(struct __CFXEngineContext { }*)arg2;
- (id)irradianceTextureForMaterialProperty:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; union { struct __CFXImage {} *x_2_1_1; struct __CFXImageProxy {} *x_2_1_2; struct __CFXTexture {} *x_2_1_3; void *x_2_1_4; void *x_2_1_5; struct CFXColor4 { union { float x_1_3_1[4]; struct { float x_2_4_1; float x_2_4_2; float x_2_4_3; float x_2_4_4; } x_1_3_2; } x_6_2_1; } x_2_1_6; void *x_2_1_7; } x2; void *x3; long long x4; void *x5; unsigned int x6 : 8; unsigned int x7 : 1; unsigned int x8 : 4; BOOL x9; struct __CFXTextureSampler {} *x10; struct { /* ? */ } *x11; float x12; int x13; void *x14; }*)arg1;
- (bool)isDrawingBlur;
- (bool)isLayeredRendering;
- (bool)isOpaque;
- (id)layerTarget;
- (bool)mapVolatileMesh:(struct __CFXMesh { }*)arg1 verticesCount:(long long)arg2;
- (bool)outputsNormal;
- (long long)pendingGPUFrameCount;
- (void)popDebugGroup;
- (long long)preferredFramesPerSecond;
- (void)processRendererElements:(struct { unsigned short x1; unsigned short x2; }*)arg1 count:(unsigned int)arg2 engineIterationContext:(struct { struct __CFXEnginePipeline {} *x1; struct __CFXEngineContext {} *x2; struct __CFXFXPassInstance {} *x3; void *x4; unsigned long long x5; struct __CFXNode {} *x6; bool x7; bool x8; bool x9; bool x10; }*)arg3;
- (int)profile;
- (void)pushDebugGroup:(id)arg1;
- (id)radianceTextureForMaterialProperty:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; union { struct __CFXImage {} *x_2_1_1; struct __CFXImageProxy {} *x_2_1_2; struct __CFXTexture {} *x_2_1_3; void *x_2_1_4; void *x_2_1_5; struct CFXColor4 { union { float x_1_3_1[4]; struct { float x_2_4_1; float x_2_4_2; float x_2_4_3; float x_2_4_4; } x_1_3_2; } x_6_2_1; } x_2_1_6; void *x_2_1_7; } x2; void *x3; long long x4; void *x5; unsigned int x6 : 8; unsigned int x7 : 1; unsigned int x8 : 4; BOOL x9; struct __CFXTextureSampler {} *x10; struct { /* ? */ } *x11; float x12; int x13; void *x14; }*)arg1;
- (void)renderBackground:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; union { struct __CFXImage {} *x_2_1_1; struct __CFXImageProxy {} *x_2_1_2; struct __CFXTexture {} *x_2_1_3; void *x_2_1_4; void *x_2_1_5; struct CFXColor4 { union { float x_1_3_1[4]; struct { float x_2_4_1; float x_2_4_2; float x_2_4_3; float x_2_4_4; } x_1_3_2; } x_6_2_1; } x_2_1_6; void *x_2_1_7; } x2; void *x3; long long x4; void *x5; unsigned int x6 : 8; unsigned int x7 : 1; unsigned int x8 : 4; BOOL x9; struct __CFXTextureSampler {} *x10; struct { /* ? */ } *x11; float x12; int x13; void *x14; }*)arg1 engineContext:(struct __CFXEngineContext { }*)arg2 passInstance:(struct __CFXFXPassInstance { struct __CFXFXPass {} *x1; long long x2; struct __CFXFXPassInstance {} *x3; unsigned char x4; unsigned char x5; bool x6; unsigned char x7; unsigned char x8; struct __CFXArray {} *x9[16]; struct __CFXCullingContext { struct __CFXEnginePipeline {} *x_10_1_1; struct { struct { } x_2_2_1[6]; } x_10_1_2[16]; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_3_2_1[4]; struct { void*x_2_3_1[4]; struct { void*x_2_4_1[4]; struct { void*x_2_5_1[4]; struct { struct { } x_2_6_1[6]; } x_2_5_2[16]; struct { void*x_3_6_1[4]; struct { void*x_2_7_1[4]; struct { void*x_2_8_1[4]; struct { void*x_2_9_1[4]; void*x_2_9_2[16]; } x_2_8_2[16]; unsigned char x_2_8_3; unsigned char x_2_8_4; unsigned char x_2_8_5; unsigned char x_2_8_6; bool x_2_8_7; struct __CFXFXPass {} *x_2_8_8; void *x_2_8_9; struct __CFXNode {} *x_2_8_10; struct __CFXNode {} *x_2_8_11; struct __CFXNode {} *x_2_8_12; bool x_2_8_13; bool x_2_8_14; bool x_2_8_15; bool x_2_8_16; bool x_2_8_17; bool x_2_8_18; bool x_2_8_19; unsigned char x_2_8_20; unsigned long long x_2_8_21; unsigned long long x_2_8_22; void *x_2_8_23; struct __CFXWorld {} *x_2_8_24; struct __CFXEngineContext {} *x_2_8_25; double x_2_8_26; double x_2_8_27; struct { } x_2_8_28; struct { void*x_29_9_1[4]; } x_2_8_29; struct { struct { /* ? */ } *x_30_9_1; unsigned int x_30_9_2; unsigned int x_30_9_3; } x_2_8_30[16]; bool x_2_8_31; int (*x_2_8_32)(); } x_2_7_2[16]; } x_3_6_2[16]; } x_2_5_3[16]; } x_2_4_2[16]; } x_2_3_2[16]; } x_3_2_2[16]; } x_10_1_3[16]; } x10; }*)arg3;
- (void*)renderEncoder;
- (bool)renderInGBuffer;
- (void)renderMesh:(struct __CFXMesh { }*)arg1 meshElement:(struct __CFXMeshElement { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2; unsigned int x3; struct __CFXMeshElement {} *x4; unsigned char x5; unsigned char x6; unsigned char x7; struct { BOOL x_8_1_1; struct __CFData {} *x_8_1_2; unsigned int x_8_1_3; unsigned int *x_8_1_4; struct { /* ? */ } *x_8_1_5; unsigned short x_8_1_6; unsigned char x_8_1_7; bool x_8_1_8; } x8; void *x9; float x10; float x11; float x12; void *x13; struct __CFXMeshSource {} *x14; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x15[2]; }*)arg2 withProgram:(struct __CFXFXProgram { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2 : 1; unsigned int x3 : 1; struct __CFXFXProgramDelegate {} *x4; struct __CFString {} *x5[2]; struct __CFString {} *x6; struct __CFString {} *x7; struct __CFDictionary {} *x8; struct __CFSet {} *x9; void *x10; struct __CFDictionary {} *x11; void *x12; unsigned long long x13; unsigned int x14; }*)arg3 engineContext:(struct __CFXEngineContext { }*)arg4 transform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg5 color:(const struct CFXColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; }*)arg6 rasterizerStates:(struct __CFXRasterizerStates { }*)arg7 blendState:(struct __CFXBlendStates { }*)arg8 texture:(struct __CFXImage { }*)arg9 depthBias:(bool)arg10;
- (long long)renderMode;
- (void)renderSize;
- (id)renderTargetInfo;
- (float)renderTime;
- (void)renderVideoBackground:(struct __CFXImageProxy { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct { int (*x_2_1_1)(); int (*x_2_1_2)(); int (*x_2_1_3)(); int (*x_2_1_4)(); } x2; void *x3; unsigned char x4; }*)arg1 engineContext:(struct __CFXEngineContext { }*)arg2 materialProperty:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; union { struct __CFXImage {} *x_2_1_1; struct __CFXImageProxy {} *x_2_1_2; struct __CFXTexture {} *x_2_1_3; void *x_2_1_4; void *x_2_1_5; struct CFXColor4 { union { float x_1_3_1[4]; struct { float x_2_4_1; float x_2_4_2; float x_2_4_3; float x_2_4_4; } x_1_3_2; } x_6_2_1; } x_2_1_6; void *x_2_1_7; } x2; void *x3; long long x4; void *x5; unsigned int x6 : 8; unsigned int x7 : 1; unsigned int x8 : 4; BOOL x9; struct __CFXTextureSampler {} *x10; struct { /* ? */ } *x11; float x12; int x13; void *x14; }*)arg3;
- (bool)requireLoadFinalTexture;
- (void)resetVolatileMeshElements;
- (void)resetVolatileMeshes;
- (struct VFXMTLBlitCommandEncoder { id x1; id x2; }*)resourceBlitEncoder;
- (id)resourceCommandBuffer;
- (struct VFXMTLComputeCommandEncoder { id x1; id x2; struct VFXMTLBufferPool {} *x3; unsigned int x4; }*)resourceComputeEncoder;
- (id)resourceGroup;
- (id)resourceManager;
- (id)resourceManagerMonitor;
- (id)resourceQueue;
- (long long)sampleCount;
- (id)sampler:(int)arg1 :(id)arg2;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })screenTransform;
- (void)setAttachmentProvider:(id)arg1;
- (void)setCanRecycleParticleBuffers:(bool)arg1;
- (void)setClientCommandBuffer:(id)arg1;
- (void)setClientCommandQueue:(id)arg1;
- (void)setClientRenderCommandEncoder:(id)arg1;
- (void)setClientRenderPassDescriptor:(id)arg1;
- (void)setCollectsCompilationErrors:(bool)arg1;
- (void)setCommandBufferStatusMonitor:(id)arg1;
- (void)setCurrentPassHash:(unsigned long long)arg1;
- (void)setCurrentPassMaterial:(struct __CFXMaterial { }*)arg1;
- (void)setDebugOptions:(unsigned long long)arg1;
- (void)setEnableARMode:(bool)arg1;
- (void)setForceAsyncShaderCompilation:(bool)arg1;
- (void)setGeneratedTexturePath:(id)arg1;
- (void)setIsOpaque:(bool)arg1;
- (void)setPreferredFramesPerSecond:(long long)arg1;
- (void)setRasterizerStates:(struct __CFXRasterizerStates { }*)arg1;
- (void)setRenderPassParameters:(struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; bool x5; })arg1;
- (void)setRequireLoadFinalTexture:(bool)arg1;
- (void)setResourceManagerMonitor:(id)arg1;
- (void)setSampleCount:(long long)arg1;
- (void)setScreenTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setShouldDelegateARCompositing:(bool)arg1;
- (void)setShouldPresentAfterMinimumDuration:(bool)arg1;
- (void)setShowsAuthoringEnvironment:(bool)arg1;
- (void)setSimulateCommandBufferFailure:(bool)arg1;
- (void)setSuperSamplingFactor:(float)arg1;
- (void)setWantsWideGamut:(bool)arg1;
- (bool)shouldDelegateARCompositing;
- (bool)shouldPresentAfterMinimumDuration;
- (bool)showsAuthoringEnvironment;
- (bool)simulateCommandBufferFailure;
- (void)startProcessingRendererElementsWithEngineIterationContext:(struct { struct __CFXEnginePipeline {} *x1; struct __CFXEngineContext {} *x2; struct __CFXFXPassInstance {} *x3; void *x4; unsigned long long x5; struct __CFXNode {} *x6; bool x7; bool x8; bool x9; bool x10; }*)arg1;
- (struct __CFXEngineStats { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; double x33; double x34; double x35; double x36; double x37; double x38; double x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; unsigned int x56; double x57; unsigned int x58; double x59; unsigned int x60; double x61; double x62; double x63; double x64; double x65[60]; }*)stats;
- (void)stopProcessingRendererElements:(bool)arg1;
- (float)superSamplingFactor;
- (bool)supportsMTLFeatureSet:(unsigned long long)arg1;
- (id)texture:(int)arg1 :(id)arg2;
- (id)textureForMaterialProperty:(struct __CFXMaterialProperty { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; union { struct __CFXImage {} *x_2_1_1; struct __CFXImageProxy {} *x_2_1_2; struct __CFXTexture {} *x_2_1_3; void *x_2_1_4; void *x_2_1_5; struct CFXColor4 { union { float x_1_3_1[4]; struct { float x_2_4_1; float x_2_4_2; float x_2_4_3; float x_2_4_4; } x_1_3_2; } x_6_2_1; } x_2_1_6; void *x_2_1_7; } x2; void *x3; long long x4; void *x5; unsigned int x6 : 8; unsigned int x7 : 1; unsigned int x8 : 4; BOOL x9; struct __CFXTextureSampler {} *x10; struct { /* ? */ } *x11; float x12; int x13; void *x14; }*)arg1;
- (id)textureTarget;
- (void)unmapVolatileMesh:(struct __CFXMesh { }*)arg1 modifiedVerticesCount:(long long)arg2;
- (void)unmapVolatileMeshElement:(struct __CFXMeshElement { struct __CFXEntity { struct __CFRuntimeBase { unsigned long long x_1_2_1; _Atomic unsigned long long x_1_2_2; } x_1_1_1; void *x_1_1_2; struct __CFString {} *x_1_1_3; struct __CFString {} *x_1_1_4; struct __CFDictionary {} *x_1_1_5; struct __CFXWorld {} *x_1_1_6; long long x_1_1_7; } x1; unsigned int x2; unsigned int x3; struct __CFXMeshElement {} *x4; unsigned char x5; unsigned char x6; unsigned char x7; struct { BOOL x_8_1_1; struct __CFData {} *x_8_1_2; unsigned int x_8_1_3; unsigned int *x_8_1_4; struct { /* ? */ } *x_8_1_5; unsigned short x_8_1_6; unsigned char x_8_1_7; bool x_8_1_8; } x8; void *x9; float x10; float x11; float x12; void *x13; struct __CFXMeshSource {} *x14; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x15[2]; }*)arg1;
- (void)viewports:(const void**)arg1 :(long long*)arg2;
- (bool)wantsWideGamut;
- (void)writeBytes:(const void*)arg1 length:(unsigned long long)arg2;

@end
