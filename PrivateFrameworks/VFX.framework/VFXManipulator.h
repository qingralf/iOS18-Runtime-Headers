/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXManipulator : NSObject {
    unsigned short  _action;
    union { 
        struct { 
            /* Warning: Unrecognized filer type: '"' using 'void*' */ void*originalPosition; 
        } axisMove; 
        struct { 
            void*originalPosition; 
        } planeMove; 
        struct { 
            float rotationSign; 
            void*originalRotation; 
        } axisRotate; 
    }  _actionData;
    bool  _alternateMode;
    VFXNode * _arcHandleXY;
    VFXNode * _arcHandleXZ;
    VFXNode * _arcHandleYZ;
    VFXNode * _arcHandles;
    VFXAuthoringEnvironment * _authoringEnvironment;
    VFXNode * _axis;
    VFXBillboardConstraint * _billboard;
    NSOrderedSet * _cloneSet;
    bool  _cloning;
    unsigned long long  _features;
    VFXNode * _highlightNode;
    bool  _isMouseDown;
    bool  _layoutLocked;
    VFXNode * _node;
    VFXNode * _occluder;
    struct { 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void**positions; 
    }  _originalData;
    unsigned int  _originalDataCount;
    struct CGPoint { 
        double x; 
        double y; 
    }  _originalMouseLocation;
    VFXNode * _planarTranslationHandleXY;
    VFXNode * _planarTranslationHandleXZ;
    VFXNode * _planarTranslationHandleYZ;
    VFXNode * _planarTranslationHandles;
    void _planarTranslationLayout;
    NSLock * _presentationItemsLock;
    NSMutableArray * _presentationNodeTransforms;
    bool  _readonly;
    VFXNode * _rotationHandles;
    VFXNode * _scaleNode;
    VFXNode * _screenSpaceRotation;
    unsigned short  _selectedAxis;
    NSLock * _snapLock;
    long long  _snapToAlignCount;
    struct { float x1; void *x2; float x3; } * _snapToAlignOnX;
    struct { float x1; void *x2; float x3; } * _snapToAlignOnY;
    struct { float x1; void *x2; float x3; } * _snapToAlignOnZ;
    NSMutableIndexSet * _snapXIndexes;
    NSMutableIndexSet * _snapYIndexes;
    NSMutableIndexSet * _snapZIndexes;
    NSOrderedSet * _targets;
    VFXNode * _translateHandles;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _worldInitialMatrix;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _worldMatrix;
    long long  _xAlignment;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _xAxisToZAxisTransform;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _xyPlaneToXZPlaneTransform;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _xyPlaneToYZPlaneTransform;
    long long  _yAlignment;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _yAxisToZAxisTransform;
    long long  _zAlignment;
    VFXNode * _zArrow;
}

@property (readonly) VFXAuthoringEnvironment *authoringEnvironment;
@property (nonatomic) unsigned long long features;
@property (nonatomic) bool hidden;
@property (readonly) VFXNode *manipulatorNode;
@property (nonatomic) bool readonly;
@property (nonatomic, retain) VFXNode *target;
@property (nonatomic, retain) NSOrderedSet *targets;
@property (readonly) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } transform;
@property (nonatomic) long long xAlignment;
@property (nonatomic) long long yAlignment;
@property (nonatomic) long long zAlignment;

- (bool)_applyWithEvent:(struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; float x4; })arg1;
- (void)_deleteOriginalData;
- (unsigned long long)_effectiveFeatures;
- (void)_prepareSnapToAlignData:(void *)arg1 minOffset:(void *)arg2 maxOffset:(void *)arg3; // needs 3 arg types, found 1: unsigned short
- (void)_saveOriginalData;
- (void)_setAuthoringEnvironment:(id)arg1;
- (void)_snapPositionToAlign:(void *)arg1 original:(void *)arg2 unit:(void *)arg3 axisMove:(void *)arg4 rayStart:(void *)arg5 rayDir:(void *)arg6 didSnap:(void *)arg7 snapIndexes:(void *)arg8; // needs 8 arg types, found 4: float, bool, bool*, long long*
- (void)_updateActionWithEvent:(struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; float x4; })arg1;
- (void)_updateCloneStateWithEvent:(struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; float x4; })arg1;
- (void)_updateRuntimeItems;
- (void)addClonesToWorld;
- (id)authoringEnvironment;
- (void)clearRuntimeItems;
- (void)clearSnapIndexes;
- (id)copy;
- (void)dealloc;
- (void)editingSpaceChanged;
- (long long)effectiveEditingSpace;
- (unsigned long long)features;
- (bool)hidden;
- (id)hitTest:(struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; float x4; })arg1;
- (id)init;
- (bool)isDragging;
- (void)lockLayout;
- (void)lockSnapGuides;
- (id)manipulatorNode;
- (bool)mouseDown:(struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; float x4; })arg1;
- (bool)mouseDragged:(struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; float x4; })arg1;
- (bool)mouseMoved:(struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; float x4; })arg1;
- (bool)mouseUp:(struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; float x4; })arg1;
- (void)prepareSnapToAlignData;
- (void)prepareSnapToAlignDataIfNeeded;
- (bool)readonly;
- (void)removeClonesFromWorld;
- (void)setAlternateMode:(bool)arg1;
- (void)setFeatures:(unsigned long long)arg1;
- (void)setHidden:(bool)arg1;
- (void)setReadonly:(bool)arg1;
- (void)setTarget:(id)arg1;
- (void)setTargets:(id)arg1;
- (void)setXAlignment:(long long)arg1;
- (void)setYAlignment:(long long)arg1;
- (void)setZAlignment:(long long)arg1;
- (id)setupClones;
- (void)setupNode;
- (id)snapGuideIndexesOnAxis:(unsigned long long)arg1;
- (const struct { float x1; void *x2; float x3; }*)snapInfoAtIndex:(unsigned long long)arg1 axis:(unsigned long long)arg2;
- (id)target;
- (id)targets;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })transform;
- (void)unhighlightSelectedNode;
- (void)unlockLayout;
- (void)unlockSnapGuides;
- (void)updateItemsPosition;
- (void)updateItemsRotation;
- (void)updateItemsScale:(float)arg1;
- (void)updateManipulatorComponents;
- (void)updateManipulatorNode;
- (void)updateManipulatorPosition:(struct __CFXEngineContext { }*)arg1;
- (void)updateTargetsTransforms;
- (void)validateClones;
- (id)world;
- (long long)xAlignment;
- (long long)yAlignment;
- (long long)zAlignment;

@end
