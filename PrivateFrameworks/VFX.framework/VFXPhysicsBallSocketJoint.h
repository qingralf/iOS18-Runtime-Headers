/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXPhysicsBallSocketJoint : VFXPhysicsJoint {
    struct { 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*anchorA; 
    }  _definition;
}

@property (nonatomic) void anchorA;
@property (nonatomic) void anchorB;

+ (id)ballSocketWithBody:(id)arg1 anchor:(id)arg2;
+ (id)ballSocketWithBodyA:(id)arg1 anchorA:(id)arg2 bodyB:(id)arg3 anchorB:(id)arg4;
+ (id)jointWithBody:(void *)arg1 anchor:(void *)arg2; // needs 2 arg types, found 1: id
+ (id)jointWithBodyA:(void *)arg1 anchorA:(void *)arg2 bodyB:(void *)arg3 anchorB:(void *)arg4; // needs 4 arg types, found 2: id, id
+ (bool)supportsSecureCoding;

- (struct btPoint2PointConstraint { int (**x1)(); int x2; int x3; union { int x_4_1_1; void *x_4_1_2; } x4; float x5; bool x6; bool x7; int x8; struct btRigidBody {} *x9; struct btRigidBody {} *x10; float x11; float x12; struct btJointFeedback {} *x13; struct btJacobianEntry { struct btVector3 { union { float x_1_3_1[4]; } x_1_2_1; } x_14_1_1; struct btVector3 { union { float x_1_3_1[4]; } x_2_2_1; } x_14_1_2; struct btVector3 { union { float x_1_3_1[4]; } x_3_2_1; } x_14_1_3; struct btVector3 { union { float x_1_3_1[4]; } x_4_2_1; } x_14_1_4; struct btVector3 { union { float x_1_3_1[4]; } x_5_2_1; } x_14_1_5; float x_14_1_6; } x14[3]; struct btVector3 { union { float x_1_2_1[4]; } x_15_1_1; } x15; struct btVector3 { union { float x_1_2_1[4]; } x_16_1_1; } x16; int x17; float x18; float x19; bool x20; struct btConstraintSetting { float x_21_1_1; float x_21_1_2; float x_21_1_3; } x21; }*)_ballSocketConstraint;
- (struct btTypedConstraint { int (**x1)(); int x2; int x3; union { int x_4_1_1; void *x_4_1_2; } x4; float x5; bool x6; bool x7; int x8; struct btRigidBody {} *x9; struct btRigidBody {} *x10; float x11; float x12; struct btJointFeedback {} *x13; }*)_createConstraint;
- (void)anchorA;
- (id)anchorAValue;
- (void)anchorB;
- (id)anchorBValue;
- (void)copyFrom:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithBody:(void *)arg1 anchor:(void *)arg2; // needs 2 arg types, found 1: id
- (id)initWithBodyA:(void *)arg1 anchorA:(void *)arg2 bodyB:(void *)arg3 anchorB:(void *)arg4; // needs 4 arg types, found 2: id, id
- (id)initWithCoder:(id)arg1;
- (void)setAnchorA;
- (void)setAnchorAValue:(id)arg1;
- (void)setAnchorB;
- (void)setAnchorBValue:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;

@end
