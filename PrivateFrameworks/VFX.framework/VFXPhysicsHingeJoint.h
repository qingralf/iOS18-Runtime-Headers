/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXPhysicsHingeJoint : VFXPhysicsJoint {
    struct { 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*anchorA; 
    }  _definition;
}

@property (nonatomic) void anchorA;
@property (nonatomic) void anchorB;
@property (nonatomic) void axisA;
@property (nonatomic) void axisB;

+ (id)hingeWithBody:(id)arg1 axis:(id)arg2 anchor:(id)arg3;
+ (id)hingeWithBodyA:(id)arg1 axisA:(id)arg2 anchorA:(id)arg3 bodyB:(id)arg4 axisB:(id)arg5 anchorB:(id)arg6;
+ (id)jointWithBody:(void *)arg1 axis:(void *)arg2 anchor:(void *)arg3; // needs 3 arg types, found 1: id
+ (id)jointWithBodyA:(void *)arg1 axisA:(void *)arg2 anchorA:(void *)arg3 bodyB:(void *)arg4 axisB:(void *)arg5 anchorB:(void *)arg6; // needs 6 arg types, found 2: id, id
+ (bool)supportsSecureCoding;

- (struct btTypedConstraint { int (**x1)(); int x2; int x3; union { int x_4_1_1; void *x_4_1_2; } x4; float x5; bool x6; bool x7; int x8; struct btRigidBody {} *x9; struct btRigidBody {} *x10; float x11; float x12; struct btJointFeedback {} *x13; }*)_createConstraint;
- (struct btHingeConstraint { int (**x1)(); int x2; int x3; union { int x_4_1_1; void *x_4_1_2; } x4; float x5; bool x6; bool x7; int x8; struct btRigidBody {} *x9; struct btRigidBody {} *x10; float x11; float x12; struct btJointFeedback {} *x13; struct btJacobianEntry { struct btVector3 { union { float x_1_3_1[4]; } x_1_2_1; } x_14_1_1; struct btVector3 { union { float x_1_3_1[4]; } x_2_2_1; } x_14_1_2; struct btVector3 { union { float x_1_3_1[4]; } x_3_2_1; } x_14_1_3; struct btVector3 { union { float x_1_3_1[4]; } x_4_2_1; } x_14_1_4; struct btVector3 { union { float x_1_3_1[4]; } x_5_2_1; } x_14_1_5; float x_14_1_6; } x14[3]; struct btJacobianEntry { struct btVector3 { union { float x_1_3_1[4]; } x_1_2_1; } x_15_1_1; struct btVector3 { union { float x_1_3_1[4]; } x_2_2_1; } x_15_1_2; struct btVector3 { union { float x_1_3_1[4]; } x_3_2_1; } x_15_1_3; struct btVector3 { union { float x_1_3_1[4]; } x_4_2_1; } x_15_1_4; struct btVector3 { union { float x_1_3_1[4]; } x_5_2_1; } x_15_1_5; float x_15_1_6; } x15[3]; struct btTransform { struct btMatrix3x3 { struct btVector3 { union { float x_1_4_1[4]; } x_1_3_1; } x_1_2_1[3]; } x_16_1_1; struct btVector3 { union { float x_1_3_1[4]; } x_2_2_1; } x_16_1_2; } x16; }*)_hingeHandle;
- (void)anchorA;
- (id)anchorAValue;
- (void)anchorB;
- (id)anchorBValue;
- (void)axisA;
- (id)axisAValue;
- (void)axisB;
- (id)axisBValue;
- (void)copyFrom:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithBody:(void *)arg1 axis:(void *)arg2 anchor:(void *)arg3; // needs 3 arg types, found 1: id
- (id)initWithBodyA:(void *)arg1 axisA:(void *)arg2 anchorA:(void *)arg3 bodyB:(void *)arg4 axisB:(void *)arg5 anchorB:(void *)arg6; // needs 6 arg types, found 2: id, id
- (id)initWithCoder:(id)arg1;
- (void)setAnchorA;
- (void)setAnchorAValue:(id)arg1;
- (void)setAnchorB;
- (void)setAnchorBValue:(id)arg1;
- (void)setAxisA;
- (void)setAxisAValue:(id)arg1;
- (void)setAxisB;
- (void)setAxisBValue:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;

@end
