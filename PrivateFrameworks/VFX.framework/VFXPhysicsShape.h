/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXPhysicsShape : NSObject <NSCopying, NSSecureCoding> {
    bool  _flattened;
    float  _margin;
    void _nodeScale;
    struct __CFArray { } * _physicsBodies;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _physicsBodiesLock;
    id  _referenceObject;
    void _scale;
    VFXBtShapeWrapper * _shape;
    NSArray * _transforms;
    long long  _type;
}

@property (nonatomic) bool flattened;
@property (nonatomic) float margin;
@property (nonatomic, retain) VFXModel *model;
@property (nonatomic) void scale;
@property (nonatomic, retain) VFXNode *shapeNode;
@property (nonatomic, retain) NSArray *shapes;
@property (nonatomic, readonly) NSArray *transforms;
@property (nonatomic) long long type;

+ (id)defaultShapeForGeometry:(id)arg1;
+ (id)shapeWithModel:(id)arg1;
+ (id)shapeWithNode:(id)arg1 flattened:(bool)arg2;
+ (id)shapeWithShapes:(id)arg1 transforms:(id)arg2;
+ (bool)supportsSecureCoding;

- (void)_customDecodingOfVFXPhysicsShape:(id)arg1;
- (void)_customEncodingOfVFXPhysicsShape:(id)arg1;
- (void)_setNodeScale;
- (void)_setTransforms:(id)arg1;
- (id)_shapeHandle:(struct __CFXNode { }*)arg1;
- (void)_updateScale;
- (void)commonInit;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)didAddToPhysicsBody:(id)arg1;
- (void)didChange;
- (void)didRemoveFromPhysicsBody:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (bool)flattened;
- (id)initWithCoder:(id)arg1;
- (id)initWithContent:(id)arg1;
- (void)invalidate;
- (float)margin;
- (id)model;
- (void)scale;
- (id)scaleValue;
- (void)setFlattened:(bool)arg1;
- (void)setMargin:(float)arg1;
- (void)setModel:(id)arg1;
- (void)setScale;
- (void)setScaleValue:(id)arg1;
- (void)setShapeNode:(id)arg1;
- (void)setShapes:(id)arg1;
- (void)setType:(long long)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)shapeNode;
- (id)shapes;
- (id)transforms;
- (long long)type;
- (id)valueForKey:(id)arg1;

@end
