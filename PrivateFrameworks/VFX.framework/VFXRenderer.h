/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXRenderer : NSObject <VFXMTLRenderContextCommandBufferStatusMonitor, VFXMTLRenderContextResourceManagerMonitor, VFXWorldRenderer> {
    unsigned long long  __antialiasingMode;
    float  __aspectRatio;
    void __drawableSafeAreaInsets;
    NSObject<OS_dispatch_queue> * __renderingQueue;
    void __viewport;
    unsigned int  _adaptativeEndFrame;
    unsigned int  _adaptativeState0;
    unsigned int  _additiveWritesToAlpha;
    VFXAuthoringEnvironment * _authoringEnvironment;
    UIColor * _backgroundColor;
    bool  _cameraIsManipulated;
    struct CFXColor4 { 
        union { 
            float rgba[4]; 
            struct { 
                float r; 
                float g; 
                float b; 
                float a; 
            } ; 
            /* Warning: Unrecognized filer type: ')' using 'void*' */ void*simd; 
        } ; 
    }  _cfxBackgroundColor;
    <_VFXWorldCommandBufferStatusMonitor> * _commandBufferStatusMonitor;
    float  _contentScaleFactor;
    bool  _customRenderGraphEnabled;
    unsigned long long  _debugOptions;
    unsigned long long  _debugUIOptions;
    id  _delegate;
    struct { 
        unsigned int supportsUpdate : 1; 
        unsigned int supportsDidApplyAnimations : 1; 
        unsigned int supportsDidSimulatePhysics : 1; 
        unsigned int supportsDidApplyConstraints : 1; 
        unsigned int supportsWillRender : 1; 
        unsigned int supportsDidRender : 1; 
        unsigned int supportsInputTime : 1; 
        unsigned int supportsReadSubdivCache : 1; 
        unsigned int supportsWriteSubdivCache : 1; 
        unsigned int supportsMainPassCustomPostProcess : 1; 
    }  _delegationConformance;
    double  _deltaTime;
    unsigned int  _didUpdateBackingSize;
    bool  _emulateStereo;
    struct __CFXEngineContext { } * _engineContext;
    struct { 
        struct __CFXFramebuffer {} *frameBuffer; 
        struct __CFXFramebuffer {} *multisamplingFrameBuffer; 
        struct CGSize { 
            double width; 
            double height; 
        } drawableSize; 
    }  _framebufferInfo;
    unsigned int  _frozen;
    unsigned int  _imguiFrameStarted;
    bool  _isAnimating;
    unsigned int  _isPrivateRenderer;
    bool  _isRunningInExtension;
    unsigned int  _isViewPrivateRenderer;
    unsigned int  _jitteringEnabled;
    double  _lastWorldTime;
    _TtC3VFX17VFXRendererLegacy * _legacyRenderer;
    VFXRecursiveLock * _lock;
    double  _nextFrameTime;
    <MTLTexture> * _offScreenFramebuffer;
    unsigned long long  _pixelFormat;
    VFXNode * _pointOfCulling;
    VFXNode * _pointOfView;
    bool  _pointOfViewWasSet;
    VFXRenderer * _preloadRenderer;
    <VFXWorldRenderer> * _privateRendererOwner;
    struct { 
        unsigned int supportsUpdate : 1; 
        unsigned int supportsDidApplyAnimations : 1; 
        unsigned int supportsDidSimulatePhysics : 1; 
        unsigned int supportsDidApplyConstraints : 1; 
        unsigned int supportsWillRender : 1; 
        unsigned int supportsDidRender : 1; 
        unsigned int supportsInputTime : 1; 
        unsigned int supportsReadSubdivCache : 1; 
        unsigned int supportsWriteSubdivCache : 1; 
        unsigned int supportsMainPassCustomPostProcess : 1; 
    }  _privateRendererOwnerDelegationConformance;
    VFXMTLRenderContext * _renderContext;
    VFXRenderGraph * _renderGraph;
    unsigned long long  _renderMode;
    unsigned long long  _rendererKind;
    unsigned int  _renderingSnapshot;
    unsigned int  _rendersContinuously;
    <_VFXWorldRendererResourceManagerMonitor> * _resourceManagerMonitor;
    struct { 
        unsigned int supportsUpdate : 1; 
        unsigned int supportsDidApplyAnimations : 1; 
        unsigned int supportsDidSimulatePhysics : 1; 
        unsigned int supportsDidApplyConstraints : 1; 
        unsigned int supportsWillRender : 1; 
        unsigned int supportsDidRender : 1; 
        unsigned int supportsInputTime : 1; 
        unsigned int supportsReadSubdivCache : 1; 
        unsigned int supportsWriteSubdivCache : 1; 
        unsigned int supportsMainPassCustomPostProcess : 1; 
    }  _selfDelegationConformance;
    unsigned int  _shouldDeleteFramebuffer;
    unsigned int  _shouldForwardWorldRendererDelegationMessagesToPrivateRendererOwner;
    unsigned int  _shouldForwardWorldRendererDelegationMessagesToSelf;
    bool  _showAuthoringEnvironment;
    bool  _showStatistics;
    VFXRenderer * _snapshotRenderer;
    double  _statisticsTimeStamp;
    unsigned int  _temporalAntialiasingEnabled;
    double  _time;
    unsigned long long  _viewpointCoordinateSpace;
    NSArray * _viewpoints;
    VFXWorld * _world;
}

@property (nonatomic) bool additiveWritesToAlpha;
@property (nonatomic) unsigned long long antialiasingMode;
@property (nonatomic, readonly) AVAudioEngine *audioEngine;
@property (nonatomic, readonly) AVAudioEnvironmentNode *audioEnvironmentNode;
@property (nonatomic, retain) VFXNode *audioListener;
@property (nonatomic) bool autoenablesDefaultLighting;
@property (nonatomic, copy) UIColor *backgroundColor;
@property (nonatomic, readonly) unsigned long long colorPixelFormat;
@property (nonatomic, readonly) <MTLCommandQueue> *commandQueue;
@property (nonatomic, readonly) <MTLRenderCommandEncoder> *currentRenderCommandEncoder;
@property (nonatomic, readonly) MTLRenderPassDescriptor *currentRenderPassDescriptor;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } currentViewport;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) unsigned long long debugOptions;
@property (nonatomic) <VFXWorldRendererDelegate> *delegate;
@property (nonatomic, readonly) unsigned long long depthPixelFormat;
@property (nonatomic, retain) <MTLTexture> *depthTexture;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (nonatomic, retain) _TtC3VFX9VFXEffect *effect;
@property (nonatomic) bool enableDeferredRendering;
@property (readonly) unsigned long long hash;
@property (getter=isJitteringEnabled, nonatomic) bool jitteringEnabled;
@property (nonatomic, readonly) double nextFrameTime;
@property (nonatomic, retain) VFXNode *pointOfView;
@property (nonatomic, copy) id /* block */ postRenderCallback;
@property (nonatomic, retain) VFXRenderGraph *renderGraph;
@property (nonatomic, retain) _TtC3VFX8VFXScene *scene;
@property (nonatomic) bool showsStatistics;
@property (nonatomic, readonly) unsigned long long stencilPixelFormat;
@property (readonly) Class superclass;
@property (getter=isTemporalAntialiasingEnabled, nonatomic) bool temporalAntialiasingEnabled;
@property (nonatomic, retain) <MTLTexture> *texture;
@property (nonatomic, readonly) struct CGColorSpace { }*workingColorSpace;
@property (nonatomic, retain) VFXWorld *world;

+ (id)rendererWithDevice:(id)arg1 options:(id)arg2;

- (void).cxx_destruct;
- (id)MTLTexture;
- (void)_UIOrientationDidChangeNotification:(id)arg1;
- (void*)__CFObject;
- (void)_addGPUFrameCompletedHandler:(id /* block */)arg1;
- (void)_addGPUFramePresentedHandler:(id /* block */)arg1;
- (void)_addGPUFrameScheduledHandler:(id /* block */)arg1;
- (void)_allowGPUBackgroundExecution;
- (float)_aspectRatio;
- (id)_authoringEnvironment;
- (struct CGSize { double x1; double x2; })_backingSize;
- (void)_beginFrame;
- (void)_cfxBackgroundColorDidChange;
- (void)_clearBackBuffer;
- (bool)_collectCompilationErrors;
- (id)_commandBufferStatusMonitor;
- (id)_compilationErrors;
- (double)_computeNextFrameTime;
- (id)_computedLightingEnvironmentMapsPath;
- (float)_contentsScaleFactor;
- (id)_copyPerformanceStatistics;
- (struct CGImage { }*)_createBackgroundColorImageWithSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_createOffscreenFramebufferIfNeeded;
- (struct CGImage { }*)_createSnapshotWithSize:(struct CGSize { double x1; double x2; })arg1 error:(id*)arg2;
- (id)_defaultPOVForWorld:(id)arg1;
- (void)_didRenderWorld:(id)arg1;
- (void)_displayLinkStatsTack;
- (void)_displayLinkStatsTick;
- (void)_drawableSafeAreaInsets;
- (bool)_enableARMode;
- (void)_endFrame;
- (void)_endImGuiFrameAndRender;
- (struct __CFXEngineContext { }*)_engineContext;
- (id)_hitTest:(struct CGPoint { double x1; double x2; })arg1 viewport:(struct CGSize { double x1; double x2; })arg2 options:(id)arg3;
- (id)_initWithDevice:(id)arg1 options:(id)arg2 isPrivateRenderer:(bool)arg3 privateRendererOwner:(id)arg4 clearsOnDraw:(bool)arg5;
- (void)_installViewport;
- (void)_interfaceOrientationDidChange;
- (void)_invalidateFramebuffer;
- (bool)_isNodeInsideFrustum:(void *)arg1 withPointOfView:(void *)arg2 viewport:(void *)arg3; // needs 3 arg types, found 2: id, id
- (void)_jitterAtStep:(unsigned long long)arg1 updateMainFramebuffer:(bool)arg2 redisplay:(bool)arg3 jitterer:(id)arg4;
- (bool)_legacyAdditiveWritesToAlpha;
- (id)_legacyRenderer;
- (bool)_needsRedrawAsap;
- (bool)_needsRepetitiveRedraw;
- (id)_nodesInsideFrustumWithPointOfView:(void *)arg1 viewport:(void *)arg2; // needs 2 arg types, found 1: id
- (void)_prepareRenderTarget;
- (void)_presentFramebuffer;
- (void)_projectPointviewport;
- (void)_projectPoints:(void *)arg1 count:(void *)arg2 viewport:(void *)arg3; // needs 3 arg types, found 2: /* Warning: Unrecognized filer type: '1' using 'void*' */ void**, unsigned long long
- (id)_readSubdivCacheForHash:(id)arg1;
- (void)_render;
- (id)_renderContextMetal;
- (void)_renderWithViewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 encoder:(id)arg2 passDescriptor:(id)arg3 commandQueue:(id)arg4 commandBuffer:(id)arg5;
- (void)_renderWorldWithEngineContext:(struct __CFXEngineContext { }*)arg1;
- (id)_renderingQueue;
- (id)_resourceManagerMonitor;
- (void)_runningInExtension;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })_screenTransform;
- (void)_setBackingSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setContentsScaleFactor:(float)arg1;
- (void)_setInterfaceOrientation:(long long)arg1;
- (void)_setLegacyAdditiveWritesToAlpha:(bool)arg1;
- (void)_setupOffscreenRendererWithSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)_shouldDelegateARCompositing;
- (bool)_shouldForwardWorldRendererDelegationMessagesToPrivateRendererOwner;
- (bool)_showsAuthoringEnvironment;
- (float)_superSamplingFactor;
- (bool)_triggersEnabled;
- (void)_unprojectPointviewport;
- (void)_updateEngineCallbacks;
- (void)_updateProbes:(id)arg1 progress:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_viewport;
- (bool)_viewportDidChange;
- (bool)_wantsWorldRendererDelegationMessages;
- (void)_willRenderWorld:(id)arg1;
- (void)_worldDidChange;
- (void)_writeSubdivCacheForHash:(id)arg1 dataProvider:(id /* block */)arg2;
- (bool)additiveWritesToAlpha;
- (unsigned long long)antialiasingMode;
- (id)audioEngine;
- (id)audioEnvironmentNode;
- (id)audioListener;
- (bool)autoAdjustCamera;
- (bool)autoenablesDefaultLighting;
- (id)backgroundColor;
- (bool)canRecycleParticleBuffers;
- (unsigned long long)colorPixelFormat;
- (id)commandQueue;
- (struct CGImage { }*)createSnapshot:(id*)arg1;
- (id)currentCommandBuffer;
- (id)currentRenderCommandEncoder;
- (id)currentRenderPassDescriptor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })currentViewport;
- (void)dealloc;
- (unsigned long long)debugOptions;
- (unsigned long long)debugUIOptions;
- (id)delegate;
- (unsigned long long)depthPixelFormat;
- (id)depthTexture;
- (id)description;
- (id)device;
- (void)drawStatisticsIfNeeded;
- (id)effect;
- (bool)enableDeferredRendering;
- (void)encodeWithCommandBuffer:(id)arg1;
- (void)finalizeEncoding;
- (bool)forceAsyncShaderCompilation;
- (bool)frozen;
- (bool)hasImGuiFrameStarted;
- (bool)hasRenderableObjects;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 options:(id)arg2;
- (id)hitTestWithSegmentFromPoint:(void *)arg1 toPoint:(void *)arg2 options:(void *)arg3; // needs 3 arg types, found 1: id
- (id)init;
- (id)initWithCommandQueue:(id)arg1;
- (bool)isEmulatingStereo;
- (bool)isJitteringEnabled;
- (bool)isNodeInsideFrustum:(id)arg1 withPointOfView:(id)arg2;
- (bool)isTemporalAntialiasingEnabled;
- (bool)isVertexAmplificationEnabled;
- (bool)jitteringEnabled;
- (id)legacyRenderer;
- (void)lock;
- (id)metalDevice;
- (id)metalLayer;
- (double)nextFrameTime;
- (id)nodesInsideFrustumWithPointOfView:(id)arg1;
- (unsigned long long)pixelFormat;
- (id)pointOfCulling;
- (id)pointOfView;
- (id /* block */)postRenderCallback;
- (bool)prepareObject:(id)arg1 shouldAbortBlock:(id /* block */)arg2;
- (void)prepareObjects:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)privateRendererOwner;
- (id)programWithNode:(id)arg1 withMaterial:(id)arg2;
- (void)projectPoint;
- (void)render;
- (void)renderContext:(id)arg1 commandBufferDidCompleteWithError:(id)arg2;
- (void)renderContext:(id)arg1 didFallbackToDefaultTextureForSource:(id)arg2 message:(id)arg3;
- (id)renderGraph;
- (unsigned long long)renderMode;
- (bool)renderMovieToURL:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 antialiasingMode:(unsigned long long)arg3 attributes:(id)arg4 error:(id*)arg5;
- (void)renderToTexture:(id)arg1;
- (void)renderToTexture:(id)arg1 options:(id)arg2;
- (void)renderWithCommandBuffer:(id)arg1 viewPoints:(id)arg2 mode:(unsigned long long)arg3;
- (void)renderWithTextureAttachmentProvider:(id)arg1 options:(id)arg2;
- (void)renderWithViewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 commandBuffer:(id)arg2 passDescriptor:(id)arg3;
- (unsigned long long)rendererKind;
- (void)resolvedBackgroundColorDidChange;
- (id)scene;
- (void)setAdditiveWritesToAlpha:(bool)arg1;
- (void)setAntialiasingMode:(unsigned long long)arg1;
- (void)setAudioListener:(id)arg1;
- (void)setAutoAdjustCamera:(bool)arg1;
- (void)setAutoenablesDefaultLighting:(bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCanRecycleParticleBuffers:(bool)arg1;
- (void)setDebugOptions:(unsigned long long)arg1;
- (void)setDebugUIOptions:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDepthTexture:(id)arg1;
- (void)setEffect:(id)arg1;
- (void)setEmulateStereo:(bool)arg1;
- (void)setEnableDeferredRendering:(bool)arg1;
- (void)setForceAsyncShaderCompilation:(bool)arg1;
- (void)setFrozen:(bool)arg1;
- (void)setJitteringEnabled:(bool)arg1;
- (void)setPixelFormat:(unsigned long long)arg1;
- (void)setPointOfCulling:(id)arg1;
- (void)setPointOfView:(id)arg1;
- (void)setPostRenderCallback:(id /* block */)arg1;
- (void)setRenderGraph:(id)arg1;
- (void)setRenderMode:(unsigned long long)arg1;
- (void)setRendererKind:(unsigned long long)arg1;
- (void)setRendersContinuously:(bool)arg1;
- (void)setScene:(id)arg1;
- (void)setShouldLoadFinalTexture:(bool)arg1;
- (void)setShowsStatistics:(bool)arg1;
- (void)setTemporalAntialiasingEnabled:(bool)arg1;
- (void)setTexture:(id)arg1;
- (void)setVertexAmplificationEnabled:(bool)arg1;
- (void)setWorld:(id)arg1;
- (void)setWorld:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)set_aspectRatio:(float)arg1;
- (void)set_collectCompilationErrors:(bool)arg1;
- (void)set_commandBufferStatusMonitor:(id)arg1;
- (void)set_computedLightingEnvironmentMapsPath:(id)arg1;
- (void)set_drawableSafeAreaInsets;
- (void)set_enableARMode:(bool)arg1;
- (void)set_legacyRenderer:(id)arg1;
- (void)set_resourceManagerMonitor:(id)arg1;
- (void)set_screenTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)set_shouldDelegateARCompositing:(bool)arg1;
- (void)set_shouldForwardWorldRendererDelegationMessagesToPrivateRendererOwner:(bool)arg1;
- (void)set_superSamplingFactor:(float)arg1;
- (void)set_triggersEnabled:(bool)arg1;
- (void)set_viewport;
- (void)set_wantsWorldRendererDelegationMessages:(bool)arg1;
- (void)setupAuthoringEnvironment;
- (id)setupLegacyRendererWithCommandQueue:(id)arg1;
- (bool)shouldLoadFinalTexture;
- (bool)showsDebugUI;
- (bool)showsStatistics;
- (id)snapshot;
- (id)snapshotImageWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)snapshotImageWithSize:(struct CGSize { double x1; double x2; })arg1 deltaTime:(double)arg2;
- (id)snapshotRendererWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)snapshotWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)snapshotWithSize:(struct CGSize { double x1; double x2; })arg1 deltaTime:(double)arg2;
- (void)startManipulatingPointOfView;
- (unsigned long long)stencilPixelFormat;
- (void)stopManipulatingPointOfView;
- (bool)temporalAntialiasingEnabled;
- (id)texture;
- (void)unlock;
- (void)unprojectPoint;
- (void)updateAtTime:(double)arg1;
- (void)updateProbes:(id)arg1 atTime:(double)arg2 completionHandler:(id /* block */)arg3;
- (bool)vertexAmplificationEnabled;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })viewport;
- (struct CGColorSpace { }*)workingColorSpace;
- (id)world;

@end
