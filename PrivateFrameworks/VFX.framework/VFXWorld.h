/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXWorld : NSObject <NSCopying, NSSecureCoding, VFXBehaviorSupport, VFXTransactionCommandObject> {
    bool  _allowRemoteEdition;
    bool  _allowsDefaultLightingEnvironmentFallback;
    <VFXAssetPathResolver> * _assetPathResolver;
    VFXAssetRegistry * _assetRegistry;
    VFXAuthoringEnvironment2 * _authoringEnvironment2;
    VFXMaterialProperty * _background;
    VFXBehaviorGraph * _behaviorGraph;
    VFXClock * _clock;
    struct __CFXCoreEntityManager { } * _coreEntityManager;
    VFXRenderGraph * _defaultRenderGraph;
    VFXMaterialProperty * _environment;
    id  _fogColor;
    float  _fogDensityExponent;
    float  _fogEndDistance;
    float  _fogStartDistance;
    VFXNode * _layerRootNode;
    VFXBidirectionalRemapTable * _modelToPresentationRemapTable;
    VFXPhysicsWorld * _physicsWorld;
    _TtC3VFX24VFXRemotePreviewEndpoint * _remoteEditionEndpoint;
    <VFXWorldRemotePreviewDelegate> * _remotePreviewDelegate;
    VFXNode * _rootNode;
    float  _screenSpaceReflectionMaxRayDistance;
    long long  _screenSpaceReflectionSampleCount;
    float  _screenSpaceReflectionStride;
    VFXStateManager * _stateManager;
    VFXTriggerManager * _triggerManager;
    NSMutableDictionary * _userAttributes;
    bool  _wantsScreenSpaceReflection;
    struct __CFXWorld { } * _world;
}

@property (nonatomic, readonly) VFXMaterialProperty *background;
@property (nonatomic, retain) VFXBehaviorGraph *behaviorGraph;
@property (nonatomic, readonly) NSArray *bridgedComponentNames;
@property (nonatomic, readonly) VFXClock *clock;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) id fogColor;
@property (nonatomic) float fogDensityExponent;
@property (nonatomic) float fogEndDistance;
@property (nonatomic) float fogStartDistance;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) VFXMaterialProperty *lightingEnvironment;
@property (nonatomic, readonly) VFXPhysicsWorld *physicsWorld;
@property (nonatomic, readonly) VFXNode *rootNode;
@property (nonatomic) float screenSpaceReflectionMaximumDistance;
@property (nonatomic) long long screenSpaceReflectionSampleCount;
@property (nonatomic) float screenSpaceReflectionStride;
@property (readonly) Class superclass;
@property (nonatomic) bool wantsScreenSpaceReflection;

+ (id)_indexPathForNode:(id)arg1;
+ (bool)canImportFileExtension:(id)arg1;
+ (bool)canImportFileUTI:(id)arg1;
+ (void)initialize;
+ (SEL)jsConstructor;
+ (id)supportedFileUTIsForExport;
+ (id)supportedFileUTIsForImport;
+ (bool)supportsSecureCoding;
+ (id)world;
+ (id)worldNamed:(id)arg1;
+ (id)worldNamed:(id)arg1 inDirectory:(id)arg2 options:(id)arg3;
+ (id)worldNamed:(id)arg1 options:(id)arg2;
+ (id)worldWithData:(id)arg1 options:(id)arg2 error:(id*)arg3;
+ (id)worldWithMDLAsset:(id)arg1;
+ (id)worldWithMDLAsset:(id)arg1 options:(id)arg2;
+ (id)worldWithSCNURL:(id)arg1 options:(id)arg2 error:(id*)arg3;
+ (id)worldWithSceneKitScene:(id)arg1 options:(id)arg2;
+ (id)worldWithURL:(id)arg1 options:(id)arg2 error:(id*)arg3;
+ (id)worldWithURL:(id)arg1 options:(id)arg2 transferringConfigurationFrom:(id)arg3 error:(id*)arg4;
+ (id)worldWithWorldRef:(struct __CFXWorld { }*)arg1;

- (void*)__CFObject;
- (bool)_allowsDefaultLightingEnvironmentFallback;
- (void)_clearWorldRef;
- (void)_dumpToDisk;
- (id)_exportAsMovieOperationWithDestinationURL:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 attributes:(id)arg3 delegate:(id)arg4 didEndSelector:(SEL)arg5 userInfo:(void*)arg6;
- (id)_nodeWithIndexPath:(id)arg1;
- (id)_physicsWorldCreateIfNeeded:(bool)arg1;
- (void)_scaleWorldBy:(float)arg1;
- (void)_setRootNode:(id)arg1 immediate:(bool)arg2;
- (id)_subnodeFromIndexPath:(id)arg1;
- (void)_syncObjCModel;
- (id)_worlds;
- (bool)allowRemoteEdition;
- (id)assetPathResolver;
- (id)assetRegistry;
- (id)authoringEnvironment2;
- (id)background;
- (id)behaviorGraph;
- (id)bridgedComponentNames;
- (id)buildIdentifierRemapTable;
- (id)clock;
- (void)cloneModelToPresentationAndStartReplicationStream;
- (id)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;
- (id)copyAnimationChannelForKeyPath:(id)arg1 property:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dataRepresentationWithOptions:(id)arg1;
- (void)dealloc;
- (id)debugQuickLookObject;
- (id)debugQuickLookObjectWithPointOfView:(id)arg1;
- (id)defaultRenderGraph;
- (void)encodeWithCoder:(id)arg1;
- (double)endTime;
- (id)exportAsMovieOperationWithDestinationURL:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 attributes:(id)arg3 delegate:(id)arg4 didEndSelector:(SEL)arg5 userInfo:(void*)arg6;
- (id)fogColor;
- (void)fogColor_linearExtendedSRGB;
- (float)fogDensityExponent;
- (float)fogEndDistance;
- (float)fogStartDistance;
- (double)frameRate;
- (id)identifier;
- (id)init;
- (id)initForJavascript:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithOptions:(id)arg1;
- (id)initWithWorldRef:(struct __CFXWorld { }*)arg1;
- (bool)initializeCoreEntityManagerWithInfo:(id)arg1 error:(id*)arg2;
- (id)lightingEnvironment;
- (bool)load:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (bool)loadCoreEntityManagerFromURL:(id)arg1 options:(id)arg2 infoOut:(id)arg3 error:(id*)arg4;
- (void)loadMDLAsset:(id)arg1 options:(id)arg2 context:(id)arg3;
- (void)loadSCN:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (void)lock;
- (bool)migrateCoreEntityManagerWithInfo:(id)arg1 error:(id*)arg2;
- (struct _opaque_pthread_mutex_t { long long x1; BOOL x2[56]; }*)mutex;
- (id)physicsWorld;
- (float)playbackSpeed;
- (void)prepareForRenderer:(id)arg1 progressHandler:(id /* block */)arg2;
- (long long)presentationEntityFromModel:(long long)arg1;
- (id)presentationScene;
- (bool)reloadFromURL:(id)arg1 error:(id*)arg2;
- (id)remapTable;
- (id)remoteEditionEndpoint;
- (id)remotePreviewDelegate;
- (void)replicateToRuntimeAndStartReplicationWithOptions:(id)arg1;
- (void)resolveVFXCoreAndTagReferences;
- (id)root;
- (id)rootNode;
- (id)rootNodeForLayer:(int)arg1;
- (id)scene;
- (float)screenSpaceReflectionDepthThreshold;
- (float)screenSpaceReflectionMaximumDistance;
- (long long)screenSpaceReflectionSampleCount;
- (float)screenSpaceReflectionStride;
- (void)setAllowRemoteEdition:(bool)arg1;
- (void)setAssetPathResolver:(id)arg1;
- (void)setAuthoringEnvironment2:(id)arg1;
- (void)setBehaviorGraph:(id)arg1;
- (void)setDefaultRenderGraph:(id)arg1;
- (void)setEndTime:(double)arg1;
- (void)setFogColor:(id)arg1;
- (void)setFogColor_linearExtendedSRGB;
- (void)setFogDensityExponent:(float)arg1;
- (void)setFogEndDistance:(float)arg1;
- (void)setFogStartDistance:(float)arg1;
- (void)setFrameRate:(double)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setPlaybackSpeed:(float)arg1;
- (void)setRemoteEditionEndpoint:(id)arg1;
- (void)setRemotePreviewDelegate:(id)arg1;
- (void)setReplicationDelegate:(id)arg1;
- (void)setRootNode:(id)arg1;
- (void)setRootNode:(id)arg1 forLayer:(int)arg2;
- (void)setScreenSpaceReflectionDepthThreshold:(float)arg1;
- (void)setScreenSpaceReflectionMaximumDistance:(float)arg1;
- (void)setScreenSpaceReflectionSampleCount:(long long)arg1;
- (void)setScreenSpaceReflectionStride:(float)arg1;
- (void)setStartTime:(double)arg1;
- (void)setUpAxis;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setWantsScreenSpaceReflection:(bool)arg1;
- (void)set_allowsDefaultLightingEnvironmentFallback:(bool)arg1;
- (id)snapshotWithSize:(struct CGSize { double x1; double x2; })arg1 pointOfView:(id)arg2;
- (void)startRuntimeThread;
- (double)startTime;
- (id)stateManager;
- (void)stopReplication;
- (id)triggerManager;
- (void)unlock;
- (void)upAxis;
- (id)valueForUndefinedKey:(id)arg1;
- (bool)wantsScreenSpaceReflection;
- (id)world;
- (struct __CFXWorld { }*)worldRef;
- (bool)writeToURL:(id)arg1 options:(id)arg2 progressHandler:(id /* block */)arg3;
- (bool)writeToURLWithUSDKit:(id)arg1;

@end
