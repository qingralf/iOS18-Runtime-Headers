/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface _VFXExportOperation : VFXExportOperation {
    unsigned long long  _antialiasingMode;
    NSDictionary * _attributes;
    bool  _canceled;
    id  _delegate;
    SEL  _didEndSelector;
    double  _endTime;
    NSError * _error;
    NSURL * _outputURL;
    VFXNode * _pointOfView;
    float  _progress;
    VFXRenderer * _renderer;
    struct CGSize { 
        double width; 
        double height; 
    }  _size;
    double  _startTime;
    bool  _succeded;
    double  _systemTime;
    void * _userInfo;
    VFXWorld * _world;
}

@property (nonatomic) unsigned long long antialiasingMode;
@property (nonatomic, retain) NSDictionary *attributes;
@property (nonatomic) bool canceled;
@property (nonatomic) id delegate;
@property (nonatomic) SEL didEndSelector;
@property (nonatomic) double endTime;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, retain) NSURL *outputURL;
@property (nonatomic, retain) VFXNode *pointOfView;
@property (nonatomic) float progress;
@property (nonatomic, retain) VFXRenderer *renderer;
@property (nonatomic) struct CGSize { double x1; double x2; } size;
@property (nonatomic) double startTime;
@property (nonatomic) bool succeded;
@property (nonatomic) void*userInfo;
@property (nonatomic, retain) VFXWorld *world;

- (unsigned long long)antialiasingMode;
- (id)attributes;
- (void)cancel;
- (bool)canceled;
- (void)dealloc;
- (id)delegate;
- (SEL)didEndSelector;
- (double)endTime;
- (id)error;
- (id)outputURL;
- (id)pointOfView;
- (float)progress;
- (id)renderer;
- (void)setAntialiasingMode:(unsigned long long)arg1;
- (void)setAttributes:(id)arg1;
- (void)setCanceled:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidEndSelector:(SEL)arg1;
- (void)setEndTime:(double)arg1;
- (void)setError:(id)arg1;
- (void)setOutputURL:(id)arg1;
- (void)setPointOfView:(id)arg1;
- (void)setProgress:(float)arg1;
- (void)setRenderer:(id)arg1;
- (void)setSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setStartTime:(double)arg1;
- (void)setSucceded:(bool)arg1;
- (void)setUserInfo:(void*)arg1;
- (void)setWorld:(id)arg1;
- (struct CGSize { double x1; double x2; })size;
- (double)startTime;
- (bool)succeded;
- (void*)userInfo;
- (id)world;

@end
