/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 */

@interface VideosUI.PaginatedMediaController : VUIBaseViewController <UIGestureRecognizerDelegate, UIPageControlTimerProgressDelegate, VUIBackgroundMediaPlayback> {
    void $__lazy_storage_$_buttonsPresenter;
    void $__lazy_storage_$_buttonsView;
    void $__lazy_storage_$_containerView;
    void $__lazy_storage_$_layout;
    void $__lazy_storage_$_mediaShowcaseConfig;
    void $__lazy_storage_$_metadataInteractor;
    void $__lazy_storage_$_metadataPresenter;
    void $__lazy_storage_$_metadataView;
    void $__lazy_storage_$_nextIndicator;
    void $__lazy_storage_$_pageControl;
    void $__lazy_storage_$_pageProgress;
    void $__lazy_storage_$_previousIndicator;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _metadataViewTopOffsetStream;
    void autoAdvanceForIdleVideo;
    void autoAdvancePageTimer;
    void backgroundMediaController;
    void backgroundMediaInfo;
    void carouselBehaviorEnabled;
    void chevronDebounceTimer;
    void collectionImpressioner;
    void elapsedTimeObserverToken;
    void enablePageControlTimer;
    void forceDisableAutoAdvance;
    void hideGradientView;
    void isAutoAdvanceEnabled;
    void isCurrentMetadataLoadedObserver;
    void isPlayingVideo;
    void lastImpressedIndex;
    void metadataContentHeightObserver;
    void observers;
    void offerSelectionModalNotificationToken;
    void pageControlBottomMargin;
    void pageControlBottomMarginConstraint;
    void paginationDelegate;
    void paginationHost;
    void playerTabViewControllers;
    void playerViewControllerObservable;
    void shouldAdjustCaptionPosition;
    void shouldAutoAdvanceLastPage;
    void shouldUpdateMetadataViewDuringFullscreenTransition;
    void shouldUsePageControlProgress;
    void showsGradient;
    void showsIndicators;
    void showsPageControl;
    void swipeController;
    void viewMetricsRecorder;
    void viewModels;
    void vuiIsUserInteractionEnabled;
}

@property (nonatomic) bool allowsExternalPlayback;
@property (nonatomic) bool allowsPictureInPicturePlayback;
@property (nonatomic) bool animateImageChange;
@property (nonatomic) bool autoPlayInSharePlay;
@property (nonatomic) bool automaticPlaybackStart;
@property (nonatomic, retain) AVPlayerViewController *avPlayerViewController;
@property (nonatomic) bool clearPreviousImageBeforeLoading;
@property (nonatomic, readonly) VUIMediaInfo *currentMediaInfo;
@property (nonatomic) bool forceAutoPlay;
@property (nonatomic, readonly) bool foreground;
@property (nonatomic) unsigned long long imageContentMode;
@property (nonatomic) unsigned long long imageSwappingAnimationType;
@property (nonatomic) bool keepVideoGravityUnchangedByVideoControlsVisibility;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } legibleContentInsets;
@property (nonatomic) unsigned long long mediaInfoIndex;
@property (nonatomic, copy) NSArray *mediaInfos;
@property (nonatomic) bool playbackEnabled;
@property (nonatomic) double playbackStartDelay;
@property (nonatomic, retain) TVPPlayer *player;
@property (nonatomic) bool prefersAudioOverPictureInPicture;
@property (nonatomic) bool prefetchesVideoFrame;
@property (nonatomic) bool preloadPlaybackEnabled;
@property (nonatomic) bool recordPausedMediaEventAsStop;
@property (nonatomic) bool showsPlaybackControlsInForeground;
@property (nonatomic, readonly) unsigned long long state;
@property (nonatomic) bool stopPlayerWhenExitingFullScreen;
@property (nonatomic) bool stopPlayerWhenViewDisappears;
@property (nonatomic) bool stopWhenAnotherMediaControllerStarts;
@property (nonatomic) bool stopsPlaybackWhenInactive;
@property (nonatomic) bool updatesNowPlayingInfoCenter;
@property (nonatomic) double videoAudioRampDuration;
@property (nonatomic) bool videoFrameFallbackEnabled;
@property (nonatomic, copy) NSString *videoGravity;

- (void).cxx_destruct;
- (void)adoptAVPlayerViewController:(id)arg1 player:(id)arg2;
- (bool)allowsExternalPlayback;
- (bool)allowsPictureInPicturePlayback;
- (bool)animateImageChange;
- (void)appendMediaInfos:(id)arg1;
- (bool)autoPlayInSharePlay;
- (id)avPlayerViewController;
- (bool)clearPreviousImageBeforeLoading;
- (id)currentMediaInfo;
- (void)dealloc;
- (bool)forceAutoPlay;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)handlePageControlChanged;
- (unsigned long long)imageContentMode;
- (unsigned long long)imageSwappingAnimationType;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isAutomaticPlaybackStart;
- (bool)isForeground;
- (bool)isPlaybackEnabled;
- (bool)isPreloadPlaybackEnabled;
- (bool)isVideoFrameFallbackEnabled;
- (bool)keepVideoGravityUnchangedByVideoControlsVisibility;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })legibleContentInsets;
- (void)mediaControllerTapped:(id)arg1;
- (unsigned long long)mediaInfoIndex;
- (id)mediaInfos;
- (id)notificationObject;
- (bool)pageControlTimerProgress:(id)arg1 shouldAdvanceToPage:(long long)arg2;
- (void)pause;
- (void)play;
- (double)playbackStartDelay;
- (id)player;
- (bool)prefersAudioOverPictureInPicture;
- (bool)prefetchesVideoFrame;
- (bool)recordPausedMediaEventAsStop;
- (void)removeMediaInfoAtIndex:(unsigned long long)arg1;
- (void)replay;
- (void)setAllowsExternalPlayback:(bool)arg1;
- (void)setAllowsPictureInPicturePlayback:(bool)arg1;
- (void)setAnimateImageChange:(bool)arg1;
- (void)setAutoPlayInSharePlay:(bool)arg1;
- (void)setAutomaticPlaybackStart:(bool)arg1;
- (void)setAvPlayerViewController:(id)arg1;
- (void)setClearPreviousImageBeforeLoading:(bool)arg1;
- (void)setControlsVisible:(bool)arg1;
- (void)setForceAutoPlay:(bool)arg1;
- (void)setImageContentMode:(unsigned long long)arg1;
- (void)setImageSwappingAnimationType:(unsigned long long)arg1;
- (void)setKeepVideoGravityUnchangedByVideoControlsVisibility:(bool)arg1;
- (void)setLegibleContentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setMediaInfo:(id)arg1 atIndex:(unsigned long long)arg2 animated:(bool)arg3;
- (void)setMediaInfoIndex:(unsigned long long)arg1;
- (void)setMediaInfos:(id)arg1;
- (void)setMediaInfos:(id)arg1 animated:(bool)arg2;
- (void)setPlaybackEnabled:(bool)arg1;
- (void)setPlaybackStartDelay:(double)arg1;
- (void)setPlayer:(id)arg1;
- (void)setPrefersAudioOverPictureInPicture:(bool)arg1;
- (void)setPrefetchesVideoFrame:(bool)arg1;
- (void)setPreloadPlaybackEnabled:(bool)arg1;
- (void)setRecordPausedMediaEventAsStop:(bool)arg1;
- (void)setShowsPlaybackControlsInForeground:(bool)arg1;
- (void)setShowsVideoControls:(bool)arg1;
- (void)setStopPlayerWhenExitingFullScreen:(bool)arg1;
- (void)setStopPlayerWhenViewDisappears:(bool)arg1;
- (void)setStopWhenAnotherMediaControllerStarts:(bool)arg1;
- (void)setStopsPlaybackWhenInactive:(bool)arg1;
- (void)setUpdatesNowPlayingInfoCenter:(bool)arg1;
- (void)setVideoAudioRampDuration:(double)arg1;
- (void)setVideoFrameFallbackEnabled:(bool)arg1;
- (void)setVideoGravity:(id)arg1;
- (bool)shouldStopPlayerWhenExitingFullScreen;
- (bool)shouldStopPlayerWhenViewDisappears;
- (bool)shouldStopWhenAnotherMediaControllerStarts;
- (bool)showsPlaybackControlsInForeground;
- (unsigned long long)state;
- (void)stop;
- (bool)stopsPlaybackWhenInactive;
- (id)surrenderCurrentPlayer;
- (void)transitionToForeground:(bool)arg1 animated:(bool)arg2;
- (void)transitionToForeground:(bool)arg1 withPlaybackControls:(bool)arg2 animated:(bool)arg3;
- (void)transitionToFullScreenAnimated:(bool)arg1;
- (bool)updatesNowPlayingInfoCenter;
- (double)videoAudioRampDuration;
- (id)videoGravity;
- (void)vui_viewDidLayoutSubviews;
- (void)vui_viewDidLoad;
- (void)vui_viewWillAppear:(bool)arg1;
- (void)vui_viewWillDisappear:(bool)arg1;

@end
