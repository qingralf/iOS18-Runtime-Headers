/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Visage.framework/Visage
 */

@interface VGFrameSelectorOptions : NSObject {
    VGBodyPoseGuidanceOptions * _bodyPoseGuidanceOptions;
    bool  _detectFrontPose;
    NSArray * _frontExpressionFilters;
    struct VGFrameSelectorFrustumOffsets { 
        float yawOffsetDegreesLeft; 
        float yawOffsetDegreesRight; 
        float pitchOffsetDegreesTop; 
        float pitchOffsetDegreesBottom; 
    }  _frontPoseFrustumOffsets;
    VGFrameSelectorMarginRatio * _frontPoseMarginRatio;
    NSArray * _pitchAngles;
    NSArray * _pitchExpressionFilters;
    unsigned long long  _pitchFrameCount;
    float  _pitchLimit;
    VGFrameSelectorMarginRatio * _pitchMarginRatio;
    struct VGFrameSelectorFrustumOffsets { 
        float yawOffsetDegreesLeft; 
        float yawOffsetDegreesRight; 
        float pitchOffsetDegreesTop; 
        float pitchOffsetDegreesBottom; 
    }  _pitchPosesFrustumOffsets;
    float  _simpleSelectorMaxOffsetAngle;
    float  _simpleSelectorMinOffsetAngle;
    bool  _useDepthFovFilterForBadAlignment;
    bool  _useSimpleSelector;
    bool  _useVNFaceLandmarksFilter;
    bool  _useVNFilters;
    float  _vnFrontPoseBlinkThreshold;
    NSArray * _yawAngles;
    NSArray * _yawExpressionFilters;
    unsigned long long  _yawFrameCount;
    float  _yawLimit;
    VGFrameSelectorMarginRatio * _yawMarginRatio;
    struct VGFrameSelectorFrustumOffsets { 
        float yawOffsetDegreesLeft; 
        float yawOffsetDegreesRight; 
        float pitchOffsetDegreesTop; 
        float pitchOffsetDegreesBottom; 
    }  _yawPosesFrustumOffsets;
}

@property (nonatomic, retain) VGBodyPoseGuidanceOptions *bodyPoseGuidanceOptions;
@property (nonatomic) bool detectFrontPose;
@property (nonatomic, retain) NSArray *frontExpressionFilters;
@property (nonatomic) struct VGFrameSelectorFrustumOffsets { float x1; float x2; float x3; float x4; } frontPoseFrustumOffsets;
@property (nonatomic, retain) VGFrameSelectorMarginRatio *frontPoseMarginRatio;
@property (nonatomic, retain) NSArray *pitchAngles;
@property (nonatomic, retain) NSArray *pitchExpressionFilters;
@property (nonatomic) unsigned long long pitchFrameCount;
@property (nonatomic) float pitchLimit;
@property (nonatomic, retain) VGFrameSelectorMarginRatio *pitchMarginRatio;
@property (nonatomic) struct VGFrameSelectorFrustumOffsets { float x1; float x2; float x3; float x4; } pitchPosesFrustumOffsets;
@property (nonatomic) float simpleSelectorMaxOffsetAngle;
@property (nonatomic) float simpleSelectorMinOffsetAngle;
@property (nonatomic) bool useDepthFovFilterForBadAlignment;
@property (nonatomic) bool useSimpleSelector;
@property (nonatomic) bool useVNFaceLandmarksFilter;
@property (nonatomic) bool useVNFilters;
@property (nonatomic) float vnFrontPoseBlinkThreshold;
@property (nonatomic, retain) NSArray *yawAngles;
@property (nonatomic, retain) NSArray *yawExpressionFilters;
@property (nonatomic) unsigned long long yawFrameCount;
@property (nonatomic) float yawLimit;
@property (nonatomic, retain) VGFrameSelectorMarginRatio *yawMarginRatio;
@property (nonatomic) struct VGFrameSelectorFrustumOffsets { float x1; float x2; float x3; float x4; } yawPosesFrustumOffsets;

+ (id)optionsWithCaptureOptions:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_setOptionsForFrontPose:(id)arg1;
- (void)_setOptionsForPitchPoses:(id)arg1;
- (void)_setOptionsForYawPoses:(id)arg1;
- (id)bodyPoseGuidanceOptions;
- (bool)detectFrontPose;
- (id)frontExpressionFilters;
- (struct VGFrameSelectorFrustumOffsets { float x1; float x2; float x3; float x4; })frontPoseFrustumOffsets;
- (id)frontPoseMarginRatio;
- (id)pitchAngles;
- (id)pitchExpressionFilters;
- (unsigned long long)pitchFrameCount;
- (float)pitchLimit;
- (id)pitchMarginRatio;
- (struct VGFrameSelectorFrustumOffsets { float x1; float x2; float x3; float x4; })pitchPosesFrustumOffsets;
- (void)setBodyPoseGuidanceOptions:(id)arg1;
- (void)setDetectFrontPose:(bool)arg1;
- (void)setFrontExpressionFilters:(id)arg1;
- (void)setFrontPoseFrustumOffsets:(struct VGFrameSelectorFrustumOffsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setFrontPoseMarginRatio:(id)arg1;
- (void)setPitchAngles:(id)arg1;
- (void)setPitchExpressionFilters:(id)arg1;
- (void)setPitchFrameCount:(unsigned long long)arg1;
- (void)setPitchLimit:(float)arg1;
- (void)setPitchMarginRatio:(id)arg1;
- (void)setPitchPosesFrustumOffsets:(struct VGFrameSelectorFrustumOffsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setSimpleSelectorMaxOffsetAngle:(float)arg1;
- (void)setSimpleSelectorMinOffsetAngle:(float)arg1;
- (void)setUseDepthFovFilterForBadAlignment:(bool)arg1;
- (void)setUseSimpleSelector:(bool)arg1;
- (void)setUseVNFaceLandmarksFilter:(bool)arg1;
- (void)setUseVNFilters:(bool)arg1;
- (void)setVnFrontPoseBlinkThreshold:(float)arg1;
- (void)setYawAngles:(id)arg1;
- (void)setYawExpressionFilters:(id)arg1;
- (void)setYawFrameCount:(unsigned long long)arg1;
- (void)setYawLimit:(float)arg1;
- (void)setYawMarginRatio:(id)arg1;
- (void)setYawPosesFrustumOffsets:(struct VGFrameSelectorFrustumOffsets { float x1; float x2; float x3; float x4; })arg1;
- (float)simpleSelectorMaxOffsetAngle;
- (float)simpleSelectorMinOffsetAngle;
- (bool)useDepthFovFilterForBadAlignment;
- (bool)useSimpleSelector;
- (bool)useVNFaceLandmarksFilter;
- (bool)useVNFilters;
- (float)vnFrontPoseBlinkThreshold;
- (id)yawAngles;
- (id)yawExpressionFilters;
- (unsigned long long)yawFrameCount;
- (float)yawLimit;
- (id)yawMarginRatio;
- (struct VGFrameSelectorFrustumOffsets { float x1; float x2; float x3; float x4; })yawPosesFrustumOffsets;

@end
