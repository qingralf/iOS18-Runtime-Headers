/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VisionKitCore.framework/VisionKitCore
 */

@interface VKCImageTextSelectionView_iOS : VKCImageTextSelectionView <UIDragInteractionDelegate, UIKeyInput, UIScribbleInteractionDelegatePrivate, UITextInput, UITextInputTraits_Private, UITextInteractionDelegate, VKCTextRecognitionResultTextDelegate, VKCTextSelectionLongPressHandlerDelegate, _UITextInputRevealItemProvider, _UITextInputRevealSupportProviding, _UITextInputTranslationSupport> {
    NSArray * _accessibilityElements;
    bool  _beginSelectionChangedCalled;
    UIDragInteraction * _dragInteraction;
    unsigned long long  _draggedRectEdge;
    bool  _initializationComplete;
    <UITextInputDelegate> * _inputDelegate;
    UILongPressGestureRecognizer * _longPressGR;
    VKCTextSelectionLongPressDelegateHandler * _longPressHandler;
    bool  _manuallySettingSelectedRange;
    UITextRange * _markedTextRange;
    NSDictionary * _markedTextStyle;
    VKTextRange * _preSelectionChangeSelectedRange;
    UITextRange * _selectedTextRange;
    long long  _selectionAffinity;
    UITextInteraction * _textInteraction;
    VKCTextPointerTrackingView * _textPointerTrackingView;
    UITextSelectionGrabberSuppressionAssertion * _textSelectionGrabberSuppression;
    UITextInputStringTokenizer * _tokenizer;
    bool  _useFullDocumentRangeForEmptySelection;
}

@property (nonatomic, copy) NSIndexSet *PINEntrySeparatorIndexes; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsDictationSearchResults; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsEmoji; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsFloatingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsInitialEmojiKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsPayloads; /* unknown property attribute: ? */
@property (nonatomic) bool acceptsSplitKeyboard; /* unknown property attribute: ? */
@property (nonatomic, readonly) NSArray *accessibilityElements;
@property unsigned long long allowedWritingToolsResultOptions; /* unknown property attribute: ? */
@property (nonatomic) long long allowsTextAnimationsType; /* unknown property attribute: ? */
@property (nonatomic) long long autocapitalizationType; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *autocorrectionContext; /* unknown property attribute: ? */
@property (nonatomic) long long autocorrectionType; /* unknown property attribute: ? */
@property (nonatomic) bool beginSelectionChangedCalled;
@property (nonatomic, readonly) UITextPosition *beginningOfDocument;
@property (nonatomic) bool contentsIsSingleValue; /* unknown property attribute: ? */
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (nonatomic) bool deferBecomingResponder; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (getter=isDevicePasscodeEntry, nonatomic) bool devicePasscodeEntry; /* unknown property attribute: ? */
@property (nonatomic) bool disableHandwritingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool disableInputBars; /* unknown property attribute: ? */
@property (nonatomic) bool disablePrediction; /* unknown property attribute: ? */
@property (nonatomic) bool displaySecureEditsUsingPlainText; /* unknown property attribute: ? */
@property (nonatomic) bool displaySecureTextUsingPlainText; /* unknown property attribute: ? */
@property (nonatomic, retain) UIDragInteraction *dragInteraction;
@property (nonatomic) unsigned long long draggedRectEdge;
@property (getter=isEditable, nonatomic, readonly) bool editable; /* unknown property attribute: ? */
@property (nonatomic) int emptyContentReturnKeyType; /* unknown property attribute: ? */
@property (nonatomic) bool enablesReturnKeyAutomatically; /* unknown property attribute: ? */
@property (nonatomic) bool enablesReturnKeyOnNonWhiteSpaceContent; /* unknown property attribute: ? */
@property (nonatomic, readonly) UITextPosition *endOfDocument;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } floatingKeyboardEdgeInsets; /* unknown property attribute: ? */
@property (nonatomic) bool forceDefaultDictationInfo; /* unknown property attribute: ? */
@property (nonatomic) long long forceDictationKeyboardType; /* unknown property attribute: ? */
@property (nonatomic) bool forceDisableDictation; /* unknown property attribute: ? */
@property (nonatomic) bool forceEnableDictation; /* unknown property attribute: ? */
@property (nonatomic) bool forceFloatingKeyboard; /* unknown property attribute: ? */
@property (nonatomic) bool forceSpellingDictation; /* unknown property attribute: ? */
@property (nonatomic) bool hasDefaultContents; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool hasText;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hidePrediction; /* unknown property attribute: ? */
@property (getter=isImageBacked, nonatomic, readonly) bool imageBacked;
@property (nonatomic) bool initializationComplete;
@property (nonatomic) long long inlineCompletionType; /* unknown property attribute: ? */
@property (nonatomic) long long inlinePredictionType; /* unknown property attribute: ? */
@property (nonatomic, retain) UIInputContextHistory *inputContextHistory; /* unknown property attribute: ? */
@property (nonatomic) <UITextInputDelegate> *inputDelegate;
@property (nonatomic, readonly) id insertDictationResultPlaceholder; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *insertionPointColor; /* unknown property attribute: ? */
@property (nonatomic) unsigned long long insertionPointWidth; /* unknown property attribute: ? */
@property (nonatomic) bool isCarPlayIdiom; /* unknown property attribute: ? */
@property (nonatomic) bool isSingleLineDocument; /* unknown property attribute: ? */
@property (nonatomic) long long keyboardAppearance; /* unknown property attribute: ? */
@property (nonatomic) long long keyboardType; /* unknown property attribute: ? */
@property (nonatomic) bool learnsCorrections; /* unknown property attribute: ? */
@property (nonatomic) bool loadKeyboardsForSiriLanguage; /* unknown property attribute: ? */
@property (nonatomic, retain) UILongPressGestureRecognizer *longPressGR;
@property (nonatomic, retain) VKCTextSelectionLongPressDelegateHandler *longPressHandler;
@property (nonatomic) bool manuallySettingSelectedRange;
@property (nonatomic, readonly) UITextRange *markedTextRange;
@property (nonatomic, copy) NSDictionary *markedTextStyle;
@property (nonatomic, retain) UIColor *matchHighlightColor; /* unknown property attribute: ? */
@property (nonatomic) long long mathExpressionCompletionType; /* unknown property attribute: ? */
@property (nonatomic, copy) UITextInputPasswordRules *passwordRules; /* unknown property attribute: ? */
@property (nonatomic, retain) VKTextRange *preSelectionChangeSelectedRange;
@property (nonatomic) bool preferOnlineDictation; /* unknown property attribute: ? */
@property (nonatomic) long long preferredKeyboardStyle; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *recentInputIdentifier; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *responseContext; /* unknown property attribute: ? */
@property (nonatomic) bool returnKeyGoesToNextResponder; /* unknown property attribute: ? */
@property (nonatomic) long long returnKeyType; /* unknown property attribute: ? */
@property (getter=isSecureTextEntry, nonatomic) bool secureTextEntry; /* unknown property attribute: ? */
@property (copy) UITextRange *selectedTextRange;
@property (nonatomic) long long selectionAffinity; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionBarColor; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionBorderColor; /* unknown property attribute: ? */
@property (nonatomic) double selectionBorderWidth; /* unknown property attribute: ? */
@property (nonatomic) double selectionCornerRadius; /* unknown property attribute: ? */
@property (nonatomic, retain) UIImage *selectionDragDotImage; /* unknown property attribute: ? */
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } selectionEdgeInsets; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *selectionHighlightColor; /* unknown property attribute: ? */
@property (nonatomic) int shortcutConversionType; /* unknown property attribute: ? */
@property (nonatomic) bool showDictationButton; /* unknown property attribute: ? */
@property (nonatomic) long long smartDashesType; /* unknown property attribute: ? */
@property (nonatomic) long long smartInsertDeleteType; /* unknown property attribute: ? */
@property (nonatomic) long long smartQuotesType; /* unknown property attribute: ? */
@property (nonatomic) long long spellCheckingType; /* unknown property attribute: ? */
@property (readonly) Class superclass;
@property (nonatomic, retain) _UISupplementalLexicon *supplementalLexicon; /* unknown property attribute: ? */
@property (nonatomic, retain) UIImage *supplementalLexiconAmbiguousItemIcon; /* unknown property attribute: ? */
@property (nonatomic) bool supportsAdaptiveImageGlyph; /* unknown property attribute: ? */
@property (nonatomic) bool suppressReturnKeyStyling; /* unknown property attribute: ? */
@property (nonatomic, copy) NSString *textContentType; /* unknown property attribute: ? */
@property (nonatomic, readonly) UIView *textInputView; /* unknown property attribute: ? */
@property (nonatomic, retain) UITextInteraction *textInteraction;
@property (nonatomic) int textLoupeVisibility; /* unknown property attribute: ? */
@property (nonatomic) VKCTextPointerTrackingView *textPointerTrackingView;
@property (nonatomic, readonly) UITextRange *textRangeForServicesInteraction; /* unknown property attribute: ? */
@property (nonatomic) long long textScriptType; /* unknown property attribute: ? */
@property (nonatomic) int textSelectionBehavior; /* unknown property attribute: ? */
@property (nonatomic, retain) UITextSelectionGrabberSuppressionAssertion *textSelectionGrabberSuppression;
@property (nonatomic) id textSuggestionDelegate; /* unknown property attribute: ? */
@property (nonatomic) struct __CFCharacterSet { }*textTrimmingSet; /* unknown property attribute: ? */
@property (nonatomic, retain) UITextInputStringTokenizer *tokenizer;
@property (nonatomic) bool typingAdaptationDisabled; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *underlineColorForSpelling; /* unknown property attribute: ? */
@property (nonatomic, retain) UIColor *underlineColorForTextAlternatives; /* unknown property attribute: ? */
@property (nonatomic) bool useAutomaticEndpointing; /* unknown property attribute: ? */
@property (nonatomic) bool useFullDocumentRangeForEmptySelection;
@property (nonatomic) bool useInterfaceLanguageForLocalization; /* unknown property attribute: ? */
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } validTextRange; /* unknown property attribute: ? */
@property (nonatomic, readonly) bool wasEverSecureTextEntry; /* unknown property attribute: ? */
@property unsigned long long writingToolsAllowedInputOptions; /* unknown property attribute: ? */
@property long long writingToolsBehavior; /* unknown property attribute: ? */

+ (bool)processHasSnapshotDragEntitlement;

- (void).cxx_destruct;
- (id)_accessibilityUserTestingChildren;
- (void)_addShortcut:(id)arg1;
- (long long)_availableTextServices;
- (void)_define:(id)arg1;
- (void)_lookup:(id)arg1;
- (id)_pointerInteractionDelegate;
- (id)_rvItemForSelectedRange;
- (id)_rvItemInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (bool)_scribbleInteractionShouldDisableInputAssistant:(id)arg1;
- (void)_share:(id)arg1;
- (id)_textImageFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_textInputForReveal;
- (id)_textRangeForActions;
- (void)_translate:(id)arg1;
- (id)accessibilityElements;
- (bool)becomeFirstResponder;
- (void)beginSelectionChange;
- (bool)beginSelectionChangedCalled;
- (id)beginningOfDocument;
- (bool)canBecomeFirstResponder;
- (void)commonInit;
- (void)copy:(id)arg1;
- (unsigned long long)currentDraggedRectEdge;
- (void)deleteBackward;
- (void)didLongPress:(id)arg1;
- (id)dragInteraction;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (unsigned long long)draggedRectEdge;
- (unsigned long long)draggedRectEdgeForTextRecognitionResult:(id)arg1;
- (id)endOfDocument;
- (void)endSelectionChange;
- (bool)hasText;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)initializationComplete;
- (id)inputDelegate;
- (void)insertText:(id)arg1;
- (bool)interactionShouldBegin:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (bool)isEditable;
- (bool)isEditing;
- (bool)isImageBacked;
- (id)longPressGR;
- (id)longPressHandler;
- (bool)longPressHandler:(id)arg1 gestureRecognizer:(id)arg2 shouldRecieveTouch:(id)arg3;
- (bool)longPressHandler:(id)arg1 gestureRecognizer:(id)arg2 shouldRequireFailureOfGestureRecognizer:(id)arg3;
- (bool)manuallySettingSelectedRange;
- (id)markedTextRange;
- (id)markedTextStyle;
- (id)preSelectionChangeSelectedRange;
- (id)preSelectionChangeSelectedRangeForTextRecognitionResult:(id)arg1;
- (void)presentShareSheetForCustomStrings:(id)arg1 attributedString:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (bool)scribbleInteraction:(id)arg1 shouldBeginAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)selectAll:(id)arg1;
- (bool)selectable;
- (id)selectedRangeForTextRecognitionResult:(id)arg1;
- (id)selectedTextPathsConvertedToView:(id)arg1;
- (id)selectedTextRange;
- (id)selectedVKRange;
- (long long)selectionAffinity;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (void)setBeginSelectionChangedCalled:(bool)arg1;
- (void)setContentsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setDragInteraction:(id)arg1;
- (void)setDraggedRectEdge:(unsigned long long)arg1;
- (void)setHidden:(bool)arg1;
- (void)setInitializationComplete:(bool)arg1;
- (void)setInputDelegate:(id)arg1;
- (void)setLongPressDataDetectorsInTextMode:(bool)arg1;
- (void)setLongPressGR:(id)arg1;
- (void)setLongPressHandler:(id)arg1;
- (void)setManuallySettingSelectedRange:(bool)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setMarkedTextStyle:(id)arg1;
- (void)setPreSelectionChangeSelectedRange:(id)arg1;
- (void)setRecognitionResult:(id)arg1;
- (void)setSelectedTextRange:(id)arg1;
- (void)setSelectedVKRange:(id)arg1;
- (void)setSelectionAffinity:(long long)arg1;
- (void)setTextInteraction:(id)arg1;
- (void)setTextPointerTrackingView:(id)arg1;
- (void)setTextSelectionGrabberSuppression:(id)arg1;
- (void)setTokenizer:(id)arg1;
- (void)setUseFullDocumentRangeForEmptySelection:(bool)arg1;
- (void)suppressSelectionViewGrabbers;
- (void)takeTraitsFrom:(id)arg1;
- (id)targetedDragPreviewForCurrentSelection;
- (id)targetedDragPreviewWithLabelsForCurrentSelection;
- (id)text;
- (id)textInputView;
- (id)textInteraction;
- (id)textPointerTrackingView;
- (id)textRangeForServicesInteraction;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)textSelectionGrabberSuppression;
- (id)tokenizer;
- (void)unmarkText;
- (void)unsuppressSelectionViewGrabbers;
- (void)updateSelectionRectsForWindowChange;
- (bool)useFullDocumentRangeForEmptySelection;
- (void)useInteractionOptions:(unsigned long long)arg1;

@end
