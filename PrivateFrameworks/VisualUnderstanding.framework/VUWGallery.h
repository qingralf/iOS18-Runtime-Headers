/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VisualUnderstanding.framework/VisualUnderstanding
 */

@interface VUWGallery : NSObject {
    void gallery;
}

- (void).cxx_destruct;
- (long long)assetCountForType:(long long)arg1;
- (id)init;
- (id)initWithPath:(id)arg1 error:(id*)arg2;
- (bool)personalizeEmbeddingLayer:(id*)arg1 index:(long long)arg2 observation:(id)arg3 context:(id)arg4 type:(long long)arg5 boundingBox:(id)arg6 error:(id*)arg7;
- (bool)personalizeEmbeddingLayer:(id*)arg1 index:(long long)arg2 observation:(id)arg3 context:(id)arg4 type:(long long)arg5 error:(id*)arg6;
- (bool)personalizeEmbeddingLayer:(id*)arg1 index:(long long)arg2 observation:(id)arg3 context:(id)arg4 type:(long long)arg5 randomizeWithSeed:(long long)arg6 error:(id*)arg7;
- (bool)personalizeEmbeddingLayer:(id*)arg1 index:(long long)arg2 observation:(id)arg3 type:(long long)arg4 options:(id)arg5 error:(id*)arg6;
- (bool)personalizeEmbeddingLayer:(id*)arg1 index:(long long)arg2 tag:(id)arg3 client:(long long)arg4 type:(long long)arg5 boundingBox:(id)arg6 error:(id*)arg7;
- (bool)personalizeEmbeddingLayer:(id*)arg1 index:(long long)arg2 tag:(id)arg3 client:(long long)arg4 type:(long long)arg5 error:(id*)arg6;
- (bool)personalizeEmbeddingLayer:(id*)arg1 index:(long long)arg2 tag:(id)arg3 client:(long long)arg4 type:(long long)arg5 options:(id)arg6 error:(id*)arg7;
- (bool)personalizeEmbeddingLayer:(id*)arg1 index:(long long)arg2 tag:(id)arg3 client:(long long)arg4 type:(long long)arg5 randomizeWithSeed:(long long)arg6 error:(id*)arg7;
- (bool)prewarmAndReturnError:(id*)arg1;
- (bool)resetForType:(long long)arg1 error:(id*)arg2;
- (id)tokenEmbeddingsForObservation:(id)arg1 type:(long long)arg2 error:(id*)arg3;
- (id)tokenEmbeddingsForTag:(id)arg1 client:(long long)arg2 type:(long long)arg3 error:(id*)arg4;
- (bool)updateForType:(long long)arg1 withVectorStore:(id)arg2 force:(bool)arg3 progressHandler:(id /* block */)arg4 error:(id*)arg5;
- (bool)updateForType:(long long)arg1 withVectorStore:(id)arg2 mode:(long long)arg3 progressHandler:(id /* block */)arg4 error:(id*)arg5;
- (bool)updateForType:(long long)arg1 withVectorStore:(id)arg2 progressHandler:(id /* block */)arg3 error:(id*)arg4;
- (bool)updatePlugin:(long long)arg1 progressHandler:(id /* block */)arg2 error:(id*)arg3;

@end
