/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WatchListKit.framework/WatchListKit
 */

@interface WLKSystemPreferencesStore : NSObject {
    NSObject<OS_dispatch_queue> * _accessQueue;
    NSUserDefaults * _defaultsAccessor;
    int  _preferencesDidChangeNotificationToken;
}

@property (nonatomic, copy) NSString *audioLanguageCode;
@property (nonatomic, readonly) NSString *audioLanguageCodeIncludingSentinel;
@property (nonatomic, copy) NSString *cellularQualityDownload;
@property (nonatomic, copy) NSString *cellularQualityPlayback;
@property (nonatomic) bool downloadsCompatibleWithAVAdapter;
@property (nonatomic) bool hasAVAdapterEvenBeenConnected;
@property (nonatomic) bool postPlayAutoPlayNextVideo;
@property (nonatomic, copy) NSNumber *preferredPlaybackDimensionality;
@property (nonatomic) bool privateModeEnabled;
@property (nonatomic, copy) NSString *purchaseResolution;
@property (nonatomic, copy) NSArray *selectedAudioLanguagesDownload;
@property (nonatomic) bool sportsScoreSpoilersAllowed;
@property (nonatomic, copy) NSArray *subtitleAudioLanguagesDownload;
@property (nonatomic) bool subtitleDefaultLanguageEnabledDownload;
@property (nonatomic, copy) NSArray *supplementaryAvailableAudioLanguages;
@property (nonatomic) bool upNextLockupsUseCoverArt;
@property (nonatomic) bool useCellularDataDownload;
@property (nonatomic) bool useCellularDataPlayback;
@property (nonatomic, copy) NSString *wifiQualityDownload;
@property (nonatomic, copy) NSString *wifiQualityPlayback;

+ (void)_synchronizeSettingsDefaultsForKeys:(id)arg1;
+ (bool)isSystemPreferencesStoreInitializing;
+ (id)sharedPreferences;

- (void).cxx_destruct;
- (id)_getPreferencesValue:(id)arg1 fallbackValue:(id)arg2;
- (void)_publishCrossProcessPreferencesChangedNotification;
- (void)_setDefaultsValue:(id)arg1 key:(id)arg2 syncNPS:(bool)arg3;
- (void)_setPreferencesValue:(id)arg1 forKey:(id)arg2;
- (id)audioLanguageCode;
- (id)audioLanguageCodeIncludingSentinel;
- (id)cellularQualityDownload;
- (id)cellularQualityPlayback;
- (void)dealloc;
- (bool)downloadsCompatibleWithAVAdapter;
- (bool)hasAVAdapterEvenBeenConnected;
- (bool)hasPostPlayAutoPlayNextVideoPreferences;
- (id)init;
- (void)migratePrivateModeFromDiskIfNeeded:(id)arg1;
- (void)migrateSportsSpoilersFromDiskIfNeeded:(id)arg1;
- (bool)postPlayAutoPlayNextVideo;
- (id)preferredPlaybackDimensionality;
- (bool)privateModeEnabled;
- (id)purchaseResolution;
- (void)removePostPlayAutoPlayNextVideoPreferences;
- (id)selectedAudioLanguagesDownload;
- (void)setAudioLanguageCode:(id)arg1;
- (void)setCellularQualityDownload:(id)arg1;
- (void)setCellularQualityPlayback:(id)arg1;
- (void)setDownloadsCompatibleWithAVAdapter:(bool)arg1;
- (void)setHasAVAdapterEvenBeenConnected:(bool)arg1;
- (void)setPostPlayAutoPlayNextVideo:(bool)arg1;
- (void)setPreferredPlaybackDimensionality:(id)arg1;
- (void)setPrivateModeEnabled:(bool)arg1;
- (void)setPurchaseResolution:(id)arg1;
- (void)setSelectedAudioLanguagesDownload:(id)arg1;
- (void)setSportsScoreSpoilersAllowed:(bool)arg1;
- (void)setSubtitleAudioLanguagesDownload:(id)arg1;
- (void)setSubtitleDefaultLanguageEnabledDownload:(bool)arg1;
- (void)setSupplementaryAvailableAudioLanguages:(id)arg1;
- (void)setUpNextLockupsUseCoverArt:(bool)arg1;
- (void)setUseCellularDataDownload:(bool)arg1;
- (void)setUseCellularDataPlayback:(bool)arg1;
- (void)setWifiQualityDownload:(id)arg1;
- (void)setWifiQualityPlayback:(id)arg1;
- (bool)sportsScoreSpoilersAllowed;
- (id)subtitleAudioLanguagesDownload;
- (bool)subtitleDefaultLanguageEnabledDownload;
- (id)supplementaryAvailableAudioLanguages;
- (bool)upNextLockupsUseCoverArt;
- (bool)useCellularDataDownload;
- (bool)useCellularDataPlayback;
- (id)wifiQualityDownload;
- (id)wifiQualityPlayback;

@end
