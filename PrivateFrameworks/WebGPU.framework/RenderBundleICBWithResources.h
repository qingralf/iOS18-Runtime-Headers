/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebGPU.framework/WebGPU
 */

@interface RenderBundleICBWithResources : NSObject {
    unsigned long long  _cullMode;
    <MTLRenderPipelineState> * _currentPipelineState;
    float  _depthBias;
    float  _depthBiasClamp;
    float  _depthBiasSlopeScale;
    unsigned long long  _depthClipMode;
    <MTLDepthStencilState> * _depthStencilState;
    <MTLBuffer> * _fragmentDynamicOffsetsBuffer;
    unsigned long long  _frontFace;
    <MTLIndirectCommandBuffer> * _indirectCommandBuffer;
    <MTLBuffer> * _indirectCommandBufferContainer;
    struct HashMap<unsigned long long, WebGPU::IndexBufferAndIndexData, WTF::DefaultHash<unsigned long long>, WTF::UnsignedWithZeroKeyHashTraits<unsigned long long>, WTF::HashTraits<WebGPU::IndexBufferAndIndexData>, WTF::HashTableTraits> { 
        struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, WebGPU::IndexBufferAndIndexData>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, WebGPU::IndexBufferAndIndexData>>, WTF::DefaultHash<unsigned long long>, WTF::HashMap<unsigned long long, WebGPU::IndexBufferAndIndexData, WTF::DefaultHash<unsigned long long>, WTF::UnsignedWithZeroKeyHashTraits<unsigned long long>>::KeyValuePairTraits, WTF::UnsignedWithZeroKeyHashTraits<unsigned long long>> { 
            union { 
                void *m_table; 
                unsigned int *m_tableForLLDB; 
            } ; 
        } m_impl; 
    }  _minVertexCountForDrawCommand;
    const void * _pipeline;
    struct Vector<WebGPU::BindableResources, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { 
        struct BindableResources {} *m_buffer; 
        unsigned int m_capacity; 
        unsigned int m_size; 
    }  _resources;
}

@property (nonatomic, readonly) unsigned long long cullMode;
@property (nonatomic, readonly) <MTLRenderPipelineState> *currentPipelineState;
@property (nonatomic, readonly) float depthBias;
@property (nonatomic, readonly) float depthBiasClamp;
@property (nonatomic, readonly) float depthBiasSlopeScale;
@property (nonatomic, readonly) unsigned long long depthClipMode;
@property (nonatomic, readonly) <MTLDepthStencilState> *depthStencilState;
@property (nonatomic, readonly) <MTLBuffer> *fragmentDynamicOffsetsBuffer;
@property (nonatomic, readonly) unsigned long long frontFace;
@property (nonatomic, readonly) <MTLIndirectCommandBuffer> *indirectCommandBuffer;
@property (nonatomic, readonly) <MTLBuffer> *indirectCommandBufferContainer;
@property (nonatomic, readonly) const void*pipeline;

- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)cullMode;
- (id)currentPipelineState;
- (float)depthBias;
- (float)depthBiasClamp;
- (float)depthBiasSlopeScale;
- (unsigned long long)depthClipMode;
- (id)depthStencilState;
- (id)fragmentDynamicOffsetsBuffer;
- (unsigned long long)frontFace;
- (id)indirectCommandBuffer;
- (id)indirectCommandBufferContainer;
- (id)initWithICB:(id)arg1 containerBuffer:(id)arg2 pipelineState:(id)arg3 depthStencilState:(id)arg4 cullMode:(unsigned long long)arg5 frontFace:(unsigned long long)arg6 depthClipMode:(unsigned long long)arg7 depthBias:(float)arg8 depthBiasSlopeScale:(float)arg9 depthBiasClamp:(float)arg10 fragmentDynamicOffsetsBuffer:(id)arg11 pipeline:(const void*)arg12 minVertexCounts:(void*)arg13;
- (void*)minVertexCountForDrawCommand;
- (const void*)pipeline;
- (void*)resources;

@end
