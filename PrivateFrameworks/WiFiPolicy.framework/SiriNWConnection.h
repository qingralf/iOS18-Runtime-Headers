/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WiFiPolicy.framework/WiFiPolicy
 */

@interface SiriNWConnection : NSObject {
    NSObject<OS_nw_activity> * _activity;
    NSArray * _attemptedEndpoints;
    unsigned long long  _betterPathAvailableNotificationMachTime;
    NSObject<OS_nw_connection> * _connection;
    NSString * _connectionId;
    NSObject<OS_dispatch_source> * _connectionUnviableTimer;
    NSObject<OS_nw_content_context> * _content_context;
    NSDate * _dateToDisable;
    NSObject<OS_nw_endpoint> * _endpoint;
    int  _interfaceIndex;
    bool  _isCanceled;
    bool  _isEstablishing;
    bool  _isReady;
    NSError * _mostRecentErrorFromNWConnection;
    unsigned int  _network_traffic_class;
    id /* block */  _openCompletion;
    NSObject<OS_dispatch_source> * _openTimer;
    long long  _probeLabel;
    NSObject<OS_dispatch_queue> * _queue;
    unsigned long long  _readWriteCounter;
    NSString * _reason;
    NSString * _resolvedHost;
    NSObject<OS_dispatch_source> * _staleConnectionTimer;
    NSURL * _url;
    bool  _usingTLS;
    id /* block */  _wfcompletion;
}

- (void).cxx_destruct;
- (void)_cancelOpenTimer;
- (void)_closeWithError:(id)arg1;
- (void)_configureConnection:(id)arg1;
- (id)_getAttemptedEndpoints;
- (void)_getNWConnectionWithInitialData:(id)arg1 completion:(id /* block */)arg2;
- (void)_invokeOpenCompletionWithError:(id)arg1;
- (id)_queue;
- (id)_setParametersForHost:(const char *)arg1 useTLS:(bool)arg2 initialPayload:(id)arg3;
- (void)_setupOpenTimer;
- (void)close;
- (void)dealloc;
- (bool)hasActiveConnection;
- (id)initWithQueueAndCompletion:(id)arg1 reason:(id)arg2 callback:(id /* block */)arg3;
- (void)openConnectionForURL:(id)arg1 withConnectionId:(id)arg2 initialPayload:(id)arg3 completion:(id /* block */)arg4;
- (id)resolvedHost;
- (void)runSiriProbeWithDepth:(long long)arg1 trafficClass:(unsigned int)arg2;

@end
