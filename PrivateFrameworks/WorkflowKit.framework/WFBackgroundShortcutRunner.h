/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit
 */

@interface WFBackgroundShortcutRunner : NSObject <NSXPCListenerDelegate, WFActionParameterInputProvider, WFAssessmentModeManagerDelegate, WFBackgroundShortcutRunnerStateMachineDelegate, WFOutOfProcessWorkflowControllerVendor, WFRemoteQuarantinePolicyEvaluatorDelegate, WFRunningProgressSuppressionStateMachineDelegate, WFUIPresenterDelegate, WFUserInterfaceHost, WFWorkflowControllerDelegate> {
    VCAccessSpecifier * _accessSpecifier;
    NSMutableDictionary * _actionReversalStates;
    WFAssessmentModeManager * _assessmentModeManager;
    id /* block */  _completionBlock;
    WFRemoteExecutionRunRequest * _currentRemoteExecutionRunRequest;
    WFWorkflowRunRequest * _currentRunRequest;
    WFWorkflowRunningContext * _currentRunningContext;
    WFWorkflowReference * _currentRunningWorkflowReference;
    NSSet * _dataVaultFileURLs;
    WFDialogTransformer * _dialogTransformer;
    long long  _environment;
    NSObject<OS_dispatch_group> * _exitTaskGroup;
    WFRemoteExecutionFileCoordinator * _fileCoordinator;
    bool  _isPersonalAutomation;
    int  _lockFileFD;
    NSObject<OS_dispatch_queue> * _queue;
    WFRemoteExecutionCoordinator * _remoteExecutionCoordinator;
    WFWorkflowRunEvent * _runEvent;
    bool  _runningProgressSuppressionMachineResolvedAndDeniedProgress;
    WFRunningProgressSuppressionStateMachine * _runningProgressSuppressionStateMachine;
    WFBackgroundShortcutRunnerStateMachine * _stateMachine;
    NSObject<OS_os_transaction> * _transaction;
    WFWorkflowController * _workflowController;
    NSXPCConnection * _xpcConnection;
}

@property (nonatomic, retain) VCAccessSpecifier *accessSpecifier;
@property (nonatomic, retain) NSMutableDictionary *actionReversalStates;
@property (nonatomic, readonly, copy) NSArray *airPlayRouteIDs; /* unknown property attribute: ? */
@property (nonatomic, readonly) WFAssessmentModeManager *assessmentModeManager;
@property (nonatomic, copy) id /* block */ completionBlock;
@property (nonatomic, retain) WFRemoteExecutionRunRequest *currentRemoteExecutionRunRequest;
@property (nonatomic, retain) WFWorkflowRunRequest *currentRunRequest;
@property (nonatomic, retain) WFWorkflowRunningContext *currentRunningContext;
@property (nonatomic, retain) WFWorkflowReference *currentRunningWorkflowReference;
@property (nonatomic, readonly) WFHarnessTestCase *currentTestCase;
@property (nonatomic, copy) NSSet *dataVaultFileURLs;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) WFDialogTransformer *dialogTransformer;
@property (nonatomic, readonly) long long environment;
@property (nonatomic, readonly) long long executionContext; /* unknown property attribute: ? */
@property (nonatomic, readonly) NSObject<OS_dispatch_group> *exitTaskGroup;
@property (nonatomic, retain) WFRemoteExecutionFileCoordinator *fileCoordinator;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isPersonalAutomation;
@property (nonatomic) int lockFileFD;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) WFRemoteExecutionCoordinator *remoteExecutionCoordinator;
@property (nonatomic, retain) WFWorkflowRunEvent *runEvent;
@property (nonatomic) bool runningProgressSuppressionMachineResolvedAndDeniedProgress;
@property (nonatomic, readonly) WFBackgroundShortcutRunnerStateMachine *stateMachine;
@property (readonly) Class superclass;
@property (getter=isTesting, nonatomic, readonly) bool testing;
@property (nonatomic, retain) NSObject<OS_os_transaction> *transaction;
@property (nonatomic, readonly) NSString *userInterfaceType;
@property (nonatomic, retain) WFWorkflowController *workflowController;
@property (nonatomic, retain) NSXPCConnection *xpcConnection;

- (void).cxx_destruct;
- (id)accessSpecifier;
- (bool)action:(id)arg1 canProvideInputForParameter:(id)arg2;
- (void)action:(id)arg1 provideInputForParameters:(id)arg2 withDefaultStates:(id)arg3 prompts:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)actionReversalStates;
- (id)airPlayRouteIDs;
- (bool)allowIncomingRunRequest:(id)arg1 withDescriptor:(id)arg2 accessSpecifier:(id)arg3 record:(id)arg4;
- (void)applicationWillLaunchInForeground;
- (id)assessmentModeActiveError;
- (id)assessmentModeManager;
- (void)assessmentModeManagerDidBecomeActive:(id)arg1;
- (void)callWorkflowRunningCompletionBlockWithResult:(id)arg1;
- (id /* block */)completionBlock;
- (oneway void)computeFinderResizedSizesForImages:(id)arg1 inSizes:(id)arg2 completion:(id /* block */)arg3;
- (void)configureIntent:(id)arg1;
- (id)contextForAction:(id)arg1;
- (id)createTestSiriUIPresenterInterfaceForTestCase:(id)arg1;
- (id)createTestUIPresenterInterfaceForTestCase:(id)arg1;
- (id)currentRemoteExecutionRunRequest;
- (id)currentRunRequest;
- (id)currentRunningContext;
- (id)currentRunningWorkflowReference;
- (id)currentTestCase;
- (id)dataVaultFileURLs;
- (void)demoteSharedTemporaryDirectoryLock;
- (id)dialogTransformer;
- (void)didFinishActionWithIdentifier:(id)arg1;
- (void)didStartActionWithIdentifier:(id)arg1;
- (void)dismissPresentedContentWithCompletionHandler:(id /* block */)arg1;
- (long long)environment;
- (void)evaluateRemoteQuarantinePolicyForWorkflow:(id)arg1 workflowReference:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (long long)executionContext;
- (id)exitTaskGroup;
- (oneway void)extractVariableContentFromEncodedReference:(id)arg1 forEncodedExpectedType:(id)arg2 completionHandler:(id /* block */)arg3;
- (oneway void)fetchAvailableParameterStatesForEncodedValueSetDefinition:(id)arg1 searchTerm:(id)arg2 forEncodedToolInvocation:(id)arg3 completionHandler:(id /* block */)arg4;
- (oneway void)fetchDisplayValueForRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (oneway void)fetchToolInvocationSummaryForInvocation:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)fileCoordinator;
- (void)filterContextualActions:(id)arg1 forContext:(id)arg2 completion:(id /* block */)arg3;
- (void)finishRunningWithResult:(id)arg1;
- (void)getContextualActionsForContext:(id)arg1 completion:(id /* block */)arg2;
- (oneway void)getCurrentProgressCompletedWithCompletionHandler:(id /* block */)arg1;
- (void)getEnvironmentForLinkViewSnippetWithCompletion:(id /* block */)arg1;
- (void)getPreferredSizeForLinkViewSnippetWithCompletion:(id /* block */)arg1;
- (void)handleAppProtectionRequestWithBundleIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (oneway void)handleIncomingFileForRemoteExecutionWithURL:(id)arg1 withIdentifier:(id)arg2;
- (void)handleTestingEventIfTesting:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)initWithProcessPolicy:(unsigned long long)arg1;
- (bool)initializeSharedTemporaryDirectoryLock;
- (oneway void)injectContentAsVariable:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)isInRemoteExecutionEnvironment;
- (bool)isPersonalAutomation;
- (bool)isRunningWithExternalUI;
- (bool)isRunningWithSiriUI;
- (bool)isRunningWithToolKitClient;
- (bool)isStepwiseExecution;
- (bool)isTesting;
- (bool)launchAppToContinueFromState:(id)arg1 runSource:(id)arg2 withCompletion:(id /* block */)arg3;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (int)lockFileFD;
- (id)metricsRunSourceFromEnvironment:(long long)arg1 runSource:(id)arg2;
- (void)openURL:(id)arg1 withBundleIdentifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (oneway void)pauseWorkflowAndWriteStateToDisk:(id)arg1;
- (oneway void)performQuery:(id)arg1 inValueSet:(id)arg2 toolInvocation:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)performSiriRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)performWithHost:(id /* block */)arg1;
- (void)performWithRunningProgressSuppressionStateMachine:(id /* block */)arg1;
- (void)presentAlert:(id)arg1;
- (void)presentAlertWithSmartPromptConfiguration:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)presenterRequestedUpdatedRunViewSource:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)presenterRequestedWorkflowPauseForContext:(id)arg1 dialogRequest:(id)arg2;
- (void)presenterRequestedWorkflowStopForContext:(id)arg1;
- (void)presenterWillShowRequest:(id)arg1 runningContext:(id)arg2;
- (void)prewarmRunnerWithCompletion:(id /* block */)arg1;
- (bool)progressIsPersistentInSystemAperture;
- (bool)promoteSharedTemporaryDirectoryLock;
- (id)queue;
- (id)queue_runningProgressSuppressionStateMachine;
- (oneway void)reindexToolKitDatabaseWithRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)remoteDialogPresenterEndpointForController:(id)arg1;
- (id)remoteExecutionCoordinator;
- (void)requestActionInterfacePresentationForActionClassName:(id)arg1 classNamesByType:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)requestAuthorizationWithConfiguration:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)requestFileAccessForURLs:(id)arg1 workflowName:(id)arg2 workflowID:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)requestedFromAnotherDevice;
- (bool)requestedInHomeResident;
- (oneway void)resolveDeferredValueFromEncodedStorage:(id)arg1 forEncodedExpectedType:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)resolveDescriptor:(id)arg1 completionHandler:(id /* block */)arg2;
- (oneway void)resumeRunningFromContext:(id)arg1 withRequest:(id)arg2 completion:(id /* block */)arg3;
- (oneway void)runActionFromRunRequestData:(id)arg1 runningContext:(id)arg2 completion:(id /* block */)arg3;
- (id)runEvent;
- (bool)runRequestIsContextualAction;
- (bool)runRequestOriginatedFromLocalSiri;
- (oneway void)runToolWithInvocation:(id)arg1;
- (oneway void)runWorkflowWithDescriptor:(id)arg1 request:(id)arg2 inEnvironment:(id)arg3 runningContext:(id)arg4 completion:(id /* block */)arg5;
- (void)runnerStateMachine:(id)arg1 didFinishRunningShortcutWithResult:(id)arg2;
- (void)runnerStateMachine:(id)arg1 didRequestStoppingShortcutWithError:(id)arg2;
- (void)runnerStateMachineDidRequestProcessExit:(id)arg1;
- (bool)runningProgressSuppressionMachineResolvedAndDeniedProgress;
- (void)runningProgressSuppressionStateMachine:(id)arg1 didDecideRunningProgressIsAllowed:(bool)arg2 dialogAttribution:(id)arg3;
- (void)sendDialogRequestForParameter:(id)arg1 action:(id)arg2 dialogRequest:(id)arg3 completion:(id /* block */)arg4;
- (void)sendRemoteAskWhenRunRequestWithParameters:(id)arg1 action:(id)arg2 completion:(id /* block */)arg3;
- (void)sendResponseForRunRequest:(id)arg1 controller:(id)arg2 error:(id)arg3 completion:(id /* block */)arg4;
- (void)setAccessSpecifier:(id)arg1;
- (void)setActionReversalStates:(id)arg1;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setCurrentRemoteExecutionRunRequest:(id)arg1;
- (void)setCurrentRunRequest:(id)arg1;
- (void)setCurrentRunningContext:(id)arg1;
- (void)setCurrentRunningWorkflowReference:(id)arg1;
- (void)setDataVaultFileURLs:(id)arg1;
- (void)setDialogTransformer:(id)arg1;
- (void)setFileCoordinator:(id)arg1;
- (void)setIsPersonalAutomation:(bool)arg1;
- (void)setLockFileFD:(int)arg1;
- (void)setRemoteExecutionCoordinator:(id)arg1;
- (void)setRunEvent:(id)arg1;
- (void)setRunningProgressSuppressionMachineResolvedAndDeniedProgress:(bool)arg1;
- (void)setTransaction:(id)arg1;
- (void)setWorkflowController:(id)arg1;
- (void)setXpcConnection:(id)arg1;
- (bool)shortcutShouldShowRunningProgress;
- (bool)shouldNotHandoff;
- (void)shouldRunFollowUpActionWithBundleIdentifier:(id)arg1 actionIdentifier:(id)arg2 parameterValues:(id)arg3 encodedToolInvocation:(id)arg4 showOutputActionOptions:(unsigned long long)arg5 completionHandler:(id /* block */)arg6;
- (void)showChronoControlOfType:(unsigned long long)arg1 identity:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)showConfirmInteraction:(id)arg1 prompt:(id)arg2 requireAuthentication:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)showHandleInteraction:(id)arg1 prompt:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)showLinkActionConfirmationWithActionMetadata:(id)arg1 showPrompt:(bool)arg2 dialog:(id)arg3 dialogString:(id)arg4 viewSnippet:(id)arg5 confirmationActionName:(id)arg6 isContinueInAppRequest:(bool)arg7 systemStyle:(id)arg8 completionHandler:(id /* block */)arg9;
- (void)showLinkParameterConfirmationWithActionMetadata:(id)arg1 dialog:(id)arg2 dialogString:(id)arg3 viewSnippet:(id)arg4 parameterValue:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)showLinkResult:(id)arg1 dialog:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)showPreviewForContentCollection:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)siriOptions;
- (id)stateMachine;
- (void)stepWithAction:(id)arg1;
- (oneway void)stopWithError:(id)arg1;
- (void)synchronouslyPerformWithHost:(id /* block */)arg1;
- (void)synchronouslyPerformWithRunningProgressSuppressionStateMachine:(id /* block */)arg1;
- (id)testingHarnessErrorForWorkflowFinishedError:(id)arg1;
- (id)transaction;
- (void)unaliveProcess;
- (oneway void)updateRunViewSource:(id)arg1;
- (id)userInterfaceForWorkflowController:(id)arg1;
- (id)userInterfaceToPresentAlertForEvaluator:(id)arg1;
- (id)userInterfaceType;
- (id)workflowController;
- (void)workflowController:(id)arg1 actionDidRequestWorkflowExit:(id)arg2;
- (id)workflowController:(id)arg1 actionReversalStateForAction:(id)arg2;
- (void)workflowController:(id)arg1 didDecideRunningProgressIsAllowed:(bool)arg2 forAction:(id)arg3;
- (void)workflowController:(id)arg1 didFinishRunningWithError:(id)arg2 cancelled:(bool)arg3;
- (void)workflowController:(id)arg1 didGenerateReversalState:(id)arg2 forAction:(id)arg3;
- (void)workflowController:(id)arg1 didRunAction:(id)arg2 error:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)workflowController:(id)arg1 handleTestingEvent:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)workflowController:(id)arg1 handleUnsupportedEnvironmentForAction:(id)arg2 currentState:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)workflowController:(id)arg1 handleUnsupportedUserInterfaceForAction:(id)arg2 currentState:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)workflowController:(id)arg1 parameterInputProviderForAction:(id)arg2;
- (void)workflowController:(id)arg1 prepareToRunAction:(id)arg2 withInput:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)workflowController:(id)arg1 requestToQuarantineWorkflow:(id)arg2;
- (bool)workflowControllerIsTesting:(id)arg1;
- (void)workflowControllerWillRun:(id)arg1;
- (id)workflowForTesting;
- (id)xpcConnection;

@end
