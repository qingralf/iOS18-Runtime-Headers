/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WorkflowResponsiveness.framework/WorkflowResponsiveness
 */

@interface WRWorkflowEventTracker : NSObject {
    NSMutableArray * _allSignpostTrackersMutable;
    NSMutableArray * _candidateEndSignpostTrackers;
    NSMutableArray * _concurrentEvents;
    WRSignpost * _endSignpost;
    NSError * _error;
    id /* block */  _eventCompletionCallback;
    WRTimestampAndThread * _eventEnd;
    NSString * _eventIdentifier;
    WRTimestampAndThread * _eventStart;
    bool  _ignoreEventTimeouts;
    NSMutableDictionary * _nonPublicFields;
    unsigned long long  _numHandledSignposts;
    unsigned long long  _numOutsideSignposts;
    unsigned long long  _numUnhandledSignposts;
    NSMutableArray * _openIndividuatedIntervalsWithFieldNameMatchingAnEndSignpostFromBeforeEventStart;
    WRSignpost * _startSignpost;
    NSObject<OS_dispatch_queue> * _timeoutQueue;
    NSObject<OS_dispatch_source> * _timeoutSource;
    WRWorkflow * _workflow;
}

@property (readonly) NSArray *allSignpostTrackers;
@property (readonly) WRSignpost *endSignpost;
@property (readonly) NSMutableDictionary *environment;
@property (readonly) NSError *error;
@property (readonly) WRTimestampAndThread *eventEnd;
@property (readonly) NSString *eventIdentifier;
@property (readonly) WRTimestampAndThread *eventStart;
@property bool ignoreEventTimeouts;
@property (retain) NSMutableDictionary *nonPublicFields;
@property (readonly) unsigned long long numHandledSignposts;
@property (readonly) unsigned long long numOutsideSignposts;
@property (readonly) unsigned long long numUnhandledSignposts;
@property (readonly) WRSignpost *startSignpost;
@property (readonly) WRWorkflow *workflow;

+ (void)cleanupWorkflowResponsivenessDiagnosticsDirectory;

- (void).cxx_destruct;
- (id)allSignpostTrackers;
- (id)debugDescription;
- (void)doneHandlingSignpostsWithEndTimeMachContNs:(unsigned long long)arg1;
- (id)encodedDict;
- (id)encodedStringWithError:(id*)arg1;
- (id)endSignpost;
- (id)environment;
- (id)error;
- (id)eventEnd;
- (id)eventIdentifier;
- (id)eventStart;
- (bool)gatherDiagnosticsIfNeeded;
- (void)generateTelemetry;
- (bool)handleSignpost:(id)arg1;
- (bool)ignoreEventTimeouts;
- (bool)inMiddleOfEvent;
- (id)initForLiveStreamingWithWorkflow:(id)arg1 timeoutQueue:(id)arg2 eventCompletionCallback:(id /* block */)arg3;
- (id)initForReadbackWithWorkflow:(id)arg1 eventCompletionCallback:(id /* block */)arg2;
- (id)initWithEncodedDict:(id)arg1 error:(id*)arg2;
- (id)initWithEncodedString:(id)arg1 error:(id*)arg2;
- (id)initWithSpindump:(id)arg1 error:(id*)arg2;
- (id)initWithTailspin:(id)arg1 error:(id*)arg2;
- (id)initWithWorkflow:(id)arg1 eventCompletionCallback:(id /* block */)arg2;
- (id)nonPublicFields;
- (unsigned long long)numHandledSignposts;
- (unsigned long long)numOutsideSignposts;
- (unsigned long long)numUnhandledSignposts;
- (void)reset;
- (void)setIgnoreEventTimeouts:(bool)arg1;
- (void)setNonPublicFields:(id)arg1;
- (id)startSignpost;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })stats;
- (id)workflow;

@end
