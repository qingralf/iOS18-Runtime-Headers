/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WritingToolsUI.framework/WritingToolsUI
 */

@interface _WTTextEffectView : _WTView {
    <_WTTextPreviewAsyncSource> * _asyncSource;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedBounds;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedFrame;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedVisibleRect;
    double  _replaceDestinationDuration;
    NSValue * _replaceDestinationRect;
    double  _replaceSourceDuration;
    NSValue * _replaceSourceRect;
    <_WTTextPreviewSource> * _source;
    bool  _sourceIsAsync;
    NSMutableDictionary * _textEffects;
}

@property <_WTTextPreviewAsyncSource> *asyncSource;
@property struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cachedBounds;
@property struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cachedFrame;
@property struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cachedVisibleRect;
@property double replaceDestinationDuration;
@property (retain) NSValue *replaceDestinationRect;
@property double replaceSourceDuration;
@property (retain) NSValue *replaceSourceRect;
@property <_WTTextPreviewSource> *source;
@property bool sourceIsAsync;
@property (nonatomic, retain) NSMutableDictionary *textEffects;

- (void).cxx_destruct;
- (void)_cacheHeightOfPreviews:(id)arg1 forEffect:(id)arg2;
- (void)_commonLayoutSubviews;
- (void)_handleAddEffect:(id)arg1 forAsyncSource:(id)arg2;
- (void)_handleAddEffect:(id)arg1 forSource:(id)arg2;
- (bool)_shouldApplyRemainderEffectForEffect:(id)arg1;
- (id)addEffect:(id)arg1;
- (id)asyncSource;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cachedBounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cachedFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cachedVisibleRect;
- (bool)hasActiveEffect:(id)arg1;
- (bool)hasActiveEffects;
- (id)initWithAsyncSource:(id)arg1;
- (id)initWithSource:(id)arg1;
- (bool)isFlipped;
- (void)removeAllEffects;
- (void)removeAllEffectsAnimated:(bool)arg1;
- (id)removeEffect:(id)arg1;
- (id)removeEffect:(id)arg1 animated:(bool)arg2;
- (double)replaceDestinationDuration;
- (id)replaceDestinationRect;
- (double)replaceSourceDuration;
- (id)replaceSourceRect;
- (void)setAsyncSource:(id)arg1;
- (void)setCachedBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCachedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCachedVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setReplaceDestinationDuration:(double)arg1;
- (void)setReplaceDestinationRect:(id)arg1;
- (void)setReplaceSourceDuration:(double)arg1;
- (void)setReplaceSourceRect:(id)arg1;
- (void)setSource:(id)arg1;
- (void)setSourceIsAsync:(bool)arg1;
- (void)setTextEffects:(id)arg1;
- (id)source;
- (bool)sourceIsAsync;
- (id)textEffects;
- (void)updateSnapshotForEffect:(id)arg1;
- (void)updateSnapshotForEffectID:(id)arg1;
- (void)updateSnapshots;

@end
