/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/Frameworks/libwebrtc.dylib
 */

@interface WK_RTCVideoDecoderH264 : NSObject <RTCVideoDecoder> {
    id /* block */  _callback;
    struct OpaqueVTDecompressionSession { } * _decompressionSession;
    int  _error;
    struct OpaqueCMMemoryPool { } * _memoryPool;
    struct RTCVideoFrameReorderQueue { 
        struct deque<std::unique_ptr<webrtc::RTCVideoFrameReorderQueue::RTCVideoFrameWithOrder>, std::allocator<std::unique_ptr<webrtc::RTCVideoFrameReorderQueue::RTCVideoFrameWithOrder>>> { 
            struct __split_buffer<std::unique_ptr<webrtc::RTCVideoFrameReorderQueue::RTCVideoFrameWithOrder> *, std::allocator<std::unique_ptr<webrtc::RTCVideoFrameReorderQueue::RTCVideoFrameWithOrder> *>> { 
                void **__first_; 
                void **__begin_; 
                void **__end_; 
                struct __compressed_pair<std::unique_ptr<webrtc::RTCVideoFrameReorderQueue::RTCVideoFrameWithOrder> **, std::allocator<std::unique_ptr<webrtc::RTCVideoFrameReorderQueue::RTCVideoFrameWithOrder> *>> { 
                    void **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::allocator<std::unique_ptr<webrtc::RTCVideoFrameReorderQueue::RTCVideoFrameWithOrder>>> { 
                unsigned long long __value_; 
            } __size_; 
        } _reorderQueue; 
        unsigned char _reorderSize; 
        struct Mutex { 
            struct MutexImpl { 
                struct _opaque_pthread_mutex_t { 
                    long long __sig; 
                    BOOL __opaque[56]; 
                } mutex_; 
            } impl_; 
        } _reorderQueueLock; 
    }  _reorderQueue;
    bool  _useAVC;
    struct opaqueCMFormatDescription { } * _videoFormat;
}

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)configureDecompressionSession;
- (void)dealloc;
- (long long)decode:(id)arg1 missingFrames:(bool)arg2 codecSpecificInfo:(id)arg3 renderTimeMs:(long long)arg4;
- (long long)decodeData:(const char *)arg1 size:(unsigned long long)arg2 timeStamp:(long long)arg3;
- (void)destroyDecompressionSession;
- (void)flush;
- (id)implementationName;
- (id)init;
- (void)processFrame:(id)arg1 reorderSize:(unsigned long long)arg2;
- (long long)releaseDecoder;
- (int)resetDecompressionSession;
- (long long)setAVCFormat:(const char *)arg1 size:(unsigned long long)arg2 width:(unsigned short)arg3 height:(unsigned short)arg4;
- (void)setCallback:(id /* block */)arg1;
- (void)setError:(int)arg1;
- (void)setVideoFormat:(struct opaqueCMFormatDescription { }*)arg1;
- (long long)startDecodeWithNumberOfCores:(int)arg1;

@end
