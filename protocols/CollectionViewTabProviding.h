/* Generated by RuntimeBrowser.
 */

@protocol CollectionViewTabProviding <NSObject>

@required

- (<CollectionViewTab> *)blankTabToReuse;
- (void)closeAllOpenTabsAnimated:(bool)arg1;
- (void)closeOtherTabs;
- (void)closeTab;
- (void)closeTab:(id <CollectionViewTab>)arg1 animated:(bool)arg2;
- (void)closeTabWithURL:(NSURL *)arg1 UUID:(NSUUID *)arg2;
- (void)closeTabs:(NSArray *)arg1;
- (void)closeTabs:(NSArray *)arg1 animated:(bool)arg2;
- (void)closeTabs:(NSArray *)arg1 animated:(bool)arg2 allowAddingToRecentlyClosedTabs:(bool)arg3 showAutoCloseTabsAlert:(bool)arg4;
- (NSArray *)currentTabs;
- (void)didGainOwnershipOfTab:(id <CollectionViewTab>)arg1;
- (void)insertTab:(id <CollectionViewTab>)arg1 afterTab:(id <CollectionViewTab>)arg2 inBackground:(bool)arg3 animated:(bool)arg4;
- (void)insertTabs:(NSArray *)arg1 beforeTab:(id <CollectionViewTab>)arg2 inBackground:(bool)arg3 animated:(bool)arg4;
- (void)moveTab:(id <CollectionViewTab>)arg1 overTab:(id <CollectionViewTab>)arg2;
- (NSArray *)normalAndPrivateTabs;
- (NSArray *)normalTabs;
- (NSArray *)normalUnpinnedTabs;
- (NSArray *)oldestTabsWithLimit:(unsigned long long)arg1 inPrivateBrowsing:(bool)arg2;
- (NSArray *)pinnedTabs;
- (NSArray *)privateTabs;
- (NSArray *)privateUnpinnedTabs;
- (void)replaceBlankActiveTabWithTab:(id <CollectionViewTab>)arg1;
- (void)setActiveTab:(id <CollectionViewTab>)arg1;
- (void)setActiveTab:(id <CollectionViewTab>)arg1 animated:(bool)arg2;
- (void)setActiveTab:(id <CollectionViewTab>)arg1 animated:(bool)arg2 deferActivation:(bool)arg3;
- (void)setTab:(id <CollectionViewTab>)arg1 isPinned:(bool)arg2;
- (<CollectionViewTab> *)tabBeingActivated;
- (TabDocument *)tabDocumentForURL:(NSURL *)arg1 forceUnhibernate:(bool)arg2;
- (<CollectionViewTab> *)tabForURL:(NSURL *)arg1;
- (<CollectionViewTab> *)tabWithUUID:(NSUUID *)arg1;
- (NSArray *)tabsMatchingSearchTerm;
- (NSArray *)tabsOlderThan:(NSDateComponents *)arg1 inPrivateBrowsing:(bool)arg2;
- (NSArray *)unpinnedTabs;
- (void)updateWBTabWithTab:(id <CollectionViewTab>)arg1 notify:(bool)arg2 persist:(bool)arg3;
- (void)willLoseOwnershipOfTab:(id <CollectionViewTab>)arg1;

@end
