/* Generated by RuntimeBrowser.
 */

@protocol _DASActivitySchedulerIntrospecting <NSObject>

@required

- (NSArray *)activityContainsOverrides:(NSString *)arg1;
- (NSDictionary *)activityRunStatistics;
- (void)addPauseExceptParameter:(NSString *)arg1;
- (NSArray *)allBudgets;
- (double)balanceForBudgetWithName:(NSString *)arg1;
- (NSArray *)blockingPoliciesWithParameters:(NSDictionary *)arg1;
- (NSDictionary *)clasStatus;
- (NSDictionary *)currentPredictions;
- (void)decrementBy:(double)arg1 forBudgetWithName:(NSString *)arg2;
- (bool)deferActivities:(NSArray *)arg1;
- (NSArray *)delayedRunningActivities;
- (bool)deleteLimitForActivity:(NSString *)arg1 forLimiterWithName:(id)arg2;
- (bool)enableTaskRegistryMode:(bool)arg1 processes:(NSSet *)arg2;
- (void)enterTestModeWithParameters:(NSDictionary *)arg1 reset:(bool)arg2;
- (bool)evaluateAllActivitiesWithHandle:(NSFileHandle *)arg1;
- (NSDictionary *)evaluatePolicies:(NSString *)arg1;
- (void)forceRunActivities:(NSArray *)arg1;
- (NSDictionary *)getActivityTimelines:(NSSet *)arg1 timeFilter:(NSDateInterval *)arg2 bgsqlData:(NSData *)arg3;
- (NSArray *)getBuddyEvents:(NSDateInterval *)arg1 bgsqlData:(NSData *)arg2;
- (NSDictionary *)getConditionsPenalties:(NSSet *)arg1;
- (NSDictionary *)getDeviceConditionTimelines:(NSDateInterval *)arg1 bgsqlData:(NSData *)arg2;
- (NSDictionary *)getElapsedRuntimes:(NSSet *)arg1 timeFilter:(NSDateInterval *)arg2 bgsqlData:(NSData *)arg3;
- (NSDictionary *)getEstimatedMADCompletionTimes:(NSSet *)arg1 endDate:(NSDate *)arg2 bgsqlData:(NSData *)arg3;
- (NSDictionary *)getEstimatedRuntimes:(NSSet *)arg1 timeFilter:(NSDateInterval *)arg2 bgsqlData:(NSData *)arg3;
- (NSDictionary *)getFeatureTimelines:(NSSet *)arg1 timeFilter:(NSDateInterval *)arg2 bgsqlData:(NSData *)arg3;
- (NSArray *)getInstallTimeline:(NSDateInterval *)arg1 bgsqlData:(NSData *)arg2;
- (NSArray *)getLimiterResponseForActivity:(NSString *)arg1;
- (double)getRuntimeLimit:(NSString *)arg1;
- (void)pauseWithParameters:(NSDictionary *)arg1;
- (NSMutableDictionary *)policies;
- (void)runActivitiesWithUrgency:(long long)arg1 activities:(NSArray *)arg2;
- (NSDictionary *)runProceedableActivities:(NSOrderedSet *)arg1;
- (NSArray *)runningActivities;
- (NSArray *)runningGroupActivities;
- (NSArray *)scoresForActivityWithName:(NSString *)arg1;
- (void)setBalance:(double)arg1 forBudgetWithName:(NSString *)arg2;
- (void)setCapacity:(double)arg1 forBudgetWithName:(NSString *)arg2;
- (NSDictionary *)statistics;
- (void)submitRateLimitConfiguration:(_DASActivityRateLimitConfiguration *)arg1;
- (NSArray *)submittedActivities;
- (bool)updateLimit:(double)arg1 forActivity:(NSString *)arg2 forLimiterWithName:(NSString *)arg3;
- (bool)wasActivityAllowedToRun:(_DASActivity *)arg1;

@end
