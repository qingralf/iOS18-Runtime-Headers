/* Generated by RuntimeBrowser.
 */

@protocol _UIKeyboardPresentationDelegate

@required

+ (void)sendPerformanceNotification:(NSString *)arg1;
+ (void)sendPerformanceNotification:(NSString *)arg1 userInfo:(NSDictionary *)arg2;
+ (NSArray *)uniqueNumberPadInputModesFromInputModes:(NSArray *)arg1 forKeyboardType:(long long)arg2;

- (bool)_cancelOperation:(bool)arg1 testOnly:(bool)arg2;
- (void)_handleKeyBehavior:(unsigned long long)arg1 forKeyType:(NSString *)arg2;
- (void)_postInputResponderCapabilitiesChangedNotificationWithOutput:(TIKeyboardOutput *)arg1 selectionChanged:(bool)arg2;
- (void)_presentDictationMenuIfAllowed;
- (bool)_shouldSuppressSoftwareKeyboard;
- (bool)_showsScribbleIconsInAssistantView;
- (void)_updateExternalDeviceInputSetting;
- (void)_updateSoundPreheating;
- (bool)accessibilityUsesExtendedKeyboardPredictionsEnabled;
- (UIKeyboardLayout *)activeLayout;
- (void)allowResponderChainFirstChanceToHandleKeyEvent:(UIEvent *)arg1;
- (void)animateAutocorrectionToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)animateAutocorrectionToText:(NSString *)arg1 fromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)applyAssistantItem:(RTIAssistantItem *)arg1;
- (void)assertCursorForForSelectionChange;
- (UIAutocorrectInlinePrompt *)autocorrectPrompt;
- (bool)automaticMinimizationEnabled;
- (RTIInputSourceState *)buildInputSourceState;
- (bool)canPresentEmojiPopover;
- (bool)canPresentOrDismissEmojiPopover;
- (UIKeyboardCandidateController *)candidateController;
- (bool)caretVisible;
- (void)clearAutocorrectPromptTimer;
- (void)clearCursorAccessory;
- (void)clearCursorAssertion;
- (void)clearInputModeAssertion;
- (void)clearLanguageIndicator;
- (void)clearTransientState;
- (bool)continuousPathUnderway;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToAutocorrectRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 delegateView:(UIView *)arg2 container:(UIView *)arg3;
- (UIDictationPopoverController *)dictationPopoverController;
- (void)didCompleteUpdateDefaults;
- (void)dismissAutoFillPopover;
- (void)dismissContinuousPathIntroductionView;
- (void)dismissDictationMenu;
- (void)dismissDictationTip;
- (void)dismissEmojiPopoverBeforeCleanup:(bool)arg1;
- (void)dismissEmojiPopoverIfNecessaryWithCompletion:(void *)arg1; // needs 1 arg types, found 6: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, bool, void*
- (void)dismissFloatingKeyboardFromPencilKitIfNeeded;
- (void)dismissInputModeIndicator;
- (void)dismissKeyboard;
- (void)dismissKeyboardPopover:(void *)arg1 beforeCleanup:(void *)arg2 completion:(void *)arg3; // needs 3 arg types, found 8: UIKeyboardPopoverController *, bool, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, bool, void*
- (void)dismissPressAndHoldPopover;
- (void)displayAutoFillPopoverIfAutoFillModeDetected;
- (void)documentStateDidChange;
- (UIKeyboardEmojiPopoverController *)emojiPopoverController;
- (void)fadeAutocorrectPrompt;
- (<UIKeyboardImplGeometryDelegate> *)geometryDelegate;
- (bool)geometryIsChanging;
- (void)handleAutoFillContactDetected;
- (void)handleAutoFillContactPopoverCommand;
- (void)handleAutoFillCreditCardDetected;
- (void)handleAutoFillCreditCardPopoverCommand;
- (void)handleAutoFillPasswordDetected;
- (void)handleAutoFillPasswordPopoverCommand;
- (void)handleStickerEvent_presentCard;
- (bool)hasAutocorrectPrompt;
- (bool)hasCursorAssertion;
- (bool)hasLanguageIndicator;
- (void)hideKeyboard;
- (bool)inputModeSwitcherVisible;
- (bool)isCapsLockSignOn;
- (bool)isDictationPopoverPresented;
- (bool)isEmojiPopoverPresented;
- (bool)isEmojiPopoverVisibleOrDismissing;
- (bool)isHardwareKeyboardAttachedNow;
- (bool)isInitializing;
- (bool)isMinimized;
- (bool)isPredictionViewControllerVisible;
- (bool)isPressAndHoldPopoverPresented;
- (bool)isRotating;
- (bool)isTrackpadMode;
- (bool)isUsingDictationLayout;
- (bool)keyboardLayoutIsInAnotherProcess;
- (NSDictionary *)keyedLayouts;
- (UIKeyboardLayout *)layout;
- (TIKeyboardLayoutState *)layoutState;
- (bool)maximizing;
- (void)nonDestructivelyDismissKeyboard;
- (void)performKeyboardActionButtonAction;
- (void)performSendAction;
- (void)playDeleteKeyFeedbackIfNecessaryRepeat:(bool)arg1 rapid:(bool)arg2;
- (void)playDeleteKeyFeedbackRepeat:(bool)arg1 rapid:(bool)arg2;
- (void)postInputResponderCapabilitiesChangedNotification;
- (void)postInputViewControllerShouldUpdateNotification:(UIKeyboardInputMode *)arg1;
- (void)presentContinuousPathIntroductionView;
- (void)presentEmojiPopoverViaTrigger:(void *)arg1 completion:(void *)arg2; // needs 2 arg types, found 7: NSString *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, bool, void*
- (void)presentKeyboardFeedbackAssistantViewControllerForLogURL:(NSURL *)arg1;
- (void)presentMultilingualKeyboardTip:(UIKeyboardInputMode *)arg1;
- (void)presentMultilingualSettingTip:(UIKeyboardInputMode *)arg1;
- (void)presentPressAndHoldPopoverWithKeyString:(NSString *)arg1;
- (UIPressAndHoldPopoverController *)pressAndHoldPopoverController;
- (void)prewarmEmojiKeyboardIfNeeded;
- (void)refreshRivenPreferences;
- (void)reinitializeAfterInputModeSwitch:(bool)arg1;
- (void)releaseEmojiKeyboardPrewarmingAssertion;
- (void)removeAutocorrectPrompt;
- (void)removeTextChoicePrompt;
- (void)removeTextChoicePromptWithUnderline;
- (void)resetIsPhysicallyAttachedHardwareKeyboard;
- (void)resumeDictationForResponderChange;
- (bool)returnKeyEnabled;
- (int)returnKeyState;
- (bool)rivenPreference;
- (bool)selectionScrolling;
- (void)setAnimateUpdateBars:(bool)arg1;
- (void)setAutomaticMinimizationEnabled:(bool)arg1;
- (void)setCapsLockIfNeeded;
- (void)setCapsLockIfNeededForPhysicalKeyboardEvent:(UIPhysicalKeyboardEvent *)arg1;
- (void)setCapsLockSign;
- (void)setCaretBlinks:(bool)arg1;
- (void)setCaretVisible:(bool)arg1;
- (void)setEditMenuFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHardwareKeyboardIsSeen;
- (void)setInputModeAssertionWithReason:(NSString *)arg1;
- (void)setInputModeSwitcherVisibleInRemote:(bool)arg1;
- (void)setLabel:(NSString *)arg1 forKey:(id)arg2;
- (void)setReturnKeyEnabled:(bool)arg1;
- (void)setShowInputModeIndicator:(bool)arg1;
- (void)setShowsCandidateBar:(bool)arg1;
- (void)setSuppressUpdateCandidateView:(bool)arg1;
- (void)setUpdateLayoutOnShowKeyboard:(bool)arg1;
- (bool)shouldShowCandidateBar;
- (bool)showInputModeIndicator;
- (void)showInternationalKeyIntroductionIfNeededWithPreviousInputMode:(UIKeyboardInputMode *)arg1;
- (void)showKeyboard;
- (bool)showsCandidateBar;
- (bool)showsCandidateInline;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })subtractKeyboardFrameFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(UIView *)arg2;
- (bool)suppressUpdateCandidateView;
- (void)textDidScroll;
- (void)textWillScroll;
- (void)toggleSoftwareKeyboard;
- (void)touchAutocorrectPromptTimer;
- (void)underlineCandidate:(TIKeyboardCandidate *)arg1;
- (void)unsetEmojiPopoverToRestoreAfterRotation;
- (void)unsetPolicyDelegateResult;
- (void)updateAssistantView;
- (void)updateAssistantViewInfo:(UIRemoteInputViewInfo *)arg1;
- (void)updateAutocorrectPrompt:(TIKeyboardCandidate *)arg1;
- (void)updateAutocorrectPrompt:(TIKeyboardCandidate *)arg1 executionContext:(UIKeyboardTaskExecutionContext *)arg2;
- (void)updateCandidateDisplay;
- (void)updateDictationButtonForDelegate:(UIResponder<UIKeyInput> *)arg1;
- (void)updateHardwareKeyboardLayout:(bool)arg1;
- (void)updateHostedInlineCandidateView;
- (void)updateIdleDetection:(long long)arg1;
- (void)updateInputAssistantButtonItems;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(bool)arg1 preserveIfPossible:(bool)arg2;
- (void)updateLayout;
- (void)updateObserverState;
- (void)updateReturnKey:(bool)arg1;
- (void)updateStylingTraitsIfNeeded;
- (void)updateTextCandidateView;
- (void)updateTextInputKeyboardSource:(NSDictionary *)arg1;

@end
